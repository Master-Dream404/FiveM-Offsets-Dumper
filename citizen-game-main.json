{
    "citizen-game-main.dll": {
        "<lambda_0857a9bc3a63a5f981792fe3ba8c6308>::~<lambda_0857a9bc3a63a5f981792fe3ba8c6308>": {
            "offset": "0x10120"
        },
        "<lambda_147316b919797be978274d8a1c849eb4>::~<lambda_147316b919797be978274d8a1c849eb4>": {
            "offset": "0x10230"
        },
        "<lambda_1a73e681d985a5b86a541cbcc350ebc8>::~<lambda_1a73e681d985a5b86a541cbcc350ebc8>": {
            "offset": "0x10230"
        },
        "<lambda_2c71f2734007fd255e94b39244217c06>::~<lambda_2c71f2734007fd255e94b39244217c06>": {
            "offset": "0x10230"
        },
        "<lambda_41af1ba482b752c39807db2ef15caf48>::~<lambda_41af1ba482b752c39807db2ef15caf48>": {
            "offset": "0xA560"
        },
        "<lambda_4bd345ce870bcb6a9dba57dde6595eaf>::<lambda_4bd345ce870bcb6a9dba57dde6595eaf>": {
            "offset": "0x11DF0"
        },
        "<lambda_55cf421c54d17ec848e1c39d1a1f440e>::~<lambda_55cf421c54d17ec848e1c39d1a1f440e>": {
            "offset": "0x10230"
        },
        "<lambda_72ae5b0e2f813e08b01a5e2876e67561>::~<lambda_72ae5b0e2f813e08b01a5e2876e67561>": {
            "offset": "0x10230"
        },
        "<lambda_7604da78e8f33a312c72ae5a43f9b93b>::~<lambda_7604da78e8f33a312c72ae5a43f9b93b>": {
            "offset": "0x10230"
        },
        "<lambda_78c37b1a3777bfd305deeb2c72fc6c44>::~<lambda_78c37b1a3777bfd305deeb2c72fc6c44>": {
            "offset": "0x10230"
        },
        "<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>::~<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>": {
            "offset": "0x10150"
        },
        "<lambda_814d5e0b3a45fa1dd158672480f6c4ca>::~<lambda_814d5e0b3a45fa1dd158672480f6c4ca>": {
            "offset": "0x10230"
        },
        "<lambda_86be70dd2992469b5252a9192288f807>::~<lambda_86be70dd2992469b5252a9192288f807>": {
            "offset": "0xA560"
        },
        "<lambda_8d215c8ebd35918aa8dcf54639f44090>::~<lambda_8d215c8ebd35918aa8dcf54639f44090>": {
            "offset": "0x101B0"
        },
        "<lambda_bf7610c50ebb1884e5917f6a81016c78>::~<lambda_bf7610c50ebb1884e5917f6a81016c78>": {
            "offset": "0xA560"
        },
        "<lambda_e53e06857a4b8a0a6fa4a7061e30490e>::~<lambda_e53e06857a4b8a0a6fa4a7061e30490e>": {
            "offset": "0x10120"
        },
        "<lambda_f17ebabe33bc32be107ce6fff046b802>::~<lambda_f17ebabe33bc32be107ce6fff046b802>": {
            "offset": "0x10230"
        },
        "<lambda_f65fa3bc1f1c0ae5a28b4030ae52c0e3>::~<lambda_f65fa3bc1f1c0ae5a28b4030ae52c0e3>": {
            "offset": "0x10230"
        },
        "<lambda_fa4021805ee7d60682a29a1232274ee1>::~<lambda_fa4021805ee7d60682a29a1232274ee1>": {
            "offset": "0x10230"
        },
        "CefStringBase<CefStringTraitsUTF16>::~CefStringBase<CefStringTraitsUTF16>": {
            "offset": "0x30870"
        },
        "CfxState::CfxState": {
            "offset": "0x1CF80"
        },
        "Component::SetCommandLine": {
            "offset": "0xA440"
        },
        "Component::SetUserData": {
            "offset": "0xE780"
        },
        "ComponentInstance::DoGameLoad": {
            "offset": "0xE6B0"
        },
        "ComponentInstance::Initialize": {
            "offset": "0xE6C0"
        },
        "ComponentInstance::Run": {
            "offset": "0xE740"
        },
        "ComponentInstance::Shutdown": {
            "offset": "0xE780"
        },
        "ConVar<bool>::ConVar<bool>": {
            "offset": "0x2F280"
        },
        "ConVar<bool>::~ConVar<bool>": {
            "offset": "0x308C0"
        },
        "ConVar<int>::ConVar<int>": {
            "offset": "0x2F0F0"
        },
        "ConVar<int>::~ConVar<int>": {
            "offset": "0x308C0"
        },
        "ConsoleArgumentType<bool,void>::Parse": {
            "offset": "0x33010"
        },
        "ConsoleArgumentType<int,void>::Parse": {
            "offset": "0x32F80"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_2729e31fb8c726b5ef153dd449ae69e5> >": {
            "offset": "0x2C8C0"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_41af1ba482b752c39807db2ef15caf48> >": {
            "offset": "0x2CAA0"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_5b1c43db5646bdcc3820d1877854a8bd> >": {
            "offset": "0x11E00"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_86be70dd2992469b5252a9192288f807> >": {
            "offset": "0x11FB0"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_bf7610c50ebb1884e5917f6a81016c78> >": {
            "offset": "0x2CCF0"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_cd07e93ce4e084374db77c62c4f7d117> >": {
            "offset": "0x2CF40"
        },
        "ConsoleCommand::~ConsoleCommand": {
            "offset": "0x1EA30"
        },
        "ConsoleFlagsToString": {
            "offset": "0x21410"
        },
        "CoreGetComponentRegistry": {
            "offset": "0x21730"
        },
        "CoreGetGlobalInstanceRegistry": {
            "offset": "0x217C0"
        },
        "CreateComponent": {
            "offset": "0xE790"
        },
        "CreateVariableEntry<bool>": {
            "offset": "0x2E690"
        },
        "CreateVariableEntry<int>": {
            "offset": "0x2E3B0"
        },
        "CreateVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x13270"
        },
        "DllMain": {
            "offset": "0xCE1C8"
        },
        "DloadAcquireSectionWriteAccess": {
            "offset": "0xCE38C"
        },
        "DloadGetSRWLockFunctionPointers": {
            "offset": "0xCE438"
        },
        "DloadMakePermanentImageCommit": {
            "offset": "0xCE4D8"
        },
        "DloadObtainSection": {
            "offset": "0xCE570"
        },
        "DloadProtectSection": {
            "offset": "0xCE60C"
        },
        "DloadReleaseSectionWriteAccess": {
            "offset": "0xCE69C"
        },
        "DoNtRaiseException": {
            "offset": "0x48910"
        },
        "EnsureImFontTexture": {
            "offset": "0xE7D0"
        },
        "FatalErrorNoExceptRealV": {
            "offset": "0xBB10"
        },
        "FatalErrorRealV": {
            "offset": "0xBB40"
        },
        "FormatErrorPickup<std::tuple<std::basic_string_view<char,std::char_traits<char> >,int,unsigned int> >": {
            "offset": "0x2270"
        },
        "FrontendNuiInterface::BlitTexture": {
            "offset": "0xFA90"
        },
        "FrontendNuiInterface::CreateTexture": {
            "offset": "0xF340"
        },
        "FrontendNuiInterface::CreateTextureBacking": {
            "offset": "0xF590"
        },
        "FrontendNuiInterface::CreateTextureFromD3D11Texture": {
            "offset": "0xFB90"
        },
        "FrontendNuiInterface::CreateTextureFromShareHandle": {
            "offset": "0xF640"
        },
        "FrontendNuiInterface::DrawRectangles": {
            "offset": "0xF7F0"
        },
        "FrontendNuiInterface::GetD3D11Device": {
            "offset": "0xFB30"
        },
        "FrontendNuiInterface::GetD3D11DeviceContext": {
            "offset": "0xFB50"
        },
        "FrontendNuiInterface::GetGameResolution": {
            "offset": "0xF300"
        },
        "FrontendNuiInterface::GetHWND": {
            "offset": "0xFA80"
        },
        "FrontendNuiInterface::SetGameMouseFocus": {
            "offset": "0xA440"
        },
        "FrontendNuiInterface::SetTexture": {
            "offset": "0xF6F0"
        },
        "FrontendNuiInterface::UnsetTexture": {
            "offset": "0xA440"
        },
        "FrontendNuiTexture::FrontendNuiTexture": {
            "offset": "0xFE00"
        },
        "FrontendNuiTexture::GetHostTexture": {
            "offset": "0xF100"
        },
        "FrontendNuiTexture::GetNativeTexture": {
            "offset": "0xEA60"
        },
        "FrontendNuiTexture::Map": {
            "offset": "0xF110"
        },
        "FrontendNuiTexture::Unmap": {
            "offset": "0xA440"
        },
        "FrontendNuiTexture::~FrontendNuiTexture": {
            "offset": "0x10450"
        },
        "GetAbsoluteCitPath": {
            "offset": "0x3FB70"
        },
        "GlobalErrorHandler": {
            "offset": "0xBD80"
        },
        "HookFunctionBase::RunAll": {
            "offset": "0x49D10"
        },
        "HostSharedData<CfxState>::HostSharedData<CfxState>": {
            "offset": "0x1C1F0"
        },
        "HostSharedData<CfxState>::~HostSharedData<CfxState>": {
            "offset": "0x3F390"
        },
        "HostSharedData<ReverseGameData>::HostSharedData<ReverseGameData>": {
            "offset": "0x1C440"
        },
        "InitFunction::Run": {
            "offset": "0xE7C0"
        },
        "InitFunctionBase::InitFunctionBase": {
            "offset": "0x47A40"
        },
        "InitFunctionBase::Register": {
            "offset": "0x48A80"
        },
        "InitFunctionBase::RunAll": {
            "offset": "0x48AD0"
        },
        "InitializeNui": {
            "offset": "0x112E0"
        },
        "MakeRelativeCitPath": {
            "offset": "0xC420"
        },
        "Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>": {
            "offset": "0x10200"
        },
        "Microsoft::WRL::ComPtr<ID3D11Resource>::~ComPtr<ID3D11Resource>": {
            "offset": "0x10200"
        },
        "Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>": {
            "offset": "0x10200"
        },
        "Microsoft::WRL::ComPtr<IDCompositionDesktopDevice>::~ComPtr<IDCompositionDesktopDevice>": {
            "offset": "0x10200"
        },
        "Microsoft::WRL::ComPtr<IDCompositionTarget>::~ComPtr<IDCompositionTarget>": {
            "offset": "0x10200"
        },
        "Microsoft::WRL::ComPtr<IDCompositionVisual2>::~ComPtr<IDCompositionVisual2>": {
            "offset": "0x10200"
        },
        "Microsoft::WRL::ComPtr<IDXGIDevice>::~ComPtr<IDXGIDevice>": {
            "offset": "0x10200"
        },
        "Microsoft::WRL::ComPtr<IDXGIKeyedMutex>::ComPtr<IDXGIKeyedMutex>": {
            "offset": "0x2F0E0"
        },
        "Microsoft::WRL::ComPtr<IDXGIKeyedMutex>::~ComPtr<IDXGIKeyedMutex>": {
            "offset": "0x10200"
        },
        "RaiseDebugException": {
            "offset": "0x489F0"
        },
        "ReverseGameData::ReverseGameData": {
            "offset": "0x1DAA0"
        },
        "RunnableComponent::As": {
            "offset": "0xE590"
        },
        "RunnableComponent::IsA": {
            "offset": "0xE6D0"
        },
        "ScopedError::~ScopedError": {
            "offset": "0xA630"
        },
        "SysError": {
            "offset": "0xC9A0"
        },
        "ToNarrow": {
            "offset": "0x48B00"
        },
        "ToWide": {
            "offset": "0x48BF0"
        },
        "TraceRealV": {
            "offset": "0x48F00"
        },
        "UpdateSubresources": {
            "offset": "0x74330"
        },
        "Win32TrapAndJump64": {
            "offset": "0x49D40"
        },
        "_DllMainCRTStartup": {
            "offset": "0xCDA10"
        },
        "_Init_thread_abort": {
            "offset": "0xCCD14"
        },
        "_Init_thread_footer": {
            "offset": "0xCCD44"
        },
        "_Init_thread_header": {
            "offset": "0xCCDA4"
        },
        "_Init_thread_notify": {
            "offset": "0xCCE0C"
        },
        "_Init_thread_wait": {
            "offset": "0xCCE50"
        },
        "_RTC_Initialize": {
            "offset": "0xCE210"
        },
        "_RTC_Terminate": {
            "offset": "0xCE24C"
        },
        "_Smtx_lock_exclusive": {
            "offset": "0xCCC0C"
        },
        "_Smtx_unlock_exclusive": {
            "offset": "0xCCC14"
        },
        "__ArrayUnwind": {
            "offset": "0xCD5F8"
        },
        "__GSHandlerCheck": {
            "offset": "0xCD430"
        },
        "__GSHandlerCheckCommon": {
            "offset": "0xCD450"
        },
        "__GSHandlerCheck_EH": {
            "offset": "0xCD4AC"
        },
        "__GSHandlerCheck_SEH": {
            "offset": "0xCDCEC"
        },
        "__chkstk": {
            "offset": "0xCDD90"
        },
        "__crt_debugger_hook": {
            "offset": "0xCDF94"
        },
        "__delayLoadHelper2": {
            "offset": "0xCE730"
        },
        "__dyn_tls_init": {
            "offset": "0xCD278"
        },
        "__dyn_tls_on_demand_init": {
            "offset": "0xCD2E0"
        },
        "__isa_available_init": {
            "offset": "0xCDDE0"
        },
        "__local_stdio_printf_options": {
            "offset": "0xE400"
        },
        "__local_stdio_scanf_options": {
            "offset": "0x38C10"
        },
        "__raise_securityfailure": {
            "offset": "0xCDA50"
        },
        "__report_gsfailure": {
            "offset": "0xCDA84"
        },
        "__report_rangecheckfailure": {
            "offset": "0xCDB58"
        },
        "__report_securityfailure": {
            "offset": "0xCDB6C"
        },
        "__scrt_acquire_startup_lock": {
            "offset": "0xCCEF8"
        },
        "__scrt_dllmain_after_initialize_c": {
            "offset": "0xCCF34"
        },
        "__scrt_dllmain_before_initialize_c": {
            "offset": "0xCCF68"
        },
        "__scrt_dllmain_crt_thread_attach": {
            "offset": "0xCCF80"
        },
        "__scrt_dllmain_crt_thread_detach": {
            "offset": "0xCCFA8"
        },
        "__scrt_dllmain_exception_filter": {
            "offset": "0xCCFC0"
        },
        "__scrt_dllmain_uninitialize_c": {
            "offset": "0xCD020"
        },
        "__scrt_dllmain_uninitialize_critical": {
            "offset": "0xCD050"
        },
        "__scrt_fastfail": {
            "offset": "0xCDF9C"
        },
        "__scrt_get_dyn_tls_init_callback": {
            "offset": "0xCE208"
        },
        "__scrt_initialize_crt": {
            "offset": "0xCD064"
        },
        "__scrt_initialize_default_local_stdio_options": {
            "offset": "0xCE1EC"
        },
        "__scrt_initialize_onexit_tables": {
            "offset": "0xCD0B0"
        },
        "__scrt_initialize_thread_safe_statics": {
            "offset": "0xCCC1C"
        },
        "__scrt_initialize_type_info": {
            "offset": "0xCD664"
        },
        "__scrt_is_nonwritable_in_current_image": {
            "offset": "0xCD13C"
        },
        "__scrt_is_nonwritable_in_current_image$filt$0": {
            "offset": "0xD2FDD"
        },
        "__scrt_is_ucrt_dll_in_use": {
            "offset": "0xCE110"
        },
        "__scrt_release_startup_lock": {
            "offset": "0xCD1D4"
        },
        "__scrt_stub_for_acrt_initialize": {
            "offset": "0xE780"
        },
        "__scrt_stub_for_acrt_thread_attach": {
            "offset": "0xE780"
        },
        "__scrt_stub_for_acrt_thread_detach": {
            "offset": "0xE780"
        },
        "__scrt_stub_for_acrt_uninitialize": {
            "offset": "0xE780"
        },
        "__scrt_stub_for_acrt_uninitialize_critical": {
            "offset": "0xE780"
        },
        "__scrt_stub_for_is_c_termination_complete": {
            "offset": "0xEA60"
        },
        "__scrt_throw_std_bad_alloc": {
            "offset": "0xCE0E8"
        },
        "__scrt_throw_std_bad_array_new_length": {
            "offset": "0xD1A0"
        },
        "__scrt_uninitialize_crt": {
            "offset": "0xCD1F8"
        },
        "__scrt_uninitialize_thread_safe_statics": {
            "offset": "0xCCCEC"
        },
        "__scrt_uninitialize_type_info": {
            "offset": "0xCD674"
        },
        "__security_check_cookie": {
            "offset": "0xCD540"
        },
        "__security_init_cookie": {
            "offset": "0xCE11C"
        },
        "__std_find_trivial_1": {
            "offset": "0xCC560"
        },
        "__std_find_trivial_2": {
            "offset": "0xCC630"
        },
        "__std_fs_code_page": {
            "offset": "0xCC8E4"
        },
        "__std_fs_convert_narrow_to_wide": {
            "offset": "0xCC90C"
        },
        "__std_fs_convert_wide_to_narrow": {
            "offset": "0xCC954"
        },
        "__std_fs_convert_wide_to_narrow_replace_chars": {
            "offset": "0xCCA78"
        },
        "__std_fs_get_full_path_name": {
            "offset": "0xCCB44"
        },
        "__std_init_once_link_alternate_names_and_abort": {
            "offset": "0xCCC00"
        },
        "__std_swap_ranges_trivially_swappable_noalias": {
            "offset": "0xCC700"
        },
        "__std_system_error_allocate_message": {
            "offset": "0xCC840"
        },
        "__std_system_error_deallocate_message": {
            "offset": "0xCC8D4"
        },
        "_get_startup_argv_mode": {
            "offset": "0x5BEB0"
        },
        "_guard_check_icall_nop": {
            "offset": "0xA440"
        },
        "_guard_dispatch_icall_nop": {
            "offset": "0xCEA40"
        },
        "_guard_xfg_dispatch_icall_nop": {
            "offset": "0xCEA60"
        },
        "_onexit": {
            "offset": "0xCD224"
        },
        "_wwassert": {
            "offset": "0x3FE70"
        },
        "`__ArrayUnwind'::`1'::filt$0": {
            "offset": "0xD3021"
        },
        "`bgfx::d3d11::hasDepthOp'::`2'::FindDepthOp::find": {
            "offset": "0x688C0"
        },
        "`dllmain_crt_process_attach'::`1'::fin$0": {
            "offset": "0xD30AC"
        },
        "`dllmain_crt_process_detach'::`1'::fin$0": {
            "offset": "0xD30C3"
        },
        "`dllmain_crt_process_detach'::`1'::fin$1": {
            "offset": "0xD30DC"
        },
        "`dllmain_dispatch'::`1'::filt$0": {
            "offset": "0xD30F0"
        },
        "`dynamic initializer for 'DebugUvVertex::ms_decl''": {
            "offset": "0x1690"
        },
        "`dynamic initializer for 'HostSharedData<ReverseGameData>::m_fakeData''": {
            "offset": "0x1460"
        },
        "`dynamic initializer for '_init_instance_0''": {
            "offset": "0x1000"
        },
        "`dynamic initializer for '_init_instance_1''": {
            "offset": "0x1710"
        },
        "`dynamic initializer for '_init_instance_2''": {
            "offset": "0x1740"
        },
        "`dynamic initializer for '_init_instance_23''": {
            "offset": "0x1470"
        },
        "`dynamic initializer for '_init_instance_24''": {
            "offset": "0x14A0"
        },
        "`dynamic initializer for '_init_instance_25''": {
            "offset": "0x14D0"
        },
        "`dynamic initializer for '_init_instance_26''": {
            "offset": "0x1270"
        },
        "`dynamic initializer for 'citizen::Win32GameWindow::ms_windowMapping''": {
            "offset": "0x16A0"
        },
        "`dynamic initializer for 'doNext''": {
            "offset": "0x1500"
        },
        "`dynamic initializer for 'g_earlyOnRenderQueue''": {
            "offset": "0x1320"
        },
        "`dynamic initializer for 'g_frontendDeletionMutex''": {
            "offset": "0x1390"
        },
        "`dynamic initializer for 'g_onRenderQueue''": {
            "offset": "0x13C0"
        },
        "`dynamic initializer for 'g_thisError''": {
            "offset": "0x1030"
        },
        "`dynamic initializer for 'initFunction''": {
            "offset": "0x12A0"
        },
        "`dynamic initializer for 'initIoBuf''": {
            "offset": "0x1800"
        },
        "`dynamic initializer for 'm_decl''": {
            "offset": "0x12E0"
        },
        "`dynamic initializer for 'nuiGi''": {
            "offset": "0x1430"
        },
        "`dynamic initializer for 'tbb::detail::r1::concurrent_monitor_mutex::my_init_mutex''": {
            "offset": "0x1AA0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_2c71f2734007fd255e94b39244217c06>,bool,ConsoleExecutionContext &>,<lambda_2c71f2734007fd255e94b39244217c06> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB70"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB90"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB90"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_55cf421c54d17ec848e1c39d1a1f440e>,bool,ConsoleExecutionContext &>,<lambda_55cf421c54d17ec848e1c39d1a1f440e> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB70"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>,<lambda_72ae5b0e2f813e08b01a5e2876e67561> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB70"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>,<lambda_7604da78e8f33a312c72ae5a43f9b93b> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB70"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>,void>,<lambda_7d6aeca7e4d2a325a53db3c90716b4b4> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x10650"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>,<lambda_814d5e0b3a45fa1dd158672480f6c4ca> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB70"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>,<lambda_86be70dd2992469b5252a9192288f807> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB90"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>,<lambda_86be70dd2992469b5252a9192288f807> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB90"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>,<lambda_bf7610c50ebb1884e5917f6a81016c78> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB90"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>,<lambda_bf7610c50ebb1884e5917f6a81016c78> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB90"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>,<lambda_f17ebabe33bc32be107ce6fff046b802> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EB70"
        },
        "astc_codec::ASTCDecompressToRGBA": {
            "offset": "0xBFB90"
        },
        "astc_codec::DecodeColorsForMode": {
            "offset": "0xC6260"
        },
        "astc_codec::DecompressToImage": {
            "offset": "0xBFC40"
        },
        "astc_codec::EndpointRangeForBlock": {
            "offset": "0xC5290"
        },
        "astc_codec::Footprint::Footprint": {
            "offset": "0xBFF20"
        },
        "astc_codec::Footprint::FromFootprintType": {
            "offset": "0xC0110"
        },
        "astc_codec::GetASTCPartition": {
            "offset": "0xC5D60"
        },
        "astc_codec::InfillWeights": {
            "offset": "0xC9BC0"
        },
        "astc_codec::IntegerSequenceCodec::GetBitCount": {
            "offset": "0xC4A30"
        },
        "astc_codec::IntegerSequenceCodec::GetBitCountForRange": {
            "offset": "0xC1160"
        },
        "astc_codec::IntegerSequenceCodec::GetCountsForRange": {
            "offset": "0xC4A80"
        },
        "astc_codec::IntegerSequenceCodec::IntegerSequenceCodec": {
            "offset": "0xC4610"
        },
        "astc_codec::IntegerSequenceDecoder::Decode": {
            "offset": "0xC4760"
        },
        "astc_codec::IntermediateBlockData::~IntermediateBlockData": {
            "offset": "0xC2B00"
        },
        "astc_codec::IntermediateEndpointData::~IntermediateEndpointData": {
            "offset": "0xC5230"
        },
        "astc_codec::LogicalASTCBlock::CalculateWeights": {
            "offset": "0xC2CE0"
        },
        "astc_codec::LogicalASTCBlock::ColorAt": {
            "offset": "0xC2F90"
        },
        "astc_codec::LogicalASTCBlock::LogicalASTCBlock": {
            "offset": "0xC2910"
        },
        "astc_codec::LogicalASTCBlock::SetDualPlaneChannel": {
            "offset": "0xC3370"
        },
        "astc_codec::LogicalASTCBlock::~LogicalASTCBlock": {
            "offset": "0xBFA30"
        },
        "astc_codec::Partition::~Partition": {
            "offset": "0xBFB30"
        },
        "astc_codec::PhysicalASTCBlock::ColorStartBit": {
            "offset": "0xC0300"
        },
        "astc_codec::PhysicalASTCBlock::ColorValuesRange": {
            "offset": "0xC0390"
        },
        "astc_codec::PhysicalASTCBlock::DualPlaneChannel": {
            "offset": "0xC1020"
        },
        "astc_codec::PhysicalASTCBlock::GetColorValuesInfo": {
            "offset": "0xC11A0"
        },
        "astc_codec::PhysicalASTCBlock::GetEndpointMode": {
            "offset": "0xC1350"
        },
        "astc_codec::PhysicalASTCBlock::IsDualPlane": {
            "offset": "0xC1460"
        },
        "astc_codec::PhysicalASTCBlock::IsIllegalEncoding": {
            "offset": "0xC1510"
        },
        "astc_codec::PhysicalASTCBlock::IsVoidExtent": {
            "offset": "0xC1970"
        },
        "astc_codec::PhysicalASTCBlock::NumColorBits": {
            "offset": "0xC1A40"
        },
        "astc_codec::PhysicalASTCBlock::NumColorValues": {
            "offset": "0xC1B20"
        },
        "astc_codec::PhysicalASTCBlock::NumPartitions": {
            "offset": "0xC1C10"
        },
        "astc_codec::PhysicalASTCBlock::NumWeightBits": {
            "offset": "0xC1D00"
        },
        "astc_codec::PhysicalASTCBlock::PartitionID": {
            "offset": "0xC1DE0"
        },
        "astc_codec::PhysicalASTCBlock::PhysicalASTCBlock": {
            "offset": "0xC0270"
        },
        "astc_codec::PhysicalASTCBlock::VoidExtentCoords": {
            "offset": "0xC1E50"
        },
        "astc_codec::PhysicalASTCBlock::WeightGridDims": {
            "offset": "0xC1F90"
        },
        "astc_codec::PhysicalASTCBlock::WeightRange": {
            "offset": "0xC2140"
        },
        "astc_codec::UnpackIntermediateBlock": {
            "offset": "0xC5490"
        },
        "astc_codec::UnpackLogicalBlock": {
            "offset": "0xC34E0"
        },
        "astc_codec::UnpackVoidExtent": {
            "offset": "0xC5B80"
        },
        "astc_codec::UnquantizeCEValueFromRange": {
            "offset": "0xC9B00"
        },
        "astc_codec::UnquantizeWeightFromRange": {
            "offset": "0xC9B40"
        },
        "astc_codec::`anonymous namespace'::BitQuantizationMap<6>::BitQuantizationMap<6>": {
            "offset": "0xC6DA0"
        },
        "astc_codec::`anonymous namespace'::BitQuantizationMap<8>::BitQuantizationMap<8>": {
            "offset": "0xC6F70"
        },
        "astc_codec::`anonymous namespace'::DecodeBlockMode": {
            "offset": "0xC0470"
        },
        "astc_codec::`anonymous namespace'::DecodeDualPlaneBit": {
            "offset": "0xC0690"
        },
        "astc_codec::`anonymous namespace'::DecodeDualPlaneBitStartPos": {
            "offset": "0xC0710"
        },
        "astc_codec::`anonymous namespace'::DecodeEndpointMode": {
            "offset": "0xC0790"
        },
        "astc_codec::`anonymous namespace'::DecodeEndpoints": {
            "offset": "0xC3260"
        },
        "astc_codec::`anonymous namespace'::DecodeISEBlock<3>": {
            "offset": "0xC3950"
        },
        "astc_codec::`anonymous namespace'::DecodeISEBlock<5>": {
            "offset": "0xC3B60"
        },
        "astc_codec::`anonymous namespace'::DecodeNumColorValues": {
            "offset": "0xC0900"
        },
        "astc_codec::`anonymous namespace'::DecodeNumExtraCEMBits": {
            "offset": "0xC0AC0"
        },
        "astc_codec::`anonymous namespace'::DecodeNumWeightBits": {
            "offset": "0xC0B30"
        },
        "astc_codec::`anonymous namespace'::DecodeWeightProps": {
            "offset": "0xC0CA0"
        },
        "astc_codec::`anonymous namespace'::ExtraConfigBitPosition": {
            "offset": "0xC53D0"
        },
        "astc_codec::`anonymous namespace'::GetQuantMapForValueRange": {
            "offset": "0xC7D40"
        },
        "astc_codec::`anonymous namespace'::GetQuantMapForWeightRange": {
            "offset": "0xC8F20"
        },
        "astc_codec::`anonymous namespace'::QuantizationMap::GenerateQuantizationMap": {
            "offset": "0xC7CA0"
        },
        "astc_codec::`anonymous namespace'::QuantizationMap::~QuantizationMap": {
            "offset": "0xC7B30"
        },
        "astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintValue>::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintValue>": {
            "offset": "0xC7140"
        },
        "astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintWeight>::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintWeight>": {
            "offset": "0xC72E0"
        },
        "astc_codec::`anonymous namespace'::SelectASTCPartition": {
            "offset": "0xC5EF0"
        },
        "astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritValue>::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritValue>": {
            "offset": "0xC7460"
        },
        "astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritWeight>::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritWeight>": {
            "offset": "0xC7730"
        },
        "astc_codec::`anonymous namespace'::`dynamic initializer for 'kMaxRanges''": {
            "offset": "0x1870"
        },
        "astc_codec::base::BitStream<astc_codec::base::UInt128>::MaskFor": {
            "offset": "0xC4C50"
        },
        "astc_codec::base::GetBits<astc_codec::base::UInt128>": {
            "offset": "0xC0170"
        },
        "astc_codec::base::Log2Floor": {
            "offset": "0xC4BE0"
        },
        "astc_codec::base::Optional<astc_codec::IntermediateBlockData>::~Optional<astc_codec::IntermediateBlockData>": {
            "offset": "0xC2AF0"
        },
        "astc_codec::base::Optional<astc_codec::LogicalASTCBlock::DualPlaneData>::destruct": {
            "offset": "0xC38F0"
        },
        "astc_codec::base::Optional<astc_codec::LogicalASTCBlock::DualPlaneData>::~Optional<astc_codec::LogicalASTCBlock::DualPlaneData>": {
            "offset": "0xBF950"
        },
        "astc_codec::base::Optional<astc_codec::LogicalASTCBlock>::Optional<astc_codec::LogicalASTCBlock>": {
            "offset": "0xC2700"
        },
        "astc_codec::base::Optional<astc_codec::LogicalASTCBlock>::~Optional<astc_codec::LogicalASTCBlock>": {
            "offset": "0xBF9C0"
        },
        "astc_codec::base::Optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~Optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xC0290"
        },
        "astc_codec::base::ReverseBits<astc_codec::base::UInt128>": {
            "offset": "0xC4D00"
        },
        "atexit": {
            "offset": "0xCD260"
        },
        "bgfx::AllocatorStub::realloc": {
            "offset": "0x53510"
        },
        "bgfx::Attachment::init": {
            "offset": "0x51530"
        },
        "bgfx::BlitState::hasItem": {
            "offset": "0x5BF30"
        },
        "bgfx::CallbackStub::cacheRead": {
            "offset": "0xF110"
        },
        "bgfx::CallbackStub::cacheReadSize": {
            "offset": "0xEA60"
        },
        "bgfx::CallbackStub::cacheWrite": {
            "offset": "0xA440"
        },
        "bgfx::CallbackStub::captureBegin": {
            "offset": "0xA440"
        },
        "bgfx::CallbackStub::captureEnd": {
            "offset": "0xA440"
        },
        "bgfx::CallbackStub::captureFrame": {
            "offset": "0xA440"
        },
        "bgfx::CallbackStub::fatal": {
            "offset": "0x50190"
        },
        "bgfx::CallbackStub::profilerBegin": {
            "offset": "0xA440"
        },
        "bgfx::CallbackStub::profilerBeginLiteral": {
            "offset": "0xA440"
        },
        "bgfx::CallbackStub::profilerEnd": {
            "offset": "0xA440"
        },
        "bgfx::CallbackStub::screenShot": {
            "offset": "0x55760"
        },
        "bgfx::CallbackStub::traceVargs": {
            "offset": "0x56E60"
        },
        "bgfx::ClearQuad::init": {
            "offset": "0x51550"
        },
        "bgfx::CommandBuffer::write<bgfx::Init>": {
            "offset": "0x4B220"
        },
        "bgfx::Context::Context": {
            "offset": "0x4B250"
        },
        "bgfx::Context::allocTransientVertexBuffer": {
            "offset": "0x4C5F0"
        },
        "bgfx::Context::apiSemWait": {
            "offset": "0x4C850"
        },
        "bgfx::Context::createIndexBuffer": {
            "offset": "0x4D730"
        },
        "bgfx::Context::createProgram": {
            "offset": "0x4DB80"
        },
        "bgfx::Context::createShader": {
            "offset": "0x4DE00"
        },
        "bgfx::Context::createTexture": {
            "offset": "0x4E850"
        },
        "bgfx::Context::createTransientIndexBuffer": {
            "offset": "0x4EB90"
        },
        "bgfx::Context::createTransientVertexBuffer": {
            "offset": "0x4ECF0"
        },
        "bgfx::Context::createUniform": {
            "offset": "0x4EED0"
        },
        "bgfx::Context::createVertexBuffer": {
            "offset": "0x4F3A0"
        },
        "bgfx::Context::destroyDynamicIndexBufferInternal": {
            "offset": "0x4F870"
        },
        "bgfx::Context::destroyDynamicVertexBufferInternal": {
            "offset": "0x4FAF0"
        },
        "bgfx::Context::destroyIndexBuffer": {
            "offset": "0x4FCE0"
        },
        "bgfx::Context::destroyUniform": {
            "offset": "0x4FDF0"
        },
        "bgfx::Context::destroyVertexBuffer": {
            "offset": "0x4FF10"
        },
        "bgfx::Context::findVertexLayout": {
            "offset": "0x503B0"
        },
        "bgfx::Context::flip": {
            "offset": "0x50570"
        },
        "bgfx::Context::flushTextureUpdateBatch": {
            "offset": "0x50680"
        },
        "bgfx::Context::frame": {
            "offset": "0x50940"
        },
        "bgfx::Context::freeAllHandles": {
            "offset": "0x50D30"
        },
        "bgfx::Context::getAvailTransientVertexBuffer": {
            "offset": "0x512B0"
        },
        "bgfx::Context::init": {
            "offset": "0x51980"
        },
        "bgfx::Context::renderFrame": {
            "offset": "0x53C90"
        },
        "bgfx::Context::renderSemWait": {
            "offset": "0x53E30"
        },
        "bgfx::Context::renderThread": {
            "offset": "0x53EA0"
        },
        "bgfx::Context::rendererExecCommands": {
            "offset": "0x54040"
        },
        "bgfx::Context::resetView": {
            "offset": "0x553E0"
        },
        "bgfx::Context::resizeTexture": {
            "offset": "0x555C0"
        },
        "bgfx::Context::setName": {
            "offset": "0x55CD0"
        },
        "bgfx::Context::shaderDecRef": {
            "offset": "0x562A0"
        },
        "bgfx::Context::swap": {
            "offset": "0x56970"
        },
        "bgfx::Context::textureDecRef": {
            "offset": "0x56CC0"
        },
        "bgfx::Context::updateTexture": {
            "offset": "0x57040"
        },
        "bgfx::Context::~Context": {
            "offset": "0x4BD50"
        },
        "bgfx::DxbcContext::~DxbcContext": {
            "offset": "0x647C0"
        },
        "bgfx::DxbcInstruction::~DxbcInstruction": {
            "offset": "0xB3FF0"
        },
        "bgfx::DxbcSignature::Element::Element": {
            "offset": "0xB3E60"
        },
        "bgfx::DxbcSignature::Element::~Element": {
            "offset": "0xB3EE0"
        },
        "bgfx::DxbcSubOperand::DxbcSubOperand": {
            "offset": "0xB3E50"
        },
        "bgfx::Dxgi::Dxgi": {
            "offset": "0xB8860"
        },
        "bgfx::Dxgi::createSwapChain": {
            "offset": "0xB8890"
        },
        "bgfx::Dxgi::init": {
            "offset": "0xB8A50"
        },
        "bgfx::Dxgi::resizeBuffers": {
            "offset": "0xB8EA0"
        },
        "bgfx::Dxgi::shutdown": {
            "offset": "0xB8F60"
        },
        "bgfx::Dxgi::trim": {
            "offset": "0xB8FE0"
        },
        "bgfx::Dxgi::update": {
            "offset": "0xB9030"
        },
        "bgfx::Dxgi::updateHdr10": {
            "offset": "0xB9100"
        },
        "bgfx::Encoder::setVertexBuffer": {
            "offset": "0x56070"
        },
        "bgfx::EncoderImpl::EncoderImpl": {
            "offset": "0x4B830"
        },
        "bgfx::EncoderImpl::begin": {
            "offset": "0x4C8F0"
        },
        "bgfx::EncoderImpl::discard": {
            "offset": "0x50020"
        },
        "bgfx::EncoderImpl::setUniform": {
            "offset": "0x55F50"
        },
        "bgfx::EncoderImpl::submit": {
            "offset": "0x56590"
        },
        "bgfx::Frame::Frame": {
            "offset": "0x4B980"
        },
        "bgfx::Frame::create": {
            "offset": "0x4D1F0"
        },
        "bgfx::Frame::destroy": {
            "offset": "0x4F670"
        },
        "bgfx::Frame::finish": {
            "offset": "0x504D0"
        },
        "bgfx::Frame::sort": {
            "offset": "0x563D0"
        },
        "bgfx::Frame::~Frame": {
            "offset": "0xA440"
        },
        "bgfx::FrameBufferRef::FrameBufferRef": {
            "offset": "0x4BB20"
        },
        "bgfx::FrameBufferRef::~FrameBufferRef": {
            "offset": "0x4BF00"
        },
        "bgfx::FrameCache::isZeroArea": {
            "offset": "0x5D130"
        },
        "bgfx::IndexBuffer::IndexBuffer": {
            "offset": "0x4BB20"
        },
        "bgfx::IndexBuffer::~IndexBuffer": {
            "offset": "0x4BF00"
        },
        "bgfx::Init::Init": {
            "offset": "0x4BB40"
        },
        "bgfx::NonLocalAllocator::compact": {
            "offset": "0x4D0D0"
        },
        "bgfx::NonLocalAllocator::free": {
            "offset": "0x50BC0"
        },
        "bgfx::NonLocalAllocator::remove": {
            "offset": "0x536D0"
        },
        "bgfx::NonLocalAllocator::~NonLocalAllocator": {
            "offset": "0x4BFC0"
        },
        "bgfx::NvApi::NvApi": {
            "offset": "0xB3590"
        },
        "bgfx::NvApi::getMemoryInfo": {
            "offset": "0xB35B0"
        },
        "bgfx::NvApi::init": {
            "offset": "0xB3620"
        },
        "bgfx::NvApi::initAftermath": {
            "offset": "0xB3890"
        },
        "bgfx::NvApi::loadAftermath": {
            "offset": "0xB3930"
        },
        "bgfx::NvApi::shutdown": {
            "offset": "0xB3BF0"
        },
        "bgfx::PlatformData::PlatformData": {
            "offset": "0x4BBA0"
        },
        "bgfx::Profiler<bgfx::d3d11::TimerQueryD3D11>::begin": {
            "offset": "0x64C10"
        },
        "bgfx::Profiler<bgfx::d3d11::TimerQueryD3D11>::~Profiler<bgfx::d3d11::TimerQueryD3D11>": {
            "offset": "0x58660"
        },
        "bgfx::Profiler<bgfx::d3d12::TimerQueryD3D12>::begin": {
            "offset": "0x74C20"
        },
        "bgfx::Profiler<bgfx::d3d12::TimerQueryD3D12>::~Profiler<bgfx::d3d12::TimerQueryD3D12>": {
            "offset": "0x58660"
        },
        "bgfx::Profiler<bgfx::d3d9::TimerQueryD3D9>::begin": {
            "offset": "0x58740"
        },
        "bgfx::Profiler<bgfx::d3d9::TimerQueryD3D9>::~Profiler<bgfx::d3d9::TimerQueryD3D9>": {
            "offset": "0x58660"
        },
        "bgfx::Profiler<bgfx::gl::TimerQueryGL>::begin": {
            "offset": "0x848D0"
        },
        "bgfx::Profiler<bgfx::gl::TimerQueryGL>::~Profiler<bgfx::gl::TimerQueryGL>": {
            "offset": "0x58660"
        },
        "bgfx::RenderBind::clear": {
            "offset": "0x4CF50"
        },
        "bgfx::RenderDraw::clear": {
            "offset": "0x4D030"
        },
        "bgfx::Resolution::Resolution": {
            "offset": "0x4BBC0"
        },
        "bgfx::ShaderRef::ShaderRef": {
            "offset": "0x4BBE0"
        },
        "bgfx::ShaderRef::~ShaderRef": {
            "offset": "0x4C010"
        },
        "bgfx::SortKey::decode": {
            "offset": "0x5B4E0"
        },
        "bgfx::SortKey::encodeDraw": {
            "offset": "0x500B0"
        },
        "bgfx::StateCache::~StateCache": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheLru<IUnknown *,1024>::add": {
            "offset": "0x64990"
        },
        "bgfx::StateCacheLru<IUnknown *,1024>::find": {
            "offset": "0x68720"
        },
        "bgfx::StateCacheLru<IUnknown *,1024>::invalidateWithParent": {
            "offset": "0x6B7E0"
        },
        "bgfx::StateCacheLru<IUnknown *,1024>::~StateCacheLru<IUnknown *,1024>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheLru<bgfx::d3d12::Bind,64>::find": {
            "offset": "0x78D30"
        },
        "bgfx::StateCacheLru<bgfx::d3d12::Bind,64>::invalidate": {
            "offset": "0x7C950"
        },
        "bgfx::StateCacheLru<bgfx::d3d12::Bind,64>::~StateCacheLru<bgfx::d3d12::Bind,64>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheT<ID3D11BlendState>::~StateCacheT<ID3D11BlendState>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheT<ID3D11DepthStencilState>::~StateCacheT<ID3D11DepthStencilState>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheT<ID3D11InputLayout>::~StateCacheT<ID3D11InputLayout>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheT<ID3D11RasterizerState>::invalidate": {
            "offset": "0x6B4A0"
        },
        "bgfx::StateCacheT<ID3D11RasterizerState>::~StateCacheT<ID3D11RasterizerState>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheT<ID3D11SamplerState>::find": {
            "offset": "0x68840"
        },
        "bgfx::StateCacheT<ID3D11SamplerState>::invalidate": {
            "offset": "0x6B4A0"
        },
        "bgfx::StateCacheT<ID3D11SamplerState>::~StateCacheT<ID3D11SamplerState>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheT<ID3D12PipelineState>::add": {
            "offset": "0x744F0"
        },
        "bgfx::StateCacheT<ID3D12PipelineState>::find": {
            "offset": "0x68840"
        },
        "bgfx::StateCacheT<ID3D12PipelineState>::invalidate": {
            "offset": "0x6B4A0"
        },
        "bgfx::StateCacheT<ID3D12PipelineState>::~StateCacheT<ID3D12PipelineState>": {
            "offset": "0x58670"
        },
        "bgfx::StateCacheT<IDirect3DVertexDeclaration9>::~StateCacheT<IDirect3DVertexDeclaration9>": {
            "offset": "0x58670"
        },
        "bgfx::TextVideoMem::printf": {
            "offset": "0x5E030"
        },
        "bgfx::TextVideoMem::printfVargs": {
            "offset": "0x53080"
        },
        "bgfx::TextVideoMem::resize": {
            "offset": "0x554E0"
        },
        "bgfx::TextVideoMem::~TextVideoMem": {
            "offset": "0x64800"
        },
        "bgfx::TextVideoMemBlitter::init": {
            "offset": "0x520A0"
        },
        "bgfx::TextureRef::TextureRef": {
            "offset": "0x4BB20"
        },
        "bgfx::TextureRef::~TextureRef": {
            "offset": "0x4BF00"
        },
        "bgfx::TinyStlAllocator::static_allocate": {
            "offset": "0x56530"
        },
        "bgfx::TinyStlAllocator::static_deallocate": {
            "offset": "0x56560"
        },
        "bgfx::UniformBuffer::create": {
            "offset": "0x5A6F0"
        },
        "bgfx::UniformBuffer::finish": {
            "offset": "0x5BC10"
        },
        "bgfx::UniformBuffer::write": {
            "offset": "0x916D0"
        },
        "bgfx::UniformBuffer::writeUniformHandle": {
            "offset": "0x57460"
        },
        "bgfx::UniformRef::UniformRef": {
            "offset": "0x4BB20"
        },
        "bgfx::UniformRef::~UniformRef": {
            "offset": "0x4BF00"
        },
        "bgfx::UniformRegistry::find": {
            "offset": "0x5BBA0"
        },
        "bgfx::VertexBuffer::VertexBuffer": {
            "offset": "0x4BB20"
        },
        "bgfx::VertexBuffer::~VertexBuffer": {
            "offset": "0x4BF00"
        },
        "bgfx::VertexLayout::VertexLayout": {
            "offset": "0x49FF0"
        },
        "bgfx::VertexLayout::add": {
            "offset": "0x4A000"
        },
        "bgfx::VertexLayout::begin": {
            "offset": "0x4A1F0"
        },
        "bgfx::VertexLayout::decode": {
            "offset": "0x4A230"
        },
        "bgfx::VertexLayout::end": {
            "offset": "0x4A270"
        },
        "bgfx::VertexLayoutRef::find": {
            "offset": "0x50340"
        },
        "bgfx::VertexLayoutRef::init": {
            "offset": "0x526A0"
        },
        "bgfx::VertexLayoutRef::shutdown<64>": {
            "offset": "0x4B140"
        },
        "bgfx::ViewState::reset": {
            "offset": "0x5E5C0"
        },
        "bgfx::ViewState::setPredefined<1,bgfx::gl::RendererContextGL,bgfx::gl::ProgramGL,bgfx::RenderCompute>": {
            "offset": "0x82FF0"
        },
        "bgfx::ViewState::setPredefined<1,bgfx::gl::RendererContextGL,bgfx::gl::ProgramGL,bgfx::RenderDraw>": {
            "offset": "0x838C0"
        },
        "bgfx::ViewState::setPredefined<4,bgfx::d3d11::RendererContextD3D11,bgfx::d3d11::ProgramD3D11,bgfx::RenderCompute>": {
            "offset": "0x62B70"
        },
        "bgfx::ViewState::setPredefined<4,bgfx::d3d11::RendererContextD3D11,bgfx::d3d11::ProgramD3D11,bgfx::RenderDraw>": {
            "offset": "0x63680"
        },
        "bgfx::ViewState::setPredefined<4,bgfx::d3d12::RendererContextD3D12,bgfx::d3d12::ProgramD3D12,bgfx::RenderCompute>": {
            "offset": "0x72780"
        },
        "bgfx::ViewState::setPredefined<4,bgfx::d3d12::RendererContextD3D12,bgfx::d3d12::ProgramD3D12,bgfx::RenderDraw>": {
            "offset": "0x730D0"
        },
        "bgfx::ViewState::setPredefined<4,bgfx::d3d9::RendererContextD3D9,bgfx::d3d9::ProgramD3D9,bgfx::RenderDraw>": {
            "offset": "0x57900"
        },
        "bgfx::ViewState::setPredefined<4,bgfx::vk::RendererContextVK,bgfx::vk::ProgramVK,bgfx::RenderCompute>": {
            "offset": "0x91720"
        },
        "bgfx::ViewState::setPredefined<4,bgfx::vk::RendererContextVK,bgfx::vk::ProgramVK,bgfx::RenderDraw>": {
            "offset": "0x92070"
        },
        "bgfx::alloc": {
            "offset": "0x4C3F0"
        },
        "bgfx::allocTransientBuffers": {
            "offset": "0x4C430"
        },
        "bgfx::allocTransientIndexBuffer": {
            "offset": "0x4C4F0"
        },
        "bgfx::blit": {
            "offset": "0x4CA10"
        },
        "bgfx::calcNumMips": {
            "offset": "0x4CE30"
        },
        "bgfx::compareDescending": {
            "offset": "0x4D170"
        },
        "bgfx::copy": {
            "offset": "0x4D180"
        },
        "bgfx::createEmbeddedShader": {
            "offset": "0x4D4D0"
        },
        "bgfx::createIndexBuffer": {
            "offset": "0x4D8D0"
        },
        "bgfx::createProgram": {
            "offset": "0x4DDA0"
        },
        "bgfx::createShader": {
            "offset": "0x4E560"
        },
        "bgfx::createTexture2D": {
            "offset": "0x4E5D0"
        },
        "bgfx::createUniform": {
            "offset": "0x4F370"
        },
        "bgfx::createVertexBuffer": {
            "offset": "0x4F640"
        },
        "bgfx::d3d11::BufferD3D11::create": {
            "offset": "0x66330"
        },
        "bgfx::d3d11::BufferD3D11::update": {
            "offset": "0x71C30"
        },
        "bgfx::d3d11::DirectAccessResourceD3D11::createTexture2D": {
            "offset": "0x67AE0"
        },
        "bgfx::d3d11::DirectAccessResourceD3D11::createTexture3D": {
            "offset": "0x67BF0"
        },
        "bgfx::d3d11::FrameBufferD3D11::destroy": {
            "offset": "0x67F60"
        },
        "bgfx::d3d11::FrameBufferD3D11::postReset": {
            "offset": "0x6BB10"
        },
        "bgfx::d3d11::FrameBufferD3D11::preReset": {
            "offset": "0x6C270"
        },
        "bgfx::d3d11::OcclusionQueryD3D11::begin": {
            "offset": "0x64CD0"
        },
        "bgfx::d3d11::OcclusionQueryD3D11::end": {
            "offset": "0x68400"
        },
        "bgfx::d3d11::OcclusionQueryD3D11::resolve": {
            "offset": "0x6CA30"
        },
        "bgfx::d3d11::RendererContextD3D11::RendererContextD3D11": {
            "offset": "0x64190"
        },
        "bgfx::d3d11::RendererContextD3D11::blitRender": {
            "offset": "0x64FB0"
        },
        "bgfx::d3d11::RendererContextD3D11::blitSetup": {
            "offset": "0x65140"
        },
        "bgfx::d3d11::RendererContextD3D11::capture": {
            "offset": "0x65460"
        },
        "bgfx::d3d11::RendererContextD3D11::capturePostReset": {
            "offset": "0x65590"
        },
        "bgfx::d3d11::RendererContextD3D11::capturePreReset": {
            "offset": "0x656D0"
        },
        "bgfx::d3d11::RendererContextD3D11::clear": {
            "offset": "0x65730"
        },
        "bgfx::d3d11::RendererContextD3D11::clearQuad": {
            "offset": "0x65A00"
        },
        "bgfx::d3d11::RendererContextD3D11::commit": {
            "offset": "0x65E10"
        },
        "bgfx::d3d11::RendererContextD3D11::commitShaderConstants": {
            "offset": "0x661B0"
        },
        "bgfx::d3d11::RendererContextD3D11::commitTextureStage": {
            "offset": "0x66280"
        },
        "bgfx::d3d11::RendererContextD3D11::createDynamicIndexBuffer": {
            "offset": "0x675F0"
        },
        "bgfx::d3d11::RendererContextD3D11::createDynamicVertexBuffer": {
            "offset": "0x67630"
        },
        "bgfx::d3d11::RendererContextD3D11::createFrameBuffer": {
            "offset": "0x67720"
        },
        "bgfx::d3d11::RendererContextD3D11::createIndexBuffer": {
            "offset": "0x679B0"
        },
        "bgfx::d3d11::RendererContextD3D11::createProgram": {
            "offset": "0x679F0"
        },
        "bgfx::d3d11::RendererContextD3D11::createShader": {
            "offset": "0x67AC0"
        },
        "bgfx::d3d11::RendererContextD3D11::createTexture": {
            "offset": "0x67D00"
        },
        "bgfx::d3d11::RendererContextD3D11::createUniform": {
            "offset": "0x67D40"
        },
        "bgfx::d3d11::RendererContextD3D11::createVertexBuffer": {
            "offset": "0x67EB0"
        },
        "bgfx::d3d11::RendererContextD3D11::createVertexLayout": {
            "offset": "0x67F20"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyDynamicIndexBuffer": {
            "offset": "0x681B0"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyDynamicVertexBuffer": {
            "offset": "0x68220"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyFrameBuffer": {
            "offset": "0x68290"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyIndexBuffer": {
            "offset": "0x681B0"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyProgram": {
            "offset": "0x68320"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyShader": {
            "offset": "0x68350"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyTexture": {
            "offset": "0x68370"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyUniform": {
            "offset": "0x68390"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyVertexBuffer": {
            "offset": "0x68220"
        },
        "bgfx::d3d11::RendererContextD3D11::destroyVertexLayout": {
            "offset": "0xA440"
        },
        "bgfx::d3d11::RendererContextD3D11::flip": {
            "offset": "0x688E0"
        },
        "bgfx::d3d11::RendererContextD3D11::getCachedSrv": {
            "offset": "0x68B70"
        },
        "bgfx::d3d11::RendererContextD3D11::getCachedUav": {
            "offset": "0x69010"
        },
        "bgfx::d3d11::RendererContextD3D11::getInternal": {
            "offset": "0x693C0"
        },
        "bgfx::d3d11::RendererContextD3D11::getRendererName": {
            "offset": "0x69480"
        },
        "bgfx::d3d11::RendererContextD3D11::getRendererType": {
            "offset": "0x69490"
        },
        "bgfx::d3d11::RendererContextD3D11::getSamplerState": {
            "offset": "0x694A0"
        },
        "bgfx::d3d11::RendererContextD3D11::init": {
            "offset": "0x6A150"
        },
        "bgfx::d3d11::RendererContextD3D11::invalidateCache": {
            "offset": "0x6B530"
        },
        "bgfx::d3d11::RendererContextD3D11::invalidateCompute": {
            "offset": "0x6B6A0"
        },
        "bgfx::d3d11::RendererContextD3D11::invalidateOcclusionQuery": {
            "offset": "0x6B750"
        },
        "bgfx::d3d11::RendererContextD3D11::isDeviceRemoved": {
            "offset": "0x6B990"
        },
        "bgfx::d3d11::RendererContextD3D11::isVisible": {
            "offset": "0x6B9A0"
        },
        "bgfx::d3d11::RendererContextD3D11::overrideInternal": {
            "offset": "0x6BA50"
        },
        "bgfx::d3d11::RendererContextD3D11::postReset": {
            "offset": "0x6BF50"
        },
        "bgfx::d3d11::RendererContextD3D11::preReset": {
            "offset": "0x6C310"
        },
        "bgfx::d3d11::RendererContextD3D11::readTexture": {
            "offset": "0x6C440"
        },
        "bgfx::d3d11::RendererContextD3D11::requestScreenShot": {
            "offset": "0x6C6A0"
        },
        "bgfx::d3d11::RendererContextD3D11::resizeTexture": {
            "offset": "0x6C8D0"
        },
        "bgfx::d3d11::RendererContextD3D11::setBlendState": {
            "offset": "0x6CB80"
        },
        "bgfx::d3d11::RendererContextD3D11::setDepthStencilState": {
            "offset": "0x6D610"
        },
        "bgfx::d3d11::RendererContextD3D11::setFrameBuffer": {
            "offset": "0x6DE10"
        },
        "bgfx::d3d11::RendererContextD3D11::setInputLayout": {
            "offset": "0x6E0E0"
        },
        "bgfx::d3d11::RendererContextD3D11::setMarker": {
            "offset": "0xA440"
        },
        "bgfx::d3d11::RendererContextD3D11::setName": {
            "offset": "0x6EA30"
        },
        "bgfx::d3d11::RendererContextD3D11::setRasterizerState": {
            "offset": "0x6EB00"
        },
        "bgfx::d3d11::RendererContextD3D11::shutdown": {
            "offset": "0x6EE60"
        },
        "bgfx::d3d11::RendererContextD3D11::submit": {
            "offset": "0x6F220"
        },
        "bgfx::d3d11::RendererContextD3D11::submitBlit": {
            "offset": "0x71870"
        },
        "bgfx::d3d11::RendererContextD3D11::updateDynamicIndexBuffer": {
            "offset": "0x72140"
        },
        "bgfx::d3d11::RendererContextD3D11::updateDynamicVertexBuffer": {
            "offset": "0x72180"
        },
        "bgfx::d3d11::RendererContextD3D11::updateMsaa": {
            "offset": "0x721C0"
        },
        "bgfx::d3d11::RendererContextD3D11::updateResolution": {
            "offset": "0x72280"
        },
        "bgfx::d3d11::RendererContextD3D11::updateTexture": {
            "offset": "0x72680"
        },
        "bgfx::d3d11::RendererContextD3D11::updateTextureBegin": {
            "offset": "0xA440"
        },
        "bgfx::d3d11::RendererContextD3D11::updateTextureEnd": {
            "offset": "0xA440"
        },
        "bgfx::d3d11::RendererContextD3D11::updateUniform": {
            "offset": "0x726F0"
        },
        "bgfx::d3d11::RendererContextD3D11::updateViewName": {
            "offset": "0x72710"
        },
        "bgfx::d3d11::ShaderD3D11::create": {
            "offset": "0x66590"
        },
        "bgfx::d3d11::ShaderD3D11::destroy": {
            "offset": "0x68030"
        },
        "bgfx::d3d11::TextureD3D11::commit": {
            "offset": "0x660E0"
        },
        "bgfx::d3d11::TextureD3D11::create": {
            "offset": "0x66CF0"
        },
        "bgfx::d3d11::TextureD3D11::destroy": {
            "offset": "0x680C0"
        },
        "bgfx::d3d11::TextureD3D11::getSrvFormat": {
            "offset": "0x6A0F0"
        },
        "bgfx::d3d11::TextureD3D11::update": {
            "offset": "0x71DA0"
        },
        "bgfx::d3d11::TimerQueryD3D11::begin": {
            "offset": "0x64E00"
        },
        "bgfx::d3d11::TimerQueryD3D11::end": {
            "offset": "0x68490"
        },
        "bgfx::d3d11::TimerQueryD3D11::update": {
            "offset": "0x71FB0"
        },
        "bgfx::d3d11::`dynamic initializer for 's_zero''": {
            "offset": "0x1850"
        },
        "bgfx::d3d11::amdAgsMultiDrawIndexedInstancedIndirect": {
            "offset": "0x64BB0"
        },
        "bgfx::d3d11::amdAgsMultiDrawInstancedIndirect": {
            "offset": "0x64BE0"
        },
        "bgfx::d3d11::getLostReason": {
            "offset": "0x69400"
        },
        "bgfx::d3d11::nvapiMultiDrawIndexedInstancedIndirect": {
            "offset": "0x6B9F0"
        },
        "bgfx::d3d11::nvapiMultiDrawInstancedIndirect": {
            "offset": "0x6BA20"
        },
        "bgfx::d3d11::rendererCreate": {
            "offset": "0x6C560"
        },
        "bgfx::d3d11::rendererDestroy": {
            "offset": "0x6C630"
        },
        "bgfx::d3d11::setDebugObjectName<ID3D11Buffer>": {
            "offset": "0x62B60"
        },
        "bgfx::d3d11::setDebugObjectName<ID3D11DeviceChild>": {
            "offset": "0x62B60"
        },
        "bgfx::d3d11::setDebugObjectName<ID3D11Resource>": {
            "offset": "0x62B60"
        },
        "bgfx::d3d11::setIntelDirectAccessResource": {
            "offset": "0x6E9B0"
        },
        "bgfx::d3d11::stubMultiDrawIndexedInstancedIndirect": {
            "offset": "0x6F120"
        },
        "bgfx::d3d11::stubMultiDrawInstancedIndirect": {
            "offset": "0x6F1A0"
        },
        "bgfx::d3d12::BatchD3D12::create": {
            "offset": "0x75FA0"
        },
        "bgfx::d3d12::BatchD3D12::draw": {
            "offset": "0x78410"
        },
        "bgfx::d3d12::BatchD3D12::end": {
            "offset": "0x788B0"
        },
        "bgfx::d3d12::BatchD3D12::flush": {
            "offset": "0x79200"
        },
        "bgfx::d3d12::BufferD3D12::create": {
            "offset": "0x76240"
        },
        "bgfx::d3d12::BufferD3D12::destroy": {
            "offset": "0x78080"
        },
        "bgfx::d3d12::BufferD3D12::setState": {
            "offset": "0x7EBD0"
        },
        "bgfx::d3d12::BufferD3D12::update": {
            "offset": "0x82550"
        },
        "bgfx::d3d12::CommandQueueD3D12::alloc": {
            "offset": "0x74660"
        },
        "bgfx::d3d12::CommandQueueD3D12::consume": {
            "offset": "0x75E70"
        },
        "bgfx::d3d12::CommandQueueD3D12::init": {
            "offset": "0x7B7A0"
        },
        "bgfx::d3d12::CommandQueueD3D12::kick": {
            "offset": "0x7CBC0"
        },
        "bgfx::d3d12::CommandQueueD3D12::release": {
            "offset": "0x7D970"
        },
        "bgfx::d3d12::CommandQueueD3D12::shutdown": {
            "offset": "0x7ED00"
        },
        "bgfx::d3d12::CommandQueueD3D12::~CommandQueueD3D12": {
            "offset": "0x73E90"
        },
        "bgfx::d3d12::DescriptorAllocatorD3D12::alloc": {
            "offset": "0x74780"
        },
        "bgfx::d3d12::DescriptorAllocatorD3D12::create": {
            "offset": "0x76400"
        },
        "bgfx::d3d12::FrameBufferD3D12::clear": {
            "offset": "0x75510"
        },
        "bgfx::d3d12::FrameBufferD3D12::create": {
            "offset": "0x764E0"
        },
        "bgfx::d3d12::FrameBufferD3D12::postReset": {
            "offset": "0x7CE30"
        },
        "bgfx::d3d12::FrameBufferD3D12::setState": {
            "offset": "0x7EC40"
        },
        "bgfx::d3d12::OcclusionQueryD3D12::begin": {
            "offset": "0x74CE0"
        },
        "bgfx::d3d12::OcclusionQueryD3D12::end": {
            "offset": "0x788F0"
        },
        "bgfx::d3d12::OcclusionQueryD3D12::init": {
            "offset": "0x7B8A0"
        },
        "bgfx::d3d12::RendererContextD3D12::RendererContextD3D12": {
            "offset": "0x73A40"
        },
        "bgfx::d3d12::RendererContextD3D12::blitRender": {
            "offset": "0x75060"
        },
        "bgfx::d3d12::RendererContextD3D12::blitSetup": {
            "offset": "0x75140"
        },
        "bgfx::d3d12::RendererContextD3D12::clear": {
            "offset": "0x75830"
        },
        "bgfx::d3d12::RendererContextD3D12::clearQuad": {
            "offset": "0x759C0"
        },
        "bgfx::d3d12::RendererContextD3D12::commit": {
            "offset": "0x75AA0"
        },
        "bgfx::d3d12::RendererContextD3D12::commitShaderConstants": {
            "offset": "0x75D60"
        },
        "bgfx::d3d12::RendererContextD3D12::createDynamicIndexBuffer": {
            "offset": "0x77B40"
        },
        "bgfx::d3d12::RendererContextD3D12::createDynamicVertexBuffer": {
            "offset": "0x77B80"
        },
        "bgfx::d3d12::RendererContextD3D12::createFrameBuffer": {
            "offset": "0x77C30"
        },
        "bgfx::d3d12::RendererContextD3D12::createIndexBuffer": {
            "offset": "0x77D10"
        },
        "bgfx::d3d12::RendererContextD3D12::createProgram": {
            "offset": "0x77D50"
        },
        "bgfx::d3d12::RendererContextD3D12::createShader": {
            "offset": "0x77E20"
        },
        "bgfx::d3d12::RendererContextD3D12::createTexture": {
            "offset": "0x77E40"
        },
        "bgfx::d3d12::RendererContextD3D12::createUniform": {
            "offset": "0x77E70"
        },
        "bgfx::d3d12::RendererContextD3D12::createVertexBuffer": {
            "offset": "0x77FE0"
        },
        "bgfx::d3d12::RendererContextD3D12::createVertexLayout": {
            "offset": "0x78040"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyDynamicIndexBuffer": {
            "offset": "0x781B0"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyDynamicVertexBuffer": {
            "offset": "0x78200"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyFrameBuffer": {
            "offset": "0x78250"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyIndexBuffer": {
            "offset": "0x781B0"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyProgram": {
            "offset": "0x78330"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyShader": {
            "offset": "0x78360"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyTexture": {
            "offset": "0x78380"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyUniform": {
            "offset": "0x783A0"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyVertexBuffer": {
            "offset": "0x78200"
        },
        "bgfx::d3d12::RendererContextD3D12::destroyVertexLayout": {
            "offset": "0xA440"
        },
        "bgfx::d3d12::RendererContextD3D12::finish": {
            "offset": "0x78E60"
        },
        "bgfx::d3d12::RendererContextD3D12::finishAll": {
            "offset": "0x78EF0"
        },
        "bgfx::d3d12::RendererContextD3D12::flip": {
            "offset": "0x78FB0"
        },
        "bgfx::d3d12::RendererContextD3D12::getInternal": {
            "offset": "0x79490"
        },
        "bgfx::d3d12::RendererContextD3D12::getPipelineState": {
            "offset": "0x79700"
        },
        "bgfx::d3d12::RendererContextD3D12::getRendererName": {
            "offset": "0x7B460"
        },
        "bgfx::d3d12::RendererContextD3D12::getRendererType": {
            "offset": "0x7B470"
        },
        "bgfx::d3d12::RendererContextD3D12::getRtv": {
            "offset": "0x7B530"
        },
        "bgfx::d3d12::RendererContextD3D12::getSamplerState": {
            "offset": "0x7B5B0"
        },
        "bgfx::d3d12::RendererContextD3D12::init": {
            "offset": "0x7B960"
        },
        "bgfx::d3d12::RendererContextD3D12::invalidateCache": {
            "offset": "0x7CAC0"
        },
        "bgfx::d3d12::RendererContextD3D12::invalidateOcclusionQuery": {
            "offset": "0x7CB30"
        },
        "bgfx::d3d12::RendererContextD3D12::isDeviceRemoved": {
            "offset": "0x7CBB0"
        },
        "bgfx::d3d12::RendererContextD3D12::kick": {
            "offset": "0x7CCC0"
        },
        "bgfx::d3d12::RendererContextD3D12::overrideInternal": {
            "offset": "0x7CD10"
        },
        "bgfx::d3d12::RendererContextD3D12::patchCb0": {
            "offset": "0x7CD70"
        },
        "bgfx::d3d12::RendererContextD3D12::postReset": {
            "offset": "0x7D280"
        },
        "bgfx::d3d12::RendererContextD3D12::preReset": {
            "offset": "0x7D620"
        },
        "bgfx::d3d12::RendererContextD3D12::readTexture": {
            "offset": "0x7D710"
        },
        "bgfx::d3d12::RendererContextD3D12::requestScreenShot": {
            "offset": "0x7DC00"
        },
        "bgfx::d3d12::RendererContextD3D12::resizeTexture": {
            "offset": "0x7DF00"
        },
        "bgfx::d3d12::RendererContextD3D12::setBlendState": {
            "offset": "0x7E060"
        },
        "bgfx::d3d12::RendererContextD3D12::setFrameBuffer": {
            "offset": "0x7E3D0"
        },
        "bgfx::d3d12::RendererContextD3D12::setInputLayout": {
            "offset": "0x7E7A0"
        },
        "bgfx::d3d12::RendererContextD3D12::setMarker": {
            "offset": "0xA440"
        },
        "bgfx::d3d12::RendererContextD3D12::setName": {
            "offset": "0x7EB40"
        },
        "bgfx::d3d12::RendererContextD3D12::shutdown": {
            "offset": "0x7EDF0"
        },
        "bgfx::d3d12::RendererContextD3D12::submit": {
            "offset": "0x7F330"
        },
        "bgfx::d3d12::RendererContextD3D12::submitBlit": {
            "offset": "0x82100"
        },
        "bgfx::d3d12::RendererContextD3D12::updateDynamicIndexBuffer": {
            "offset": "0x82A30"
        },
        "bgfx::d3d12::RendererContextD3D12::updateDynamicVertexBuffer": {
            "offset": "0x82A80"
        },
        "bgfx::d3d12::RendererContextD3D12::updateMsaa": {
            "offset": "0x82AD0"
        },
        "bgfx::d3d12::RendererContextD3D12::updateResolution": {
            "offset": "0x82BC0"
        },
        "bgfx::d3d12::RendererContextD3D12::updateTexture": {
            "offset": "0x82F20"
        },
        "bgfx::d3d12::RendererContextD3D12::updateTextureBegin": {
            "offset": "0xA440"
        },
        "bgfx::d3d12::RendererContextD3D12::updateTextureEnd": {
            "offset": "0xA440"
        },
        "bgfx::d3d12::RendererContextD3D12::updateUniform": {
            "offset": "0x82F60"
        },
        "bgfx::d3d12::RendererContextD3D12::updateViewName": {
            "offset": "0x82F80"
        },
        "bgfx::d3d12::ScratchBufferD3D12::ScratchBufferD3D12": {
            "offset": "0x17690"
        },
        "bgfx::d3d12::ScratchBufferD3D12::allocSrv": {
            "offset": "0x74A30"
        },
        "bgfx::d3d12::ScratchBufferD3D12::allocUav": {
            "offset": "0x74B50"
        },
        "bgfx::d3d12::ScratchBufferD3D12::create": {
            "offset": "0x76710"
        },
        "bgfx::d3d12::ScratchBufferD3D12::~ScratchBufferD3D12": {
            "offset": "0xA440"
        },
        "bgfx::d3d12::ShaderD3D12::create": {
            "offset": "0x76820"
        },
        "bgfx::d3d12::ShaderD3D12::destroy": {
            "offset": "0x780C0"
        },
        "bgfx::d3d12::TextureD3D12::create": {
            "offset": "0x77050"
        },
        "bgfx::d3d12::TextureD3D12::destroy": {
            "offset": "0x78120"
        },
        "bgfx::d3d12::TextureD3D12::setState": {
            "offset": "0x7EBD0"
        },
        "bgfx::d3d12::TextureD3D12::update": {
            "offset": "0x826D0"
        },
        "bgfx::d3d12::TimerQueryD3D12::begin": {
            "offset": "0x74E90"
        },
        "bgfx::d3d12::TimerQueryD3D12::end": {
            "offset": "0x789D0"
        },
        "bgfx::d3d12::TimerQueryD3D12::init": {
            "offset": "0x7C740"
        },
        "bgfx::d3d12::createCommittedResource": {
            "offset": "0x77A90"
        },
        "bgfx::d3d12::fill": {
            "offset": "0x78B40"
        },
        "bgfx::d3d12::getLostReason": {
            "offset": "0x69400"
        },
        "bgfx::d3d12::initHeapProperties": {
            "offset": "0x7C860"
        },
        "bgfx::d3d12::rendererCreate": {
            "offset": "0x7DAC0"
        },
        "bgfx::d3d12::rendererDestroy": {
            "offset": "0x7DB90"
        },
        "bgfx::d3d12::setDebugObjectName": {
            "offset": "0x62B60"
        },
        "bgfx::d3d9::FrameBufferD3D9::create": {
            "offset": "0x59AA0"
        },
        "bgfx::d3d9::FrameBufferD3D9::preReset": {
            "offset": "0x5DB50"
        },
        "bgfx::d3d9::IndexBufferD3D9::create": {
            "offset": "0x59CB0"
        },
        "bgfx::d3d9::IndexBufferD3D9::preReset": {
            "offset": "0x5DC00"
        },
        "bgfx::d3d9::OcclusionQueryD3D9::begin": {
            "offset": "0x58800"
        },
        "bgfx::d3d9::OcclusionQueryD3D9::end": {
            "offset": "0x5B980"
        },
        "bgfx::d3d9::OcclusionQueryD3D9::resolve": {
            "offset": "0x5E930"
        },
        "bgfx::d3d9::RendererContextD3D9::RendererContextD3D9": {
            "offset": "0x583E0"
        },
        "bgfx::d3d9::RendererContextD3D9::blitRender": {
            "offset": "0x58AD0"
        },
        "bgfx::d3d9::RendererContextD3D9::blitSetup": {
            "offset": "0x58C50"
        },
        "bgfx::d3d9::RendererContextD3D9::capture": {
            "offset": "0x58F70"
        },
        "bgfx::d3d9::RendererContextD3D9::clearQuad": {
            "offset": "0x590B0"
        },
        "bgfx::d3d9::RendererContextD3D9::commit": {
            "offset": "0x59670"
        },
        "bgfx::d3d9::RendererContextD3D9::createDynamicIndexBuffer": {
            "offset": "0x5A910"
        },
        "bgfx::d3d9::RendererContextD3D9::createDynamicVertexBuffer": {
            "offset": "0x5A930"
        },
        "bgfx::d3d9::RendererContextD3D9::createFrameBuffer": {
            "offset": "0x5A9F0"
        },
        "bgfx::d3d9::RendererContextD3D9::createIndexBuffer": {
            "offset": "0x5AB60"
        },
        "bgfx::d3d9::RendererContextD3D9::createProgram": {
            "offset": "0x5ACB0"
        },
        "bgfx::d3d9::RendererContextD3D9::createShader": {
            "offset": "0x5AD70"
        },
        "bgfx::d3d9::RendererContextD3D9::createTexture": {
            "offset": "0x5AD90"
        },
        "bgfx::d3d9::RendererContextD3D9::createUniform": {
            "offset": "0x5B0A0"
        },
        "bgfx::d3d9::RendererContextD3D9::createVertexBuffer": {
            "offset": "0x5B210"
        },
        "bgfx::d3d9::RendererContextD3D9::createVertexLayout": {
            "offset": "0x5B340"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyDynamicIndexBuffer": {
            "offset": "0x5B5E0"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyDynamicVertexBuffer": {
            "offset": "0x5B650"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyFrameBuffer": {
            "offset": "0x5B6C0"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyIndexBuffer": {
            "offset": "0x5B5E0"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyProgram": {
            "offset": "0x5B840"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyShader": {
            "offset": "0x5B870"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyTexture": {
            "offset": "0x5B890"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyUniform": {
            "offset": "0x5B910"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyVertexBuffer": {
            "offset": "0x5B650"
        },
        "bgfx::d3d9::RendererContextD3D9::destroyVertexLayout": {
            "offset": "0xA440"
        },
        "bgfx::d3d9::RendererContextD3D9::flip": {
            "offset": "0x5BC50"
        },
        "bgfx::d3d9::RendererContextD3D9::flush": {
            "offset": "0x5BE10"
        },
        "bgfx::d3d9::RendererContextD3D9::getInternal": {
            "offset": "0x5BE50"
        },
        "bgfx::d3d9::RendererContextD3D9::getRendererName": {
            "offset": "0x5BE90"
        },
        "bgfx::d3d9::RendererContextD3D9::getRendererType": {
            "offset": "0x5BEB0"
        },
        "bgfx::d3d9::RendererContextD3D9::init": {
            "offset": "0x5C040"
        },
        "bgfx::d3d9::RendererContextD3D9::invalidateOcclusionQuery": {
            "offset": "0x5D050"
        },
        "bgfx::d3d9::RendererContextD3D9::isDeviceRemoved": {
            "offset": "0xF110"
        },
        "bgfx::d3d9::RendererContextD3D9::isVisible": {
            "offset": "0x5D0E0"
        },
        "bgfx::d3d9::RendererContextD3D9::overrideInternal": {
            "offset": "0x5D3D0"
        },
        "bgfx::d3d9::RendererContextD3D9::postReset": {
            "offset": "0x5D550"
        },
        "bgfx::d3d9::RendererContextD3D9::preReset": {
            "offset": "0x5DC30"
        },
        "bgfx::d3d9::RendererContextD3D9::readTexture": {
            "offset": "0x5E060"
        },
        "bgfx::d3d9::RendererContextD3D9::requestScreenShot": {
            "offset": "0x5E3C0"
        },
        "bgfx::d3d9::RendererContextD3D9::resizeTexture": {
            "offset": "0x5E7A0"
        },
        "bgfx::d3d9::RendererContextD3D9::setFrameBuffer": {
            "offset": "0x5EAB0"
        },
        "bgfx::d3d9::RendererContextD3D9::setInputLayout": {
            "offset": "0x5ED90"
        },
        "bgfx::d3d9::RendererContextD3D9::setMarker": {
            "offset": "0xA440"
        },
        "bgfx::d3d9::RendererContextD3D9::setName": {
            "offset": "0xA440"
        },
        "bgfx::d3d9::RendererContextD3D9::setSamplerState": {
            "offset": "0x5F7F0"
        },
        "bgfx::d3d9::RendererContextD3D9::shutdown": {
            "offset": "0x5F850"
        },
        "bgfx::d3d9::RendererContextD3D9::submit": {
            "offset": "0x5FAC0"
        },
        "bgfx::d3d9::RendererContextD3D9::submitBlit": {
            "offset": "0x61AC0"
        },
        "bgfx::d3d9::RendererContextD3D9::updateDynamicIndexBuffer": {
            "offset": "0x62330"
        },
        "bgfx::d3d9::RendererContextD3D9::updateDynamicVertexBuffer": {
            "offset": "0x623F0"
        },
        "bgfx::d3d9::RendererContextD3D9::updateResolution": {
            "offset": "0x624B0"
        },
        "bgfx::d3d9::RendererContextD3D9::updateTexture": {
            "offset": "0x62720"
        },
        "bgfx::d3d9::RendererContextD3D9::updateTextureBegin": {
            "offset": "0x62780"
        },
        "bgfx::d3d9::RendererContextD3D9::updateTextureEnd": {
            "offset": "0x62800"
        },
        "bgfx::d3d9::RendererContextD3D9::updateUniform": {
            "offset": "0x62840"
        },
        "bgfx::d3d9::RendererContextD3D9::updateViewName": {
            "offset": "0x62860"
        },
        "bgfx::d3d9::ShaderD3D9::create": {
            "offset": "0x59DF0"
        },
        "bgfx::d3d9::ShaderD3D9::destroy": {
            "offset": "0x5B570"
        },
        "bgfx::d3d9::TextureD3D9::commit": {
            "offset": "0x599F0"
        },
        "bgfx::d3d9::TextureD3D9::create": {
            "offset": "0x5A270"
        },
        "bgfx::d3d9::TextureD3D9::createCubeTexture": {
            "offset": "0x5A790"
        },
        "bgfx::d3d9::TextureD3D9::createTexture": {
            "offset": "0x5ADD0"
        },
        "bgfx::d3d9::TextureD3D9::createVolumeTexture": {
            "offset": "0x5B380"
        },
        "bgfx::d3d9::TextureD3D9::getSurface": {
            "offset": "0x5BEC0"
        },
        "bgfx::d3d9::TextureD3D9::lock": {
            "offset": "0x5D210"
        },
        "bgfx::d3d9::TextureD3D9::preReset": {
            "offset": "0x5DFE0"
        },
        "bgfx::d3d9::TextureD3D9::unlock": {
            "offset": "0x61DA0"
        },
        "bgfx::d3d9::TextureD3D9::update": {
            "offset": "0x61EA0"
        },
        "bgfx::d3d9::TimerQueryD3D9::begin": {
            "offset": "0x58930"
        },
        "bgfx::d3d9::TimerQueryD3D9::end": {
            "offset": "0x5BA00"
        },
        "bgfx::d3d9::TimerQueryD3D9::update": {
            "offset": "0x621D0"
        },
        "bgfx::d3d9::VertexBufferD3D9::preReset": {
            "offset": "0x5DC00"
        },
        "bgfx::d3d9::rendererCreate": {
            "offset": "0x5E280"
        },
        "bgfx::d3d9::rendererDestroy": {
            "offset": "0x5E350"
        },
        "bgfx::destroy": {
            "offset": "0x4F7F0"
        },
        "bgfx::dump": {
            "offset": "0xA440"
        },
        "bgfx::dxbcHash": {
            "offset": "0xB4170"
        },
        "bgfx::dxbcHashBlock": {
            "offset": "0xB42A0"
        },
        "bgfx::fatal": {
            "offset": "0x501D0"
        },
        "bgfx::filter": {
            "offset": "0xB4AD0"
        },
        "bgfx::findModule": {
            "offset": "0xB8520"
        },
        "bgfx::frame": {
            "offset": "0x50BB0"
        },
        "bgfx::getAvailTransientIndexBuffer": {
            "offset": "0x51220"
        },
        "bgfx::getInternalData": {
            "offset": "0x51350"
        },
        "bgfx::getName": {
            "offset": "0x51370"
        },
        "bgfx::getRendererType": {
            "offset": "0x51390"
        },
        "bgfx::getSupportedRenderers": {
            "offset": "0x513B0"
        },
        "bgfx::getViableTextureFormat": {
            "offset": "0x514C0"
        },
        "bgfx::gl::FrameBufferGL::destroy": {
            "offset": "0x88280"
        },
        "bgfx::gl::FrameBufferGL::postReset": {
            "offset": "0x8B380"
        },
        "bgfx::gl::FrameBufferGL::resolve": {
            "offset": "0x8C000"
        },
        "bgfx::gl::GlContext::create": {
            "offset": "0xB9300"
        },
        "bgfx::gl::GlContext::createSwapChain": {
            "offset": "0xB99D0"
        },
        "bgfx::gl::GlContext::destroy": {
            "offset": "0xB9A70"
        },
        "bgfx::gl::GlContext::destroySwapChain": {
            "offset": "0xB9AD0"
        },
        "bgfx::gl::GlContext::getCaps": {
            "offset": "0xB9B60"
        },
        "bgfx::gl::GlContext::import": {
            "offset": "0xB9B70"
        },
        "bgfx::gl::GlContext::makeCurrent": {
            "offset": "0xBF540"
        },
        "bgfx::gl::GlContext::resize": {
            "offset": "0xBF590"
        },
        "bgfx::gl::GlContext::swap": {
            "offset": "0xBF5B0"
        },
        "bgfx::gl::IndexBufferGL::update": {
            "offset": "0x90C70"
        },
        "bgfx::gl::LineReader::read": {
            "offset": "0x8B730"
        },
        "bgfx::gl::OcclusionQueryGL::begin": {
            "offset": "0x84990"
        },
        "bgfx::gl::OcclusionQueryGL::create": {
            "offset": "0x86090"
        },
        "bgfx::gl::OcclusionQueryGL::end": {
            "offset": "0x88770"
        },
        "bgfx::gl::OcclusionQueryGL::resolve": {
            "offset": "0x8C220"
        },
        "bgfx::gl::ProgramGL::bindAttributes": {
            "offset": "0x84D30"
        },
        "bgfx::gl::ProgramGL::bindAttributesEnd": {
            "offset": "0x84E50"
        },
        "bgfx::gl::ProgramGL::bindInstanceData": {
            "offset": "0x84EA0"
        },
        "bgfx::gl::ProgramGL::create": {
            "offset": "0x860D0"
        },
        "bgfx::gl::ProgramGL::init": {
            "offset": "0x88C10"
        },
        "bgfx::gl::ProgramGL::unbindAttributes": {
            "offset": "0x90BD0"
        },
        "bgfx::gl::ProgramGL::unbindInstanceData": {
            "offset": "0x90C20"
        },
        "bgfx::gl::RendererContextGL::RendererContextGL": {
            "offset": "0x84190"
        },
        "bgfx::gl::RendererContextGL::blitMsaaFbo": {
            "offset": "0x84F40"
        },
        "bgfx::gl::RendererContextGL::blitRender": {
            "offset": "0x85000"
        },
        "bgfx::gl::RendererContextGL::blitSetup": {
            "offset": "0x851C0"
        },
        "bgfx::gl::RendererContextGL::capture": {
            "offset": "0x85380"
        },
        "bgfx::gl::RendererContextGL::captureFinish": {
            "offset": "0x85430"
        },
        "bgfx::gl::RendererContextGL::clearQuad": {
            "offset": "0x85510"
        },
        "bgfx::gl::RendererContextGL::commit": {
            "offset": "0x85BB0"
        },
        "bgfx::gl::RendererContextGL::createDynamicIndexBuffer": {
            "offset": "0x87CF0"
        },
        "bgfx::gl::RendererContextGL::createDynamicVertexBuffer": {
            "offset": "0x87D60"
        },
        "bgfx::gl::RendererContextGL::createFrameBuffer": {
            "offset": "0x87E70"
        },
        "bgfx::gl::RendererContextGL::createIndexBuffer": {
            "offset": "0x87EE0"
        },
        "bgfx::gl::RendererContextGL::createProgram": {
            "offset": "0x87F70"
        },
        "bgfx::gl::RendererContextGL::createShader": {
            "offset": "0x87FE0"
        },
        "bgfx::gl::RendererContextGL::createTexture": {
            "offset": "0x88000"
        },
        "bgfx::gl::RendererContextGL::createUniform": {
            "offset": "0x88040"
        },
        "bgfx::gl::RendererContextGL::createVertexBuffer": {
            "offset": "0x881A0"
        },
        "bgfx::gl::RendererContextGL::createVertexLayout": {
            "offset": "0x88240"
        },
        "bgfx::gl::RendererContextGL::destroyDynamicIndexBuffer": {
            "offset": "0x88300"
        },
        "bgfx::gl::RendererContextGL::destroyDynamicVertexBuffer": {
            "offset": "0x88340"
        },
        "bgfx::gl::RendererContextGL::destroyFrameBuffer": {
            "offset": "0x88380"
        },
        "bgfx::gl::RendererContextGL::destroyIndexBuffer": {
            "offset": "0x88300"
        },
        "bgfx::gl::RendererContextGL::destroyMsaaFbo": {
            "offset": "0x883F0"
        },
        "bgfx::gl::RendererContextGL::destroyProgram": {
            "offset": "0x88460"
        },
        "bgfx::gl::RendererContextGL::destroyShader": {
            "offset": "0x884E0"
        },
        "bgfx::gl::RendererContextGL::destroyTexture": {
            "offset": "0x88520"
        },
        "bgfx::gl::RendererContextGL::destroyUniform": {
            "offset": "0x88590"
        },
        "bgfx::gl::RendererContextGL::destroyVertexBuffer": {
            "offset": "0x88340"
        },
        "bgfx::gl::RendererContextGL::destroyVertexLayout": {
            "offset": "0xA440"
        },
        "bgfx::gl::RendererContextGL::flip": {
            "offset": "0x889A0"
        },
        "bgfx::gl::RendererContextGL::getInternal": {
            "offset": "0x88B60"
        },
        "bgfx::gl::RendererContextGL::getNumRt": {
            "offset": "0x88B70"
        },
        "bgfx::gl::RendererContextGL::getRendererName": {
            "offset": "0x88BA0"
        },
        "bgfx::gl::RendererContextGL::getRendererType": {
            "offset": "0x88BB0"
        },
        "bgfx::gl::RendererContextGL::init": {
            "offset": "0x89370"
        },
        "bgfx::gl::RendererContextGL::invalidateOcclusionQuery": {
            "offset": "0x8AF20"
        },
        "bgfx::gl::RendererContextGL::isDeviceRemoved": {
            "offset": "0xF110"
        },
        "bgfx::gl::RendererContextGL::isVisible": {
            "offset": "0x8B280"
        },
        "bgfx::gl::RendererContextGL::overrideInternal": {
            "offset": "0x8B2D0"
        },
        "bgfx::gl::RendererContextGL::readTexture": {
            "offset": "0x8B860"
        },
        "bgfx::gl::RendererContextGL::requestScreenShot": {
            "offset": "0x8BCE0"
        },
        "bgfx::gl::RendererContextGL::resizeTexture": {
            "offset": "0x8BE40"
        },
        "bgfx::gl::RendererContextGL::setFrameBuffer": {
            "offset": "0x8C350"
        },
        "bgfx::gl::RendererContextGL::setMarker": {
            "offset": "0x8C620"
        },
        "bgfx::gl::RendererContextGL::setName": {
            "offset": "0x8C630"
        },
        "bgfx::gl::RendererContextGL::setRenderContextSize": {
            "offset": "0x8C720"
        },
        "bgfx::gl::RendererContextGL::setSamplerState": {
            "offset": "0x8C8E0"
        },
        "bgfx::gl::RendererContextGL::submit": {
            "offset": "0x8DB30"
        },
        "bgfx::gl::RendererContextGL::submitBlit": {
            "offset": "0x90790"
        },
        "bgfx::gl::RendererContextGL::updateDynamicIndexBuffer": {
            "offset": "0x911A0"
        },
        "bgfx::gl::RendererContextGL::updateDynamicVertexBuffer": {
            "offset": "0x91220"
        },
        "bgfx::gl::RendererContextGL::updateResolution": {
            "offset": "0x91410"
        },
        "bgfx::gl::RendererContextGL::updateTexture": {
            "offset": "0x915D0"
        },
        "bgfx::gl::RendererContextGL::updateTextureBegin": {
            "offset": "0xA440"
        },
        "bgfx::gl::RendererContextGL::updateTextureEnd": {
            "offset": "0xA440"
        },
        "bgfx::gl::RendererContextGL::updateUniform": {
            "offset": "0x91640"
        },
        "bgfx::gl::RendererContextGL::updateViewName": {
            "offset": "0x91660"
        },
        "bgfx::gl::SamplerStateCache::find": {
            "offset": "0x88920"
        },
        "bgfx::gl::SamplerStateCache::~SamplerStateCache": {
            "offset": "0x84760"
        },
        "bgfx::gl::ShaderGL::create": {
            "offset": "0x86450"
        },
        "bgfx::gl::TextureGL::commit": {
            "offset": "0x85D30"
        },
        "bgfx::gl::TextureGL::create": {
            "offset": "0x876B0"
        },
        "bgfx::gl::TextureGL::init": {
            "offset": "0x8A680"
        },
        "bgfx::gl::TextureGL::setSamplerState": {
            "offset": "0x8D3D0"
        },
        "bgfx::gl::TextureGL::update": {
            "offset": "0x90D50"
        },
        "bgfx::gl::TimerQueryGL::begin": {
            "offset": "0x84AC0"
        },
        "bgfx::gl::TimerQueryGL::create": {
            "offset": "0x87C60"
        },
        "bgfx::gl::TimerQueryGL::end": {
            "offset": "0x887E0"
        },
        "bgfx::gl::UniformStateCache::~UniformStateCache": {
            "offset": "0x84790"
        },
        "bgfx::gl::VertexBufferGL::update": {
            "offset": "0x910D0"
        },
        "bgfx::gl::compressedTexImage": {
            "offset": "0x85DE0"
        },
        "bgfx::gl::convertGlType": {
            "offset": "0x85ED0"
        },
        "bgfx::gl::createContext": {
            "offset": "0xB9880"
        },
        "bgfx::gl::debugProcCb": {
            "offset": "0xA440"
        },
        "bgfx::gl::dumpExtensions": {
            "offset": "0x88600"
        },
        "bgfx::gl::getGLStringHash": {
            "offset": "0x88A60"
        },
        "bgfx::gl::getGlError": {
            "offset": "0x88B30"
        },
        "bgfx::gl::glGet": {
            "offset": "0x88BC0"
        },
        "bgfx::gl::initTestTexture": {
            "offset": "0x8A9D0"
        },
        "bgfx::gl::isFramebufferFormatValid": {
            "offset": "0x8AFA0"
        },
        "bgfx::gl::isImageFormatValid": {
            "offset": "0x8B180"
        },
        "bgfx::gl::rendererCreate": {
            "offset": "0x8BA90"
        },
        "bgfx::gl::rendererDestroy": {
            "offset": "0x8BB60"
        },
        "bgfx::gl::stubDrawArraysInstanced": {
            "offset": "0x8DA50"
        },
        "bgfx::gl::stubDrawElementsInstanced": {
            "offset": "0x8DA60"
        },
        "bgfx::gl::stubInsertEventMarker": {
            "offset": "0xA440"
        },
        "bgfx::gl::stubInvalidateFramebuffer": {
            "offset": "0xA440"
        },
        "bgfx::gl::stubMultiDrawArraysIndirect": {
            "offset": "0x8DA70"
        },
        "bgfx::gl::stubMultiDrawElementsIndirect": {
            "offset": "0x8DAC0"
        },
        "bgfx::gl::stubObjectLabel": {
            "offset": "0xA440"
        },
        "bgfx::gl::stubPolygonMode": {
            "offset": "0xA440"
        },
        "bgfx::gl::stubPopDebugGroup": {
            "offset": "0xA440"
        },
        "bgfx::gl::stubPushDebugGroup": {
            "offset": "0xA440"
        },
        "bgfx::gl::stubVertexAttribDivisor": {
            "offset": "0xA440"
        },
        "bgfx::gl::texImage": {
            "offset": "0x909F0"
        },
        "bgfx::gl::updateExtension": {
            "offset": "0x912A0"
        },
        "bgfx::gnm::rendererCreate": {
            "offset": "0xEA60"
        },
        "bgfx::gnm::rendererDestroy": {
            "offset": "0xA440"
        },
        "bgfx::hasVertexStreamChanged": {
            "offset": "0x5BF50"
        },
        "bgfx::idToAttrib": {
            "offset": "0x4A860"
        },
        "bgfx::init": {
            "offset": "0x526F0"
        },
        "bgfx::initAttribTypeSizeTable": {
            "offset": "0x4A8A0"
        },
        "bgfx::isTextureValid": {
            "offset": "0x52B70"
        },
        "bgfx::loadRenderDoc": {
            "offset": "0xB86A0"
        },
        "bgfx::makeRef": {
            "offset": "0x52D90"
        },
        "bgfx::nameToPredefinedUniformEnum": {
            "offset": "0x52E10"
        },
        "bgfx::noop::RendererContextNOOP::blitRender": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::blitSetup": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createDynamicIndexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createDynamicVertexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createFrameBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createIndexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createProgram": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createShader": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createTexture": {
            "offset": "0xEA60"
        },
        "bgfx::noop::RendererContextNOOP::createUniform": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createVertexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::createVertexLayout": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyDynamicIndexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyDynamicVertexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyFrameBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyIndexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyProgram": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyShader": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyTexture": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyUniform": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyVertexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::destroyVertexLayout": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::flip": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::getInternal": {
            "offset": "0xEA60"
        },
        "bgfx::noop::RendererContextNOOP::getRendererName": {
            "offset": "0x57620"
        },
        "bgfx::noop::RendererContextNOOP::getRendererType": {
            "offset": "0xEA60"
        },
        "bgfx::noop::RendererContextNOOP::invalidateOcclusionQuery": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::isDeviceRemoved": {
            "offset": "0xF110"
        },
        "bgfx::noop::RendererContextNOOP::overrideInternal": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::readTexture": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::requestScreenShot": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::resizeTexture": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::setMarker": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::setName": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::submit": {
            "offset": "0x57750"
        },
        "bgfx::noop::RendererContextNOOP::updateDynamicIndexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::updateDynamicVertexBuffer": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::updateTexture": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::updateTextureBegin": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::updateTextureEnd": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::updateUniform": {
            "offset": "0xA440"
        },
        "bgfx::noop::RendererContextNOOP::updateViewName": {
            "offset": "0xA440"
        },
        "bgfx::noop::rendererCreate": {
            "offset": "0x57630"
        },
        "bgfx::noop::rendererDestroy": {
            "offset": "0x576F0"
        },
        "bgfx::nvn::rendererCreate": {
            "offset": "0xEA60"
        },
        "bgfx::nvn::rendererDestroy": {
            "offset": "0xA440"
        },
        "bgfx::overrideInternal": {
            "offset": "0x52EE0"
        },
        "bgfx::parse": {
            "offset": "0xB51A0"
        },
        "bgfx::parseAttrTo": {
            "offset": "0x52F60"
        },
        "bgfx::read": {
            "offset": "0xB6390"
        },
        "bgfx::release": {
            "offset": "0x53680"
        },
        "bgfx::renderDocTriggerCapture": {
            "offset": "0xB8840"
        },
        "bgfx::renderFrame": {
            "offset": "0x53D80"
        },
        "bgfx::rendererCreate": {
            "offset": "0x53EC0"
        },
        "bgfx::rendererUpdateUniforms": {
            "offset": "0x551B0"
        },
        "bgfx::reset": {
            "offset": "0x552A0"
        },
        "bgfx::setGraphicsDebuggerPresent": {
            "offset": "0x55AF0"
        },
        "bgfx::setIndexBuffer": {
            "offset": "0x55B40"
        },
        "bgfx::setPlatformData": {
            "offset": "0x55D60"
        },
        "bgfx::setState": {
            "offset": "0x55DD0"
        },
        "bgfx::setTexture": {
            "offset": "0x55E20"
        },
        "bgfx::setTransform": {
            "offset": "0x55EA0"
        },
        "bgfx::setVertexBuffer": {
            "offset": "0x56160"
        },
        "bgfx::setViewClear": {
            "offset": "0x561D0"
        },
        "bgfx::setViewRect": {
            "offset": "0x56240"
        },
        "bgfx::submit": {
            "offset": "0x56930"
        },
        "bgfx::touch": {
            "offset": "0x56DD0"
        },
        "bgfx::trace": {
            "offset": "0x56E10"
        },
        "bgfx::unloadRenderDoc": {
            "offset": "0xA440"
        },
        "bgfx::updateTexture2D": {
            "offset": "0x56F60"
        },
        "bgfx::vk::BufferVK::create": {
            "offset": "0x949E0"
        },
        "bgfx::vk::BufferVK::destroy": {
            "offset": "0x97290"
        },
        "bgfx::vk::BufferVK::update": {
            "offset": "0xA10B0"
        },
        "bgfx::vk::ProgramVK::create": {
            "offset": "0x94C40"
        },
        "bgfx::vk::RendererContextVK::RendererContextVK": {
            "offset": "0x929C0"
        },
        "bgfx::vk::RendererContextVK::allocDescriptorSet": {
            "offset": "0x931A0"
        },
        "bgfx::vk::RendererContextVK::allocateMemory": {
            "offset": "0x93A10"
        },
        "bgfx::vk::RendererContextVK::beginNewCommand": {
            "offset": "0x93B00"
        },
        "bgfx::vk::RendererContextVK::blitRender": {
            "offset": "0x93B80"
        },
        "bgfx::vk::RendererContextVK::blitSetup": {
            "offset": "0x93C70"
        },
        "bgfx::vk::RendererContextVK::clearQuad": {
            "offset": "0x94220"
        },
        "bgfx::vk::RendererContextVK::commit": {
            "offset": "0x94470"
        },
        "bgfx::vk::RendererContextVK::createDynamicIndexBuffer": {
            "offset": "0x966D0"
        },
        "bgfx::vk::RendererContextVK::createDynamicVertexBuffer": {
            "offset": "0x96710"
        },
        "bgfx::vk::RendererContextVK::createFrameBuffer": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::createIndexBuffer": {
            "offset": "0x968F0"
        },
        "bgfx::vk::RendererContextVK::createProgram": {
            "offset": "0x96930"
        },
        "bgfx::vk::RendererContextVK::createShader": {
            "offset": "0x96990"
        },
        "bgfx::vk::RendererContextVK::createSwapchain": {
            "offset": "0x969B0"
        },
        "bgfx::vk::RendererContextVK::createSwapchainFramebuffer": {
            "offset": "0x96CD0"
        },
        "bgfx::vk::RendererContextVK::createSwapchainRenderPass": {
            "offset": "0x96DB0"
        },
        "bgfx::vk::RendererContextVK::createTexture": {
            "offset": "0x96EF0"
        },
        "bgfx::vk::RendererContextVK::createUniform": {
            "offset": "0x96F20"
        },
        "bgfx::vk::RendererContextVK::createVertexBuffer": {
            "offset": "0x97090"
        },
        "bgfx::vk::RendererContextVK::createVertexLayout": {
            "offset": "0x970F0"
        },
        "bgfx::vk::RendererContextVK::destroyDynamicIndexBuffer": {
            "offset": "0x97470"
        },
        "bgfx::vk::RendererContextVK::destroyDynamicVertexBuffer": {
            "offset": "0x97490"
        },
        "bgfx::vk::RendererContextVK::destroyFrameBuffer": {
            "offset": "0x974B0"
        },
        "bgfx::vk::RendererContextVK::destroyIndexBuffer": {
            "offset": "0x97470"
        },
        "bgfx::vk::RendererContextVK::destroyProgram": {
            "offset": "0x97500"
        },
        "bgfx::vk::RendererContextVK::destroyShader": {
            "offset": "0x97570"
        },
        "bgfx::vk::RendererContextVK::destroyTexture": {
            "offset": "0x97590"
        },
        "bgfx::vk::RendererContextVK::destroyUniform": {
            "offset": "0x975B0"
        },
        "bgfx::vk::RendererContextVK::destroyVertexBuffer": {
            "offset": "0x97490"
        },
        "bgfx::vk::RendererContextVK::destroyVertexLayout": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::flip": {
            "offset": "0x97940"
        },
        "bgfx::vk::RendererContextVK::getInternal": {
            "offset": "0xEA60"
        },
        "bgfx::vk::RendererContextVK::getPipeline": {
            "offset": "0x97D60"
        },
        "bgfx::vk::RendererContextVK::getRenderPass": {
            "offset": "0x99850"
        },
        "bgfx::vk::RendererContextVK::getRenderPassHashkey": {
            "offset": "0x99C00"
        },
        "bgfx::vk::RendererContextVK::getRendererName": {
            "offset": "0x9A230"
        },
        "bgfx::vk::RendererContextVK::getRendererType": {
            "offset": "0x9A240"
        },
        "bgfx::vk::RendererContextVK::getSampler": {
            "offset": "0x9A250"
        },
        "bgfx::vk::RendererContextVK::init": {
            "offset": "0x9AA20"
        },
        "bgfx::vk::RendererContextVK::initSwapchainImageLayout": {
            "offset": "0x9D1A0"
        },
        "bgfx::vk::RendererContextVK::invalidateOcclusionQuery": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::isDeviceRemoved": {
            "offset": "0xF110"
        },
        "bgfx::vk::RendererContextVK::kick": {
            "offset": "0x9D310"
        },
        "bgfx::vk::RendererContextVK::overrideInternal": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::readTexture": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::releaseSwapchain": {
            "offset": "0x9D3B0"
        },
        "bgfx::vk::RendererContextVK::releaseSwapchainFramebuffer": {
            "offset": "0x9D4E0"
        },
        "bgfx::vk::RendererContextVK::releaseSwapchainRenderPass": {
            "offset": "0x9D540"
        },
        "bgfx::vk::RendererContextVK::requestScreenShot": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::resizeTexture": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::setBlendState": {
            "offset": "0x9D710"
        },
        "bgfx::vk::RendererContextVK::setFrameBuffer": {
            "offset": "0x9D920"
        },
        "bgfx::vk::RendererContextVK::setInputLayout": {
            "offset": "0x9DC70"
        },
        "bgfx::vk::RendererContextVK::setMarker": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::setName": {
            "offset": "0x9E250"
        },
        "bgfx::vk::RendererContextVK::shutdown": {
            "offset": "0x9E2F0"
        },
        "bgfx::vk::RendererContextVK::submit": {
            "offset": "0x9E840"
        },
        "bgfx::vk::RendererContextVK::submitBlit": {
            "offset": "0xA09A0"
        },
        "bgfx::vk::RendererContextVK::submitCommandAndWait": {
            "offset": "0xA1010"
        },
        "bgfx::vk::RendererContextVK::updateDynamicIndexBuffer": {
            "offset": "0xA1720"
        },
        "bgfx::vk::RendererContextVK::updateDynamicVertexBuffer": {
            "offset": "0xA1770"
        },
        "bgfx::vk::RendererContextVK::updateResolution": {
            "offset": "0xA1A00"
        },
        "bgfx::vk::RendererContextVK::updateTexture": {
            "offset": "0xA1CF0"
        },
        "bgfx::vk::RendererContextVK::updateTextureBegin": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::updateTextureEnd": {
            "offset": "0xA440"
        },
        "bgfx::vk::RendererContextVK::updateUniform": {
            "offset": "0xA1D30"
        },
        "bgfx::vk::RendererContextVK::updateViewName": {
            "offset": "0xA1D50"
        },
        "bgfx::vk::ScratchBufferVK::ScratchBufferVK": {
            "offset": "0x17690"
        },
        "bgfx::vk::ScratchBufferVK::create": {
            "offset": "0x94F70"
        },
        "bgfx::vk::ScratchBufferVK::reset": {
            "offset": "0x9D6C0"
        },
        "bgfx::vk::ScratchBufferVK::~ScratchBufferVK": {
            "offset": "0xA440"
        },
        "bgfx::vk::ShaderVK::create": {
            "offset": "0x950C0"
        },
        "bgfx::vk::ShaderVK::destroy": {
            "offset": "0x97300"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkDescriptorSetLayout>::add": {
            "offset": "0x92EA0"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkDescriptorSetLayout>::find": {
            "offset": "0x978B0"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkDescriptorSetLayout>::~StateCacheT<bgfx::vk::VkDescriptorSetLayout>": {
            "offset": "0x58670"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkPipeline>::add": {
            "offset": "0x93020"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkPipeline>::find": {
            "offset": "0x978B0"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkPipeline>::invalidate": {
            "offset": "0x9D2A0"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkPipeline>::~StateCacheT<bgfx::vk::VkPipeline>": {
            "offset": "0x58670"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkRenderPass>::~StateCacheT<bgfx::vk::VkRenderPass>": {
            "offset": "0x58670"
        },
        "bgfx::vk::StateCacheT<bgfx::vk::VkSampler>::~StateCacheT<bgfx::vk::VkSampler>": {
            "offset": "0x58670"
        },
        "bgfx::vk::TextureVK::copyBufferToTexture": {
            "offset": "0x94730"
        },
        "bgfx::vk::TextureVK::create": {
            "offset": "0x95AE0"
        },
        "bgfx::vk::TextureVK::destroy": {
            "offset": "0x97390"
        },
        "bgfx::vk::TextureVK::setImageMemoryBarrier": {
            "offset": "0x9DA90"
        },
        "bgfx::vk::TextureVK::update": {
            "offset": "0xA1310"
        },
        "bgfx::vk::debugReportCb": {
            "offset": "0x97130"
        },
        "bgfx::vk::dumpExtensions": {
            "offset": "0x97600"
        },
        "bgfx::vk::rendererCreate": {
            "offset": "0x9D580"
        },
        "bgfx::vk::rendererDestroy": {
            "offset": "0x9D650"
        },
        "bgfx::vk::setDebugObjectName<bgfx::vk::VkBuffer>": {
            "offset": "0x91710"
        },
        "bgfx::vk::setDebugObjectName<bgfx::vk::VkShaderModule>": {
            "offset": "0x91710"
        },
        "bgfx::vk::setImageMemoryBarrier": {
            "offset": "0x9DAE0"
        },
        "bgfx::vk::stubCmdBeginDebugUtilsLabelEXT": {
            "offset": "0xA440"
        },
        "bgfx::vk::stubCmdEndDebugUtilsLabelEXT": {
            "offset": "0xA440"
        },
        "bgfx::vk::stubCmdInsertDebugUtilsLabelEXT": {
            "offset": "0xA440"
        },
        "bgfx::vk::stubSetDebugUtilsObjectNameEXT": {
            "offset": "0xEA60"
        },
        "bgfx::vk::updateExtension": {
            "offset": "0xA17C0"
        },
        "bgfx::vk::updateLayer": {
            "offset": "0xA18E0"
        },
        "bgfx::vk::vkDestroy": {
            "offset": "0xA1E80"
        },
        "bgfx::webgpu::rendererCreate": {
            "offset": "0xEA60"
        },
        "bgfx::webgpu::rendererDestroy": {
            "offset": "0xA440"
        },
        "bgfx::windowsVersionIs": {
            "offset": "0x57260"
        },
        "bgfx::write": {
            "offset": "0xB7FE0"
        },
        "bimg::BitReader::read": {
            "offset": "0xB2BD0"
        },
        "bimg::bc6hUnquantize": {
            "offset": "0xA8AA0"
        },
        "bimg::calcNumMips": {
            "offset": "0x4CE30"
        },
        "bimg::decodeBlockATC": {
            "offset": "0xA8B40"
        },
        "bimg::decodeBlockBc6h": {
            "offset": "0xAA400"
        },
        "bimg::decodeBlockBc7": {
            "offset": "0xAA830"
        },
        "bimg::decodeBlockDxt": {
            "offset": "0xAB990"
        },
        "bimg::decodeBlockDxt1": {
            "offset": "0xAB590"
        },
        "bimg::decodeBlockDxt45A": {
            "offset": "0xAB7D0"
        },
        "bimg::decodeBlockEtc12": {
            "offset": "0xABB90"
        },
        "bimg::decodeBlockEtc2ModeH": {
            "offset": "0xAC560"
        },
        "bimg::decodeBlockEtc2ModePlanar": {
            "offset": "0xACBA0"
        },
        "bimg::decodeBlockEtc2ModeT": {
            "offset": "0xAD100"
        },
        "bimg::decodeBlockPtc14": {
            "offset": "0xAD650"
        },
        "bimg::decodeBlockPtc14A": {
            "offset": "0xAE130"
        },
        "bimg::getBitsPerPixel": {
            "offset": "0xAEDE0"
        },
        "bimg::getBlockInfo": {
            "offset": "0xAEE00"
        },
        "bimg::getName": {
            "offset": "0xAEE20"
        },
        "bimg::imageAlloc": {
            "offset": "0xAEE40"
        },
        "bimg::imageCheckerboard": {
            "offset": "0xAF100"
        },
        "bimg::imageConvert": {
            "offset": "0xAF4B0"
        },
        "bimg::imageCopy": {
            "offset": "0xAF4E0"
        },
        "bimg::imageDecodeToBgra8": {
            "offset": "0xAF590"
        },
        "bimg::imageDecodeToRgba32f": {
            "offset": "0xB0640"
        },
        "bimg::imageDecodeToRgba8": {
            "offset": "0xB0F20"
        },
        "bimg::imageGetRawData": {
            "offset": "0xB1190"
        },
        "bimg::imageGetSize": {
            "offset": "0xB14A0"
        },
        "bimg::imageParse": {
            "offset": "0xB18E0"
        },
        "bimg::imageParseDds": {
            "offset": "0xB1950"
        },
        "bimg::imageParseGnf": {
            "offset": "0xBF640"
        },
        "bimg::imageParseKtx": {
            "offset": "0xB1FB0"
        },
        "bimg::imageParsePvr3": {
            "offset": "0xB2600"
        },
        "bimg::imageSwizzleBgra8": {
            "offset": "0xB2860"
        },
        "bimg::imageWriteTga": {
            "offset": "0xB29A0"
        },
        "bimg::isCompressed": {
            "offset": "0xB2BB0"
        },
        "bimg::isDepth": {
            "offset": "0xB2BC0"
        },
        "bx::DefaultAllocator::DefaultAllocator": {
            "offset": "0xA1EC0"
        },
        "bx::DefaultAllocator::realloc": {
            "offset": "0xA1F10"
        },
        "bx::DefaultAllocator::~DefaultAllocator": {
            "offset": "0xA1ED0"
        },
        "bx::DigitGen": {
            "offset": "0xA5390"
        },
        "bx::FilePath::FilePath": {
            "offset": "0xA63A0"
        },
        "bx::FilePath::getCPtr": {
            "offset": "0x17690"
        },
        "bx::FileWriter::FileWriter": {
            "offset": "0xB2C60"
        },
        "bx::FileWriter::close": {
            "offset": "0xB2E40"
        },
        "bx::FileWriter::open": {
            "offset": "0xB2E40"
        },
        "bx::FileWriter::seek": {
            "offset": "0xB2E40"
        },
        "bx::FileWriter::write": {
            "offset": "0xB2E40"
        },
        "bx::FileWriter::~FileWriter": {
            "offset": "0xB2CD0"
        },
        "bx::FileWriterImpl::close": {
            "offset": "0xB2E50"
        },
        "bx::FileWriterImpl::open": {
            "offset": "0xB2E80"
        },
        "bx::FileWriterImpl::seek": {
            "offset": "0xB2F90"
        },
        "bx::FileWriterImpl::write": {
            "offset": "0xB2FC0"
        },
        "bx::Grisu2": {
            "offset": "0xA5740"
        },
        "bx::HandleAlloc::alloc": {
            "offset": "0x4C3C0"
        },
        "bx::HandleAllocLruT<1024>::alloc": {
            "offset": "0x64B10"
        },
        "bx::HandleAllocLruT<1024>::free": {
            "offset": "0x68AC0"
        },
        "bx::HandleHashMapT<1024,unsigned int>::find": {
            "offset": "0x502E0"
        },
        "bx::HandleHashMapT<1024,unsigned int>::insert": {
            "offset": "0x52A50"
        },
        "bx::HandleHashMapT<1024,unsigned int>::removeByHandle": {
            "offset": "0x53730"
        },
        "bx::HandleHashMapT<1024,unsigned int>::removeIndex": {
            "offset": "0x5E160"
        },
        "bx::HandleHashMapT<128,unsigned int>::insert": {
            "offset": "0x52AE0"
        },
        "bx::HandleHashMapT<128,unsigned int>::removeByHandle": {
            "offset": "0x53890"
        },
        "bx::HandleListT<64>::pushFront": {
            "offset": "0x7D6B0"
        },
        "bx::HashMurmur2A::add<bgfx::TextureHandle>": {
            "offset": "0x49D60"
        },
        "bx::HashMurmur2A::add<bool>": {
            "offset": "0x628D0"
        },
        "bx::HashMurmur2A::add<unsigned char>": {
            "offset": "0x628D0"
        },
        "bx::HashMurmur2A::add<unsigned short>": {
            "offset": "0x49D60"
        },
        "bx::HashMurmur2A::addAligned": {
            "offset": "0x4C220"
        },
        "bx::HashMurmur2A::addUnaligned": {
            "offset": "0x4A090"
        },
        "bx::MemoryBlock::getSize": {
            "offset": "0xB4E90"
        },
        "bx::MemoryBlock::more": {
            "offset": "0xB5150"
        },
        "bx::MemoryBlock::~MemoryBlock": {
            "offset": "0xB4020"
        },
        "bx::MemoryReader::read": {
            "offset": "0x53410"
        },
        "bx::MemoryReader::seek": {
            "offset": "0x55910"
        },
        "bx::MemoryReader::~MemoryReader": {
            "offset": "0x4BF60"
        },
        "bx::MemoryWriter::seek": {
            "offset": "0x55990"
        },
        "bx::MemoryWriter::write": {
            "offset": "0x57320"
        },
        "bx::MemoryWriter::~MemoryWriter": {
            "offset": "0x4BF80"
        },
        "bx::MpScUnboundedBlockingQueue<void>::~MpScUnboundedBlockingQueue<void>": {
            "offset": "0xA6B30"
        },
        "bx::MpScUnboundedQueueT<void>::~MpScUnboundedQueueT<void>": {
            "offset": "0xA6B50"
        },
        "bx::Mutex::Mutex": {
            "offset": "0xA6350"
        },
        "bx::Mutex::lock": {
            "offset": "0xA6380"
        },
        "bx::Mutex::unlock": {
            "offset": "0xA6390"
        },
        "bx::Mutex::~Mutex": {
            "offset": "0xA6370"
        },
        "bx::MutexScope::~MutexScope": {
            "offset": "0x4BFA0"
        },
        "bx::Prettify": {
            "offset": "0xA5A00"
        },
        "bx::Semaphore::Semaphore": {
            "offset": "0xA6970"
        },
        "bx::Semaphore::post": {
            "offset": "0xA69B0"
        },
        "bx::Semaphore::wait": {
            "offset": "0xA69C0"
        },
        "bx::Semaphore::~Semaphore": {
            "offset": "0xA69A0"
        },
        "bx::SizerWriter::seek": {
            "offset": "0xA25F0"
        },
        "bx::SizerWriter::write": {
            "offset": "0xA3980"
        },
        "bx::SizerWriter::~SizerWriter": {
            "offset": "0xA2080"
        },
        "bx::StaticMemoryBlock::getSize": {
            "offset": "0x513A0"
        },
        "bx::StaticMemoryBlock::more": {
            "offset": "0x52E00"
        },
        "bx::StaticMemoryBlockWriter::~StaticMemoryBlockWriter": {
            "offset": "0x4C070"
        },
        "bx::StringT<&bgfx::g_allocator>::set": {
            "offset": "0x55A10"
        },
        "bx::Thread::Thread": {
            "offset": "0xA69F0"
        },
        "bx::Thread::init": {
            "offset": "0xA6CF0"
        },
        "bx::Thread::setThreadName": {
            "offset": "0xA6D70"
        },
        "bx::Thread::~Thread": {
            "offset": "0xA6BC0"
        },
        "bx::ThreadInternal::threadFunc": {
            "offset": "0xA6E70"
        },
        "bx::WriteExponent": {
            "offset": "0xA5B50"
        },
        "bx::`anonymous namespace'::write": {
            "offset": "0xA36C0"
        },
        "bx::alignedAlloc": {
            "offset": "0x4C360"
        },
        "bx::createHandleAlloc": {
            "offset": "0x4D6B0"
        },
        "bx::debugBreak": {
            "offset": "0xA6220"
        },
        "bx::debugOutput": {
            "offset": "0xA6230"
        },
        "bx::debugPrintf": {
            "offset": "0xA6240"
        },
        "bx::debugPrintfVargs": {
            "offset": "0xA6270"
        },
        "bx::dlclose": {
            "offset": "0xB3470"
        },
        "bx::dlopen": {
            "offset": "0xB3480"
        },
        "bx::dlsym": {
            "offset": "0xB34A0"
        },
        "bx::exp": {
            "offset": "0xB3090"
        },
        "bx::findIdentifierMatch": {
            "offset": "0xA2300"
        },
        "bx::fromString": {
            "offset": "0xA5C00"
        },
        "bx::getHPCounter": {
            "offset": "0xA6EB0"
        },
        "bx::getHPFrequency": {
            "offset": "0xA6ED0"
        },
        "bx::getProcessMemoryUsed": {
            "offset": "0xB3540"
        },
        "bx::halfFromFloat": {
            "offset": "0x4A590"
        },
        "bx::halfToFloat": {
            "offset": "0x4A710"
        },
        "bx::hash<bx::HashMurmur2A>": {
            "offset": "0x4AC70"
        },
        "bx::isNumeric": {
            "offset": "0xA2490"
        },
        "bx::log": {
            "offset": "0xB31F0"
        },
        "bx::memCmp": {
            "offset": "0x574E0"
        },
        "bx::memCopy": {
            "offset": "0x57590"
        },
        "bx::memMove": {
            "offset": "0x575A0"
        },
        "bx::memSet": {
            "offset": "0x575B0"
        },
        "bx::mtxOrtho": {
            "offset": "0xB3320"
        },
        "bx::normalizeFilePath": {
            "offset": "0xA63F0"
        },
        "bx::packA8": {
            "offset": "0xA87E0"
        },
        "bx::packBgra4": {
            "offset": "0x5D470"
        },
        "bx::packBgra8": {
            "offset": "0xA7380"
        },
        "bx::packR16": {
            "offset": "0xA76A0"
        },
        "bx::packR16F": {
            "offset": "0xA77C0"
        },
        "bx::packR16I": {
            "offset": "0xA7780"
        },
        "bx::packR16S": {
            "offset": "0xA7710"
        },
        "bx::packR16U": {
            "offset": "0xA7780"
        },
        "bx::packR24": {
            "offset": "0xA8670"
        },
        "bx::packR24G8": {
            "offset": "0xA8700"
        },
        "bx::packR32F": {
            "offset": "0xA7E90"
        },
        "bx::packR32I": {
            "offset": "0xA7E90"
        },
        "bx::packR32U": {
            "offset": "0xA7E90"
        },
        "bx::packR5G6B5": {
            "offset": "0xA80E0"
        },
        "bx::packR8": {
            "offset": "0xA8840"
        },
        "bx::packR8I": {
            "offset": "0xA8920"
        },
        "bx::packR8S": {
            "offset": "0xA88B0"
        },
        "bx::packR8U": {
            "offset": "0xA8920"
        },
        "bx::packRG11B10F": {
            "offset": "0xA85B0"
        },
        "bx::packRg16": {
            "offset": "0xA7810"
        },
        "bx::packRg16F": {
            "offset": "0xA7A10"
        },
        "bx::packRg16I": {
            "offset": "0xA7990"
        },
        "bx::packRg16S": {
            "offset": "0xA78D0"
        },
        "bx::packRg16U": {
            "offset": "0xA7990"
        },
        "bx::packRg32F": {
            "offset": "0xA7EA0"
        },
        "bx::packRg32I": {
            "offset": "0xA7EA0"
        },
        "bx::packRg32U": {
            "offset": "0xA7EA0"
        },
        "bx::packRg8": {
            "offset": "0xA8970"
        },
        "bx::packRg8I": {
            "offset": "0xA6F40"
        },
        "bx::packRg8S": {
            "offset": "0xA8A30"
        },
        "bx::packRg8U": {
            "offset": "0xA6F40"
        },
        "bx::packRgb10A2": {
            "offset": "0xA8450"
        },
        "bx::packRgb5a1": {
            "offset": "0xA82F0"
        },
        "bx::packRgb8": {
            "offset": "0xA6FB0"
        },
        "bx::packRgb8I": {
            "offset": "0xA71B0"
        },
        "bx::packRgb8S": {
            "offset": "0xA70A0"
        },
        "bx::packRgb8U": {
            "offset": "0xA71B0"
        },
        "bx::packRgb9E5F": {
            "offset": "0xA7EB0"
        },
        "bx::packRgba16": {
            "offset": "0xA7AA0"
        },
        "bx::packRgba16F": {
            "offset": "0xA7DD0"
        },
        "bx::packRgba16I": {
            "offset": "0xA7D20"
        },
        "bx::packRgba16S": {
            "offset": "0xA7BD0"
        },
        "bx::packRgba16U": {
            "offset": "0xA7D20"
        },
        "bx::packRgba32F": {
            "offset": "0xA80D0"
        },
        "bx::packRgba32I": {
            "offset": "0xA80D0"
        },
        "bx::packRgba32U": {
            "offset": "0xA80D0"
        },
        "bx::packRgba4": {
            "offset": "0xA8210"
        },
        "bx::packRgba8": {
            "offset": "0xA7250"
        },
        "bx::packRgba8I": {
            "offset": "0xA7600"
        },
        "bx::packRgba8S": {
            "offset": "0xA74B0"
        },
        "bx::packRgba8U": {
            "offset": "0xA7600"
        },
        "bx::prettify": {
            "offset": "0xA24A0"
        },
        "bx::quickSort": {
            "offset": "0xA67D0"
        },
        "bx::quickSortR": {
            "offset": "0xA6850"
        },
        "bx::radixSort": {
            "offset": "0x532A0"
        },
        "bx::radixSort<unsigned int>": {
            "offset": "0x4AF40"
        },
        "bx::radixSort<unsigned short>": {
            "offset": "0x4AD40"
        },
        "bx::round": {
            "offset": "0x5EA40"
        },
        "bx::snprintf": {
            "offset": "0xA2670"
        },
        "bx::strCat": {
            "offset": "0xA2820"
        },
        "bx::strCmp": {
            "offset": "0xA28C0"
        },
        "bx::strCmp<&bx::toLower>": {
            "offset": "0xA1FA0"
        },
        "bx::strCmpI": {
            "offset": "0xA2940"
        },
        "bx::strCopy": {
            "offset": "0xA2970"
        },
        "bx::strFind": {
            "offset": "0xA2B20"
        },
        "bx::strFindEol": {
            "offset": "0xA2BE0"
        },
        "bx::strFindNl": {
            "offset": "0xA2FD0"
        },
        "bx::strLTrimSpace": {
            "offset": "0xA33D0"
        },
        "bx::strLen": {
            "offset": "0xA34C0"
        },
        "bx::swap": {
            "offset": "0x575C0"
        },
        "bx::toString": {
            "offset": "0xA5FE0"
        },
        "bx::toUpper": {
            "offset": "0xA34F0"
        },
        "bx::uint64_cntlz": {
            "offset": "0xA6130"
        },
        "bx::unpackA8": {
            "offset": "0xA8820"
        },
        "bx::unpackBgra8": {
            "offset": "0xA7450"
        },
        "bx::unpackR16": {
            "offset": "0xA76E0"
        },
        "bx::unpackR16F": {
            "offset": "0xA77E0"
        },
        "bx::unpackR16I": {
            "offset": "0xA7790"
        },
        "bx::unpackR16S": {
            "offset": "0xA7750"
        },
        "bx::unpackR16U": {
            "offset": "0xA77B0"
        },
        "bx::unpackR24": {
            "offset": "0xA86C0"
        },
        "bx::unpackR24G8": {
            "offset": "0xA8780"
        },
        "bx::unpackR32F": {
            "offset": "0xA7E90"
        },
        "bx::unpackR32I": {
            "offset": "0xA7E90"
        },
        "bx::unpackR32U": {
            "offset": "0xA7E90"
        },
        "bx::unpackR5G6B5": {
            "offset": "0xA81A0"
        },
        "bx::unpackR8": {
            "offset": "0xA8880"
        },
        "bx::unpackR8I": {
            "offset": "0xA8930"
        },
        "bx::unpackR8S": {
            "offset": "0xA88F0"
        },
        "bx::unpackR8U": {
            "offset": "0xA8950"
        },
        "bx::unpackRG11B10F": {
            "offset": "0xA8600"
        },
        "bx::unpackRg16": {
            "offset": "0xA7890"
        },
        "bx::unpackRg16F": {
            "offset": "0xA7A50"
        },
        "bx::unpackRg16I": {
            "offset": "0xA79B0"
        },
        "bx::unpackRg16S": {
            "offset": "0xA7940"
        },
        "bx::unpackRg16U": {
            "offset": "0xA79E0"
        },
        "bx::unpackRg32F": {
            "offset": "0xA7EA0"
        },
        "bx::unpackRg32I": {
            "offset": "0xA7EA0"
        },
        "bx::unpackRg32U": {
            "offset": "0xA7EA0"
        },
        "bx::unpackRg8": {
            "offset": "0xA89F0"
        },
        "bx::unpackRg8I": {
            "offset": "0xA6F50"
        },
        "bx::unpackRg8S": {
            "offset": "0xA6EF0"
        },
        "bx::unpackRg8U": {
            "offset": "0xA6F80"
        },
        "bx::unpackRgb10A2": {
            "offset": "0xA8530"
        },
        "bx::unpackRgb5a1": {
            "offset": "0xA83D0"
        },
        "bx::unpackRgb8": {
            "offset": "0xA7050"
        },
        "bx::unpackRgb8I": {
            "offset": "0xA71D0"
        },
        "bx::unpackRgb8S": {
            "offset": "0xA7140"
        },
        "bx::unpackRgb8U": {
            "offset": "0xA7210"
        },
        "bx::unpackRgb9E5F": {
            "offset": "0xA8020"
        },
        "bx::unpackRgba16": {
            "offset": "0xA7B70"
        },
        "bx::unpackRgba16F": {
            "offset": "0xA7E30"
        },
        "bx::unpackRgba16I": {
            "offset": "0xA7D50"
        },
        "bx::unpackRgba16S": {
            "offset": "0xA7CA0"
        },
        "bx::unpackRgba16U": {
            "offset": "0xA7D90"
        },
        "bx::unpackRgba32F": {
            "offset": "0xA80D0"
        },
        "bx::unpackRgba32I": {
            "offset": "0xA80D0"
        },
        "bx::unpackRgba32U": {
            "offset": "0xA80D0"
        },
        "bx::unpackRgba4": {
            "offset": "0x61E20"
        },
        "bx::unpackRgba8": {
            "offset": "0xA7320"
        },
        "bx::unpackRgba8I": {
            "offset": "0xA7620"
        },
        "bx::unpackRgba8S": {
            "offset": "0xA7580"
        },
        "bx::unpackRgba8U": {
            "offset": "0xA7660"
        },
        "bx::vsnprintf": {
            "offset": "0xA3510"
        },
        "bx::write": {
            "offset": "0xA51D0"
        },
        "bx::writeRep": {
            "offset": "0xA5240"
        },
        "capture_current_context": {
            "offset": "0xCDC08"
        },
        "capture_previous_context": {
            "offset": "0xCDC78"
        },
        "cef::logging::LogMessage::LogMessage": {
            "offset": "0xC9F60"
        },
        "cef::logging::LogMessage::~LogMessage": {
            "offset": "0xC9FC0"
        },
        "citizen::Game::Game": {
            "offset": "0x1D040"
        },
        "citizen::Game::Run": {
            "offset": "0x21CB0"
        },
        "citizen::Game::~Game": {
            "offset": "0xE530"
        },
        "citizen::GameImpl::GameImpl": {
            "offset": "0x1D090"
        },
        "citizen::GameImpl::GetIPC": {
            "offset": "0x21850"
        },
        "citizen::GameImpl::Run": {
            "offset": "0x21CC0"
        },
        "citizen::GameImpl::RunMod": {
            "offset": "0x226D0"
        },
        "citizen::GameWindow::Create": {
            "offset": "0x32980"
        },
        "citizen::ModData::~ModData": {
            "offset": "0x1EAC0"
        },
        "citizen::Win32GameWindow::Close": {
            "offset": "0x31F80"
        },
        "citizen::Win32GameWindow::CreateTextures": {
            "offset": "0x32A00"
        },
        "citizen::Win32GameWindow::GetMetrics": {
            "offset": "0x32C30"
        },
        "citizen::Win32GameWindow::GetNativeHandle": {
            "offset": "0x32C50"
        },
        "citizen::Win32GameWindow::HandleSizeEvent": {
            "offset": "0x32DA0"
        },
        "citizen::Win32GameWindow::ProcessEvents": {
            "offset": "0x33100"
        },
        "citizen::Win32GameWindow::ProcessEventsOnce": {
            "offset": "0xA440"
        },
        "citizen::Win32GameWindow::Render": {
            "offset": "0x332A0"
        },
        "citizen::Win32GameWindow::Win32GameWindow": {
            "offset": "0x2F910"
        },
        "citizen::Win32GameWindow::WindowProcedure": {
            "offset": "0x33F80"
        },
        "citizen::Win32GameWindow::WindowProcedureWrapper": {
            "offset": "0x351F0"
        },
        "console::PrintWarning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x13540"
        },
        "console::Printf<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2E970"
        },
        "console::Printfv": {
            "offset": "0x21AF0"
        },
        "dllmain_crt_dispatch": {
            "offset": "0xCD6F0"
        },
        "dllmain_crt_process_attach": {
            "offset": "0xCD740"
        },
        "dllmain_crt_process_detach": {
            "offset": "0xCD858"
        },
        "dllmain_dispatch": {
            "offset": "0xCD8DC"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::grow": {
            "offset": "0xD7E0"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::~basic_memory_buffer<char,500,std::allocator<char> >": {
            "offset": "0xA500"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::grow": {
            "offset": "0x3EA90"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::~basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >": {
            "offset": "0x3DD80"
        },
        "fmt::v8::basic_memory_buffer<wchar_t,500,std::allocator<wchar_t> >::grow": {
            "offset": "0x3EBC0"
        },
        "fmt::v8::basic_memory_buffer<wchar_t,500,std::allocator<wchar_t> >::~basic_memory_buffer<wchar_t,500,std::allocator<wchar_t> >": {
            "offset": "0x3DDE0"
        },
        "fmt::v8::detail::add_compare": {
            "offset": "0x3E200"
        },
        "fmt::v8::detail::assert_fail": {
            "offset": "0x3E340"
        },
        "fmt::v8::detail::bigint::assign_pow10": {
            "offset": "0x3E390"
        },
        "fmt::v8::detail::bigint::divmod_assign": {
            "offset": "0x3E560"
        },
        "fmt::v8::detail::bigint::square": {
            "offset": "0x3EF80"
        },
        "fmt::v8::detail::bigint::~bigint": {
            "offset": "0x3DD80"
        },
        "fmt::v8::detail::buffer<char>::append<char>": {
            "offset": "0x2D10"
        },
        "fmt::v8::detail::buffer<char>::try_resize": {
            "offset": "0x3F240"
        },
        "fmt::v8::detail::check_int_type_spec<fmt::v8::detail::error_handler &>": {
            "offset": "0x15B00"
        },
        "fmt::v8::detail::compare": {
            "offset": "0x3E4C0"
        },
        "fmt::v8::detail::copy_str<wchar_t,char const *,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x407E0"
        },
        "fmt::v8::detail::count_digits": {
            "offset": "0xD5C0"
        },
        "fmt::v8::detail::decimal_point_impl<char>": {
            "offset": "0x3A5F0"
        },
        "fmt::v8::detail::decimal_point_impl<wchar_t>": {
            "offset": "0x3A700"
        },
        "fmt::v8::detail::do_throw<fmt::v8::format_error>": {
            "offset": "0x2DC0"
        },
        "fmt::v8::detail::dragonbox::cache_accessor<double>::get_cached_power": {
            "offset": "0x3E960"
        },
        "fmt::v8::detail::dragonbox::is_endpoint_integer<double>": {
            "offset": "0x3C570"
        },
        "fmt::v8::detail::dragonbox::remove_trailing_zeros": {
            "offset": "0x3ED60"
        },
        "fmt::v8::detail::dragonbox::shorter_interval_case<float>": {
            "offset": "0x3C5A0"
        },
        "fmt::v8::detail::dragonbox::to_decimal<double>": {
            "offset": "0x3D370"
        },
        "fmt::v8::detail::dragonbox::to_decimal<float>": {
            "offset": "0x3CF40"
        },
        "fmt::v8::detail::error_handler::on_error": {
            "offset": "0x3ECE0"
        },
        "fmt::v8::detail::fallback_format<double>": {
            "offset": "0x3A7B0"
        },
        "fmt::v8::detail::fallback_format<long double>": {
            "offset": "0x3A7B0"
        },
        "fmt::v8::detail::fill<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>": {
            "offset": "0x40870"
        },
        "fmt::v8::detail::fill_n<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64,wchar_t>": {
            "offset": "0x40930"
        },
        "fmt::v8::detail::fmt_snprintf": {
            "offset": "0x3E8F0"
        },
        "fmt::v8::detail::for_each_codepoint<`fmt::v8::detail::compute_width'::`2'::count_code_points>": {
            "offset": "0x2DF0"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64,fmt::v8::appender,0>": {
            "offset": "0x3BC60"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64>": {
            "offset": "0x30C0"
        },
        "fmt::v8::detail::format_decimal<char,unsigned int,fmt::v8::appender,0>": {
            "offset": "0x3BB40"
        },
        "fmt::v8::detail::format_decimal<wchar_t,unsigned __int64,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,0>": {
            "offset": "0x40BC0"
        },
        "fmt::v8::detail::format_decimal<wchar_t,unsigned __int64>": {
            "offset": "0x40AC0"
        },
        "fmt::v8::detail::format_decimal<wchar_t,unsigned int>": {
            "offset": "0x409B0"
        },
        "fmt::v8::detail::format_float<double>": {
            "offset": "0x3A100"
        },
        "fmt::v8::detail::format_float<long double>": {
            "offset": "0x3BDA0"
        },
        "fmt::v8::detail::format_uint<4,char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x31A0"
        },
        "fmt::v8::detail::format_uint<4,wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64>": {
            "offset": "0x40C80"
        },
        "fmt::v8::detail::grisu_gen_digits<fmt::v8::detail::fixed_handler>": {
            "offset": "0x3C100"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,char>": {
            "offset": "0x32C0"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,wchar_t>": {
            "offset": "0x32C0"
        },
        "fmt::v8::detail::parse_header<char,<lambda_10b59f138e704e35b5296527d0235f76> >": {
            "offset": "0x3420"
        },
        "fmt::v8::detail::parse_header<wchar_t,<lambda_9f149cc28ea8d29dc23928a98d99e4aa> >": {
            "offset": "0x40DF0"
        },
        "fmt::v8::detail::parse_nonnegative_int<char>": {
            "offset": "0x3680"
        },
        "fmt::v8::detail::parse_nonnegative_int<wchar_t>": {
            "offset": "0x41070"
        },
        "fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>::write_null_pointer": {
            "offset": "0xE350"
        },
        "fmt::v8::detail::printf_arg_formatter<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>::write_null_pointer": {
            "offset": "0x49C10"
        },
        "fmt::v8::detail::snprintf_float<double>": {
            "offset": "0x3C7B0"
        },
        "fmt::v8::detail::snprintf_float<long double>": {
            "offset": "0x3CA30"
        },
        "fmt::v8::detail::thousands_sep_impl<char>": {
            "offset": "0x3CCC0"
        },
        "fmt::v8::detail::thousands_sep_impl<wchar_t>": {
            "offset": "0x3CE30"
        },
        "fmt::v8::detail::thousands_sep_result<char>::~thousands_sep_result<char>": {
            "offset": "0xA560"
        },
        "fmt::v8::detail::thousands_sep_result<wchar_t>::~thousands_sep_result<wchar_t>": {
            "offset": "0xA560"
        },
        "fmt::v8::detail::to_unsigned<int>": {
            "offset": "0x3750"
        },
        "fmt::v8::detail::utf8_decode": {
            "offset": "0xE190"
        },
        "fmt::v8::detail::vprintf<char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4D50"
        },
        "fmt::v8::detail::vprintf<wchar_t,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x430E0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,double,0>": {
            "offset": "0x5D50"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,float,0>": {
            "offset": "0x5900"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,long double,0>": {
            "offset": "0x6190"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned __int64,0>": {
            "offset": "0x3DAC0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned int,0>": {
            "offset": "0x3D9A0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender>": {
            "offset": "0x5830"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x43D30"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,bool,0>": {
            "offset": "0x44AD0"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,double,0>": {
            "offset": "0x44250"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,float,0>": {
            "offset": "0x43E00"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,long double,0>": {
            "offset": "0x44690"
        },
        "fmt::v8::detail::write_bytes<1,wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x44B90"
        },
        "fmt::v8::detail::write_bytes<2,wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x44CD0"
        },
        "fmt::v8::detail::write_char<char,fmt::v8::appender>": {
            "offset": "0x65D0"
        },
        "fmt::v8::detail::write_char<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x44E10"
        },
        "fmt::v8::detail::write_exponent<char,fmt::v8::appender>": {
            "offset": "0x6610"
        },
        "fmt::v8::detail::write_exponent<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x44F00"
        },
        "fmt::v8::detail::write_float<fmt::v8::appender,fmt::v8::detail::big_decimal_fp,char>": {
            "offset": "0x67A0"
        },
        "fmt::v8::detail::write_float<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,fmt::v8::detail::big_decimal_fp,wchar_t>": {
            "offset": "0x450B0"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x7160"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned int>": {
            "offset": "0x6B70"
        },
        "fmt::v8::detail::write_int<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64>": {
            "offset": "0x45C80"
        },
        "fmt::v8::detail::write_int<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned int>": {
            "offset": "0x455C0"
        },
        "fmt::v8::detail::write_int_data<char>::write_int_data<char>": {
            "offset": "0xA0F0"
        },
        "fmt::v8::detail::write_int_data<wchar_t>::write_int_data<wchar_t>": {
            "offset": "0xA0F0"
        },
        "fmt::v8::detail::write_int_localized<fmt::v8::appender,unsigned __int64,char>": {
            "offset": "0x7890"
        },
        "fmt::v8::detail::write_int_localized<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64,wchar_t>": {
            "offset": "0x462C0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_051aec1ce4ed0271119623a7e83ac6a5> &>": {
            "offset": "0x7CB0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_22cb150d85fca5a3ac6a96f517638e39> &>": {
            "offset": "0x7E80"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_69652fb90da4a77ba8cf5fef5ea19cdd> >": {
            "offset": "0x8020"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_fbd162939e03e0c955beb05a33c24f5e> &>": {
            "offset": "0x8020"
        },
        "fmt::v8::detail::write_padded<1,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_2d1811023212e86d2b251f7d81404f23> &>": {
            "offset": "0x46750"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_02a1634acea1c2868026d163185cc0d5> &>": {
            "offset": "0x81B0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06b2adfe852a46c8d65fe26cc7c8ca5d> &>": {
            "offset": "0x83D0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06f64a48a5b4f184684d74740837f1c7> &>": {
            "offset": "0x8550"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_2d30ec7f416bbcee3bc8a87df0c22c03> >": {
            "offset": "0x9CE0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_33ba7a720adff5c90e1946d777cb5230> &>": {
            "offset": "0x86E0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_4ea56d52f8212d84933fa76e5a159b3f> &>": {
            "offset": "0x8900"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_514469ad4ff2f796c2a70ef6994dff64> &>": {
            "offset": "0x8BA0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_596cc5dacf733e82dcb56ca6ee54b81f> &>": {
            "offset": "0x8DC0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_686459aaae64d4cbdde6763d637485ac> &>": {
            "offset": "0x8F40"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_694eb9c30a49e7dae164c077f09b5a7f> &>": {
            "offset": "0x9160"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_8cce229a1891be08a4c6e75623ca3fd6> &>": {
            "offset": "0x9380"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_b9c069f91a736dafbdb5ba8344e9f4c8> &>": {
            "offset": "0x9500"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_cb4d4b26b782de201d2a0edc777aea57> &>": {
            "offset": "0x9720"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_de0fdbc03b7ebc9cd9291e836878da40> &>": {
            "offset": "0x98A0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_f811a0db88237a09377d34dce98c0f31> &>": {
            "offset": "0x9AC0"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_1cbc5ef94e0da3c5d5dd40b631e0f419> &>": {
            "offset": "0x468D0"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_1e1b2d68aea4f6de5c63992fd3822582> &>": {
            "offset": "0x46A70"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_33daaad348c2531f94f8e1b1abe8ee99> &>": {
            "offset": "0x46C10"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_52a8b5dd947b5cef974142c59166c05a> &>": {
            "offset": "0x46DA0"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_763961065246f6495121c1e2aec344a8> &>": {
            "offset": "0x46F40"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_b202e369ba43dfec7f2889d27268a32c> &>": {
            "offset": "0x470E0"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_d4b206abad762a6e1fb6da24cad44b9d> &>": {
            "offset": "0x47280"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_e2af9d0326dec73bc6415570a60a8ec4> &>": {
            "offset": "0x47430"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_faccbf2d03fcb51dc39f5a676348a8a1> &>": {
            "offset": "0x475D0"
        },
        "fmt::v8::detail::write_ptr<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x9E70"
        },
        "fmt::v8::detail::write_ptr<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64>": {
            "offset": "0x47770"
        },
        "fmt::v8::detail::write_significand<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>": {
            "offset": "0x47960"
        },
        "fmt::v8::format_error::format_error": {
            "offset": "0xA2F0"
        },
        "fmt::v8::format_error::~format_error": {
            "offset": "0xA690"
        },
        "fmt::v8::sprintf<char [43],std::basic_string_view<char,std::char_traits<char> >,char const *,char>": {
            "offset": "0x41390"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3BC0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x423A0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x39A0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x42170"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3870"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x42060"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3780"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x41F30"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3BC0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x423A0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3A90"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x42270"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3CF0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x424E0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4850"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x42E60"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4280"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<wchar_t>,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x42900"
        },
        "fmt::v8::vsprintf<fmt::v8::basic_string_view<char>,char>": {
            "offset": "0x1BE00"
        },
        "fmt::v8::vsprintf<std::basic_string_view<char,std::char_traits<char> >,char>": {
            "offset": "0x43AC0"
        },
        "fprintf": {
            "offset": "0xE410"
        },
        "fwEvent<>::ConnectInternal": {
            "offset": "0x10FF0"
        },
        "fwEvent<wchar_t const *,wchar_t const *>::ConnectInternal": {
            "offset": "0x10FF0"
        },
        "fwPlatformString::~fwPlatformString": {
            "offset": "0xA6B0"
        },
        "fwRefContainer<nui::GITexture>::~fwRefContainer<nui::GITexture>": {
            "offset": "0x10260"
        },
        "fwRefContainer<vfs::Device>::~fwRefContainer<vfs::Device>": {
            "offset": "0x10260"
        },
        "fwRefCountable::AddRef": {
            "offset": "0x49CD0"
        },
        "fwRefCountable::Release": {
            "offset": "0x49CE0"
        },
        "fwRefCountable::~fwRefCountable": {
            "offset": "0x49CC0"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(bool const &)> >::Call": {
            "offset": "0x31B70"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(bool const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x2E0A0"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::Call": {
            "offset": "0x31760"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x2DD90"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::Call": {
            "offset": "0x20A30"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x12C60"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(void)> >::Call": {
            "offset": "0x20E40"
        },
        "internal::ConsoleVariableEntry<bool>::ConsoleVariableEntry<bool>": {
            "offset": "0x2F690"
        },
        "internal::ConsoleVariableEntry<bool>::GetOfflineValue": {
            "offset": "0x32C80"
        },
        "internal::ConsoleVariableEntry<bool>::GetValue": {
            "offset": "0x32D20"
        },
        "internal::ConsoleVariableEntry<bool>::SaveOfflineValue": {
            "offset": "0x33980"
        },
        "internal::ConsoleVariableEntry<bool>::SetRawValue": {
            "offset": "0x33B60"
        },
        "internal::ConsoleVariableEntry<bool>::SetValue": {
            "offset": "0x33E40"
        },
        "internal::ConsoleVariableEntry<bool>::UpdateTrackingVariable": {
            "offset": "0x33F60"
        },
        "internal::ConsoleVariableEntry<int>::ConsoleVariableEntry<int>": {
            "offset": "0x2F410"
        },
        "internal::ConsoleVariableEntry<int>::GetOfflineValue": {
            "offset": "0x32C60"
        },
        "internal::ConsoleVariableEntry<int>::GetValue": {
            "offset": "0x32CE0"
        },
        "internal::ConsoleVariableEntry<int>::SaveOfflineValue": {
            "offset": "0x33970"
        },
        "internal::ConsoleVariableEntry<int>::SetRawValue": {
            "offset": "0x33990"
        },
        "internal::ConsoleVariableEntry<int>::SetValue": {
            "offset": "0x33D40"
        },
        "internal::ConsoleVariableEntry<int>::UpdateTrackingVariable": {
            "offset": "0x33F40"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1BF20"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::GetOfflineValue": {
            "offset": "0x21900"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::GetValue": {
            "offset": "0x219C0"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::SaveOfflineValue": {
            "offset": "0x22F30"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::SetRawValue": {
            "offset": "0x22F60"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::SetValue": {
            "offset": "0x232A0"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::UpdateTrackingVariable": {
            "offset": "0x23420"
        },
        "internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1E0A0"
        },
        "internal::Constraints<bool,void>::Compare": {
            "offset": "0x323C0"
        },
        "internal::Constraints<int,void>::Compare": {
            "offset": "0x31FB0"
        },
        "internal::MarkConsoleVarModified": {
            "offset": "0x32F10"
        },
        "internal::UnparseArgument<int>": {
            "offset": "0x2EA90"
        },
        "ipc::Endpoint::Call<>": {
            "offset": "0x2D120"
        },
        "ipc::Endpoint::Call<int,int>": {
            "offset": "0x2D330"
        },
        "ipc::Endpoint::Call<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x12790"
        },
        "ipc::Endpoint::Call<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,int,int>": {
            "offset": "0x2D790"
        },
        "ipc::Endpoint::Call<unsigned int>": {
            "offset": "0x2D570"
        },
        "ipc::internal::HandlerFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x12E10"
        },
        "ipc::internal::HandlerFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x13090"
        },
        "ipc::internal::HandlerFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int)> >::CallInternal<1,1,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &> >": {
            "offset": "0x129F0"
        },
        "ipc::internal::HandlerFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int)> >::CallInternal<2,2,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int &&> >": {
            "offset": "0x12AD0"
        },
        "ipc::internal::HandlerFunction<std::function<void __cdecl(void)> >::Call": {
            "offset": "0x21280"
        },
        "launch::GetLaunchModeKey": {
            "offset": "0x21860"
        },
        "launch::GetProductKey": {
            "offset": "0x21920"
        },
        "launch::IsSDKGuest": {
            "offset": "0x21A70"
        },
        "msgpack::v1::container_size_overflow::container_size_overflow": {
            "offset": "0x1DC50"
        },
        "msgpack::v1::container_size_overflow::~container_size_overflow": {
            "offset": "0xA690"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_array": {
            "offset": "0x28B80"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_imp_int32<int>": {
            "offset": "0x192D0"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_imp_uint32<unsigned int>": {
            "offset": "0x2EE20"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_str": {
            "offset": "0x28DA0"
        },
        "msgpack::v1::sbuffer::write": {
            "offset": "0x2C710"
        },
        "msgpack::v1::sbuffer::~sbuffer": {
            "offset": "0x1EC30"
        },
        "msgpack::v1::type_error::type_error": {
            "offset": "0x1E070"
        },
        "msgpack::v1::type_error::~type_error": {
            "offset": "0xA690"
        },
        "msgpack::v2::object::convert<int>": {
            "offset": "0x16290"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[22],char const *>": {
            "offset": "0x15CB0"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[23],std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x15D80"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[24],std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x15D80"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[25],char const *>": {
            "offset": "0x15CB0"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[26],std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>": {
            "offset": "0x15E40"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[29],char const *>": {
            "offset": "0x15CB0"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[29],std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[5],std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x15F50"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[39],std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x15D80"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[52],char const *>": {
            "offset": "0x15CB0"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[6],std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[12]>": {
            "offset": "0x15BC0"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[12],std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const (&)[3],std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x16060"
        },
        "nlohmann::json_abi_v3_11_2::detail::concat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x161C0"
        },
        "nlohmann::json_abi_v3_11_2::detail::dtoa_impl::format_buffer": {
            "offset": "0x279F0"
        },
        "nlohmann::json_abi_v3_11_2::detail::dtoa_impl::grisu2": {
            "offset": "0x27F30"
        },
        "nlohmann::json_abi_v3_11_2::detail::dtoa_impl::grisu2<double>": {
            "offset": "0x17770"
        },
        "nlohmann::json_abi_v3_11_2::detail::dtoa_impl::grisu2_digit_gen": {
            "offset": "0x28180"
        },
        "nlohmann::json_abi_v3_11_2::detail::exception::exception": {
            "offset": "0x1DCA0"
        },
        "nlohmann::json_abi_v3_11_2::detail::exception::name": {
            "offset": "0x28620"
        },
        "nlohmann::json_abi_v3_11_2::detail::exception::what": {
            "offset": "0x2C6F0"
        },
        "nlohmann::json_abi_v3_11_2::detail::invalid_iterator::invalid_iterator": {
            "offset": "0x1DD20"
        },
        "nlohmann::json_abi_v3_11_2::detail::invalid_iterator::~invalid_iterator": {
            "offset": "0x1EBF0"
        },
        "nlohmann::json_abi_v3_11_2::detail::other_error::create<std::nullptr_t,0>": {
            "offset": "0x16360"
        },
        "nlohmann::json_abi_v3_11_2::detail::other_error::other_error": {
            "offset": "0x1DEE0"
        },
        "nlohmann::json_abi_v3_11_2::detail::other_error::~other_error": {
            "offset": "0x1EBF0"
        },
        "nlohmann::json_abi_v3_11_2::detail::out_of_range::create<std::nullptr_t,0>": {
            "offset": "0x165A0"
        },
        "nlohmann::json_abi_v3_11_2::detail::out_of_range::out_of_range": {
            "offset": "0x1DF10"
        },
        "nlohmann::json_abi_v3_11_2::detail::out_of_range::~out_of_range": {
            "offset": "0x1EBF0"
        },
        "nlohmann::json_abi_v3_11_2::detail::output_adapter<char,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~output_adapter<char,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x10370"
        },
        "nlohmann::json_abi_v3_11_2::detail::output_string_adapter<char,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::write_character": {
            "offset": "0x2C810"
        },
        "nlohmann::json_abi_v3_11_2::detail::output_string_adapter<char,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::write_characters": {
            "offset": "0x2C850"
        },
        "nlohmann::json_abi_v3_11_2::detail::parse_error::create<std::nullptr_t,0>": {
            "offset": "0x167D0"
        },
        "nlohmann::json_abi_v3_11_2::detail::parse_error::parse_error": {
            "offset": "0x1DFC0"
        },
        "nlohmann::json_abi_v3_11_2::detail::parse_error::position_string": {
            "offset": "0x29700"
        },
        "nlohmann::json_abi_v3_11_2::detail::parse_error::~parse_error": {
            "offset": "0x1EBF0"
        },
        "nlohmann::json_abi_v3_11_2::detail::type_error::create<std::nullptr_t,0>": {
            "offset": "0x16A60"
        },
        "nlohmann::json_abi_v3_11_2::detail::type_error::type_error": {
            "offset": "0x1E000"
        },
        "nlohmann::json_abi_v3_11_2::detail::type_error::~type_error": {
            "offset": "0x1EBF0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::~GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>": {
            "offset": "0xA370"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0xA410"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Accept<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0> >": {
            "offset": "0x1C80"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::AddMember": {
            "offset": "0xB4E0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::~GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0xA440"
        },
        "rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>::Malloc": {
            "offset": "0xC630"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Prefix": {
            "offset": "0xC6F0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::String": {
            "offset": "0xC960"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::WriteString": {
            "offset": "0xCE00"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::~Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>": {
            "offset": "0xA450"
        },
        "rapidjson::internal::DigitGen": {
            "offset": "0xB790"
        },
        "rapidjson::internal::Grisu2": {
            "offset": "0xC240"
        },
        "rapidjson::internal::Prettify": {
            "offset": "0xC7A0"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level>": {
            "offset": "0x2710"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Reserve<char>": {
            "offset": "0x27E0"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::~Stack<rapidjson::CrtAllocator>": {
            "offset": "0xA410"
        },
        "rapidjson::internal::WriteExponent": {
            "offset": "0xCD70"
        },
        "rapidjson::internal::u32toa": {
            "offset": "0xD8D0"
        },
        "rapidjson::internal::u64toa": {
            "offset": "0xDB40"
        },
        "se::Object::~Object": {
            "offset": "0xA560"
        },
        "seCheckPrivilege": {
            "offset": "0x2BAC0"
        },
        "snprintf": {
            "offset": "0x2C860"
        },
        "sscanf": {
            "offset": "0x38C20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<HWND__ * const,citizen::Win32GameWindow *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<HWND__ * const,citizen::Win32GameWindow *>,void *> > >": {
            "offset": "0x30930"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> >,void *> > >": {
            "offset": "0xC7A10"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData>,void *> > >": {
            "offset": "0x1E2F0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0xA480"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<vfs::ManagerServer::MountPoint,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<vfs::ManagerServer::MountPoint,void *> > >": {
            "offset": "0x36C50"
        },
        "std::_Convert_wide_to_narrow<std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x35DD0"
        },
        "std::_Default_allocator_traits<std::allocator<astc_codec::IntermediateEndpointData> >::construct<astc_codec::IntermediateEndpointData,astc_codec::IntermediateEndpointData const &>": {
            "offset": "0xC5180"
        },
        "std::_Destroy_range<std::allocator<astc_codec::IntermediateEndpointData> >": {
            "offset": "0xC4E80"
        },
        "std::_Destroy_range<std::allocator<fwRefContainer<vfs::Device> > >": {
            "offset": "0x35FB0"
        },
        "std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x2EB60"
        },
        "std::_Facet_Register": {
            "offset": "0xCCB74"
        },
        "std::_Func_class<bgfx::TextureHandle,FrontendNuiTexture *>::~_Func_class<bgfx::TextureHandle,FrontendNuiTexture *>": {
            "offset": "0x10230"
        },
        "std::_Func_class<bool,ConsoleExecutionContext &>::~_Func_class<bool,ConsoleExecutionContext &>": {
            "offset": "0x10230"
        },
        "std::_Func_class<bool,wchar_t const *,wchar_t const *>::~_Func_class<bool,wchar_t const *,wchar_t const *>": {
            "offset": "0x10230"
        },
        "std::_Func_class<bool>::~_Func_class<bool>": {
            "offset": "0x10230"
        },
        "std::_Func_class<void,bool const &>::~_Func_class<void,bool const &>": {
            "offset": "0x10230"
        },
        "std::_Func_class<void,int const &>::~_Func_class<void,int const &>": {
            "offset": "0x10230"
        },
        "std::_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>::~_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>": {
            "offset": "0x10230"
        },
        "std::_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x10230"
        },
        "std::_Func_class<void>::_Reset_move": {
            "offset": "0x117F0"
        },
        "std::_Func_class<void>::~_Func_class<void>": {
            "offset": "0x10230"
        },
        "std::_Func_impl_no_alloc<<lambda_0857a9bc3a63a5f981792fe3ba8c6308>,void>::_Copy": {
            "offset": "0xEC40"
        },
        "std::_Func_impl_no_alloc<<lambda_0857a9bc3a63a5f981792fe3ba8c6308>,void>::_Delete_this": {
            "offset": "0xED00"
        },
        "std::_Func_impl_no_alloc<<lambda_0857a9bc3a63a5f981792fe3ba8c6308>,void>::_Do_call": {
            "offset": "0xECD0"
        },
        "std::_Func_impl_no_alloc<<lambda_0857a9bc3a63a5f981792fe3ba8c6308>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_0857a9bc3a63a5f981792fe3ba8c6308>,void>::_Move": {
            "offset": "0xEC90"
        },
        "std::_Func_impl_no_alloc<<lambda_0857a9bc3a63a5f981792fe3ba8c6308>,void>::_Target_type": {
            "offset": "0xECF0"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Copy": {
            "offset": "0x35310"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Do_call": {
            "offset": "0x35770"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Move": {
            "offset": "0x35310"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Target_type": {
            "offset": "0x359F0"
        },
        "std::_Func_impl_no_alloc<<lambda_2c71f2734007fd255e94b39244217c06>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x23890"
        },
        "std::_Func_impl_no_alloc<<lambda_2c71f2734007fd255e94b39244217c06>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x23C80"
        },
        "std::_Func_impl_no_alloc<<lambda_2c71f2734007fd255e94b39244217c06>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x23DE0"
        },
        "std::_Func_impl_no_alloc<<lambda_2c71f2734007fd255e94b39244217c06>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_2c71f2734007fd255e94b39244217c06>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_2c71f2734007fd255e94b39244217c06>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x24CC0"
        },
        "std::_Func_impl_no_alloc<<lambda_2d93986de81652020adc1c10c1cbba64>,void>::_Copy": {
            "offset": "0x23910"
        },
        "std::_Func_impl_no_alloc<<lambda_2d93986de81652020adc1c10c1cbba64>,void>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_2d93986de81652020adc1c10c1cbba64>,void>::_Do_call": {
            "offset": "0x23E30"
        },
        "std::_Func_impl_no_alloc<<lambda_2d93986de81652020adc1c10c1cbba64>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_2d93986de81652020adc1c10c1cbba64>,void>::_Move": {
            "offset": "0x23910"
        },
        "std::_Func_impl_no_alloc<<lambda_2d93986de81652020adc1c10c1cbba64>,void>::_Target_type": {
            "offset": "0x24CD0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Copy": {
            "offset": "0x35330"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Delete_this": {
            "offset": "0x23CE0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Do_call": {
            "offset": "0x35850"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Target_type": {
            "offset": "0x35A00"
        },
        "std::_Func_impl_no_alloc<<lambda_49bc29df5ef1c9fd30572dc1450a4842>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>::_Copy": {
            "offset": "0x23930"
        },
        "std::_Func_impl_no_alloc<<lambda_49bc29df5ef1c9fd30572dc1450a4842>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>::_Delete_this": {
            "offset": "0xF2F0"
        },
        "std::_Func_impl_no_alloc<<lambda_49bc29df5ef1c9fd30572dc1450a4842>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>::_Do_call": {
            "offset": "0x23F10"
        },
        "std::_Func_impl_no_alloc<<lambda_49bc29df5ef1c9fd30572dc1450a4842>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_49bc29df5ef1c9fd30572dc1450a4842>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>::_Move": {
            "offset": "0x23930"
        },
        "std::_Func_impl_no_alloc<<lambda_49bc29df5ef1c9fd30572dc1450a4842>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int>::_Target_type": {
            "offset": "0x24CE0"
        },
        "std::_Func_impl_no_alloc<<lambda_49cc56eaaf180f80d3da54392a236286>,bgfx::TextureHandle,FrontendNuiTexture *>::_Copy": {
            "offset": "0xF290"
        },
        "std::_Func_impl_no_alloc<<lambda_49cc56eaaf180f80d3da54392a236286>,bgfx::TextureHandle,FrontendNuiTexture *>::_Delete_this": {
            "offset": "0xF2F0"
        },
        "std::_Func_impl_no_alloc<<lambda_49cc56eaaf180f80d3da54392a236286>,bgfx::TextureHandle,FrontendNuiTexture *>::_Do_call": {
            "offset": "0xF2B0"
        },
        "std::_Func_impl_no_alloc<<lambda_49cc56eaaf180f80d3da54392a236286>,bgfx::TextureHandle,FrontendNuiTexture *>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_49cc56eaaf180f80d3da54392a236286>,bgfx::TextureHandle,FrontendNuiTexture *>::_Move": {
            "offset": "0xF290"
        },
        "std::_Func_impl_no_alloc<<lambda_49cc56eaaf180f80d3da54392a236286>,bgfx::TextureHandle,FrontendNuiTexture *>::_Target_type": {
            "offset": "0xF2E0"
        },
        "std::_Func_impl_no_alloc<<lambda_55cf421c54d17ec848e1c39d1a1f440e>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x23950"
        },
        "std::_Func_impl_no_alloc<<lambda_55cf421c54d17ec848e1c39d1a1f440e>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x23C80"
        },
        "std::_Func_impl_no_alloc<<lambda_55cf421c54d17ec848e1c39d1a1f440e>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x23F20"
        },
        "std::_Func_impl_no_alloc<<lambda_55cf421c54d17ec848e1c39d1a1f440e>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_55cf421c54d17ec848e1c39d1a1f440e>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_55cf421c54d17ec848e1c39d1a1f440e>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x24CF0"
        },
        "std::_Func_impl_no_alloc<<lambda_5b1c43db5646bdcc3820d1877854a8bd>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Copy": {
            "offset": "0x239D0"
        },
        "std::_Func_impl_no_alloc<<lambda_5b1c43db5646bdcc3820d1877854a8bd>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_5b1c43db5646bdcc3820d1877854a8bd>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Do_call": {
            "offset": "0x23F70"
        },
        "std::_Func_impl_no_alloc<<lambda_5b1c43db5646bdcc3820d1877854a8bd>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_5b1c43db5646bdcc3820d1877854a8bd>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Move": {
            "offset": "0x239D0"
        },
        "std::_Func_impl_no_alloc<<lambda_5b1c43db5646bdcc3820d1877854a8bd>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Target_type": {
            "offset": "0x24D00"
        },
        "std::_Func_impl_no_alloc<<lambda_702b2ef4b1a4ee5eb05cd4c555b67bb8>,void>::_Copy": {
            "offset": "0x239F0"
        },
        "std::_Func_impl_no_alloc<<lambda_702b2ef4b1a4ee5eb05cd4c555b67bb8>,void>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_702b2ef4b1a4ee5eb05cd4c555b67bb8>,void>::_Do_call": {
            "offset": "0x24070"
        },
        "std::_Func_impl_no_alloc<<lambda_702b2ef4b1a4ee5eb05cd4c555b67bb8>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_702b2ef4b1a4ee5eb05cd4c555b67bb8>,void>::_Move": {
            "offset": "0x239F0"
        },
        "std::_Func_impl_no_alloc<<lambda_702b2ef4b1a4ee5eb05cd4c555b67bb8>,void>::_Target_type": {
            "offset": "0x24D10"
        },
        "std::_Func_impl_no_alloc<<lambda_72462e41a1313ca7595f9f1b43bcf853>,void>::_Copy": {
            "offset": "0xED50"
        },
        "std::_Func_impl_no_alloc<<lambda_72462e41a1313ca7595f9f1b43bcf853>,void>::_Delete_this": {
            "offset": "0xED00"
        },
        "std::_Func_impl_no_alloc<<lambda_72462e41a1313ca7595f9f1b43bcf853>,void>::_Do_call": {
            "offset": "0xEDE0"
        },
        "std::_Func_impl_no_alloc<<lambda_72462e41a1313ca7595f9f1b43bcf853>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_72462e41a1313ca7595f9f1b43bcf853>,void>::_Move": {
            "offset": "0xEDA0"
        },
        "std::_Func_impl_no_alloc<<lambda_72462e41a1313ca7595f9f1b43bcf853>,void>::_Target_type": {
            "offset": "0xEF20"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x35390"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x23C80"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x35860"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x35A10"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x35410"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x23C80"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x358B0"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x35A20"
        },
        "std::_Func_impl_no_alloc<<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>,void>::_Copy": {
            "offset": "0xE9D0"
        },
        "std::_Func_impl_no_alloc<<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>,void>::_Delete_this": {
            "offset": "0xEBC0"
        },
        "std::_Func_impl_no_alloc<<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>,void>::_Do_call": {
            "offset": "0xEA70"
        },
        "std::_Func_impl_no_alloc<<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>,void>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_7d6aeca7e4d2a325a53db3c90716b4b4>,void>::_Target_type": {
            "offset": "0xEBA0"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x35490"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x23C80"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x23DE0"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x35A30"
        },
        "std::_Func_impl_no_alloc<<lambda_83215204cfd5d7f47e37515b1b1992f4>,bool,wchar_t const *,wchar_t const *>::_Copy": {
            "offset": "0x23A90"
        },
        "std::_Func_impl_no_alloc<<lambda_83215204cfd5d7f47e37515b1b1992f4>,bool,wchar_t const *,wchar_t const *>::_Delete_this": {
            "offset": "0xF2F0"
        },
        "std::_Func_impl_no_alloc<<lambda_83215204cfd5d7f47e37515b1b1992f4>,bool,wchar_t const *,wchar_t const *>::_Do_call": {
            "offset": "0x24130"
        },
        "std::_Func_impl_no_alloc<<lambda_83215204cfd5d7f47e37515b1b1992f4>,bool,wchar_t const *,wchar_t const *>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_83215204cfd5d7f47e37515b1b1992f4>,bool,wchar_t const *,wchar_t const *>::_Move": {
            "offset": "0x23A90"
        },
        "std::_Func_impl_no_alloc<<lambda_83215204cfd5d7f47e37515b1b1992f4>,bool,wchar_t const *,wchar_t const *>::_Target_type": {
            "offset": "0x24D30"
        },
        "std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>::_Copy": {
            "offset": "0x23AB0"
        },
        "std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>::_Delete_this": {
            "offset": "0x23CE0"
        },
        "std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>::_Do_call": {
            "offset": "0x24150"
        },
        "std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_86be70dd2992469b5252a9192288f807>,void>::_Target_type": {
            "offset": "0x24D40"
        },
        "std::_Func_impl_no_alloc<<lambda_8d215c8ebd35918aa8dcf54639f44090>,bgfx::TextureHandle,FrontendNuiTexture *>::_Copy": {
            "offset": "0xEF30"
        },
        "std::_Func_impl_no_alloc<<lambda_8d215c8ebd35918aa8dcf54639f44090>,bgfx::TextureHandle,FrontendNuiTexture *>::_Delete_this": {
            "offset": "0xF080"
        },
        "std::_Func_impl_no_alloc<<lambda_8d215c8ebd35918aa8dcf54639f44090>,bgfx::TextureHandle,FrontendNuiTexture *>::_Do_call": {
            "offset": "0xEFC0"
        },
        "std::_Func_impl_no_alloc<<lambda_8d215c8ebd35918aa8dcf54639f44090>,bgfx::TextureHandle,FrontendNuiTexture *>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_8d215c8ebd35918aa8dcf54639f44090>,bgfx::TextureHandle,FrontendNuiTexture *>::_Move": {
            "offset": "0xEF80"
        },
        "std::_Func_impl_no_alloc<<lambda_8d215c8ebd35918aa8dcf54639f44090>,bgfx::TextureHandle,FrontendNuiTexture *>::_Target_type": {
            "offset": "0xF070"
        },
        "std::_Func_impl_no_alloc<<lambda_9a29539d468c643684081aa4f04246d8>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Copy": {
            "offset": "0x23B10"
        },
        "std::_Func_impl_no_alloc<<lambda_9a29539d468c643684081aa4f04246d8>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_9a29539d468c643684081aa4f04246d8>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Do_call": {
            "offset": "0x24160"
        },
        "std::_Func_impl_no_alloc<<lambda_9a29539d468c643684081aa4f04246d8>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_9a29539d468c643684081aa4f04246d8>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Move": {
            "offset": "0x23B10"
        },
        "std::_Func_impl_no_alloc<<lambda_9a29539d468c643684081aa4f04246d8>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Target_type": {
            "offset": "0x24D50"
        },
        "std::_Func_impl_no_alloc<<lambda_a3b32c6402ea8a29c0fb91fccefb152a>,bool>::_Copy": {
            "offset": "0x117B0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3b32c6402ea8a29c0fb91fccefb152a>,bool>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_a3b32c6402ea8a29c0fb91fccefb152a>,bool>::_Do_call": {
            "offset": "0x117D0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3b32c6402ea8a29c0fb91fccefb152a>,bool>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3b32c6402ea8a29c0fb91fccefb152a>,bool>::_Move": {
            "offset": "0x117B0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3b32c6402ea8a29c0fb91fccefb152a>,bool>::_Target_type": {
            "offset": "0x11860"
        },
        "std::_Func_impl_no_alloc<<lambda_b20d3320c0dae91ba1b6614ebafbb56d>,void>::_Copy": {
            "offset": "0x23B30"
        },
        "std::_Func_impl_no_alloc<<lambda_b20d3320c0dae91ba1b6614ebafbb56d>,void>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_b20d3320c0dae91ba1b6614ebafbb56d>,void>::_Do_call": {
            "offset": "0x24170"
        },
        "std::_Func_impl_no_alloc<<lambda_b20d3320c0dae91ba1b6614ebafbb56d>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_b20d3320c0dae91ba1b6614ebafbb56d>,void>::_Move": {
            "offset": "0x23B30"
        },
        "std::_Func_impl_no_alloc<<lambda_b20d3320c0dae91ba1b6614ebafbb56d>,void>::_Target_type": {
            "offset": "0x24D60"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Copy": {
            "offset": "0x35510"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Delete_this": {
            "offset": "0x23CE0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Do_call": {
            "offset": "0x35900"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Target_type": {
            "offset": "0x35A40"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Copy": {
            "offset": "0x35570"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Do_call": {
            "offset": "0x35910"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Move": {
            "offset": "0x35570"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Target_type": {
            "offset": "0x35A50"
        },
        "std::_Func_impl_no_alloc<<lambda_e1107e445f9a57932d9bbad6e483ffcb>,bgfx::TextureHandle,FrontendNuiTexture *>::_Copy": {
            "offset": "0xF120"
        },
        "std::_Func_impl_no_alloc<<lambda_e1107e445f9a57932d9bbad6e483ffcb>,bgfx::TextureHandle,FrontendNuiTexture *>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_e1107e445f9a57932d9bbad6e483ffcb>,bgfx::TextureHandle,FrontendNuiTexture *>::_Do_call": {
            "offset": "0xF140"
        },
        "std::_Func_impl_no_alloc<<lambda_e1107e445f9a57932d9bbad6e483ffcb>,bgfx::TextureHandle,FrontendNuiTexture *>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1107e445f9a57932d9bbad6e483ffcb>,bgfx::TextureHandle,FrontendNuiTexture *>::_Move": {
            "offset": "0xF120"
        },
        "std::_Func_impl_no_alloc<<lambda_e1107e445f9a57932d9bbad6e483ffcb>,bgfx::TextureHandle,FrontendNuiTexture *>::_Target_type": {
            "offset": "0xF180"
        },
        "std::_Func_impl_no_alloc<<lambda_e53e06857a4b8a0a6fa4a7061e30490e>,void>::_Copy": {
            "offset": "0xF1A0"
        },
        "std::_Func_impl_no_alloc<<lambda_e53e06857a4b8a0a6fa4a7061e30490e>,void>::_Delete_this": {
            "offset": "0xED00"
        },
        "std::_Func_impl_no_alloc<<lambda_e53e06857a4b8a0a6fa4a7061e30490e>,void>::_Do_call": {
            "offset": "0xF230"
        },
        "std::_Func_impl_no_alloc<<lambda_e53e06857a4b8a0a6fa4a7061e30490e>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_e53e06857a4b8a0a6fa4a7061e30490e>,void>::_Move": {
            "offset": "0xF1F0"
        },
        "std::_Func_impl_no_alloc<<lambda_e53e06857a4b8a0a6fa4a7061e30490e>,void>::_Target_type": {
            "offset": "0xF240"
        },
        "std::_Func_impl_no_alloc<<lambda_e62b8390c3777b7f55ef12d1274ada8f>,void>::_Copy": {
            "offset": "0x23B50"
        },
        "std::_Func_impl_no_alloc<<lambda_e62b8390c3777b7f55ef12d1274ada8f>,void>::_Delete_this": {
            "offset": "0xF2F0"
        },
        "std::_Func_impl_no_alloc<<lambda_e62b8390c3777b7f55ef12d1274ada8f>,void>::_Do_call": {
            "offset": "0x24180"
        },
        "std::_Func_impl_no_alloc<<lambda_e62b8390c3777b7f55ef12d1274ada8f>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_e62b8390c3777b7f55ef12d1274ada8f>,void>::_Move": {
            "offset": "0x23B50"
        },
        "std::_Func_impl_no_alloc<<lambda_e62b8390c3777b7f55ef12d1274ada8f>,void>::_Target_type": {
            "offset": "0x24D70"
        },
        "std::_Func_impl_no_alloc<<lambda_ef9858e838e5c8a8a323f827e229c82b>,void>::_Copy": {
            "offset": "0x23B70"
        },
        "std::_Func_impl_no_alloc<<lambda_ef9858e838e5c8a8a323f827e229c82b>,void>::_Delete_this": {
            "offset": "0xF190"
        },
        "std::_Func_impl_no_alloc<<lambda_ef9858e838e5c8a8a323f827e229c82b>,void>::_Do_call": {
            "offset": "0x242D0"
        },
        "std::_Func_impl_no_alloc<<lambda_ef9858e838e5c8a8a323f827e229c82b>,void>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_ef9858e838e5c8a8a323f827e229c82b>,void>::_Move": {
            "offset": "0x23B70"
        },
        "std::_Func_impl_no_alloc<<lambda_ef9858e838e5c8a8a323f827e229c82b>,void>::_Target_type": {
            "offset": "0x24D80"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x35590"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x23C80"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x23DE0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xEBB0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xEA60"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x35A60"
        },
        "std::_Generic_error_category::message": {
            "offset": "0x35C70"
        },
        "std::_Generic_error_category::name": {
            "offset": "0x35CC0"
        },
        "std::_Guess_median_unchecked<int *,std::less<void> >": {
            "offset": "0xC3D60"
        },
        "std::_Init_once_completer::~_Init_once_completer": {
            "offset": "0xCACD0"
        },
        "std::_Insert_string<char,std::char_traits<char>,unsigned __int64>": {
            "offset": "0x14DE0"
        },
        "std::_Make_ec": {
            "offset": "0x380D0"
        },
        "std::_Maklocstr<char>": {
            "offset": "0xE460"
        },
        "std::_Maklocstr<wchar_t>": {
            "offset": "0x3A4E0"
        },
        "std::_Move_unchecked<int *,int *>": {
            "offset": "0xC40E0"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::BitQuantizationMap<6> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::BitQuantizationMap<6> >::_Destroy": {
            "offset": "0xC9B90"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::BitQuantizationMap<8> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::BitQuantizationMap<8> >::_Destroy": {
            "offset": "0xC9B90"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintValue> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintValue> >::_Destroy": {
            "offset": "0xC9B90"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintWeight> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintWeight> >::_Destroy": {
            "offset": "0xC9B90"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritValue> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritValue> >::_Destroy": {
            "offset": "0xC9B90"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritWeight> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritWeight> >::_Destroy": {
            "offset": "0xC9B90"
        },
        "std::_Ref_count_base::_Get_deleter": {
            "offset": "0xEA60"
        },
        "std::_Ref_count_obj2<FrontendNuiTexture *>::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count_obj2<FrontendNuiTexture *>::_Destroy": {
            "offset": "0xA440"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<bool> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<bool> >::_Destroy": {
            "offset": "0x356C0"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Destroy": {
            "offset": "0x35610"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy": {
            "offset": "0x23D60"
        },
        "std::_Ref_count_obj2<nlohmann::json_abi_v3_11_2::detail::output_string_adapter<char,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Delete_this": {
            "offset": "0xFBB0"
        },
        "std::_Ref_count_obj2<nlohmann::json_abi_v3_11_2::detail::output_string_adapter<char,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy": {
            "offset": "0x23D70"
        },
        "std::_Sort_unchecked<int *,std::less<void> >": {
            "offset": "0xC41E0"
        },
        "std::_String_val<std::_Simple_types<char> >::_Xran": {
            "offset": "0x38550"
        },
        "std::_System_error::_System_error": {
            "offset": "0x30700"
        },
        "std::_System_error_category::default_error_condition": {
            "offset": "0x386D0"
        },
        "std::_System_error_category::message": {
            "offset": "0x38750"
        },
        "std::_System_error_category::name": {
            "offset": "0x38800"
        },
        "std::_System_error_message::~_System_error_message": {
            "offset": "0x36D90"
        },
        "std::_Temporary_owner<astc_codec::`anonymous namespace'::BitQuantizationMap<6> >::~_Temporary_owner<astc_codec::`anonymous namespace'::BitQuantizationMap<6> >": {
            "offset": "0xC7A30"
        },
        "std::_Temporary_owner<astc_codec::`anonymous namespace'::BitQuantizationMap<8> >::~_Temporary_owner<astc_codec::`anonymous namespace'::BitQuantizationMap<8> >": {
            "offset": "0xC7A30"
        },
        "std::_Temporary_owner<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintValue> >::~_Temporary_owner<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintValue> >": {
            "offset": "0xC7A30"
        },
        "std::_Temporary_owner<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintWeight> >::~_Temporary_owner<astc_codec::`anonymous namespace'::QuintQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedQuintWeight> >": {
            "offset": "0xC7A30"
        },
        "std::_Temporary_owner<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritValue> >::~_Temporary_owner<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritValue> >": {
            "offset": "0xC7A30"
        },
        "std::_Temporary_owner<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritWeight> >::~_Temporary_owner<astc_codec::`anonymous namespace'::TritQuantizationMap<&astc_codec::`anonymous namespace'::GetUnquantizedTritWeight> >": {
            "offset": "0xC7A30"
        },
        "std::_Throw_bad_array_new_length": {
            "offset": "0xD1A0"
        },
        "std::_Throw_bad_cast": {
            "offset": "0x3E1E0"
        },
        "std::_Throw_system_error": {
            "offset": "0x35A70"
        },
        "std::_Throw_system_error_from_std_win_error": {
            "offset": "0x38460"
        },
        "std::_Throw_tree_length_error": {
            "offset": "0xD1C0"
        },
        "std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >": {
            "offset": "0x3DD40"
        },
        "std::_Tidy_guard<std::numpunct<wchar_t> >::~_Tidy_guard<std::numpunct<wchar_t> >": {
            "offset": "0x3DD40"
        },
        "std::_Tree<std::_Tmap_traits<int,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap>,std::less<int>,std::allocator<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> > >,0> >::_Find_hint<int>": {
            "offset": "0xC6BC0"
        },
        "std::_Tree<std::_Tmap_traits<int,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap>,std::less<int>,std::allocator<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> > >,0> >::~_Tree<std::_Tmap_traits<int,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap>,std::less<int>,std::allocator<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> > >,0> >": {
            "offset": "0xC7A60"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,citizen::ModData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData> >,0> >::_Find_hint<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14A70"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,citizen::ModData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14D10"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_hint<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x29B0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_lower_bound<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x2C30"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >": {
            "offset": "0xA4A0"
        },
        "std::_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >::~_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >": {
            "offset": "0xCB320"
        },
        "std::_Tree<std::_Tset_traits<vfs::ManagerServer::MountPoint,vfs::ManagerServer::MountPointComparator,std::allocator<vfs::ManagerServer::MountPoint>,0> >::_Emplace<vfs::ManagerServer::MountPoint const &>": {
            "offset": "0x36010"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData>,void *> > >": {
            "offset": "0x1E2F0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<vfs::ManagerServer::MountPoint,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<vfs::ManagerServer::MountPoint,void *> > >": {
            "offset": "0x36C50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<HWND__ * const,citizen::Win32GameWindow *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<HWND__ * const,citizen::Win32GameWindow *>,void *> > >": {
            "offset": "0x2ED40"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<HWND__ * const,citizen::Win32GameWindow *> > >::_Insert_node": {
            "offset": "0xCF40"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> >,void *> > >": {
            "offset": "0xC6B10"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> > > >::_Insert_node": {
            "offset": "0xCF40"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData>,void *> > >": {
            "offset": "0x14970"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData> > >::_Insert_node": {
            "offset": "0xCF40"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x2950"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Insert_node": {
            "offset": "0xCF40"
        },
        "std::_Tree_val<std::_Tree_simple_types<tbb::detail::d1::global_control *> >::_Erase_tree<tbb::detail::d1::tbb_allocator<std::_Tree_node<tbb::detail::d1::global_control *,void *> > >": {
            "offset": "0xCB2B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<vfs::ManagerServer::MountPoint> >::_Erase_tree<std::allocator<std::_Tree_node<vfs::ManagerServer::MountPoint,void *> > >": {
            "offset": "0x363E0"
        },
        "std::_Tree_val<std::_Tree_simple_types<vfs::ManagerServer::MountPoint> >::_Extract": {
            "offset": "0x24550"
        },
        "std::_Tree_val<std::_Tree_simple_types<vfs::ManagerServer::MountPoint> >::_Insert_node": {
            "offset": "0xCF40"
        },
        "std::_Tree_val<std::_Tree_simple_types<vfs::ManagerServer::MountPoint> >::_Lrotate": {
            "offset": "0x24B50"
        },
        "std::_Tree_val<std::_Tree_simple_types<vfs::ManagerServer::MountPoint> >::_Rrotate": {
            "offset": "0x24C40"
        },
        "std::_Uninitialized_backout_al<std::allocator<fwRefContainer<vfs::Device> > >::~_Uninitialized_backout_al<std::allocator<fwRefContainer<vfs::Device> > >": {
            "offset": "0x36C80"
        },
        "std::_Uninitialized_copy<fwRefContainer<vfs::Device> *,fwRefContainer<vfs::Device> *,std::allocator<fwRefContainer<vfs::Device> > >": {
            "offset": "0x36760"
        },
        "std::_Uninitialized_move<astc_codec::IntermediateEndpointData *,std::allocator<astc_codec::IntermediateEndpointData> >": {
            "offset": "0xC5100"
        },
        "std::_Uninitialized_move<fwRefContainer<vfs::Device> *,std::allocator<fwRefContainer<vfs::Device> > >": {
            "offset": "0x36760"
        },
        "std::_Uninitialized_move<int *,std::allocator<int> >": {
            "offset": "0xC45D0"
        },
        "std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x2EDA0"
        },
        "std::_Xlen_string": {
            "offset": "0xD1E0"
        },
        "std::allocator<astc_codec::IntermediateEndpointData>::deallocate": {
            "offset": "0x35B90"
        },
        "std::allocator<char>::allocate": {
            "offset": "0xD200"
        },
        "std::allocator<char>::deallocate": {
            "offset": "0x25140"
        },
        "std::allocator<fwRefContainer<vfs::Device> >::allocate": {
            "offset": "0x24F20"
        },
        "std::allocator<fwRefContainer<vfs::Device> >::deallocate": {
            "offset": "0x251D0"
        },
        "std::allocator<int>::allocate": {
            "offset": "0x24EB0"
        },
        "std::allocator<int>::deallocate": {
            "offset": "0x25180"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate": {
            "offset": "0x35B20"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate": {
            "offset": "0x35B90"
        },
        "std::allocator<std::pair<std::array<int,4>,std::array<int,4> > >::allocate": {
            "offset": "0x35B20"
        },
        "std::allocator<std::pair<std::array<int,4>,std::array<int,4> > >::deallocate": {
            "offset": "0x35B90"
        },
        "std::allocator<unsigned char>::deallocate": {
            "offset": "0x25140"
        },
        "std::allocator<unsigned int>::allocate": {
            "offset": "0x24EB0"
        },
        "std::allocator<unsigned int>::deallocate": {
            "offset": "0x25180"
        },
        "std::allocator<wchar_t>::allocate": {
            "offset": "0xD260"
        },
        "std::allocator<wchar_t>::deallocate": {
            "offset": "0x49310"
        },
        "std::array<int,4>::_Xran": {
            "offset": "0xC6AF0"
        },
        "std::bad_alloc::bad_alloc": {
            "offset": "0x1DBA0"
        },
        "std::bad_alloc::~bad_alloc": {
            "offset": "0xA690"
        },
        "std::bad_array_new_length::bad_array_new_length": {
            "offset": "0xA280"
        },
        "std::bad_array_new_length::~bad_array_new_length": {
            "offset": "0xA690"
        },
        "std::bad_cast::bad_cast": {
            "offset": "0x3DD10"
        },
        "std::bad_cast::~bad_cast": {
            "offset": "0xA690"
        },
        "std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x1EBB0"
        },
        "std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x1EC40"
        },
        "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0xC9EB0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>": {
            "offset": "0x2890"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>": {
            "offset": "0x150D0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>": {
            "offset": "0x15240"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >": {
            "offset": "0x153D0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>": {
            "offset": "0x15520"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>": {
            "offset": "0x365B0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append": {
            "offset": "0x25000"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign": {
            "offset": "0xD450"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::back": {
            "offset": "0x25090"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x1CDD0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>": {
            "offset": "0x11D00"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve": {
            "offset": "0x29C20"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize": {
            "offset": "0x29D40"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0xA560"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>": {
            "offset": "0xFC60"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_a3050a43f3157934f354774ab3dd2e02>,unsigned __int64,wchar_t>": {
            "offset": "0x36460"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate": {
            "offset": "0xA5C0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append": {
            "offset": "0xD2D0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0xFD30"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::push_back": {
            "offset": "0x49550"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve": {
            "offset": "0x496B0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize": {
            "offset": "0x38810"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0xA5C0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow": {
            "offset": "0x49350"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail": {
            "offset": "0x494C0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff": {
            "offset": "0x49840"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos": {
            "offset": "0x499C0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str": {
            "offset": "0xC22D0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow": {
            "offset": "0x49AD0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x47BE0"
        },
        "std::endl<char,std::char_traits<char> >": {
            "offset": "0x17310"
        },
        "std::error_category::default_error_condition": {
            "offset": "0x35BE0"
        },
        "std::error_category::equivalent": {
            "offset": "0x35C10"
        },
        "std::exception::exception": {
            "offset": "0xA2B0"
        },
        "std::exception::what": {
            "offset": "0xE330"
        },
        "std::filesystem::_Convert_wide_to_narrow_replace_chars<std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x35EC0"
        },
        "std::filesystem::_Throw_fs_error": {
            "offset": "0x383E0"
        },
        "std::filesystem::absolute": {
            "offset": "0x38570"
        },
        "std::filesystem::filesystem_error::_Pretty_message": {
            "offset": "0x380F0"
        },
        "std::filesystem::filesystem_error::filesystem_error": {
            "offset": "0x36B10"
        },
        "std::filesystem::filesystem_error::what": {
            "offset": "0x388A0"
        },
        "std::filesystem::filesystem_error::~filesystem_error": {
            "offset": "0x36DA0"
        },
        "std::filesystem::path::generic_string<char,std::char_traits<char>,std::allocator<char>,0>": {
            "offset": "0x367E0"
        },
        "std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>": {
            "offset": "0x35CD0"
        },
        "std::filesystem::path::~path": {
            "offset": "0xA6B0"
        },
        "std::forward<char const (&)[12]>": {
            "offset": "0x17690"
        },
        "std::forward<char const (&)[15]>": {
            "offset": "0x17690"
        },
        "std::function<bgfx::TextureHandle __cdecl(FrontendNuiTexture *)>::~function<bgfx::TextureHandle __cdecl(FrontendNuiTexture *)>": {
            "offset": "0x10230"
        },
        "std::function<bool __cdecl(ConsoleExecutionContext &)>::~function<bool __cdecl(ConsoleExecutionContext &)>": {
            "offset": "0x10230"
        },
        "std::function<bool __cdecl(void)>::~function<bool __cdecl(void)>": {
            "offset": "0x10230"
        },
        "std::function<bool __cdecl(wchar_t const *,wchar_t const *)>::~function<bool __cdecl(wchar_t const *,wchar_t const *)>": {
            "offset": "0x10230"
        },
        "std::function<void __cdecl(bool const &)>::~function<void __cdecl(bool const &)>": {
            "offset": "0x10230"
        },
        "std::function<void __cdecl(int const &)>::~function<void __cdecl(int const &)>": {
            "offset": "0x10230"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x1CE10"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x10230"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int)>::~function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,int,int)>": {
            "offset": "0x10230"
        },
        "std::function<void __cdecl(void)>::function<void __cdecl(void)>": {
            "offset": "0x1CE10"
        },
        "std::function<void __cdecl(void)>::swap": {
            "offset": "0x2C3A0"
        },
        "std::function<void __cdecl(void)>::~function<void __cdecl(void)>": {
            "offset": "0x10230"
        },
        "std::get<0,<lambda_e0160eff7135e8eced6228db90b70fc3> >": {
            "offset": "0x17690"
        },
        "std::invalid_argument::invalid_argument": {
            "offset": "0xCA540"
        },
        "std::invalid_argument::~invalid_argument": {
            "offset": "0xA690"
        },
        "std::invoke<<lambda_e0160eff7135e8eced6228db90b70fc3> >": {
            "offset": "0x19230"
        },
        "std::length_error::length_error": {
            "offset": "0xCA5D0"
        },
        "std::length_error::~length_error": {
            "offset": "0xA690"
        },
        "std::locale::~locale": {
            "offset": "0x3DE40"
        },
        "std::lock_guard<std::recursive_mutex>::~lock_guard<std::recursive_mutex>": {
            "offset": "0x36CE0"
        },
        "std::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>": {
            "offset": "0xCB8E0"
        },
        "std::logic_error::logic_error": {
            "offset": "0xCA620"
        },
        "std::make_error_code": {
            "offset": "0x35C50"
        },
        "std::map<int,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap>,std::less<int>,std::allocator<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> > > >::map<int,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap>,std::less<int>,std::allocator<std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> > > >": {
            "offset": "0xC78C0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,citizen::ModData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,citizen::ModData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData> > >": {
            "offset": "0x1E660"
        },
        "std::move<<lambda_e0160eff7135e8eced6228db90b70fc3> &>": {
            "offset": "0x17690"
        },
        "std::mutex::~mutex": {
            "offset": "0x30A20"
        },
        "std::numpunct<char>::do_decimal_point": {
            "offset": "0x3E770"
        },
        "std::numpunct<char>::do_falsename": {
            "offset": "0x3E790"
        },
        "std::numpunct<char>::do_grouping": {
            "offset": "0x3E810"
        },
        "std::numpunct<char>::do_thousands_sep": {
            "offset": "0x3E850"
        },
        "std::numpunct<char>::do_truename": {
            "offset": "0x3E870"
        },
        "std::numpunct<char>::numpunct<char>": {
            "offset": "0x3DB60"
        },
        "std::numpunct<wchar_t>::_Getcat": {
            "offset": "0x3DFF0"
        },
        "std::numpunct<wchar_t>::do_decimal_point": {
            "offset": "0x3E780"
        },
        "std::numpunct<wchar_t>::do_falsename": {
            "offset": "0x3E7D0"
        },
        "std::numpunct<wchar_t>::do_grouping": {
            "offset": "0x3E810"
        },
        "std::numpunct<wchar_t>::do_thousands_sep": {
            "offset": "0x3E860"
        },
        "std::numpunct<wchar_t>::do_truename": {
            "offset": "0x3E8B0"
        },
        "std::out_of_range::out_of_range": {
            "offset": "0xCA700"
        },
        "std::out_of_range::~out_of_range": {
            "offset": "0xA690"
        },
        "std::pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> >::~pair<int const ,std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap> >": {
            "offset": "0xC7A90"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,citizen::ModData>": {
            "offset": "0x1E690"
        },
        "std::recursive_mutex::~recursive_mutex": {
            "offset": "0x30A20"
        },
        "std::runtime_error::runtime_error": {
            "offset": "0xCA750"
        },
        "std::runtime_error::~runtime_error": {
            "offset": "0xA690"
        },
        "std::set<vfs::ManagerServer::MountPoint,vfs::ManagerServer::MountPointComparator,std::allocator<vfs::ManagerServer::MountPoint> >::~set<vfs::ManagerServer::MountPoint,vfs::ManagerServer::MountPointComparator,std::allocator<vfs::ManagerServer::MountPoint> >": {
            "offset": "0x36CF0"
        },
        "std::shared_ptr<FrontendNuiTexture *>::~shared_ptr<FrontendNuiTexture *>": {
            "offset": "0x10370"
        },
        "std::shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap>::~shared_ptr<astc_codec::`anonymous namespace'::QuantizationMap>": {
            "offset": "0xC7AE0"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<bool> >::~shared_ptr<internal::ConsoleVariableEntry<bool> >": {
            "offset": "0x10370"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<int> >::~shared_ptr<internal::ConsoleVariableEntry<int> >": {
            "offset": "0x10370"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~shared_ptr<internal::ConsoleVariableEntry<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x10370"
        },
        "std::shared_ptr<internal::ConsoleVariableEntryBase>::~shared_ptr<internal::ConsoleVariableEntryBase>": {
            "offset": "0x10370"
        },
        "std::shared_ptr<nlohmann::json_abi_v3_11_2::detail::output_adapter_protocol<char> >::~shared_ptr<nlohmann::json_abi_v3_11_2::detail::output_adapter_protocol<char> >": {
            "offset": "0x10370"
        },
        "std::system_error::system_error": {
            "offset": "0x307B0"
        },
        "std::system_error::~system_error": {
            "offset": "0xA690"
        },
        "std::thread::_Invoke<std::tuple<<lambda_503baef742c31b1926f3416bd59129bc> >,0>": {
            "offset": "0x15050"
        },
        "std::thread::_Invoke<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> >,0>": {
            "offset": "0x15090"
        },
        "std::thread::~thread": {
            "offset": "0x1EC90"
        },
        "std::to_string": {
            "offset": "0x2C4E0"
        },
        "std::unique_lock<std::mutex>::~unique_lock<std::mutex>": {
            "offset": "0x103C0"
        },
        "std::unique_lock<std::shared_mutex>::~unique_lock<std::shared_mutex>": {
            "offset": "0xCB9C0"
        },
        "std::unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >::~unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >": {
            "offset": "0x1E930"
        },
        "std::unique_ptr<citizen::GameWindow,std::default_delete<citizen::GameWindow> >::~unique_ptr<citizen::GameWindow,std::default_delete<citizen::GameWindow> >": {
            "offset": "0xE530"
        },
        "std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >": {
            "offset": "0xE530"
        },
        "std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_467247bbe980e6f07ddf4bbced9fbdec> >::~unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_467247bbe980e6f07ddf4bbced9fbdec> >": {
            "offset": "0x1E870"
        },
        "std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_928879d0336420accbd7d87a3ec03e52> >::~unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_928879d0336420accbd7d87a3ec03e52> >": {
            "offset": "0x1E870"
        },
        "std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_a886e99c8d250c772cbca4cc3a028cee> >::~unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_a886e99c8d250c772cbca4cc3a028cee> >": {
            "offset": "0x1E870"
        },
        "std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_f51660135b5693812451c8a92d76b514> >::~unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,<lambda_f51660135b5693812451c8a92d76b514> >": {
            "offset": "0x1E870"
        },
        "std::unique_ptr<std::tuple<<lambda_503baef742c31b1926f3416bd59129bc> >,std::default_delete<std::tuple<<lambda_503baef742c31b1926f3416bd59129bc> > > >::~unique_ptr<std::tuple<<lambda_503baef742c31b1926f3416bd59129bc> >,std::default_delete<std::tuple<<lambda_503baef742c31b1926f3416bd59129bc> > > >": {
            "offset": "0x1E8D0"
        },
        "std::unique_ptr<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> >,std::default_delete<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> > > >::get": {
            "offset": "0x27C40"
        },
        "std::unique_ptr<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> >,std::default_delete<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> > > >::unique_ptr<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> >,std::default_delete<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> > > ><std::default_delete<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> > >,0>": {
            "offset": "0x11DF0"
        },
        "std::unique_ptr<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> >,std::default_delete<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> > > >::~unique_ptr<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> >,std::default_delete<std::tuple<<lambda_e0160eff7135e8eced6228db90b70fc3> > > >": {
            "offset": "0x1E8F0"
        },
        "std::use_facet<std::numpunct<char> >": {
            "offset": "0x3D740"
        },
        "std::use_facet<std::numpunct<wchar_t> >": {
            "offset": "0x3D8B0"
        },
        "std::weak_ptr<FrontendNuiTexture *>::~weak_ptr<FrontendNuiTexture *>": {
            "offset": "0x10430"
        },
        "tbb::detail::d0::raii_guard<<lambda_0e1f910659e28e696fc4a81fef6b33ad> >::~raii_guard<<lambda_0e1f910659e28e696fc4a81fef6b33ad> >": {
            "offset": "0x102A0"
        },
        "tbb::detail::d1::unique_scoped_lock<tbb::detail::d1::spin_mutex>::~unique_scoped_lock<tbb::detail::d1::spin_mutex>": {
            "offset": "0xCB390"
        },
        "tbb::detail::d2::concurrent_queue<std::function<void __cdecl(void)>,tbb::detail::d1::cache_aligned_allocator<std::function<void __cdecl(void)> > >::clear": {
            "offset": "0x11890"
        },
        "tbb::detail::d2::micro_queue<std::function<void __cdecl(void)>,tbb::detail::d1::cache_aligned_allocator<std::function<void __cdecl(void)> > >::prepare_page": {
            "offset": "0x11B90"
        },
        "tbb::detail::r1::AvailableHwConcurrency": {
            "offset": "0xCB5E0"
        },
        "tbb::detail::r1::PrintExtraVersionInfo": {
            "offset": "0xCB400"
        },
        "tbb::detail::r1::`dynamic initializer for '__TBB_InitOnceHiddenInstance''": {
            "offset": "0x1AD0"
        },
        "tbb::detail::r1::`dynamic initializer for 'allowed_parallelism_ctl''": {
            "offset": "0x1960"
        },
        "tbb::detail::r1::`dynamic initializer for 'lifetime_ctl''": {
            "offset": "0x19B0"
        },
        "tbb::detail::r1::`dynamic initializer for 'stack_size_ctl''": {
            "offset": "0x1A00"
        },
        "tbb::detail::r1::`dynamic initializer for 'terminate_on_exception_ctl''": {
            "offset": "0x1A50"
        },
        "tbb::detail::r1::allocate_memory": {
            "offset": "0xCAD00"
        },
        "tbb::detail::r1::allowed_parallelism_control::active_value": {
            "offset": "0xCB030"
        },
        "tbb::detail::r1::allowed_parallelism_control::apply_active": {
            "offset": "0xCB020"
        },
        "tbb::detail::r1::allowed_parallelism_control::default_value": {
            "offset": "0xCAF90"
        },
        "tbb::detail::r1::allowed_parallelism_control::is_first_arg_preferred": {
            "offset": "0xCB010"
        },
        "tbb::detail::r1::arena::has_enqueued_tasks": {
            "offset": "0xCC3D0"
        },
        "tbb::detail::r1::bad_last_alloc::bad_last_alloc": {
            "offset": "0xCA4D0"
        },
        "tbb::detail::r1::bad_last_alloc::what": {
            "offset": "0xCAC40"
        },
        "tbb::detail::r1::bad_last_alloc::~bad_last_alloc": {
            "offset": "0xA690"
        },
        "tbb::detail::r1::cache_aligned_allocate": {
            "offset": "0xCAD30"
        },
        "tbb::detail::r1::cache_aligned_deallocate": {
            "offset": "0xCAD90"
        },
        "tbb::detail::r1::clear_address_waiter_table": {
            "offset": "0xCC160"
        },
        "tbb::detail::r1::concurrent_monitor_mutex::get_semaphore": {
            "offset": "0xCBB50"
        },
        "tbb::detail::r1::control_storage::active_value": {
            "offset": "0xCAF00"
        },
        "tbb::detail::r1::control_storage::apply_active": {
            "offset": "0xCAEE0"
        },
        "tbb::detail::r1::control_storage::is_first_arg_preferred": {
            "offset": "0xCAEF0"
        },
        "tbb::detail::r1::deallocate_memory": {
            "offset": "0xCADA0"
        },
        "tbb::detail::r1::detect_cpu_features": {
            "offset": "0xCB4D0"
        },
        "tbb::detail::r1::do_throw<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0xCA0D0"
        },
        "tbb::detail::r1::do_throw<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0xCA100"
        },
        "tbb::detail::r1::do_throw<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0xCA130"
        },
        "tbb::detail::r1::do_throw<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0xCA160"
        },
        "tbb::detail::r1::do_throw<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0xCA190"
        },
        "tbb::detail::r1::do_throw<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0xCA1C0"
        },
        "tbb::detail::r1::do_throw<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0xCA1F0"
        },
        "tbb::detail::r1::do_throw<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0xCA220"
        },
        "tbb::detail::r1::do_throw<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0xCA250"
        },
        "tbb::detail::r1::do_throw<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0xCA280"
        },
        "tbb::detail::r1::do_throw<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0xCA2B0"
        },
        "tbb::detail::r1::do_throw<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0xCA2E0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0xCA310"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0xCA330"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0xCA350"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0xCA370"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0xCA390"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0xCA3B0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0xCA3D0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0xCA3F0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0xCA410"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0xCA430"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0xCA450"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0xCA470"
        },
        "tbb::detail::r1::dummy_allocate_binding_handler": {
            "offset": "0xEA60"
        },
        "tbb::detail::r1::dummy_apply_affinity": {
            "offset": "0xA440"
        },
        "tbb::detail::r1::dummy_deallocate_binding_handler": {
            "offset": "0xA440"
        },
        "tbb::detail::r1::dummy_destroy_system_topology": {
            "offset": "0xA440"
        },
        "tbb::detail::r1::dummy_get_default_concurrency": {
            "offset": "0xCC0C0"
        },
        "tbb::detail::r1::dummy_restore_affinity": {
            "offset": "0xA440"
        },
        "tbb::detail::r1::dynamic_link": {
            "offset": "0xCB3F0"
        },
        "tbb::detail::r1::dynamic_unlink": {
            "offset": "0xA440"
        },
        "tbb::detail::r1::dynamic_unlink_all": {
            "offset": "0xA440"
        },
        "tbb::detail::r1::gcc_rethrow_exception_broken": {
            "offset": "0xF110"
        },
        "tbb::detail::r1::get_address_waiter_table": {
            "offset": "0xCC300"
        },
        "tbb::detail::r1::governor::acquire_resources": {
            "offset": "0xCC0D0"
        },
        "tbb::detail::r1::governor::default_num_threads": {
            "offset": "0xCBAD0"
        },
        "tbb::detail::r1::governor::release_resources": {
            "offset": "0xCC120"
        },
        "tbb::detail::r1::handle_perror": {
            "offset": "0xCAAC0"
        },
        "tbb::detail::r1::initialize_allocate_handler": {
            "offset": "0xCAC70"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocate_handler": {
            "offset": "0xCACA0"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocator": {
            "offset": "0xCADB0"
        },
        "tbb::detail::r1::initialize_hardware_concurrency_info": {
            "offset": "0xCB6A0"
        },
        "tbb::detail::r1::lifetime_control::apply_active": {
            "offset": "0xCB140"
        },
        "tbb::detail::r1::lifetime_control::default_value": {
            "offset": "0xEA60"
        },
        "tbb::detail::r1::lifetime_control::is_first_arg_preferred": {
            "offset": "0xF110"
        },
        "tbb::detail::r1::market::add_ref_unsafe": {
            "offset": "0xCB9D0"
        },
        "tbb::detail::r1::market::app_parallelism_limit": {
            "offset": "0xCB3B0"
        },
        "tbb::detail::r1::market::release": {
            "offset": "0xCBBF0"
        },
        "tbb::detail::r1::market::set_active_num_workers": {
            "offset": "0xCBD70"
        },
        "tbb::detail::r1::market::update_allotment": {
            "offset": "0xCBFB0"
        },
        "tbb::detail::r1::missing_wait::missing_wait": {
            "offset": "0xCA6A0"
        },
        "tbb::detail::r1::missing_wait::what": {
            "offset": "0xCAC50"
        },
        "tbb::detail::r1::missing_wait::~missing_wait": {
            "offset": "0xA690"
        },
        "tbb::detail::r1::runtime_warning": {
            "offset": "0xCB520"
        },
        "tbb::detail::r1::stack_size_control::apply_active": {
            "offset": "0xCAEE0"
        },
        "tbb::detail::r1::stack_size_control::default_value": {
            "offset": "0xCB130"
        },
        "tbb::detail::r1::std_cache_aligned_allocate": {
            "offset": "0xCAEC0"
        },
        "tbb::detail::r1::std_cache_aligned_deallocate": {
            "offset": "0xCAED0"
        },
        "tbb::detail::r1::terminate_on_exception": {
            "offset": "0xCB3D0"
        },
        "tbb::detail::r1::terminate_on_exception_control::default_value": {
            "offset": "0xEA60"
        },
        "tbb::detail::r1::throw_exception": {
            "offset": "0xCAB90"
        },
        "tbb::detail::r1::unsafe_wait::unsafe_wait": {
            "offset": "0xCA7E0"
        },
        "tbb::detail::r1::unsafe_wait::~unsafe_wait": {
            "offset": "0xA690"
        },
        "tbb::detail::r1::user_abort::user_abort": {
            "offset": "0xCA870"
        },
        "tbb::detail::r1::user_abort::what": {
            "offset": "0xCAC60"
        },
        "tbb::detail::r1::user_abort::~user_abort": {
            "offset": "0xA690"
        },
        "tinystl::buffer_insert_common<bgfx::DxbcSignature::Element,bgfx::TinyStlAllocator>": {
            "offset": "0xB3C50"
        },
        "tinystl::buffer_insert_common<bgfx::NonLocalAllocator::Free,bgfx::TinyStlAllocator>": {
            "offset": "0x4A8F0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,ID3D11BlendState *> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,ID3D11DepthStencilState *> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,ID3D11InputLayout *> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,ID3D11RasterizerState *> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,ID3D11SamplerState *> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,ID3D12PipelineState *> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,IDirect3DVertexDeclaration9 *> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,bgfx::gl::UniformStateCache::f3x3> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,bgfx::gl::UniformStateCache::f4> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,bgfx::gl::UniformStateCache::f4x4> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkDescriptorSetLayout> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkPipeline> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkRenderPass> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkSampler> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,int> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,unsigned int> *,bgfx::TinyStlAllocator>": {
            "offset": "0x4AA50"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned __int64,unsigned short> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned int,unsigned int> *,bgfx::TinyStlAllocator>": {
            "offset": "0x577D0"
        },
        "tinystl::buffer_resize<tinystl::unordered_hash_node<unsigned short,void> *,bgfx::TinyStlAllocator>": {
            "offset": "0x4AA50"
        },
        "tinystl::list<bgfx::NonLocalAllocator::Free,bgfx::TinyStlAllocator>::~list<bgfx::NonLocalAllocator::Free,bgfx::TinyStlAllocator>": {
            "offset": "0x4BC00"
        },
        "tinystl::move_construct_impl<bgfx::DxbcSignature::Element>": {
            "offset": "0xB3E10"
        },
        "tinystl::move_construct_impl<bgfx::NonLocalAllocator::Free>": {
            "offset": "0x4AD00"
        },
        "tinystl::move_impl<bgfx::NonLocalAllocator::Free>": {
            "offset": "0x4AD20"
        },
        "tinystl::pair<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int>::~pair<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int>": {
            "offset": "0xB3EE0"
        },
        "tinystl::stringT<bgfx::TinyStlAllocator>::append": {
            "offset": "0xB40D0"
        },
        "tinystl::stringT<bgfx::TinyStlAllocator>::reserve": {
            "offset": "0xB6CD0"
        },
        "tinystl::stringT<bgfx::TinyStlAllocator>::~stringT<bgfx::TinyStlAllocator>": {
            "offset": "0xB3F10"
        },
        "tinystl::unordered_map<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int,bgfx::TinyStlAllocator>::find": {
            "offset": "0xB4DB0"
        },
        "tinystl::unordered_map<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int,bgfx::TinyStlAllocator>::insert": {
            "offset": "0xB4EA0"
        },
        "tinystl::unordered_map<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int,bgfx::TinyStlAllocator>::~unordered_map<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int,bgfx::TinyStlAllocator>": {
            "offset": "0xB3F40"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11BlendState *,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11BlendState *,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11DepthStencilState *,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11DepthStencilState *,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11InputLayout *,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11InputLayout *,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11RasterizerState *,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11RasterizerState *,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11SamplerState *,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D11SamplerState *,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D12PipelineState *,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,ID3D12PipelineState *,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,IDirect3DVertexDeclaration9 *,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,IDirect3DVertexDeclaration9 *,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::gl::UniformStateCache::f3x3,bgfx::TinyStlAllocator>::~unordered_map<unsigned __int64,bgfx::gl::UniformStateCache::f3x3,bgfx::TinyStlAllocator>": {
            "offset": "0x845B0"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::gl::UniformStateCache::f4,bgfx::TinyStlAllocator>::~unordered_map<unsigned __int64,bgfx::gl::UniformStateCache::f4,bgfx::TinyStlAllocator>": {
            "offset": "0x84640"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::gl::UniformStateCache::f4x4,bgfx::TinyStlAllocator>::~unordered_map<unsigned __int64,bgfx::gl::UniformStateCache::f4x4,bgfx::TinyStlAllocator>": {
            "offset": "0x846D0"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkDescriptorSetLayout,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkDescriptorSetLayout,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkPipeline,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkPipeline,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkRenderPass,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkRenderPass,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkSampler,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,bgfx::vk::VkSampler,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x5CD40"
        },
        "tinystl::unordered_map<unsigned __int64,int,bgfx::TinyStlAllocator>::~unordered_map<unsigned __int64,int,bgfx::TinyStlAllocator>": {
            "offset": "0x84520"
        },
        "tinystl::unordered_map<unsigned __int64,unsigned int,bgfx::TinyStlAllocator>::~unordered_map<unsigned __int64,unsigned int,bgfx::TinyStlAllocator>": {
            "offset": "0x4BC40"
        },
        "tinystl::unordered_map<unsigned __int64,unsigned short,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x59040"
        },
        "tinystl::unordered_map<unsigned __int64,unsigned short,bgfx::TinyStlAllocator>::erase": {
            "offset": "0x68670"
        },
        "tinystl::unordered_map<unsigned __int64,unsigned short,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x6B190"
        },
        "tinystl::unordered_map<unsigned __int64,unsigned short,bgfx::TinyStlAllocator>::~unordered_map<unsigned __int64,unsigned short,bgfx::TinyStlAllocator>": {
            "offset": "0x64710"
        },
        "tinystl::unordered_map<unsigned int,unsigned int,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x854A0"
        },
        "tinystl::unordered_map<unsigned int,unsigned int,bgfx::TinyStlAllocator>::insert": {
            "offset": "0x8AC20"
        },
        "tinystl::unordered_set<unsigned short,bgfx::TinyStlAllocator>::clear": {
            "offset": "0x4CEC0"
        },
        "tinystl::unordered_set<unsigned short,bgfx::TinyStlAllocator>::~unordered_set<unsigned short,bgfx::TinyStlAllocator>": {
            "offset": "0x4BD00"
        },
        "utf8::exception::exception": {
            "offset": "0x47A60"
        },
        "utf8::internal::append<std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,char>": {
            "offset": "0x40480"
        },
        "utf8::internal::validate_next<std::_String_view_iterator<std::char_traits<char> > >": {
            "offset": "0x41A30"
        },
        "utf8::invalid_code_point::invalid_code_point": {
            "offset": "0x47AF0"
        },
        "utf8::invalid_code_point::what": {
            "offset": "0x49BE0"
        },
        "utf8::invalid_code_point::~invalid_code_point": {
            "offset": "0xA690"
        },
        "utf8::invalid_utf8::invalid_utf8": {
            "offset": "0x47B60"
        },
        "utf8::invalid_utf8::what": {
            "offset": "0x49BF0"
        },
        "utf8::invalid_utf8::~invalid_utf8": {
            "offset": "0xA690"
        },
        "utf8::not_enough_room::not_enough_room": {
            "offset": "0x47BC0"
        },
        "utf8::not_enough_room::what": {
            "offset": "0x49C00"
        },
        "utf8::not_enough_room::~not_enough_room": {
            "offset": "0xA690"
        },
        "va_impl<char,fmt::v8::basic_format_args<fmt::v8::basic_printf_context<fmt::v8::appender,char> > >": {
            "offset": "0x41510"
        },
        "va_impl<wchar_t,fmt::v8::basic_format_args<fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> > >": {
            "offset": "0x41730"
        },
        "vfs::LocalDevice::Close": {
            "offset": "0x38D10"
        },
        "vfs::LocalDevice::CloseBulk": {
            "offset": "0x38910"
        },
        "vfs::LocalDevice::Create": {
            "offset": "0x38DC0"
        },
        "vfs::LocalDevice::ExtensionCtl": {
            "offset": "0x38FA0"
        },
        "vfs::LocalDevice::FindClose": {
            "offset": "0x39270"
        },
        "vfs::LocalDevice::FindFirst": {
            "offset": "0x39280"
        },
        "vfs::LocalDevice::FindNext": {
            "offset": "0x39590"
        },
        "vfs::LocalDevice::Flush": {
            "offset": "0x39690"
        },
        "vfs::LocalDevice::GetAbsolutePath": {
            "offset": "0x37980"
        },
        "vfs::LocalDevice::GetAttributes": {
            "offset": "0x396D0"
        },
        "vfs::LocalDevice::GetLength": {
            "offset": "0x39790"
        },
        "vfs::LocalDevice::GetModifiedTime": {
            "offset": "0x397C0"
        },
        "vfs::LocalDevice::Open": {
            "offset": "0x39850"
        },
        "vfs::LocalDevice::OpenBulk": {
            "offset": "0x39970"
        },
        "vfs::LocalDevice::Read": {
            "offset": "0x39A60"
        },
        "vfs::LocalDevice::ReadBulk": {
            "offset": "0x39AE0"
        },
        "vfs::LocalDevice::RemoveFile": {
            "offset": "0x39CA0"
        },
        "vfs::LocalDevice::RenameFile": {
            "offset": "0x39D70"
        },
        "vfs::LocalDevice::Seek": {
            "offset": "0x39EF0"
        },
        "vfs::LocalDevice::Truncate": {
            "offset": "0x39F70"
        },
        "vfs::LocalDevice::Write": {
            "offset": "0x39FB0"
        },
        "vfs::LocalDevice::WriteBulk": {
            "offset": "0x3A030"
        },
        "vfs::MakeMemoryDevice": {
            "offset": "0x38A10"
        },
        "vfs::ManagerServer::FindDevice": {
            "offset": "0x37050"
        },
        "vfs::ManagerServer::GetDevice": {
            "offset": "0x379B0"
        },
        "vfs::ManagerServer::GetNativeDevice": {
            "offset": "0x37BF0"
        },
        "vfs::ManagerServer::ManagerServer": {
            "offset": "0x369A0"
        },
        "vfs::ManagerServer::Mount": {
            "offset": "0x37C30"
        },
        "vfs::ManagerServer::MountPoint::~MountPoint": {
            "offset": "0x36D20"
        },
        "vfs::ManagerServer::Unmount": {
            "offset": "0x37F40"
        },
        "vfs::MemoryDevice::Close": {
            "offset": "0x388F0"
        },
        "vfs::MemoryDevice::CloseBulk": {
            "offset": "0x38910"
        },
        "vfs::MemoryDevice::FindClose": {
            "offset": "0xA440"
        },
        "vfs::MemoryDevice::FindFirst": {
            "offset": "0x389B0"
        },
        "vfs::MemoryDevice::FindNext": {
            "offset": "0xF110"
        },
        "vfs::MemoryDevice::Flush": {
            "offset": "0xE780"
        },
        "vfs::MemoryDevice::GetAbsolutePath": {
            "offset": "0x37980"
        },
        "vfs::MemoryDevice::GetLength": {
            "offset": "0x38A00"
        },
        "vfs::MemoryDevice::Open": {
            "offset": "0x38A80"
        },
        "vfs::MemoryDevice::OpenBulk": {
            "offset": "0x38AF0"
        },
        "vfs::MemoryDevice::Read": {
            "offset": "0x38B10"
        },
        "vfs::MemoryDevice::ReadBulk": {
            "offset": "0x38B60"
        },
        "vfs::MemoryDevice::Seek": {
            "offset": "0x38BA0"
        },
        "vfs::MemoryDevice::SetPathPrefix": {
            "offset": "0xA440"
        },
        "vva": {
            "offset": "0x49BC0"
        },
        "xbr::`dynamic initializer for 'kGameBuildUniquifiers''": {
            "offset": "0x1510"
        }
    }
}