{
    "gta-streaming-five.dll": {
        "<lambda_2730b6c68f930e168344f035418efbb7>::~<lambda_2730b6c68f930e168344f035418efbb7>": {
            "offset": "0x22C70"
        },
        "<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>::~<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>": {
            "offset": "0x22C70"
        },
        "<lambda_41af1ba482b752c39807db2ef15caf48>::~<lambda_41af1ba482b752c39807db2ef15caf48>": {
            "offset": "0x168D0"
        },
        "<lambda_4bd345ce870bcb6a9dba57dde6595eaf>::<lambda_4bd345ce870bcb6a9dba57dde6595eaf>": {
            "offset": "0x86040"
        },
        "<lambda_55b0750980631035f31e5def29397b5e>::~<lambda_55b0750980631035f31e5def29397b5e>": {
            "offset": "0x5F820"
        },
        "<lambda_72ae5b0e2f813e08b01a5e2876e67561>::~<lambda_72ae5b0e2f813e08b01a5e2876e67561>": {
            "offset": "0x1DA40"
        },
        "<lambda_7604da78e8f33a312c72ae5a43f9b93b>::~<lambda_7604da78e8f33a312c72ae5a43f9b93b>": {
            "offset": "0x1DA40"
        },
        "<lambda_814d5e0b3a45fa1dd158672480f6c4ca>::~<lambda_814d5e0b3a45fa1dd158672480f6c4ca>": {
            "offset": "0x1DA40"
        },
        "<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>::~<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>": {
            "offset": "0x22C70"
        },
        "<lambda_bf7610c50ebb1884e5917f6a81016c78>::~<lambda_bf7610c50ebb1884e5917f6a81016c78>": {
            "offset": "0x168D0"
        },
        "<lambda_cece5b4357793226365050ea62567114>::~<lambda_cece5b4357793226365050ea62567114>": {
            "offset": "0x5F8D0"
        },
        "<lambda_e4ba7588b360fe652a3faff73b7b991b>::~<lambda_e4ba7588b360fe652a3faff73b7b991b>": {
            "offset": "0x5F8D0"
        },
        "<lambda_f17ebabe33bc32be107ce6fff046b802>::~<lambda_f17ebabe33bc32be107ce6fff046b802>": {
            "offset": "0x1DA40"
        },
        "AddCollisionWrap": {
            "offset": "0x27A40"
        },
        "AddCrashometry": {
            "offset": "0x80A60"
        },
        "AddRawStreamer": {
            "offset": "0x71EB0"
        },
        "AddStreamingFileWrap": {
            "offset": "0x74E50"
        },
        "AddVehicleArchetype": {
            "offset": "0x3F530"
        },
        "AllocateBuffer": {
            "offset": "0x84D80"
        },
        "AppendToCacheWrap": {
            "offset": "0x24850"
        },
        "AssignFontLibWrap": {
            "offset": "0x79B80"
        },
        "BvhSet": {
            "offset": "0x27A50"
        },
        "CDistantLODLight::CDistantLODLight": {
            "offset": "0x1D0A0"
        },
        "CDistantLODLight::~CDistantLODLight": {
            "offset": "0x1DE20"
        },
        "CEntityDef::CEntityDef": {
            "offset": "0x1D100"
        },
        "CEntityDef::~CEntityDef": {
            "offset": "0x1DE80"
        },
        "CEntity_SetModelIdWrap": {
            "offset": "0x60C70"
        },
        "CMapData::CMapData": {
            "offset": "0x1D160"
        },
        "CMapData::CreateMapDataContents": {
            "offset": "0x20470"
        },
        "CMapData::~CMapData": {
            "offset": "0x1DED0"
        },
        "CMapTypes::CMapTypes": {
            "offset": "0x1D300"
        },
        "CMapTypes::~CMapTypes": {
            "offset": "0x1DE20"
        },
        "CMapTypes_Load": {
            "offset": "0x1FEF0"
        },
        "CMapTypes__ConstructLocalExtensions": {
            "offset": "0x58C70"
        },
        "CVehicle::CVehicle": {
            "offset": "0x1D3F0"
        },
        "CVehicle::GetHandlingData": {
            "offset": "0x205D0"
        },
        "CVehicle::GetSeatManager": {
            "offset": "0x6A260"
        },
        "CVehicle::SetHandlingData": {
            "offset": "0x209B0"
        },
        "CVehicle::~CVehicle": {
            "offset": "0x167B0"
        },
        "CVehicleStreamRenderGfx_GetFragment": {
            "offset": "0x29B20"
        },
        "CalculateMipLevelHook": {
            "offset": "0x76840"
        },
        "CancelRequestWrap": {
            "offset": "0x60E90"
        },
        "CfxCacheMounter::LoadDataFile": {
            "offset": "0x2EBB0"
        },
        "CfxCacheMounter::UnloadDataFile": {
            "offset": "0x167B0"
        },
        "CfxCollection_AddStreamingFileByTag": {
            "offset": "0x42480"
        },
        "CfxCollection_BackoutStreamingTag": {
            "offset": "0x429F0"
        },
        "CfxCollection_RemoveStreamingTag": {
            "offset": "0x42D40"
        },
        "CfxCollection_SetStreamingLoadLocked": {
            "offset": "0x437C0"
        },
        "CfxPackfileMounter::LoadDataFile": {
            "offset": "0x2F7B0"
        },
        "CfxPackfileMounter::UnloadDataFile": {
            "offset": "0x2F800"
        },
        "CfxProxyInteriorOrderMounter::LoadDataFile": {
            "offset": "0x2F430"
        },
        "CfxProxyInteriorOrderMounter::UnloadDataFile": {
            "offset": "0x2F450"
        },
        "CfxProxyItypMounter::LoadDataFile": {
            "offset": "0x2EBE0"
        },
        "CfxProxyItypMounter::ParseBaseName": {
            "offset": "0x4E4D0"
        },
        "CfxProxyItypMounter::UnloadDataFile": {
            "offset": "0x2F080"
        },
        "CfxPseudoMounter::LoadDataFile": {
            "offset": "0x2EAF0"
        },
        "CfxPseudoMounter::UnloadDataFile": {
            "offset": "0x2EB20"
        },
        "CfxState::CfxState": {
            "offset": "0x800A0"
        },
        "CheckForDuplicateArchetypes": {
            "offset": "0x2B1F0"
        },
        "CleanupStreaming": {
            "offset": "0x437E0"
        },
        "CompTrace": {
            "offset": "0x777E0"
        },
        "Component::As": {
            "offset": "0x210B0"
        },
        "Component::IsA": {
            "offset": "0x28800"
        },
        "Component::SetCommandLine": {
            "offset": "0x167B0"
        },
        "Component::SetUserData": {
            "offset": "0x28810"
        },
        "ComponentInstance::DoGameLoad": {
            "offset": "0x287E0"
        },
        "ComponentInstance::Initialize": {
            "offset": "0x287F0"
        },
        "ComponentInstance::Shutdown": {
            "offset": "0x28810"
        },
        "ConsoleArgumentType<bool,void>::Parse": {
            "offset": "0x651D0"
        },
        "ConsoleArgumentType<int,void>::Parse": {
            "offset": "0x5BC90"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_2729e31fb8c726b5ef153dd449ae69e5> >": {
            "offset": "0x63640"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_41af1ba482b752c39807db2ef15caf48> >": {
            "offset": "0x593F0"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_98135fb5c535408e12d17fbabc55ae8c> >": {
            "offset": "0x304C0"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_bf7610c50ebb1884e5917f6a81016c78> >": {
            "offset": "0x63820"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_cd07e93ce4e084374db77c62c4f7d117> >": {
            "offset": "0x59650"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_eae4a17f64911edbb9552e7485b4bbb0> >": {
            "offset": "0x22340"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_fe88ff6dbc907fb0feeae768dbc364ca> >": {
            "offset": "0x72B10"
        },
        "ConsoleCommand::~ConsoleCommand": {
            "offset": "0x5A430"
        },
        "ConsoleFlagsToString": {
            "offset": "0x5B570"
        },
        "CoreGetComponentRegistry": {
            "offset": "0x27A70"
        },
        "CoreGetGlobalInstanceRegistry": {
            "offset": "0x27B00"
        },
        "CreateComponent": {
            "offset": "0x28820"
        },
        "CreatePopulationPedWrap": {
            "offset": "0x6C780"
        },
        "CreateTrampolineFunction": {
            "offset": "0x850D0"
        },
        "CreateVariableEntry<bool>": {
            "offset": "0x63CF0"
        },
        "CreateVariableEntry<int>": {
            "offset": "0x59B80"
        },
        "DirectX::BitsPerPixel": {
            "offset": "0x88DD0"
        },
        "DirectX::ComputePitch": {
            "offset": "0x88F30"
        },
        "DirectX::D3DXDecodeBC1": {
            "offset": "0x8DB80"
        },
        "DirectX::D3DXDecodeBC2": {
            "offset": "0x8DC70"
        },
        "DirectX::D3DXDecodeBC3": {
            "offset": "0x8E010"
        },
        "DirectX::D3DXDecodeBC4S": {
            "offset": "0x8E530"
        },
        "DirectX::D3DXDecodeBC4U": {
            "offset": "0x8E5A0"
        },
        "DirectX::D3DXDecodeBC5S": {
            "offset": "0x8E5F0"
        },
        "DirectX::D3DXDecodeBC5U": {
            "offset": "0x8E680"
        },
        "DirectX::D3DXDecodeBC6HS": {
            "offset": "0x8E9D0"
        },
        "DirectX::D3DXDecodeBC6HU": {
            "offset": "0x8E9E0"
        },
        "DirectX::D3DXDecodeBC7": {
            "offset": "0x8E9F0"
        },
        "DirectX::Decompress": {
            "offset": "0x88720"
        },
        "DirectX::Internal::round_to_nearest": {
            "offset": "0x8DA80"
        },
        "DirectX::IsPlanar": {
            "offset": "0x893D0"
        },
        "DirectX::IsTypeless": {
            "offset": "0x89430"
        },
        "DirectX::LDRColorA::InterpolateRGB": {
            "offset": "0x8FE30"
        },
        "DirectX::ScratchImage::GetImage": {
            "offset": "0x87F90"
        },
        "DirectX::ScratchImage::Initialize2D": {
            "offset": "0x88040"
        },
        "DirectX::ScratchImage::Release": {
            "offset": "0x88220"
        },
        "DirectX::ScratchImage::~ScratchImage": {
            "offset": "0x28B10"
        },
        "DirectX::_CalculateMipLevels": {
            "offset": "0x8DAF0"
        },
        "DirectX::_ConvertScanline": {
            "offset": "0x89A50"
        },
        "DirectX::_DetermineImageArray": {
            "offset": "0x88280"
        },
        "DirectX::_SetupImageArray": {
            "offset": "0x88450"
        },
        "DirectX::_StoreScanline": {
            "offset": "0x8AA50"
        },
        "DisplayRawStreamerError": {
            "offset": "0x44B20"
        },
        "DllMain": {
            "offset": "0x918EC"
        },
        "DoBVHThing": {
            "offset": "0x6D590"
        },
        "DoBeforeGetEntries": {
            "offset": "0x69E60"
        },
        "DoGeomThing": {
            "offset": "0x27B90"
        },
        "DoGeometryThing": {
            "offset": "0x6D5B0"
        },
        "DoNtRaiseException": {
            "offset": "0x824F0"
        },
        "EnableAllHooksLL": {
            "offset": "0x842E0"
        },
        "EnableHook": {
            "offset": "0x84430"
        },
        "EnableHookLL": {
            "offset": "0x84550"
        },
        "EntityLogDamage": {
            "offset": "0x2DE80"
        },
        "ErrorInflateFailure": {
            "offset": "0x77A60"
        },
        "ExecuteGroupForWeaponInfo": {
            "offset": "0x468B0"
        },
        "FatalErrorNoExceptRealV": {
            "offset": "0x17E80"
        },
        "FatalErrorRealV": {
            "offset": "0x17EB0"
        },
        "FilterUnmountOperation": {
            "offset": "0x46AD0"
        },
        "FindExportedResource": {
            "offset": "0x79E10"
        },
        "FlushCustomAssets": {
            "offset": "0x46BB0"
        },
        "ForceMountDataFile": {
            "offset": "0x46D20"
        },
        "ForcedDevice::Close": {
            "offset": "0x440D0"
        },
        "ForcedDevice::CloseBulk": {
            "offset": "0x440E0"
        },
        "ForcedDevice::Create": {
            "offset": "0x445F0"
        },
        "ForcedDevice::CreateLocal": {
            "offset": "0x44600"
        },
        "ForcedDevice::GetCollectionId": {
            "offset": "0x47BD0"
        },
        "ForcedDevice::GetFileAttributesW": {
            "offset": "0x47C20"
        },
        "ForcedDevice::GetFileLength": {
            "offset": "0x47C40"
        },
        "ForcedDevice::GetFileLengthLong": {
            "offset": "0x47C50"
        },
        "ForcedDevice::GetFileLengthUInt64": {
            "offset": "0x47C70"
        },
        "ForcedDevice::GetFileTime": {
            "offset": "0x47C80"
        },
        "ForcedDevice::GetName": {
            "offset": "0x47CE0"
        },
        "ForcedDevice::GetResourceVersion": {
            "offset": "0x47DA0"
        },
        "ForcedDevice::IsCollection": {
            "offset": "0x486B0"
        },
        "ForcedDevice::Open": {
            "offset": "0x4E480"
        },
        "ForcedDevice::OpenBulk": {
            "offset": "0x4E4A0"
        },
        "ForcedDevice::OpenBulkWrap": {
            "offset": "0x4E4C0"
        },
        "ForcedDevice::Read": {
            "offset": "0x4ED80"
        },
        "ForcedDevice::ReadBulk": {
            "offset": "0x4ED90"
        },
        "ForcedDevice::RemoveFile": {
            "offset": "0x28800"
        },
        "ForcedDevice::RenameFile": {
            "offset": "0x210B0"
        },
        "ForcedDevice::Seek": {
            "offset": "0x52050"
        },
        "ForcedDevice::SeekLong": {
            "offset": "0x52060"
        },
        "ForcedDevice::SetFileTime": {
            "offset": "0x28800"
        },
        "ForcedDevice::Write": {
            "offset": "0x530D0"
        },
        "ForcedDevice::WriteBulk": {
            "offset": "0x530D0"
        },
        "ForcedDevice::m_xy": {
            "offset": "0x569C0"
        },
        "ForcedDevice::m_yx": {
            "offset": "0x569E0"
        },
        "FormatErrorPickup<std::tuple<std::basic_string_view<char,std::char_traits<char> >,int,unsigned int> >": {
            "offset": "0xE5E0"
        },
        "FreeArchetypesHook": {
            "offset": "0x46EE0"
        },
        "FreeBuffer": {
            "offset": "0x84DB0"
        },
        "Freeze": {
            "offset": "0x84660"
        },
        "GFxValue::GetString": {
            "offset": "0x71310"
        },
        "GFxValue::~GFxValue": {
            "offset": "0x705D0"
        },
        "GetAbsoluteCitPath": {
            "offset": "0x80BE0"
        },
        "GetBaseName": {
            "offset": "0x47780"
        },
        "GetBlockMapWrap": {
            "offset": "0x75600"
        },
        "GetBoneIndexFromId": {
            "offset": "0x5E5F0"
        },
        "GetBudgetVar": {
            "offset": "0x5B9B0"
        },
        "GetCacheIndex": {
            "offset": "0x24BE0"
        },
        "GetCurrentMapGroup": {
            "offset": "0x29E80"
        },
        "GetCurrentStreamingIndex": {
            "offset": "0x6D5D0"
        },
        "GetCurrentStreamingName": {
            "offset": "0x6D5F0"
        },
        "GetDummyCollectionIndexByTag": {
            "offset": "0x24CC0"
        },
        "GetDummyStreamingPackfileByTag": {
            "offset": "0x24CE0"
        },
        "GetEventName": {
            "offset": "0x2DF10"
        },
        "GetExportedResource": {
            "offset": "0x79F00"
        },
        "GetFontById": {
            "offset": "0x79FF0"
        },
        "GetGlobalMatrix": {
            "offset": "0x5E610"
        },
        "GetGlobalMatrixFuncPatch": {
            "offset": "0x5E680"
        },
        "GetGlobalTransform": {
            "offset": "0x5E6C0"
        },
        "GetMapTypeDefName": {
            "offset": "0x2B6A0"
        },
        "GetMaxSpeed<&origBase>": {
            "offset": "0x5C590"
        },
        "GetMaxSpeed<&origDamp>": {
            "offset": "0x5C5C0"
        },
        "GetMaxSpeed<&origPhys>": {
            "offset": "0x5C5F0"
        },
        "GetMemoryBlock": {
            "offset": "0x84E30"
        },
        "GetPackIndex": {
            "offset": "0x250E0"
        },
        "GetRcdDebugInfoExtension::~GetRcdDebugInfoExtension": {
            "offset": "0x3AD60"
        },
        "GetStreamingModuleWithValidate<0>": {
            "offset": "0x73060"
        },
        "GetStreamingModuleWithValidate<1>": {
            "offset": "0x72CE0"
        },
        "GetTxdRelationships": {
            "offset": "0x47DC0"
        },
        "GlobalErrorHandler": {
            "offset": "0x180F0"
        },
        "HandleDataFile": {
            "offset": "0x48070"
        },
        "HandleEventWrap<&g_eventCall3>": {
            "offset": "0x2C530"
        },
        "HandleEventWrapExt<&g_eventCall1,0>": {
            "offset": "0x2C660"
        },
        "HandleEventWrapExt<&g_eventCall2,1>": {
            "offset": "0x2C950"
        },
        "HandleSprite": {
            "offset": "0x7A120"
        },
        "HookFunction::Run": {
            "offset": "0x1A980"
        },
        "HookFunctionBase::Register": {
            "offset": "0x833A0"
        },
        "HookFunctionBase::RunAll": {
            "offset": "0x833C0"
        },
        "Hook_StreamingSema": {
            "offset": "0x60FF0"
        },
        "HostSharedData<CfxState>::HostSharedData<CfxState>": {
            "offset": "0x7FCD0"
        },
        "HostSharedData<CfxState>::~HostSharedData<CfxState>": {
            "offset": "0x80160"
        },
        "InflateFailureBaseGame": {
            "offset": "0x78540"
        },
        "InitFunction::Run": {
            "offset": "0x1A870"
        },
        "InitFunctionBase::InitFunctionBase": {
            "offset": "0x822F0"
        },
        "InitFunctionBase::Register": {
            "offset": "0x82660"
        },
        "InitFunctionBase::RunAll": {
            "offset": "0x826B0"
        },
        "InitializeBuffer": {
            "offset": "0x167B0"
        },
        "InitializeIPLBuffer": {
            "offset": "0x5D4D0"
        },
        "InsertStreamingModuleWrap": {
            "offset": "0x6D640"
        },
        "Instance<ICoreGameInit>::Get": {
            "offset": "0x47720"
        },
        "IsCodePadding": {
            "offset": "0x85480"
        },
        "IsErrorException": {
            "offset": "0x18790"
        },
        "IsEvaluationServer": {
            "offset": "0x486E0"
        },
        "IsExecutableAddress": {
            "offset": "0x85090"
        },
        "IsHandleCache": {
            "offset": "0x61290"
        },
        "IsPedSkeletonApplicable": {
            "offset": "0x65C50"
        },
        "IterateDataFiles": {
            "offset": "0x6A2D0"
        },
        "LoadAllMapTypesFiles": {
            "offset": "0x20770"
        },
        "LoadArchetypeFiles": {
            "offset": "0x6A410"
        },
        "LoadCache": {
            "offset": "0x251C0"
        },
        "LoadCacheHook": {
            "offset": "0x25420"
        },
        "LoadDataFiles": {
            "offset": "0x4AC60"
        },
        "LoadDats": {
            "offset": "0x4B0B0"
        },
        "LoadDefDats": {
            "offset": "0x4B180"
        },
        "LoadManifest": {
            "offset": "0x4B250"
        },
        "LoadReplayDlc": {
            "offset": "0x4BC20"
        },
        "LoadStreamingFiles": {
            "offset": "0x4BC70"
        },
        "LoadVehicleMetaForDlc": {
            "offset": "0x4D990"
        },
        "LookupDataFileMounter": {
            "offset": "0x4DE00"
        },
        "LookupDataFileType": {
            "offset": "0x4DF00"
        },
        "MH_CreateHook": {
            "offset": "0x84810"
        },
        "MH_EnableHook": {
            "offset": "0x84AA0"
        },
        "MH_Initialize": {
            "offset": "0x84AB0"
        },
        "MakeDefragmentableHook": {
            "offset": "0x75BA0"
        },
        "MakeRelativeCitPath": {
            "offset": "0x187B0"
        },
        "MapTypesFile::MapTypesFile": {
            "offset": "0x1D570"
        },
        "MapTypesFile::~MapTypesFile": {
            "offset": "0x1DF90"
        },
        "ModifyHierarchyStatusHook": {
            "offset": "0x4E1E0"
        },
        "NoLSN": {
            "offset": "0x61600"
        },
        "NormalizePath": {
            "offset": "0x4E420"
        },
        "ObfuscatedDevice::Close": {
            "offset": "0x440D0"
        },
        "ObfuscatedDevice::CloseBulk": {
            "offset": "0x440E0"
        },
        "ObfuscatedDevice::Create": {
            "offset": "0x445F0"
        },
        "ObfuscatedDevice::CreateLocal": {
            "offset": "0x44600"
        },
        "ObfuscatedDevice::GetCollectionId": {
            "offset": "0x47BD0"
        },
        "ObfuscatedDevice::GetFileAttributesW": {
            "offset": "0x47C20"
        },
        "ObfuscatedDevice::GetFileLength": {
            "offset": "0x47C40"
        },
        "ObfuscatedDevice::GetFileLengthLong": {
            "offset": "0x47C50"
        },
        "ObfuscatedDevice::GetFileLengthUInt64": {
            "offset": "0x47C70"
        },
        "ObfuscatedDevice::GetFileTime": {
            "offset": "0x47C80"
        },
        "ObfuscatedDevice::GetName": {
            "offset": "0x47CE0"
        },
        "ObfuscatedDevice::GetResourceVersion": {
            "offset": "0x47DA0"
        },
        "ObfuscatedDevice::GetUnkDevice": {
            "offset": "0x6EEA0"
        },
        "ObfuscatedDevice::IsCollection": {
            "offset": "0x486B0"
        },
        "ObfuscatedDevice::Open": {
            "offset": "0x4E480"
        },
        "ObfuscatedDevice::OpenBulk": {
            "offset": "0x4E4A0"
        },
        "ObfuscatedDevice::OpenBulkWrap": {
            "offset": "0x4E4C0"
        },
        "ObfuscatedDevice::Read": {
            "offset": "0x4ED80"
        },
        "ObfuscatedDevice::ReadBulk": {
            "offset": "0x4ED90"
        },
        "ObfuscatedDevice::RemoveFile": {
            "offset": "0x28800"
        },
        "ObfuscatedDevice::RenameFile": {
            "offset": "0x210B0"
        },
        "ObfuscatedDevice::Seek": {
            "offset": "0x52050"
        },
        "ObfuscatedDevice::SeekLong": {
            "offset": "0x52060"
        },
        "ObfuscatedDevice::SetFileTime": {
            "offset": "0x28800"
        },
        "ObfuscatedDevice::Write": {
            "offset": "0x530D0"
        },
        "ObfuscatedDevice::WriteBulk": {
            "offset": "0x530D0"
        },
        "ObfuscatedDevice::m_40": {
            "offset": "0x6EE90"
        },
        "ObfuscatedDevice::m_ax": {
            "offset": "0x6EEC0"
        },
        "ObfuscatedDevice::m_xx": {
            "offset": "0x6EEB0"
        },
        "ObfuscatedDevice::m_xy": {
            "offset": "0x6EED0"
        },
        "ObfuscatedDevice::m_yx": {
            "offset": "0x569E0"
        },
        "OnEntityTakeDmg": {
            "offset": "0x2E030"
        },
        "OverlayMethodFunctionHandler::Call": {
            "offset": "0x6FC50"
        },
        "ParseArchetypeFile": {
            "offset": "0x6A820"
        },
        "ParserCreateAndLoadAnyType": {
            "offset": "0x4E5A0"
        },
        "PedDecorationManager::Comparator": {
            "offset": "0x64BC0"
        },
        "PolyErrorv": {
            "offset": "0x6D7B0"
        },
        "ProcessHandler<ByteAwaiter>": {
            "offset": "0x5F2F0"
        },
        "ProcessHandler<SemaAwaiter>": {
            "offset": "0x5F370"
        },
        "ProcessRemoval": {
            "offset": "0x61610"
        },
        "ProcessThreadIPs": {
            "offset": "0x84B50"
        },
        "PtrError": {
            "offset": "0x27C10"
        },
        "RaiseDebugException": {
            "offset": "0x825D0"
        },
        "RegisterPeds": {
            "offset": "0x4EDA0"
        },
        "RegisterStreamingFileStrchrWrap": {
            "offset": "0x27D80"
        },
        "ReloadMapStore": {
            "offset": "0x4F030"
        },
        "RelocateRelative": {
            "offset": "0x5D510"
        },
        "RequestHandleExtension::~RequestHandleExtension": {
            "offset": "0x5FB90"
        },
        "ReturnTrue": {
            "offset": "0x785F0"
        },
        "RunCompatibilityBehavior": {
            "offset": "0x6C210"
        },
        "SMPACreateStub": {
            "offset": "0x78600"
        },
        "SafeCall<<lambda_5cd72400bc154858438f9b9dbbf12639> >": {
            "offset": "0x31C80"
        },
        "SafelyDrainStreamer": {
            "offset": "0x51DF0"
        },
        "SafetyFilter": {
            "offset": "0x7A5B0"
        },
        "SceneLoaderScan": {
            "offset": "0x786A0"
        },
        "ScopedError::~ScopedError": {
            "offset": "0x169A0"
        },
        "SehRoutine": {
            "offset": "0x52070"
        },
        "SetArchetypeModelId": {
            "offset": "0x2BDC0"
        },
        "SetCurrentStreamingModuleCallback": {
            "offset": "0x6DA90"
        },
        "SetGamePhysicalBudget": {
            "offset": "0x5BEE0"
        },
        "SetHandleDownloadWeight": {
            "offset": "0x61A50"
        },
        "SetPedProp": {
            "offset": "0x5C9E0"
        },
        "SetStreamedPedComponentVariation": {
            "offset": "0x5CA90"
        },
        "SetToLoadingWrap": {
            "offset": "0x61B50"
        },
        "SettingsVramTex": {
            "offset": "0x5C2A0"
        },
        "SetupTerritories": {
            "offset": "0x71570"
        },
        "StreamingDataEntry::ComputePhysicalSize": {
            "offset": "0x71F30"
        },
        "StreamingDataEntry::ComputeVirtualSize": {
            "offset": "0x71F40"
        },
        "SysError": {
            "offset": "0x18D30"
        },
        "TattooSort": {
            "offset": "0x65560"
        },
        "ToNarrow": {
            "offset": "0x826E0"
        },
        "ToWide": {
            "offset": "0x827D0"
        },
        "TraceReal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x31CC0"
        },
        "TraceReal<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>": {
            "offset": "0x31D70"
        },
        "TraceRealV": {
            "offset": "0x82AE0"
        },
        "Unfreeze": {
            "offset": "0x84D00"
        },
        "UnloadVehicleMetaForDlc": {
            "offset": "0x52AD0"
        },
        "UnloadWeaponInfosStub": {
            "offset": "0x52DA0"
        },
        "UpdateFontLoading": {
            "offset": "0x7A6A0"
        },
        "ValidateGeometry": {
            "offset": "0x6DAB0"
        },
        "Win32TrapAndJump64": {
            "offset": "0x842C0"
        },
        "WrapAddMapBoolEntry": {
            "offset": "0x53010"
        },
        "WrapAssetRelease": {
            "offset": "0x75C80"
        },
        "WrapStreamingLoad": {
            "offset": "0x6E9F0"
        },
        "WriteArchetypesFile": {
            "offset": "0x20C40"
        },
        "_DllMainCRTStartup": {
            "offset": "0x91350"
        },
        "_Init_thread_abort": {
            "offset": "0x90544"
        },
        "_Init_thread_footer": {
            "offset": "0x90574"
        },
        "_Init_thread_header": {
            "offset": "0x905D4"
        },
        "_Init_thread_notify": {
            "offset": "0x9063C"
        },
        "_Init_thread_wait": {
            "offset": "0x90680"
        },
        "_RTC_Initialize": {
            "offset": "0x9193C"
        },
        "_RTC_Terminate": {
            "offset": "0x91978"
        },
        "_Smtx_lock_exclusive": {
            "offset": "0x9040C"
        },
        "_Smtx_lock_shared": {
            "offset": "0x90414"
        },
        "_Smtx_unlock_exclusive": {
            "offset": "0x9041C"
        },
        "_Smtx_unlock_shared": {
            "offset": "0x90424"
        },
        "__ArrayUnwind": {
            "offset": "0x90E28"
        },
        "__GSHandlerCheck": {
            "offset": "0x90C60"
        },
        "__GSHandlerCheckCommon": {
            "offset": "0x90C80"
        },
        "__GSHandlerCheck_EH": {
            "offset": "0x90CDC"
        },
        "__GSHandlerCheck_SEH": {
            "offset": "0x90FA8"
        },
        "__chkstk": {
            "offset": "0x90F50"
        },
        "__crt_debugger_hook": {
            "offset": "0x916C0"
        },
        "__dyn_tls_init": {
            "offset": "0x90AA8"
        },
        "__dyn_tls_on_demand_init": {
            "offset": "0x90B10"
        },
        "__global_delete": {
            "offset": "0x217C0"
        },
        "__isa_available_init": {
            "offset": "0x9150C"
        },
        "__local_stdio_printf_options": {
            "offset": "0x1A790"
        },
        "__local_stdio_scanf_options": {
            "offset": "0x91910"
        },
        "__raise_securityfailure": {
            "offset": "0x91390"
        },
        "__report_gsfailure": {
            "offset": "0x913C4"
        },
        "__scrt_acquire_startup_lock": {
            "offset": "0x90728"
        },
        "__scrt_dllmain_after_initialize_c": {
            "offset": "0x90764"
        },
        "__scrt_dllmain_before_initialize_c": {
            "offset": "0x90798"
        },
        "__scrt_dllmain_crt_thread_attach": {
            "offset": "0x907B0"
        },
        "__scrt_dllmain_crt_thread_detach": {
            "offset": "0x907D8"
        },
        "__scrt_dllmain_exception_filter": {
            "offset": "0x907F0"
        },
        "__scrt_dllmain_uninitialize_c": {
            "offset": "0x90850"
        },
        "__scrt_dllmain_uninitialize_critical": {
            "offset": "0x90880"
        },
        "__scrt_fastfail": {
            "offset": "0x916C8"
        },
        "__scrt_get_dyn_tls_init_callback": {
            "offset": "0x91934"
        },
        "__scrt_initialize_crt": {
            "offset": "0x90894"
        },
        "__scrt_initialize_default_local_stdio_options": {
            "offset": "0x91918"
        },
        "__scrt_initialize_onexit_tables": {
            "offset": "0x908E0"
        },
        "__scrt_initialize_thread_safe_statics": {
            "offset": "0x9044C"
        },
        "__scrt_initialize_type_info": {
            "offset": "0x90E94"
        },
        "__scrt_is_nonwritable_in_current_image": {
            "offset": "0x9096C"
        },
        "__scrt_is_nonwritable_in_current_image$filt$0": {
            "offset": "0x96B8D"
        },
        "__scrt_is_ucrt_dll_in_use": {
            "offset": "0x91834"
        },
        "__scrt_release_startup_lock": {
            "offset": "0x90A04"
        },
        "__scrt_stub_for_acrt_initialize": {
            "offset": "0x28810"
        },
        "__scrt_stub_for_acrt_thread_attach": {
            "offset": "0x28810"
        },
        "__scrt_stub_for_acrt_thread_detach": {
            "offset": "0x28810"
        },
        "__scrt_stub_for_acrt_uninitialize": {
            "offset": "0x28810"
        },
        "__scrt_stub_for_acrt_uninitialize_critical": {
            "offset": "0x28810"
        },
        "__scrt_stub_for_is_c_termination_complete": {
            "offset": "0x210B0"
        },
        "__scrt_throw_std_bad_alloc": {
            "offset": "0x91814"
        },
        "__scrt_throw_std_bad_array_new_length": {
            "offset": "0x19530"
        },
        "__scrt_uninitialize_crt": {
            "offset": "0x90A28"
        },
        "__scrt_uninitialize_thread_safe_statics": {
            "offset": "0x9051C"
        },
        "__scrt_uninitialize_type_info": {
            "offset": "0x90EA4"
        },
        "__security_check_cookie": {
            "offset": "0x90D70"
        },
        "__security_init_cookie": {
            "offset": "0x91840"
        },
        "__std_find_trivial_1": {
            "offset": "0x901B0"
        },
        "__std_find_trivial_8": {
            "offset": "0x90280"
        },
        "__std_init_once_link_alternate_names_and_abort": {
            "offset": "0x90400"
        },
        "_enableGroupHook": {
            "offset": "0x2A080"
        },
        "_getAvailableMemoryForStreamer": {
            "offset": "0x5C2F0"
        },
        "_get_startup_argv_mode": {
            "offset": "0x785F0"
        },
        "_guard_check_icall_nop": {
            "offset": "0x167B0"
        },
        "_guard_dispatch_icall_nop": {
            "offset": "0x91B10"
        },
        "_guard_xfg_dispatch_icall_nop": {
            "offset": "0x91B30"
        },
        "_onexit": {
            "offset": "0x90A54"
        },
        "_wwassert": {
            "offset": "0x80EE0"
        },
        "`CompTrace'::`2'::<unnamed-type-errorBit>::InternalMain": {
            "offset": "0x76C60"
        },
        "`Hook_StreamingSema'::`6'::<unnamed-type-weirdStub>::InternalMain": {
            "offset": "0x5EBD0"
        },
        "`Hook_StreamingSema'::`7'::<unnamed-type-weirdStub>::InternalMain": {
            "offset": "0x5EC30"
        },
        "`Hook_StreamingSema2699'::`3'::<unnamed-type-weirdStub>::InternalMain": {
            "offset": "0x5EB10"
        },
        "`Hook_StreamingSema2699'::`4'::<unnamed-type-weirdStub>::InternalMain": {
            "offset": "0x5EB70"
        },
        "`InsertStreamingModuleWrap'::`2'::StreamingOnLoadStub::InternalMain": {
            "offset": "0x6CA00"
        },
        "`SafeCall<<lambda_5cd72400bc154858438f9b9dbbf12639> >'::`1'::filt$0": {
            "offset": "0x92810"
        },
        "`__ArrayUnwind'::`1'::filt$0": {
            "offset": "0x96BD1"
        },
        "`anonymous namespace'::BC4_SNORM::DecodeFromIndex": {
            "offset": "0x8E6F0"
        },
        "`anonymous namespace'::BC4_UNORM::DecodeFromIndex": {
            "offset": "0x8E870"
        },
        "`anonymous namespace'::CBits<16>::GetBits": {
            "offset": "0x8FD80"
        },
        "`anonymous namespace'::ConvertCompare": {
            "offset": "0x894F0"
        },
        "`anonymous namespace'::D3DX_BC6H::Decode": {
            "offset": "0x8EA00"
        },
        "`anonymous namespace'::D3DX_BC6H::Unquantize": {
            "offset": "0x900B0"
        },
        "`anonymous namespace'::D3DX_BC7::Decode": {
            "offset": "0x8F1F0"
        },
        "`anonymous namespace'::DecompressBC": {
            "offset": "0x888F0"
        },
        "`anonymous namespace'::DefaultDecompress": {
            "offset": "0x88D30"
        },
        "`anonymous namespace'::FloatTo6e4": {
            "offset": "0x89510"
        },
        "`anonymous namespace'::FloatTo7e3": {
            "offset": "0x89580"
        },
        "`anonymous namespace'::INTColor::SignExtend": {
            "offset": "0x8FF10"
        },
        "`anonymous namespace'::TransformInverse": {
            "offset": "0x8FFA0"
        },
        "`anonymous namespace'::`dynamic initializer for 'g_WICFormats''": {
            "offset": "0xDD90"
        },
        "`anonymous namespace'::msgpack_array<float [3]>": {
            "offset": "0x2CC60"
        },
        "`dllmain_crt_process_attach'::`1'::fin$0": {
            "offset": "0x96C7A"
        },
        "`dllmain_crt_process_detach'::`1'::fin$0": {
            "offset": "0x96C91"
        },
        "`dllmain_crt_process_detach'::`1'::fin$1": {
            "offset": "0x96CAA"
        },
        "`dllmain_dispatch'::`1'::filt$0": {
            "offset": "0x96CBE"
        },
        "`dynamic initializer for 'CVehicleStreamRenderGfx_GetShaderEffect''": {
            "offset": "0x2350"
        },
        "`dynamic initializer for 'OnCreatePopulationPed''": {
            "offset": "0xB3F0"
        },
        "`dynamic initializer for 'OnEntityDamaged''": {
            "offset": "0x2A70"
        },
        "`dynamic initializer for 'OnRefreshArchetypesCollection''": {
            "offset": "0x13A0"
        },
        "`dynamic initializer for 'OnRefreshArchetypesCollectionDone''": {
            "offset": "0x13B0"
        },
        "`dynamic initializer for 'OnReloadMapStore''": {
            "offset": "0x3060"
        },
        "`dynamic initializer for 'OnTriggerGameEvent''": {
            "offset": "0x2A80"
        },
        "`dynamic initializer for 'OnTriggerGameEventExt''": {
            "offset": "0x2A90"
        },
        "`dynamic initializer for 'SeenDuplicates''": {
            "offset": "0x25C0"
        },
        "`dynamic initializer for '_IsObjectInImage''": {
            "offset": "0x2C60"
        },
        "`dynamic initializer for '__GFxObjectInterface_CreateEmptyMovieClip''": {
            "offset": "0xBB10"
        },
        "`dynamic initializer for '__GFxObjectInterface_GetDisplayInfo''": {
            "offset": "0xBB50"
        },
        "`dynamic initializer for '__GFxObjectInterface_GetMember''": {
            "offset": "0xBB90"
        },
        "`dynamic initializer for '__GFxObjectInterface_Invoke''": {
            "offset": "0xBBD0"
        },
        "`dynamic initializer for '__GFxObjectInterface_ObjectRelease''": {
            "offset": "0xBC10"
        },
        "`dynamic initializer for '__GFxObjectInterface_SetDisplayInfo''": {
            "offset": "0xBC50"
        },
        "`dynamic initializer for '_addPackfile''": {
            "offset": "0x3070"
        },
        "`dynamic initializer for '_clearManifestChunk''": {
            "offset": "0x30B0"
        },
        "`dynamic initializer for '_computePhysicalSize''": {
            "offset": "0xC380"
        },
        "`dynamic initializer for '_computeVirtualSize''": {
            "offset": "0xC3C0"
        },
        "`dynamic initializer for '_doesPedComponentDrawableExist''": {
            "offset": "0x9D90"
        },
        "`dynamic initializer for '_doesPedPropExist''": {
            "offset": "0x9DD0"
        },
        "`dynamic initializer for '_getAllPedArchetypes''": {
            "offset": "0x30F0"
        },
        "`dynamic initializer for '_getDependents''": {
            "offset": "0xC400"
        },
        "`dynamic initializer for '_getDependentsInner''": {
            "offset": "0xC440"
        },
        "`dynamic initializer for '_getIndexByKey''": {
            "offset": "0x3130"
        },
        "`dynamic initializer for '_getScaleformASRoot''": {
            "offset": "0xBC90"
        },
        "`dynamic initializer for '_getScaleformMovie''": {
            "offset": "0xBCD0"
        },
        "`dynamic initializer for '_getStrIndicesForArchive''": {
            "offset": "0x2CA0"
        },
        "`dynamic initializer for '_gfxMovieRoot_getLevelMovie''": {
            "offset": "0xD180"
        },
        "`dynamic initializer for '_gfxPushInt''": {
            "offset": "0xBD10"
        },
        "`dynamic initializer for '_gfxPushString''": {
            "offset": "0xBD50"
        },
        "`dynamic initializer for '_hashMapAdd''": {
            "offset": "0x2CE0"
        },
        "`dynamic initializer for '_initManifestChunk''": {
            "offset": "0x3170"
        },
        "`dynamic initializer for '_initVehiclePaintRamps''": {
            "offset": "0x31B0"
        },
        "`dynamic initializer for '_init_instance_0''": {
            "offset": "0x1000"
        },
        "`dynamic initializer for '_init_instance_1''": {
            "offset": "0x16A0"
        },
        "`dynamic initializer for '_init_instance_14''": {
            "offset": "0x1AF0"
        },
        "`dynamic initializer for '_init_instance_2''": {
            "offset": "0x16D0"
        },
        "`dynamic initializer for '_init_instance_22''": {
            "offset": "0x31F0"
        },
        "`dynamic initializer for '_init_instance_23''": {
            "offset": "0x3220"
        },
        "`dynamic initializer for '_init_instance_24''": {
            "offset": "0x3250"
        },
        "`dynamic initializer for '_init_instance_25''": {
            "offset": "0x3280"
        },
        "`dynamic initializer for '_init_instance_3''": {
            "offset": "0xAAE0"
        },
        "`dynamic initializer for '_init_instance_33''": {
            "offset": "0xAF90"
        },
        "`dynamic initializer for '_init_instance_34''": {
            "offset": "0xCD70"
        },
        "`dynamic initializer for '_init_instance_35''": {
            "offset": "0xCDA0"
        },
        "`dynamic initializer for '_init_instance_40''": {
            "offset": "0xA410"
        },
        "`dynamic initializer for '_init_instance_41''": {
            "offset": "0xA440"
        },
        "`dynamic initializer for '_init_instance_42''": {
            "offset": "0xC920"
        },
        "`dynamic initializer for '_init_instance_43''": {
            "offset": "0x1700"
        },
        "`dynamic initializer for '_init_instance_59''": {
            "offset": "0x13C0"
        },
        "`dynamic initializer for '_init_instance_71''": {
            "offset": "0x32B0"
        },
        "`dynamic initializer for '_isReadyToDelete''": {
            "offset": "0xC480"
        },
        "`dynamic initializer for '_isResourceNotCached''": {
            "offset": "0x32E0"
        },
        "`dynamic initializer for '_loadCacheFile''": {
            "offset": "0x1730"
        },
        "`dynamic initializer for '_loadManifestChunk''": {
            "offset": "0x3320"
        },
        "`dynamic initializer for '_mapD3DFMT''": {
            "offset": "0x1F90"
        },
        "`dynamic initializer for '_parseCache''": {
            "offset": "0x1770"
        },
        "`dynamic initializer for '_reloadMapIfNeeded''": {
            "offset": "0x3360"
        },
        "`dynamic initializer for '_removePackfile''": {
            "offset": "0x33A0"
        },
        "`dynamic initializer for '_resyncStreamers''": {
            "offset": "0x33E0"
        },
        "`dynamic initializer for '_setupGfxCall''": {
            "offset": "0xBE20"
        },
        "`dynamic initializer for '_unloadTextureLODs''": {
            "offset": "0x3420"
        },
        "`dynamic initializer for '_updateVideoMemoryBar''": {
            "offset": "0x99D0"
        },
        "`dynamic initializer for '_waitUntilStreamerClear''": {
            "offset": "0x3460"
        },
        "`dynamic initializer for 'addExtension''": {
            "offset": "0x2670"
        },
        "`dynamic initializer for 'addToScene''": {
            "offset": "0xB040"
        },
        "`dynamic initializer for 'atHashMap_bool_insert''": {
            "offset": "0x17B0"
        },
        "`dynamic initializer for 'calculateBVH''": {
            "offset": "0x1B20"
        },
        "`dynamic initializer for 'dataFileMgr__getNextEntry''": {
            "offset": "0xB080"
        },
        "`dynamic initializer for 'fwAssetStoreBase__isResourceValid''": {
            "offset": "0xC980"
        },
        "`dynamic initializer for 'fwEntityDef__instantiate''": {
            "offset": "0xB0C0"
        },
        "`dynamic initializer for 'fwEntity__ProtectStreamedArchetype''": {
            "offset": "0x26B0"
        },
        "`dynamic initializer for 'g_afterLevelMetas''": {
            "offset": "0x34A0"
        },
        "`dynamic initializer for 'g_appendToCache''": {
            "offset": "0x17F0"
        },
        "`dynamic initializer for 'g_beforeLevelMetas''": {
            "offset": "0x34B0"
        },
        "`dynamic initializer for 'g_blockedNames2189''": {
            "offset": "0x34C0"
        },
        "`dynamic initializer for 'g_blockedNames2372''": {
            "offset": "0x6E60"
        },
        "`dynamic initializer for 'g_currentStreamingName''": {
            "offset": "0xB6D0"
        },
        "`dynamic initializer for 'g_customStreamingFileRefs''": {
            "offset": "0x8930"
        },
        "`dynamic initializer for 'g_customStreamingFiles''": {
            "offset": "0x1B60"
        },
        "`dynamic initializer for 'g_customStreamingFilesByTag''": {
            "offset": "0x1B70"
        },
        "`dynamic initializer for 'g_dataFiles''": {
            "offset": "0x89F0"
        },
        "`dynamic initializer for 'g_defaultMetas''": {
            "offset": "0x8A00"
        },
        "`dynamic initializer for 'g_dummyPackfileMutex''": {
            "offset": "0x1800"
        },
        "`dynamic initializer for 'g_dummyPackfiles''": {
            "offset": "0x1830"
        },
        "`dynamic initializer for 'g_failures''": {
            "offset": "0xA470"
        },
        "`dynamic initializer for 'g_fontIds''": {
            "offset": "0xD1F0"
        },
        "`dynamic initializer for 'g_fontLoadQueue''": {
            "offset": "0xD5E0"
        },
        "`dynamic initializer for 'g_forceSemaQueue''": {
            "offset": "0xA580"
        },
        "`dynamic initializer for 'g_getStreamingModule''": {
            "offset": "0xC4C0"
        },
        "`dynamic initializer for 'g_getStreamingModuleFromExt''": {
            "offset": "0xC500"
        },
        "`dynamic initializer for 'g_gtxdFiles''": {
            "offset": "0x8A10"
        },
        "`dynamic initializer for 'g_handleMap''": {
            "offset": "0xA5F0"
        },
        "`dynamic initializer for 'g_handleSprite''": {
            "offset": "0xD620"
        },
        "`dynamic initializer for 'g_handleStack''": {
            "offset": "0x8A20"
        },
        "`dynamic initializer for 'g_handlesToTag''": {
            "offset": "0x8AA0"
        },
        "`dynamic initializer for 'g_hashes''": {
            "offset": "0x1BB0"
        },
        "`dynamic initializer for 'g_itypHashList''": {
            "offset": "0x8BA0"
        },
        "`dynamic initializer for 'g_itypRequests''": {
            "offset": "0xB100"
        },
        "`dynamic initializer for 'g_itypToMapDataDeps''": {
            "offset": "0x8BE0"
        },
        "`dynamic initializer for 'g_jsonRequests''": {
            "offset": "0xB110"
        },
        "`dynamic initializer for 'g_lastStreamingName''": {
            "offset": "0x1BF0"
        },
        "`dynamic initializer for 'g_loadObjectsNow''": {
            "offset": "0xC540"
        },
        "`dynamic initializer for 'g_loadedDataFiles''": {
            "offset": "0x8C60"
        },
        "`dynamic initializer for 'g_loadedFonts''": {
            "offset": "0xD650"
        },
        "`dynamic initializer for 'g_manifestNames''": {
            "offset": "0x8C70"
        },
        "`dynamic initializer for 'g_mapTypesFiles''": {
            "offset": "0x13F0"
        },
        "`dynamic initializer for 'g_minimapOverlayLoadQueue''": {
            "offset": "0xBE60"
        },
        "`dynamic initializer for 'g_minimapOverlayRemoveQueue''": {
            "offset": "0xBEA0"
        },
        "`dynamic initializer for 'g_oldEntryList''": {
            "offset": "0x8CB0"
        },
        "`dynamic initializer for 'g_onCriticalFrameQueue''": {
            "offset": "0xA700"
        },
        "`dynamic initializer for 'g_ourIndexes''": {
            "offset": "0x8CC0"
        },
        "`dynamic initializer for 'g_overlayClips''": {
            "offset": "0xBEE0"
        },
        "`dynamic initializer for 'g_pedsToRegister''": {
            "offset": "0x8D40"
        },
        "`dynamic initializer for 'g_pendingRemovals''": {
            "offset": "0x8D80"
        },
        "`dynamic initializer for 'g_permanentItyps''": {
            "offset": "0x8DC0"
        },
        "`dynamic initializer for 'g_registerObject''": {
            "offset": "0xC580"
        },
        "`dynamic initializer for 'g_registerRawStreamingFile''": {
            "offset": "0xC5C0"
        },
        "`dynamic initializer for 'g_registeredFileSet''": {
            "offset": "0x1C00"
        },
        "`dynamic initializer for 'g_releaseObject''": {
            "offset": "0xC600"
        },
        "`dynamic initializer for 'g_releaseSystemObject''": {
            "offset": "0xC640"
        },
        "`dynamic initializer for 'g_removalQueue''": {
            "offset": "0xA770"
        },
        "`dynamic initializer for 'g_requestObject''": {
            "offset": "0xC680"
        },
        "`dynamic initializer for 'g_resourceStats''": {
            "offset": "0x8E00"
        },
        "`dynamic initializer for 'g_sceneContentsList''": {
            "offset": "0xB120"
        },
        "`dynamic initializer for 'g_streamingHashStoresToIndices''": {
            "offset": "0xC9C0"
        },
        "`dynamic initializer for 'g_streamingHashesToNames''": {
            "offset": "0xCA00"
        },
        "`dynamic initializer for 'g_streamingIndexesToNames''": {
            "offset": "0xCA80"
        },
        "`dynamic initializer for 'g_streamingNamesToIndices''": {
            "offset": "0xCB00"
        },
        "`dynamic initializer for 'g_streamingSuffixSet''": {
            "offset": "0x8E80"
        },
        "`dynamic initializer for 'g_thisError''": {
            "offset": "0x1030"
        },
        "`dynamic initializer for 'g_undoTxdRelationships''": {
            "offset": "0x8F90"
        },
        "`dynamic initializer for 'g_unregisterObject''": {
            "offset": "0xC6C0"
        },
        "`dynamic initializer for 'getArchetype''": {
            "offset": "0x26F0"
        },
        "`dynamic initializer for 'getArchetypeFromModelIndex''": {
            "offset": "0xB400"
        },
        "`dynamic initializer for 'getBoneIndexFromTag''": {
            "offset": "0xAB50"
        },
        "`dynamic initializer for 'getExtension''": {
            "offset": "0x2730"
        },
        "`dynamic initializer for 'getRawStreamer''": {
            "offset": "0x8FD0"
        },
        "`dynamic initializer for 'getScriptEntity''": {
            "offset": "0x2770"
        },
        "`dynamic initializer for 'getScriptGuidForEntity''": {
            "offset": "0x27B0"
        },
        "`dynamic initializer for 'hasModelLoaded''": {
            "offset": "0xB440"
        },
        "`dynamic initializer for 'hookFunction''": {
            "offset": "0x1D10"
        },
        "`dynamic initializer for 'hookFunctionMetadataDep''": {
            "offset": "0x9E10"
        },
        "`dynamic initializer for 'hookFunctionSeatManager''": {
            "offset": "0xB170"
        },
        "`dynamic initializer for 'initFunction''": {
            "offset": "0x18F0"
        },
        "`dynamic initializer for 'initGfxTexture''": {
            "offset": "0x9050"
        },
        "`dynamic initializer for 'initHookingFunction''": {
            "offset": "0xD850"
        },
        "`dynamic initializer for 'initIoBuf''": {
            "offset": "0xDBA0"
        },
        "`dynamic initializer for 'loadManifest''": {
            "offset": "0x9210"
        },
        "`dynamic initializer for 'loadedCollisions''": {
            "offset": "0x9250"
        },
        "`dynamic initializer for 'makeMapDataContents''": {
            "offset": "0xB330"
        },
        "`dynamic initializer for 'overlayRootClip''": {
            "offset": "0xC370"
        },
        "`dynamic initializer for 'pgRawStreamer_AssetsCountCmd''": {
            "offset": "0x92D0"
        },
        "`dynamic initializer for 'phBoundGeometry_DeleteOctantMap''": {
            "offset": "0xB8D0"
        },
        "`dynamic initializer for 'phBoundGeometry_RecomputeOctantMap''": {
            "offset": "0xB910"
        },
        "`dynamic initializer for 'rage__fwArchetypeManager__FreeArchetypes''": {
            "offset": "0x93F0"
        },
        "`dynamic initializer for 'registerArchetype''": {
            "offset": "0xB370"
        },
        "`dynamic initializer for 'removeFromScene''": {
            "offset": "0xB3B0"
        },
        "`dynamic initializer for 's_newTypesIds''": {
            "offset": "0x29B0"
        },
        "`dynamic initializer for 'strRefCounts''": {
            "offset": "0xA9A0"
        },
        "`dynamic initializer for 'strRefCountsMutex''": {
            "offset": "0xAA20"
        },
        "`dynamic initializer for 'tbb::detail::r1::concurrent_monitor_mutex::my_init_mutex''": {
            "offset": "0xDD30"
        },
        "`dynamic initializer for 'xbr::virt::Base<1,2802,2,6>::ms_initFunction''": {
            "offset": "0x11E0"
        },
        "`dynamic initializer for 'xbr::virt::Base<15,2802,0,6>::ms_initFunction''": {
            "offset": "0x1360"
        },
        "`dynamic initializer for 'xbr::virt::Base<18,2802,0,6>::ms_initFunction''": {
            "offset": "0x1220"
        },
        "`dynamic initializer for 'xbr::virt::Base<22,2802,0,6>::ms_initFunction''": {
            "offset": "0x1AB0"
        },
        "`dynamic initializer for 'xbr::virt::Base<23,2802,0,6>::ms_initFunction''": {
            "offset": "0x1260"
        },
        "`dynamic initializer for 'xbr::virt::Base<26,2802,0,6>::ms_initFunction''": {
            "offset": "0x12A0"
        },
        "`dynamic initializer for 'xbr::virt::Base<27,2802,0,6>::ms_initFunction''": {
            "offset": "0x2EE0"
        },
        "`dynamic initializer for 'xbr::virt::Base<29,2802,0,6>::ms_initFunction''": {
            "offset": "0x12E0"
        },
        "`dynamic initializer for 'xbr::virt::Base<32,2802,2,6>::ms_initFunction''": {
            "offset": "0x98C0"
        },
        "`dynamic initializer for 'xbr::virt::Base<34,2802,0,6>::ms_initFunction''": {
            "offset": "0x1320"
        },
        "`dynamic initializer for 'xbr::virt::Base<35,2802,0,6>::ms_initFunction''": {
            "offset": "0xAF10"
        },
        "`dynamic initializer for 'xbr::virt::Base<4,2802,0,6>::ms_initFunction''": {
            "offset": "0x9880"
        },
        "`dynamic initializer for 'xbr::virt::Base<4,2802,2,6>::ms_initFunction''": {
            "offset": "0x1630"
        },
        "`dynamic initializer for 'xbr::virt::Base<43,2802,0,6>::ms_initFunction''": {
            "offset": "0xA350"
        },
        "`dynamic initializer for 'xbr::virt::Base<46,2802,0,6>::ms_initFunction''": {
            "offset": "0x9900"
        },
        "`dynamic initializer for 'xbr::virt::Base<51,2802,0,6>::ms_initFunction''": {
            "offset": "0xA390"
        },
        "`dynamic initializer for 'xbr::virt::Base<53,2802,0,6>::ms_initFunction''": {
            "offset": "0x2F20"
        },
        "`dynamic initializer for 'xbr::virt::Base<54,2802,0,6>::ms_initFunction''": {
            "offset": "0xA3D0"
        },
        "`dynamic initializer for 'xbr::virt::Base<56,2802,0,6>::ms_initFunction''": {
            "offset": "0x2F60"
        },
        "`dynamic initializer for 'xbr::virt::Base<57,2802,0,6>::ms_initFunction''": {
            "offset": "0x2A30"
        },
        "`dynamic initializer for 'xbr::virt::Base<61,2802,0,6>::ms_initFunction''": {
            "offset": "0x2FA0"
        },
        "`dynamic initializer for 'xbr::virt::Base<64,2802,0,6>::ms_initFunction''": {
            "offset": "0x2FE0"
        },
        "`dynamic initializer for 'xbr::virt::Base<67,2802,0,6>::ms_initFunction''": {
            "offset": "0x3020"
        },
        "`jitasm::compiler::PrepareCompile'::`2'::RegIDMap::RegIDMap": {
            "offset": "0x3A760"
        },
        "`jitasm::compiler::PrepareCompile'::`2'::RegIDMap::~RegIDMap": {
            "offset": "0x3B5D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_2730b6c68f930e168344f035418efbb7>,bool,ConsoleExecutionContext &>,<lambda_2730b6c68f930e168344f035418efbb7> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x23010"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>,bool,ConsoleExecutionContext &>,<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x23010"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x5A4C0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x5A4C0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>,<lambda_55b0750980631035f31e5def29397b5e> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x5FBC0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>,<lambda_55b0750980631035f31e5def29397b5e> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x5FBC0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>,<lambda_72ae5b0e2f813e08b01a5e2876e67561> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x23010"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>,<lambda_7604da78e8f33a312c72ae5a43f9b93b> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x23010"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>,<lambda_814d5e0b3a45fa1dd158672480f6c4ca> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x23010"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>,bool,ConsoleExecutionContext &>,<lambda_9eb0329f5ef69cc2910674ebb0cb78aa> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x23010"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>,<lambda_bf7610c50ebb1884e5917f6a81016c78> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x5A4C0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>,<lambda_bf7610c50ebb1884e5917f6a81016c78> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x5A4C0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_e4ba7588b360fe652a3faff73b7b991b>,void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,<lambda_e4ba7588b360fe652a3faff73b7b991b> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x5FBE0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>,<lambda_f17ebabe33bc32be107ce6fff046b802> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x23010"
        },
        "atArray<CPedModelInfo *>::~atArray<CPedModelInfo *>": {
            "offset": "0x1DB30"
        },
        "atArray<fwEntityDef *>::~atArray<fwEntityDef *>": {
            "offset": "0x1DB30"
        },
        "atArray<fwExtensionDef *>::atArray<fwExtensionDef *>": {
            "offset": "0x1CD20"
        },
        "atArray<fwExtensionDef *>::~atArray<fwExtensionDef *>": {
            "offset": "0x1DB30"
        },
        "atArray<std::array<float,3> >::~atArray<std::array<float,3> >": {
            "offset": "0x1DB30"
        },
        "atArray<streaming::strStreamingModule *>::atArray<streaming::strStreamingModule *>": {
            "offset": "0x1CD20"
        },
        "atArray<unsigned int>::~atArray<unsigned int>": {
            "offset": "0x1DB30"
        },
        "atHashMap<bool>::~atHashMap<bool>": {
            "offset": "0x22CE0"
        },
        "atPoolBase::GetCount": {
            "offset": "0x204B0"
        },
        "atexit": {
            "offset": "0x90A90"
        },
        "bigUpdate": {
            "offset": "0x5C330"
        },
        "capture_previous_context": {
            "offset": "0x91498"
        },
        "chunkyArrayAppend": {
            "offset": "0x54EE0"
        },
        "console::DPrintf<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,unsigned int>": {
            "offset": "0x30690"
        },
        "console::DPrintfv": {
            "offset": "0x44620"
        },
        "console::PrintWarning<char const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x288C0"
        },
        "console::PrintWarning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x59E60"
        },
        "console::Printfv": {
            "offset": "0x5BD20"
        },
        "dllmain_crt_dispatch": {
            "offset": "0x91030"
        },
        "dllmain_crt_process_attach": {
            "offset": "0x91080"
        },
        "dllmain_crt_process_detach": {
            "offset": "0x91198"
        },
        "dllmain_dispatch": {
            "offset": "0x9121C"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::grow": {
            "offset": "0x19B70"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::~basic_memory_buffer<char,500,std::allocator<char> >": {
            "offset": "0x16870"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::grow": {
            "offset": "0x7F4F0"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::~basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >": {
            "offset": "0x7EB80"
        },
        "fmt::v8::detail::add_compare": {
            "offset": "0x7ED00"
        },
        "fmt::v8::detail::assert_fail": {
            "offset": "0x7EE40"
        },
        "fmt::v8::detail::bigint::assign_pow10": {
            "offset": "0x7EE90"
        },
        "fmt::v8::detail::bigint::divmod_assign": {
            "offset": "0x7F060"
        },
        "fmt::v8::detail::bigint::square": {
            "offset": "0x7F8C0"
        },
        "fmt::v8::detail::bigint::~bigint": {
            "offset": "0x7EB80"
        },
        "fmt::v8::detail::buffer<char>::append<char>": {
            "offset": "0xF080"
        },
        "fmt::v8::detail::buffer<char>::try_resize": {
            "offset": "0x7FB80"
        },
        "fmt::v8::detail::compare": {
            "offset": "0x7EFC0"
        },
        "fmt::v8::detail::count_digits": {
            "offset": "0x19950"
        },
        "fmt::v8::detail::decimal_point_impl<char>": {
            "offset": "0x7B6D0"
        },
        "fmt::v8::detail::do_throw<fmt::v8::format_error>": {
            "offset": "0xF130"
        },
        "fmt::v8::detail::dragonbox::cache_accessor<double>::get_cached_power": {
            "offset": "0x7F3C0"
        },
        "fmt::v8::detail::dragonbox::is_endpoint_integer<double>": {
            "offset": "0x7D5A0"
        },
        "fmt::v8::detail::dragonbox::remove_trailing_zeros": {
            "offset": "0x7F6A0"
        },
        "fmt::v8::detail::dragonbox::shorter_interval_case<float>": {
            "offset": "0x7D5D0"
        },
        "fmt::v8::detail::dragonbox::to_decimal<double>": {
            "offset": "0x7E290"
        },
        "fmt::v8::detail::dragonbox::to_decimal<float>": {
            "offset": "0x7DE60"
        },
        "fmt::v8::detail::error_handler::on_error": {
            "offset": "0x7F620"
        },
        "fmt::v8::detail::fallback_format<double>": {
            "offset": "0x7B7E0"
        },
        "fmt::v8::detail::fallback_format<long double>": {
            "offset": "0x7B7E0"
        },
        "fmt::v8::detail::fmt_snprintf": {
            "offset": "0x7F350"
        },
        "fmt::v8::detail::for_each_codepoint<`fmt::v8::detail::compute_width'::`2'::count_code_points>": {
            "offset": "0xF160"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64,fmt::v8::appender,0>": {
            "offset": "0x7CC90"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64>": {
            "offset": "0xF430"
        },
        "fmt::v8::detail::format_decimal<char,unsigned int,fmt::v8::appender,0>": {
            "offset": "0x7CB70"
        },
        "fmt::v8::detail::format_float<double>": {
            "offset": "0x7B220"
        },
        "fmt::v8::detail::format_float<long double>": {
            "offset": "0x7CDD0"
        },
        "fmt::v8::detail::format_uint<4,char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0xF510"
        },
        "fmt::v8::detail::grisu_gen_digits<fmt::v8::detail::fixed_handler>": {
            "offset": "0x7D130"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,char>": {
            "offset": "0xF630"
        },
        "fmt::v8::detail::parse_header<char,<lambda_10b59f138e704e35b5296527d0235f76> >": {
            "offset": "0xF790"
        },
        "fmt::v8::detail::parse_nonnegative_int<char>": {
            "offset": "0xF9F0"
        },
        "fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>::write_null_pointer": {
            "offset": "0x1A6E0"
        },
        "fmt::v8::detail::snprintf_float<double>": {
            "offset": "0x7D7E0"
        },
        "fmt::v8::detail::snprintf_float<long double>": {
            "offset": "0x7DA60"
        },
        "fmt::v8::detail::thousands_sep_impl<char>": {
            "offset": "0x7DCF0"
        },
        "fmt::v8::detail::thousands_sep_result<char>::~thousands_sep_result<char>": {
            "offset": "0x168D0"
        },
        "fmt::v8::detail::to_unsigned<int>": {
            "offset": "0xFAC0"
        },
        "fmt::v8::detail::utf8_decode": {
            "offset": "0x1A520"
        },
        "fmt::v8::detail::vprintf<char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x110C0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,double,0>": {
            "offset": "0x120C0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,float,0>": {
            "offset": "0x11C70"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,long double,0>": {
            "offset": "0x12500"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned __int64,0>": {
            "offset": "0x7E8F0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned int,0>": {
            "offset": "0x7E7D0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender>": {
            "offset": "0x11BA0"
        },
        "fmt::v8::detail::write_char<char,fmt::v8::appender>": {
            "offset": "0x12940"
        },
        "fmt::v8::detail::write_exponent<char,fmt::v8::appender>": {
            "offset": "0x12980"
        },
        "fmt::v8::detail::write_float<fmt::v8::appender,fmt::v8::detail::big_decimal_fp,char>": {
            "offset": "0x12B10"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x134D0"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned int>": {
            "offset": "0x12EE0"
        },
        "fmt::v8::detail::write_int_data<char>::write_int_data<char>": {
            "offset": "0x16460"
        },
        "fmt::v8::detail::write_int_localized<fmt::v8::appender,unsigned __int64,char>": {
            "offset": "0x13C00"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_051aec1ce4ed0271119623a7e83ac6a5> &>": {
            "offset": "0x14020"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_22cb150d85fca5a3ac6a96f517638e39> &>": {
            "offset": "0x141F0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_69652fb90da4a77ba8cf5fef5ea19cdd> >": {
            "offset": "0x14390"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_fbd162939e03e0c955beb05a33c24f5e> &>": {
            "offset": "0x14390"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_02a1634acea1c2868026d163185cc0d5> &>": {
            "offset": "0x14520"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06b2adfe852a46c8d65fe26cc7c8ca5d> &>": {
            "offset": "0x14740"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06f64a48a5b4f184684d74740837f1c7> &>": {
            "offset": "0x148C0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_2d30ec7f416bbcee3bc8a87df0c22c03> >": {
            "offset": "0x16050"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_33ba7a720adff5c90e1946d777cb5230> &>": {
            "offset": "0x14A50"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_4ea56d52f8212d84933fa76e5a159b3f> &>": {
            "offset": "0x14C70"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_514469ad4ff2f796c2a70ef6994dff64> &>": {
            "offset": "0x14F10"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_596cc5dacf733e82dcb56ca6ee54b81f> &>": {
            "offset": "0x15130"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_686459aaae64d4cbdde6763d637485ac> &>": {
            "offset": "0x152B0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_694eb9c30a49e7dae164c077f09b5a7f> &>": {
            "offset": "0x154D0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_8cce229a1891be08a4c6e75623ca3fd6> &>": {
            "offset": "0x156F0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_b9c069f91a736dafbdb5ba8344e9f4c8> &>": {
            "offset": "0x15870"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_cb4d4b26b782de201d2a0edc777aea57> &>": {
            "offset": "0x15A90"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_de0fdbc03b7ebc9cd9291e836878da40> &>": {
            "offset": "0x15C10"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_f811a0db88237a09377d34dce98c0f31> &>": {
            "offset": "0x15E30"
        },
        "fmt::v8::detail::write_ptr<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x161E0"
        },
        "fmt::v8::format_error::format_error": {
            "offset": "0x16660"
        },
        "fmt::v8::format_error::~format_error": {
            "offset": "0x16A00"
        },
        "fmt::v8::sprintf<char [43],std::basic_string_view<char,std::char_traits<char> >,char const *,char>": {
            "offset": "0x81920"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0xFF30"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0xFD10"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0xFBE0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0xFAF0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0xFF30"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0xFE00"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x10060"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x10BC0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x105F0"
        },
        "fmt::v8::vsprintf<fmt::v8::basic_string_view<char>,char>": {
            "offset": "0x22B50"
        },
        "fmt::v8::vsprintf<std::basic_string_view<char,std::char_traits<char> >,char>": {
            "offset": "0x821C0"
        },
        "fprintf": {
            "offset": "0x1A7A0"
        },
        "fwAltSkeletonExtension__Add": {
            "offset": "0x29730"
        },
        "fwArchetypeDef::fwArchetypeDef": {
            "offset": "0x1D730"
        },
        "fwArchetypeDef::~fwArchetypeDef": {
            "offset": "0x1E160"
        },
        "fwEntity::AddExtension": {
            "offset": "0x1FE20"
        },
        "fwEntity::AddToScene": {
            "offset": "0x1FE30"
        },
        "fwEntity::AddToSceneWrap": {
            "offset": "0x1FE90"
        },
        "fwEntity::GetArchetype": {
            "offset": "0x204A0"
        },
        "fwEntity::GetExtension": {
            "offset": "0x204E0"
        },
        "fwEntity::GetNetObject": {
            "offset": "0x20630"
        },
        "fwEntity::GetOwnedBy": {
            "offset": "0x20650"
        },
        "fwEntity::GetPosition": {
            "offset": "0x20660"
        },
        "fwEntity::GetProtectedFlags": {
            "offset": "0x20680"
        },
        "fwEntity::GetRadius": {
            "offset": "0x20690"
        },
        "fwEntity::GetTransform": {
            "offset": "0x206F0"
        },
        "fwEntity::GetType": {
            "offset": "0x20700"
        },
        "fwEntity::IsDynamicEntity": {
            "offset": "0x20750"
        },
        "fwEntity::IsOfType": {
            "offset": "0x20760"
        },
        "fwEntity::IsOfTypeH": {
            "offset": "0x2BAC0"
        },
        "fwEntity::ProtectStreamedArchetype": {
            "offset": "0x2BD10"
        },
        "fwEntity::RemoveFromScene": {
            "offset": "0x20950"
        },
        "fwEntity::SetModelIndex": {
            "offset": "0x20A20"
        },
        "fwEntity::SetTransform": {
            "offset": "0x20A90"
        },
        "fwEntity::SetupFromEntityDef": {
            "offset": "0x20B20"
        },
        "fwEntity::UpdateTransform": {
            "offset": "0x20BB0"
        },
        "fwEntity::fwEntity": {
            "offset": "0x1D840"
        },
        "fwEntity::~fwEntity": {
            "offset": "0x167B0"
        },
        "fwEntityDef::fwEntityDef": {
            "offset": "0x1D8E0"
        },
        "fwEntityDef::~fwEntityDef": {
            "offset": "0x1E190"
        },
        "fwEntity_DtorWrap": {
            "offset": "0x622A0"
        },
        "fwEvent<>::ConnectInternal": {
            "offset": "0x20210"
        },
        "fwEvent<>::callback::~callback": {
            "offset": "0x1E090"
        },
        "fwEvent<>::~fwEvent<>": {
            "offset": "0x1DC50"
        },
        "fwEvent<char const *>::ConnectInternal": {
            "offset": "0x20210"
        },
        "fwEvent<enum rage::InitFunctionType>::ConnectInternal": {
            "offset": "0x20210"
        },
        "fwExtensionDef::~fwExtensionDef": {
            "offset": "0x1E1E0"
        },
        "fwExtensionDefImpl2802::_2802_1": {
            "offset": "0x210B0"
        },
        "fwExtensionDefImpl2802::_2802_2": {
            "offset": "0x210B0"
        },
        "fwExtensionDefImpl2802::_2802_3": {
            "offset": "0x210B0"
        },
        "fwExtensionDefImpl2802::_2802_4": {
            "offset": "0x210B0"
        },
        "fwExtensionDefImpl2802::_2802_5": {
            "offset": "0x210B0"
        },
        "fwExtensionDefImpl2802::_2802_6": {
            "offset": "0x210B0"
        },
        "fwExtensionDefImpl2802::fwExtensionDefImpl2802": {
            "offset": "0x1D960"
        },
        "fwExtensionDefImpl2802::~fwExtensionDefImpl2802": {
            "offset": "0x167B0"
        },
        "fwExtensionDefImplOld::fwExtensionDefImplOld": {
            "offset": "0x1D990"
        },
        "fwExtensionDefImplOld::~fwExtensionDefImplOld": {
            "offset": "0x167B0"
        },
        "fwExtensionList::Add": {
            "offset": "0x2B1E0"
        },
        "fwExtensionList::Get": {
            "offset": "0x2B650"
        },
        "fwMapDataStore__FinishLoadingHook": {
            "offset": "0x56000"
        },
        "fwMapDataStore__ModifyHierarchyStatusRecursive": {
            "offset": "0x562F0"
        },
        "fwMapTypesStore__Unload": {
            "offset": "0x56330"
        },
        "fwMapTypes__ConstructArchetypesStub": {
            "offset": "0x565F0"
        },
        "fwPlatformString::fwPlatformString": {
            "offset": "0x6F910"
        },
        "fwPlatformString::~fwPlatformString": {
            "offset": "0x16A20"
        },
        "fwRefContainer<vfs::Device>::~fwRefContainer<vfs::Device>": {
            "offset": "0x22DF0"
        },
        "fwRefCountable::AddRef": {
            "offset": "0x841B0"
        },
        "fwRefCountable::Release": {
            "offset": "0x841C0"
        },
        "fwRefCountable::~fwRefCountable": {
            "offset": "0x841A0"
        },
        "fwSceneUpdateExtension::GetClassId": {
            "offset": "0x2B680"
        },
        "fwSceneUpdateExtension::GetUpdateFlags": {
            "offset": "0x20710"
        },
        "fwSceneUpdateExtension::fwSceneUpdateExtension": {
            "offset": "0x1D9D0"
        },
        "fwSceneUpdateExtension::~fwSceneUpdateExtension": {
            "offset": "0x167B0"
        },
        "fwStaticBoundsStore__ModifyHierarchyStatus": {
            "offset": "0x56620"
        },
        "grcTextureDX11_CtorWrap": {
            "offset": "0x28D80"
        },
        "grcTextureDX11_resolvePtr": {
            "offset": "0x28E40"
        },
        "grcTexturePC_CtorWrap": {
            "offset": "0x28E70"
        },
        "hde64_disasm": {
            "offset": "0x854C0"
        },
        "hook::AllocateFunctionStub": {
            "offset": "0x832F0"
        },
        "hook::AllocateStubMemory": {
            "offset": "0x83350"
        },
        "hook::TransformPattern": {
            "offset": "0x83A50"
        },
        "hook::call<void *,char *>": {
            "offset": "0x5F400"
        },
        "hook::call<void *,void *>": {
            "offset": "0x5F400"
        },
        "hook::details::StubInitFunction::Run": {
            "offset": "0x220F0"
        },
        "hook::get_adjusted<__int64>": {
            "offset": "0x57AD0"
        },
        "hook::get_pattern<EnumEntry,24>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,18>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,21>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,26>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,27>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,29>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,30>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,32>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,33>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,35>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,36>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,37>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,38>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,39>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,40>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,42>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,44>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,46>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,48>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,51>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char,59>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<char>": {
            "offset": "0x57B00"
        },
        "hook::get_pattern<int,40>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<int>": {
            "offset": "0x57B00"
        },
        "hook::get_pattern<signed char,27>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<unsigned char,38>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<unsigned char,48>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<unsigned char,51>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<unsigned int,41>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,12>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,15>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,18>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,20>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,21>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,23>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,24>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,26>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,27>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,29>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,30>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,31>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,32>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,33>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,35>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,36>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,37>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,38>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,39>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,41>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,42>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,43>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,44>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,45>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,46>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,47>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,48>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,51>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,53>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,54>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,55>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,56>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,57>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,58>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,62>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,68>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,71>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void,89>": {
            "offset": "0x1CA50"
        },
        "hook::get_pattern<void>": {
            "offset": "0x57B00"
        },
        "hook::nop<char *>": {
            "offset": "0x394E0"
        },
        "hook::nop<void *>": {
            "offset": "0x394E0"
        },
        "hook::pattern::EnsureMatches": {
            "offset": "0x833F0"
        },
        "hook::pattern::Initialize": {
            "offset": "0x83750"
        },
        "hook::pattern::count": {
            "offset": "0x28470"
        },
        "hook::pattern::~pattern": {
            "offset": "0x1E240"
        },
        "hook::trampoline_raw": {
            "offset": "0x841F0"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(bool const &)> >::Call": {
            "offset": "0x64990"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(bool const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x63A80"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::Call": {
            "offset": "0x5AD50"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x59830"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::Call": {
            "offset": "0x24890"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x22510"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(void)> >::Call": {
            "offset": "0x42040"
        },
        "internal::ConsoleVariableEntry<bool>::ConsoleVariableEntry<bool>": {
            "offset": "0x63FD0"
        },
        "internal::ConsoleVariableEntry<bool>::GetOfflineValue": {
            "offset": "0x632A0"
        },
        "internal::ConsoleVariableEntry<bool>::GetValue": {
            "offset": "0x63120"
        },
        "internal::ConsoleVariableEntry<bool>::SaveOfflineValue": {
            "offset": "0x63300"
        },
        "internal::ConsoleVariableEntry<bool>::SetRawValue": {
            "offset": "0x652C0"
        },
        "internal::ConsoleVariableEntry<bool>::SetValue": {
            "offset": "0x631A0"
        },
        "internal::ConsoleVariableEntry<bool>::UpdateTrackingVariable": {
            "offset": "0x63310"
        },
        "internal::ConsoleVariableEntry<int>::ConsoleVariableEntry<int>": {
            "offset": "0x5A180"
        },
        "internal::ConsoleVariableEntry<int>::GetOfflineValue": {
            "offset": "0x58DD0"
        },
        "internal::ConsoleVariableEntry<int>::GetValue": {
            "offset": "0x58C90"
        },
        "internal::ConsoleVariableEntry<int>::SaveOfflineValue": {
            "offset": "0x58DF0"
        },
        "internal::ConsoleVariableEntry<int>::SetRawValue": {
            "offset": "0x5C000"
        },
        "internal::ConsoleVariableEntry<int>::SetValue": {
            "offset": "0x58CD0"
        },
        "internal::ConsoleVariableEntry<int>::UpdateTrackingVariable": {
            "offset": "0x58E00"
        },
        "internal::Constraints<bool,void>::Compare": {
            "offset": "0x64C10"
        },
        "internal::Constraints<int,void>::Compare": {
            "offset": "0x5B160"
        },
        "internal::UnparseArgument<int>": {
            "offset": "0x5A0B0"
        },
        "jitasm::Backend::Assemble": {
            "offset": "0x3F970"
        },
        "jitasm::Backend::Encode": {
            "offset": "0x45560"
        },
        "jitasm::Backend::EncodeALU": {
            "offset": "0x459D0"
        },
        "jitasm::Backend::EncodeImm": {
            "offset": "0x45B40"
        },
        "jitasm::Backend::EncodeJMP": {
            "offset": "0x45CF0"
        },
        "jitasm::Backend::EncodeModRM": {
            "offset": "0x45F40"
        },
        "jitasm::Backend::EncodeOpcode": {
            "offset": "0x464F0"
        },
        "jitasm::Backend::EncodePrefixes": {
            "offset": "0x465A0"
        },
        "jitasm::Backend::GetWRXB": {
            "offset": "0x47FA0"
        },
        "jitasm::Backend::db": {
            "offset": "0x55B50"
        },
        "jitasm::Backend::dd": {
            "offset": "0x55BC0"
        },
        "jitasm::Frontend::AppendInstr": {
            "offset": "0x3F840"
        },
        "jitasm::Frontend::AppendJcc": {
            "offset": "0x5E560"
        },
        "jitasm::Frontend::Assemble": {
            "offset": "0x3FD70"
        },
        "jitasm::Frontend::Frontend": {
            "offset": "0x5F750"
        },
        "jitasm::Frontend::GetLabelID": {
            "offset": "0x5E700"
        },
        "jitasm::Frontend::Label::~Label": {
            "offset": "0x168D0"
        },
        "jitasm::Frontend::NewLabelID": {
            "offset": "0x5E7C0"
        },
        "jitasm::Frontend::ResolveJump": {
            "offset": "0x50000"
        },
        "jitasm::Frontend::add": {
            "offset": "0x54AA0"
        },
        "jitasm::Frontend::call": {
            "offset": "0x54E20"
        },
        "jitasm::Frontend::cmp": {
            "offset": "0x7B000"
        },
        "jitasm::Frontend::jmp": {
            "offset": "0x5E8C0"
        },
        "jitasm::Frontend::lea<jitasm::detail::OpdT<64> >": {
            "offset": "0x793A0"
        },
        "jitasm::Frontend::mov": {
            "offset": "0x569F0"
        },
        "jitasm::Frontend::movaps": {
            "offset": "0x56BB0"
        },
        "jitasm::Frontend::pop": {
            "offset": "0x56E20"
        },
        "jitasm::Frontend::push": {
            "offset": "0x56F20"
        },
        "jitasm::Frontend::pxor": {
            "offset": "0x57230"
        },
        "jitasm::Frontend::ret": {
            "offset": "0x57570"
        },
        "jitasm::Frontend::sub": {
            "offset": "0x576D0"
        },
        "jitasm::Frontend::vxorps": {
            "offset": "0x57800"
        },
        "jitasm::Frontend::xchg": {
            "offset": "0x57900"
        },
        "jitasm::Frontend::xorps": {
            "offset": "0x579E0"
        },
        "jitasm::Frontend::~Frontend": {
            "offset": "0x3B260"
        },
        "jitasm::Instr::Instr": {
            "offset": "0x3A290"
        },
        "jitasm::compiler::BasicBlock::BasicBlock": {
            "offset": "0x3A200"
        },
        "jitasm::compiler::BasicBlock::IsDominated": {
            "offset": "0x486C0"
        },
        "jitasm::compiler::Compile": {
            "offset": "0x440F0"
        },
        "jitasm::compiler::ControlFlowGraph::Build": {
            "offset": "0x40690"
        },
        "jitasm::compiler::ControlFlowGraph::DetectLoops": {
            "offset": "0x447E0"
        },
        "jitasm::compiler::ControlFlowGraph::MakeDepthFirstBlocks": {
            "offset": "0x4E0F0"
        },
        "jitasm::compiler::ControlFlowGraph::clear": {
            "offset": "0x55A20"
        },
        "jitasm::compiler::ControlFlowGraph::get_block": {
            "offset": "0x566A0"
        },
        "jitasm::compiler::ControlFlowGraph::initialize": {
            "offset": "0x567A0"
        },
        "jitasm::compiler::ControlFlowGraph::~ControlFlowGraph": {
            "offset": "0x3B0F0"
        },
        "jitasm::compiler::DominatorFinder::Compress": {
            "offset": "0x44460"
        },
        "jitasm::compiler::DominatorFinder::~DominatorFinder": {
            "offset": "0x3B160"
        },
        "jitasm::compiler::GenerateEpilog": {
            "offset": "0x46FF0"
        },
        "jitasm::compiler::GenerateInterIntervalInstr<jitasm::compiler::GpRegOperator>": {
            "offset": "0x30DC0"
        },
        "jitasm::compiler::GenerateInterIntervalInstr<jitasm::compiler::MmxRegOperator>": {
            "offset": "0x312A0"
        },
        "jitasm::compiler::GenerateInterIntervalInstr<jitasm::compiler::XmmRegOperator>": {
            "offset": "0x31700"
        },
        "jitasm::compiler::GenerateProlog": {
            "offset": "0x47340"
        },
        "jitasm::compiler::GetRegFamily": {
            "offset": "0x47D10"
        },
        "jitasm::compiler::Lifetime::AddUsePoint": {
            "offset": "0x3F320"
        },
        "jitasm::compiler::Lifetime::AssignRegister": {
            "offset": "0x40120"
        },
        "jitasm::compiler::Lifetime::BuildIntervals": {
            "offset": "0x41100"
        },
        "jitasm::compiler::Lifetime::Interval::Interval": {
            "offset": "0x3A3D0"
        },
        "jitasm::compiler::Lifetime::Interval::~Interval": {
            "offset": "0x3B2E0"
        },
        "jitasm::compiler::Lifetime::LessAssignOrder::num_of_assignable": {
            "offset": "0x56C90"
        },
        "jitasm::compiler::Lifetime::Lifetime": {
            "offset": "0x3A4A0"
        },
        "jitasm::compiler::Lifetime::SpillIdentification": {
            "offset": "0x52170"
        },
        "jitasm::compiler::Lifetime::~Lifetime": {
            "offset": "0x3B470"
        },
        "jitasm::compiler::LinearScanRegisterAlloc": {
            "offset": "0x489F0"
        },
        "jitasm::compiler::LiveVariableAnalysis": {
            "offset": "0x48E50"
        },
        "jitasm::compiler::Operations::Operations": {
            "offset": "0x3A670"
        },
        "jitasm::compiler::PrepareCompile": {
            "offset": "0x4E6A0"
        },
        "jitasm::compiler::RewriteInstructions": {
            "offset": "0x50AA0"
        },
        "jitasm::compiler::SCCFinder::Find<jitasm::compiler::MoveGenerator<jitasm::compiler::GpRegOperator> >": {
            "offset": "0x30900"
        },
        "jitasm::compiler::SCCFinder::Find<jitasm::compiler::MoveGenerator<jitasm::compiler::MmxRegOperator> >": {
            "offset": "0x30B40"
        },
        "jitasm::compiler::SCCFinder::Find<jitasm::compiler::MoveGenerator<jitasm::compiler::XmmRegOperator> >": {
            "offset": "0x30C80"
        },
        "jitasm::compiler::VariableManager::AllocSpillSlots": {
            "offset": "0x3F570"
        },
        "jitasm::compiler::VariableManager::UpdateVarSize": {
            "offset": "0x52F70"
        },
        "jitasm::compiler::VariableManager::~VariableManager": {
            "offset": "0x3B630"
        },
        "jitasm::detail::CodeBuffer::Reset": {
            "offset": "0x4FF30"
        },
        "jitasm::detail::CodeBuffer::~CodeBuffer": {
            "offset": "0x3B0B0"
        },
        "jitasm::detail::ImmXor8": {
            "offset": "0x485C0"
        },
        "jitasm::detail::Opd::GetDisp": {
            "offset": "0x47BE0"
        },
        "jitasm::detail::Opd::GetImm": {
            "offset": "0x47CA0"
        },
        "jitasm::detail::ScopedLock<jitasm::detail::SpinLock>::~ScopedLock<jitasm::detail::SpinLock>": {
            "offset": "0x3A7B0"
        },
        "launch::IsSDK": {
            "offset": "0x75A80"
        },
        "launch::IsSDKGuest": {
            "offset": "0x75B20"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_array": {
            "offset": "0x2E090"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_imp_int64<__int64>": {
            "offset": "0x2CEA0"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_imp_uint32<unsigned int>": {
            "offset": "0x2D410"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_imp_uint64<unsigned __int64>": {
            "offset": "0x2D6D0"
        },
        "msgpack::v1::sbuffer::~sbuffer": {
            "offset": "0x2DA90"
        },
        "origCfxCollection_AddStreamingFileByTag": {
            "offset": "0x28510"
        },
        "origCfxCollection_BackoutStreamingTag": {
            "offset": "0x28690"
        },
        "pgBaseDtorHook": {
            "offset": "0x76200"
        },
        "pgRawStreamer__GetEntry": {
            "offset": "0x56CF0"
        },
        "pgRawStreamer__GetEntryNameToBuffer": {
            "offset": "0x56D50"
        },
        "pgRawStreamer__OpenCollectionEntry": {
            "offset": "0x56DC0"
        },
        "pgStreamerRead": {
            "offset": "0x62710"
        },
        "rage::GetPgRawStreamerEntries": {
            "offset": "0x47CF0"
        },
        "rage::`dynamic initializer for '_addKnownRef''": {
            "offset": "0xAF50"
        },
        "rage::`dynamic initializer for '_removeKnownRef''": {
            "offset": "0xB000"
        },
        "rage::`dynamic initializer for 'pgRawStreamerInvalidateEntry''": {
            "offset": "0x9290"
        },
        "rage::fwArchetype::HasEmbeddedCollision": {
            "offset": "0x20720"
        },
        "rage::fwArchetype::fwArchetype": {
            "offset": "0x1D720"
        },
        "rage::fwArchetype::~fwArchetype": {
            "offset": "0x1E130"
        },
        "rage::fwArchetypeManager::GetArchetypeFromHashKey": {
            "offset": "0x2B660"
        },
        "rage::fwArchetypeManager::GetStreamingModule": {
            "offset": "0x2BA90"
        },
        "rage::fwArchetypeManager::LookupModelId": {
            "offset": "0x2BBD0"
        },
        "rage::fwArchetypeManager::RegisterPermanentArchetype": {
            "offset": "0x2BD20"
        },
        "rage::fwArchetypeManager::RegisterStreamedArchetype": {
            "offset": "0x2BD70"
        },
        "rage::fwArchetypeManager::UnregisterStreamedArchetype": {
            "offset": "0x2BF00"
        },
        "rage::fwExtension::InitArchetypeExtensionFromDefinition": {
            "offset": "0x167B0"
        },
        "rage::fwExtension::InitEntityExtensionFromDefinition": {
            "offset": "0x167B0"
        },
        "rage::fwExtension::fwExtension": {
            "offset": "0x1D930"
        },
        "rage::fwExtension::~fwExtension": {
            "offset": "0x167B0"
        },
        "rage::fwRefAwareBase::AddKnownRef": {
            "offset": "0x69D80"
        },
        "rage::fwRefAwareBase::RemoveKnownRef": {
            "offset": "0x6C200"
        },
        "rage::fwRefAwareBase::fwRefAwareBase": {
            "offset": "0x1D9A0"
        },
        "rage::fwRefAwareBase::~fwRefAwareBase": {
            "offset": "0x167B0"
        },
        "rage::fwScriptGuid::GetBaseFromGuid": {
            "offset": "0x2B670"
        },
        "rage::fwScriptGuid::GetGuidFromBase": {
            "offset": "0x2B690"
        },
        "rage::strStreamingAllocator::GetInstance": {
            "offset": "0x72160"
        },
        "rage__fiFile__OpenWrap": {
            "offset": "0x286D0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::ClearStackOnExit::~ClearStackOnExit": {
            "offset": "0x685E0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::EndArray": {
            "offset": "0x69EC0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::EndObject": {
            "offset": "0x69FD0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::ParseStream<0,rapidjson::UTF8<char>,rapidjson::GenericStringStream<rapidjson::UTF8<char> > >": {
            "offset": "0x67730"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::String": {
            "offset": "0x6C4C0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::~GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>": {
            "offset": "0x166E0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ClearStackOnExit::~ClearStackOnExit": {
            "offset": "0x68610"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseArray<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x667D0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseHex4<rapidjson::GenericStringStream<rapidjson::UTF8<char> > >": {
            "offset": "0x66A00"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseNumber<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x66AB0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseObject<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x672F0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseStringToStream<0,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::StackStream<char> >": {
            "offset": "0x67920"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseValue<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x67D30"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::StackStream<char>::Put": {
            "offset": "0x6C0E0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0x16780"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0x16780"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Accept<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0> >": {
            "offset": "0xDFF0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::AddMember": {
            "offset": "0x17850"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Begin": {
            "offset": "0x69D90"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::FindMember<rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0x665C0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::GetDouble": {
            "offset": "0x6A190"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::GetString": {
            "offset": "0x6A270"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Size": {
            "offset": "0x6C480"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::~GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0x167B0"
        },
        "rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>::Malloc": {
            "offset": "0x189C0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Prefix": {
            "offset": "0x18A80"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::String": {
            "offset": "0x18CF0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::WriteString": {
            "offset": "0x19190"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::~Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>": {
            "offset": "0x167C0"
        },
        "rapidjson::internal::DigitGen": {
            "offset": "0x17B00"
        },
        "rapidjson::internal::FastPath": {
            "offset": "0x6A0E0"
        },
        "rapidjson::internal::Grisu2": {
            "offset": "0x185B0"
        },
        "rapidjson::internal::Prettify": {
            "offset": "0x18B30"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > >": {
            "offset": "0x680E0"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level>": {
            "offset": "0xEA80"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Reserve<char>": {
            "offset": "0xEB50"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::~Stack<rapidjson::CrtAllocator>": {
            "offset": "0x16780"
        },
        "rapidjson::internal::StreamLocalCopy<rapidjson::GenericStringStream<rapidjson::UTF8<char> >,1>::~StreamLocalCopy<rapidjson::GenericStringStream<rapidjson::UTF8<char> >,1>": {
            "offset": "0x685D0"
        },
        "rapidjson::internal::WriteExponent": {
            "offset": "0x19100"
        },
        "rapidjson::internal::u32toa": {
            "offset": "0x19C60"
        },
        "rapidjson::internal::u64toa": {
            "offset": "0x19ED0"
        },
        "ret0": {
            "offset": "0x28800"
        },
        "se::Object::~Object": {
            "offset": "0x168D0"
        },
        "seCheckPrivilege": {
            "offset": "0x5C3D0"
        },
        "sf::AddMinimapOverlay": {
            "offset": "0x710B0"
        },
        "sf::CallMinimapOverlay": {
            "offset": "0x71170"
        },
        "sf::HasMinimapLoaded": {
            "offset": "0x71350"
        },
        "sf::RegisterFontIndex": {
            "offset": "0x7A3A0"
        },
        "sf::RegisterFontLib": {
            "offset": "0x7A4A0"
        },
        "sf::RemoveMinimapOverlay": {
            "offset": "0x71390"
        },
        "sf::SetMinimapOverlayDisplay": {
            "offset": "0x71480"
        },
        "sf::logging::SfCallGameFromFlash": {
            "offset": "0x71690"
        },
        "sf::logging::`dynamic initializer for 'g_scaleformDebugLogVar''": {
            "offset": "0xBF20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<int,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x3A840"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A7C0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,void *> > >": {
            "offset": "0x3A7E0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >": {
            "offset": "0x3A7C0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >,void *> > >": {
            "offset": "0x167F0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,void *> > >": {
            "offset": "0x3A7C0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,MapTypesFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,MapTypesFile>,void *> > >": {
            "offset": "0x1DA20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap>,void *> > >": {
            "offset": "0x2A760"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,int>,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A7C0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,void *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,void *>,void *> > >": {
            "offset": "0x2A760"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned int,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<void *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<void *,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >": {
            "offset": "0x2A760"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x167F0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,int>,void *> > >": {
            "offset": "0x3A7E0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::shared_ptr<GFxValue> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::shared_ptr<GFxValue> >,void *> > >": {
            "offset": "0x3A7C0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>,void *> > >": {
            "offset": "0x3A800"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A820"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x167F0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::tuple<streaming::strStreamingModule *,unsigned int> const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::tuple<streaming::strStreamingModule *,unsigned int> const ,unsigned int>,void *> > >": {
            "offset": "0x3A7C0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<streaming::strStreamingModule *,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<streaming::strStreamingModule *,int>,void *> > >": {
            "offset": "0x3A840"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A800"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::pair<int,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::pair<int,int> >,void *> > >": {
            "offset": "0x3A7E0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A820"
        },
        "std::_Buffered_inplace_merge_divide_and_conquer2<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x31E30"
        },
        "std::_Buffered_inplace_merge_divide_and_conquer<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x31F20"
        },
        "std::_Buffered_inplace_merge_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x32110"
        },
        "std::_Buffered_merge_sort_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x324B0"
        },
        "std::_Buffered_rotate_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>": {
            "offset": "0x32600"
        },
        "std::_Chunked_merge_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x32860"
        },
        "std::_Default_allocator_traits<std::allocator<jitasm::compiler::Lifetime::Interval> >::construct<jitasm::compiler::Lifetime::Interval,jitasm::compiler::Lifetime::Interval const &>": {
            "offset": "0x391A0"
        },
        "std::_Destroy_range<std::allocator<jitasm::compiler::Lifetime::Interval> >": {
            "offset": "0x32C80"
        },
        "std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x1BB80"
        },
        "std::_Destroy_range<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,rage::ResourceFlags> > >": {
            "offset": "0x25C50"
        },
        "std::_Destroy_range<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x32C40"
        },
        "std::_Destroy_range<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int> > >": {
            "offset": "0x25C50"
        },
        "std::_Destroy_range<std::allocator<std::tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x25C50"
        },
        "std::_Facet_Register": {
            "offset": "0x90364"
        },
        "std::_Find_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x34CC0"
        },
        "std::_Func_class<bool,ConsoleExecutionContext &>::~_Func_class<bool,ConsoleExecutionContext &>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<bool,char const *>::~_Func_class<bool,char const *>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<bool,enum rage::InitFunctionType>::~_Func_class<bool,enum rage::InitFunctionType>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<bool>::~_Func_class<bool>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<void,bool const &>::~_Func_class<void,bool const &>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~_Func_class<void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<void,int const &>::~_Func_class<void,int const &>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x1DA40"
        },
        "std::_Func_class<void>::_Reset_move": {
            "offset": "0x61B90"
        },
        "std::_Func_class<void>::~_Func_class<void>": {
            "offset": "0x1DA40"
        },
        "std::_Func_impl_no_alloc<<lambda_06002c27587c5bd837fe32ea8964a5e3>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Copy": {
            "offset": "0x2F790"
        },
        "std::_Func_impl_no_alloc<<lambda_06002c27587c5bd837fe32ea8964a5e3>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_06002c27587c5bd837fe32ea8964a5e3>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Do_call": {
            "offset": "0x2F300"
        },
        "std::_Func_impl_no_alloc<<lambda_06002c27587c5bd837fe32ea8964a5e3>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_06002c27587c5bd837fe32ea8964a5e3>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Move": {
            "offset": "0x2F790"
        },
        "std::_Func_impl_no_alloc<<lambda_06002c27587c5bd837fe32ea8964a5e3>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Target_type": {
            "offset": "0x2F7A0"
        },
        "std::_Func_impl_no_alloc<<lambda_1272e92d6794d374a07cc21bbd840fca>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Copy": {
            "offset": "0x53440"
        },
        "std::_Func_impl_no_alloc<<lambda_1272e92d6794d374a07cc21bbd840fca>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_1272e92d6794d374a07cc21bbd840fca>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Do_call": {
            "offset": "0x534A0"
        },
        "std::_Func_impl_no_alloc<<lambda_1272e92d6794d374a07cc21bbd840fca>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_1272e92d6794d374a07cc21bbd840fca>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Move": {
            "offset": "0x53440"
        },
        "std::_Func_impl_no_alloc<<lambda_1272e92d6794d374a07cc21bbd840fca>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Target_type": {
            "offset": "0x54450"
        },
        "std::_Func_impl_no_alloc<<lambda_200db3e364e98991af7e19cafdd76c6b>,bool>::_Copy": {
            "offset": "0x25B40"
        },
        "std::_Func_impl_no_alloc<<lambda_200db3e364e98991af7e19cafdd76c6b>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_200db3e364e98991af7e19cafdd76c6b>,bool>::_Do_call": {
            "offset": "0x25B60"
        },
        "std::_Func_impl_no_alloc<<lambda_200db3e364e98991af7e19cafdd76c6b>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_200db3e364e98991af7e19cafdd76c6b>,bool>::_Move": {
            "offset": "0x25B40"
        },
        "std::_Func_impl_no_alloc<<lambda_200db3e364e98991af7e19cafdd76c6b>,bool>::_Target_type": {
            "offset": "0x25B80"
        },
        "std::_Func_impl_no_alloc<<lambda_2216ca58037cc50045d9738185512710>,bool>::_Copy": {
            "offset": "0x2F950"
        },
        "std::_Func_impl_no_alloc<<lambda_2216ca58037cc50045d9738185512710>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_2216ca58037cc50045d9738185512710>,bool>::_Do_call": {
            "offset": "0x2F970"
        },
        "std::_Func_impl_no_alloc<<lambda_2216ca58037cc50045d9738185512710>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_2216ca58037cc50045d9738185512710>,bool>::_Move": {
            "offset": "0x2F950"
        },
        "std::_Func_impl_no_alloc<<lambda_2216ca58037cc50045d9738185512710>,bool>::_Target_type": {
            "offset": "0x2F990"
        },
        "std::_Func_impl_no_alloc<<lambda_231cd2e3a9f3badde0253f3a95afddf7>,void,unsigned int>::_Copy": {
            "offset": "0x5EDD0"
        },
        "std::_Func_impl_no_alloc<<lambda_231cd2e3a9f3badde0253f3a95afddf7>,void,unsigned int>::_Delete_this": {
            "offset": "0x5EE10"
        },
        "std::_Func_impl_no_alloc<<lambda_231cd2e3a9f3badde0253f3a95afddf7>,void,unsigned int>::_Do_call": {
            "offset": "0x5EDF0"
        },
        "std::_Func_impl_no_alloc<<lambda_231cd2e3a9f3badde0253f3a95afddf7>,void,unsigned int>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_231cd2e3a9f3badde0253f3a95afddf7>,void,unsigned int>::_Move": {
            "offset": "0x5EDD0"
        },
        "std::_Func_impl_no_alloc<<lambda_231cd2e3a9f3badde0253f3a95afddf7>,void,unsigned int>::_Target_type": {
            "offset": "0x5EE00"
        },
        "std::_Func_impl_no_alloc<<lambda_23bd7e3f578bb070bf5618f3b20c066d>,bool>::_Copy": {
            "offset": "0x1A8F0"
        },
        "std::_Func_impl_no_alloc<<lambda_23bd7e3f578bb070bf5618f3b20c066d>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_23bd7e3f578bb070bf5618f3b20c066d>,bool>::_Do_call": {
            "offset": "0x1A910"
        },
        "std::_Func_impl_no_alloc<<lambda_23bd7e3f578bb070bf5618f3b20c066d>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_23bd7e3f578bb070bf5618f3b20c066d>,bool>::_Move": {
            "offset": "0x1A8F0"
        },
        "std::_Func_impl_no_alloc<<lambda_23bd7e3f578bb070bf5618f3b20c066d>,bool>::_Target_type": {
            "offset": "0x1A960"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Copy": {
            "offset": "0x63520"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Do_call": {
            "offset": "0x63540"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Move": {
            "offset": "0x63520"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Target_type": {
            "offset": "0x63620"
        },
        "std::_Func_impl_no_alloc<<lambda_2730b6c68f930e168344f035418efbb7>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x2F350"
        },
        "std::_Func_impl_no_alloc<<lambda_2730b6c68f930e168344f035418efbb7>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x221F0"
        },
        "std::_Func_impl_no_alloc<<lambda_2730b6c68f930e168344f035418efbb7>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x2F3D0"
        },
        "std::_Func_impl_no_alloc<<lambda_2730b6c68f930e168344f035418efbb7>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_2730b6c68f930e168344f035418efbb7>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_2730b6c68f930e168344f035418efbb7>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x2F420"
        },
        "std::_Func_impl_no_alloc<<lambda_2f2946bc1b88b87d0e7f776deb025502>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Copy": {
            "offset": "0x53450"
        },
        "std::_Func_impl_no_alloc<<lambda_2f2946bc1b88b87d0e7f776deb025502>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_2f2946bc1b88b87d0e7f776deb025502>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Do_call": {
            "offset": "0x534B0"
        },
        "std::_Func_impl_no_alloc<<lambda_2f2946bc1b88b87d0e7f776deb025502>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_2f2946bc1b88b87d0e7f776deb025502>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Move": {
            "offset": "0x53450"
        },
        "std::_Func_impl_no_alloc<<lambda_2f2946bc1b88b87d0e7f776deb025502>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Target_type": {
            "offset": "0x54460"
        },
        "std::_Func_impl_no_alloc<<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x22110"
        },
        "std::_Func_impl_no_alloc<<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x221F0"
        },
        "std::_Func_impl_no_alloc<<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x22190"
        },
        "std::_Func_impl_no_alloc<<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_3b02a1d8b2e62d4dea5fa914720ca5d8>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x221E0"
        },
        "std::_Func_impl_no_alloc<<lambda_417a6858595dac32d948b627106c3c0c>,bool>::_Copy": {
            "offset": "0x5EF40"
        },
        "std::_Func_impl_no_alloc<<lambda_417a6858595dac32d948b627106c3c0c>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_417a6858595dac32d948b627106c3c0c>,bool>::_Do_call": {
            "offset": "0x5EF60"
        },
        "std::_Func_impl_no_alloc<<lambda_417a6858595dac32d948b627106c3c0c>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_417a6858595dac32d948b627106c3c0c>,bool>::_Move": {
            "offset": "0x5EF40"
        },
        "std::_Func_impl_no_alloc<<lambda_417a6858595dac32d948b627106c3c0c>,bool>::_Target_type": {
            "offset": "0x5EF80"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Copy": {
            "offset": "0x59040"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Delete_this": {
            "offset": "0x590C0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Do_call": {
            "offset": "0x590A0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Target_type": {
            "offset": "0x590B0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d4ff4e0316434221d8a16f47130a9b9>,bool>::_Copy": {
            "offset": "0x2F9A0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d4ff4e0316434221d8a16f47130a9b9>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d4ff4e0316434221d8a16f47130a9b9>,bool>::_Do_call": {
            "offset": "0x2F9C0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d4ff4e0316434221d8a16f47130a9b9>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d4ff4e0316434221d8a16f47130a9b9>,bool>::_Move": {
            "offset": "0x2F9A0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d4ff4e0316434221d8a16f47130a9b9>,bool>::_Target_type": {
            "offset": "0x2F9D0"
        },
        "std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>::_Copy": {
            "offset": "0x5EE20"
        },
        "std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>::_Delete_this": {
            "offset": "0x5EF00"
        },
        "std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>::_Do_call": {
            "offset": "0x5EEE0"
        },
        "std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_55b0750980631035f31e5def29397b5e>,void>::_Target_type": {
            "offset": "0x5EEF0"
        },
        "std::_Func_impl_no_alloc<<lambda_5e6ea2d0c7e60615bb5a651c6308c8e5>,bool>::_Copy": {
            "offset": "0x5EFD0"
        },
        "std::_Func_impl_no_alloc<<lambda_5e6ea2d0c7e60615bb5a651c6308c8e5>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_5e6ea2d0c7e60615bb5a651c6308c8e5>,bool>::_Do_call": {
            "offset": "0x5EFF0"
        },
        "std::_Func_impl_no_alloc<<lambda_5e6ea2d0c7e60615bb5a651c6308c8e5>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_5e6ea2d0c7e60615bb5a651c6308c8e5>,bool>::_Move": {
            "offset": "0x5EFD0"
        },
        "std::_Func_impl_no_alloc<<lambda_5e6ea2d0c7e60615bb5a651c6308c8e5>,bool>::_Target_type": {
            "offset": "0x5F030"
        },
        "std::_Func_impl_no_alloc<<lambda_6badf1acbbf8484eae1b3ab80efdc47d>,bool,enum rage::InitFunctionType>::_Copy": {
            "offset": "0x663B0"
        },
        "std::_Func_impl_no_alloc<<lambda_6badf1acbbf8484eae1b3ab80efdc47d>,bool,enum rage::InitFunctionType>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_6badf1acbbf8484eae1b3ab80efdc47d>,bool,enum rage::InitFunctionType>::_Do_call": {
            "offset": "0x663D0"
        },
        "std::_Func_impl_no_alloc<<lambda_6badf1acbbf8484eae1b3ab80efdc47d>,bool,enum rage::InitFunctionType>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_6badf1acbbf8484eae1b3ab80efdc47d>,bool,enum rage::InitFunctionType>::_Move": {
            "offset": "0x663B0"
        },
        "std::_Func_impl_no_alloc<<lambda_6badf1acbbf8484eae1b3ab80efdc47d>,bool,enum rage::InitFunctionType>::_Target_type": {
            "offset": "0x663F0"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x633C0"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x58F00"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x63440"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x63490"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x58F60"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x58F00"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x58FE0"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x59030"
        },
        "std::_Func_impl_no_alloc<<lambda_8006531ae4b13c8ea7faf71c8138543a>,bool>::_Copy": {
            "offset": "0x2F8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_8006531ae4b13c8ea7faf71c8138543a>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_8006531ae4b13c8ea7faf71c8138543a>,bool>::_Do_call": {
            "offset": "0x2F8F0"
        },
        "std::_Func_impl_no_alloc<<lambda_8006531ae4b13c8ea7faf71c8138543a>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_8006531ae4b13c8ea7faf71c8138543a>,bool>::_Move": {
            "offset": "0x2F8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_8006531ae4b13c8ea7faf71c8138543a>,bool>::_Target_type": {
            "offset": "0x2F940"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x63330"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x58F00"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x58EA0"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x633B0"
        },
        "std::_Func_impl_no_alloc<<lambda_84a35d73760c1fad83bbef74c47da93d>,bool,enum rage::InitFunctionType>::_Copy": {
            "offset": "0x2F850"
        },
        "std::_Func_impl_no_alloc<<lambda_84a35d73760c1fad83bbef74c47da93d>,bool,enum rage::InitFunctionType>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_84a35d73760c1fad83bbef74c47da93d>,bool,enum rage::InitFunctionType>::_Do_call": {
            "offset": "0x2F870"
        },
        "std::_Func_impl_no_alloc<<lambda_84a35d73760c1fad83bbef74c47da93d>,bool,enum rage::InitFunctionType>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_84a35d73760c1fad83bbef74c47da93d>,bool,enum rage::InitFunctionType>::_Move": {
            "offset": "0x2F850"
        },
        "std::_Func_impl_no_alloc<<lambda_84a35d73760c1fad83bbef74c47da93d>,bool,enum rage::InitFunctionType>::_Target_type": {
            "offset": "0x2F890"
        },
        "std::_Func_impl_no_alloc<<lambda_92cfc50fe68071063f51379ef2a0469c>,bool,char const *>::_Copy": {
            "offset": "0x2F8A0"
        },
        "std::_Func_impl_no_alloc<<lambda_92cfc50fe68071063f51379ef2a0469c>,bool,char const *>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_92cfc50fe68071063f51379ef2a0469c>,bool,char const *>::_Do_call": {
            "offset": "0x2F830"
        },
        "std::_Func_impl_no_alloc<<lambda_92cfc50fe68071063f51379ef2a0469c>,bool,char const *>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_92cfc50fe68071063f51379ef2a0469c>,bool,char const *>::_Move": {
            "offset": "0x2F8A0"
        },
        "std::_Func_impl_no_alloc<<lambda_92cfc50fe68071063f51379ef2a0469c>,bool,char const *>::_Target_type": {
            "offset": "0x2F8C0"
        },
        "std::_Func_impl_no_alloc<<lambda_98135fb5c535408e12d17fbabc55ae8c>,void>::_Copy": {
            "offset": "0x2FDD0"
        },
        "std::_Func_impl_no_alloc<<lambda_98135fb5c535408e12d17fbabc55ae8c>,void>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_98135fb5c535408e12d17fbabc55ae8c>,void>::_Do_call": {
            "offset": "0x2FDE0"
        },
        "std::_Func_impl_no_alloc<<lambda_98135fb5c535408e12d17fbabc55ae8c>,void>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_98135fb5c535408e12d17fbabc55ae8c>,void>::_Move": {
            "offset": "0x2FDD0"
        },
        "std::_Func_impl_no_alloc<<lambda_98135fb5c535408e12d17fbabc55ae8c>,void>::_Target_type": {
            "offset": "0x2FDF0"
        },
        "std::_Func_impl_no_alloc<<lambda_9a365591f2f4777c2ca97b2fd9ddff10>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Copy": {
            "offset": "0x53460"
        },
        "std::_Func_impl_no_alloc<<lambda_9a365591f2f4777c2ca97b2fd9ddff10>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Delete_this": {
            "offset": "0x53490"
        },
        "std::_Func_impl_no_alloc<<lambda_9a365591f2f4777c2ca97b2fd9ddff10>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Do_call": {
            "offset": "0x534C0"
        },
        "std::_Func_impl_no_alloc<<lambda_9a365591f2f4777c2ca97b2fd9ddff10>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_9a365591f2f4777c2ca97b2fd9ddff10>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Move": {
            "offset": "0x53460"
        },
        "std::_Func_impl_no_alloc<<lambda_9a365591f2f4777c2ca97b2fd9ddff10>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Target_type": {
            "offset": "0x54470"
        },
        "std::_Func_impl_no_alloc<<lambda_9a7bc5f32611c5001a914ead383e213e>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Copy": {
            "offset": "0x53480"
        },
        "std::_Func_impl_no_alloc<<lambda_9a7bc5f32611c5001a914ead383e213e>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_9a7bc5f32611c5001a914ead383e213e>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Do_call": {
            "offset": "0x534D0"
        },
        "std::_Func_impl_no_alloc<<lambda_9a7bc5f32611c5001a914ead383e213e>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_9a7bc5f32611c5001a914ead383e213e>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Move": {
            "offset": "0x53480"
        },
        "std::_Func_impl_no_alloc<<lambda_9a7bc5f32611c5001a914ead383e213e>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Target_type": {
            "offset": "0x54480"
        },
        "std::_Func_impl_no_alloc<<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x72A60"
        },
        "std::_Func_impl_no_alloc<<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x221F0"
        },
        "std::_Func_impl_no_alloc<<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x2F3D0"
        },
        "std::_Func_impl_no_alloc<<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_9eb0329f5ef69cc2910674ebb0cb78aa>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x72AE0"
        },
        "std::_Func_impl_no_alloc<<lambda_a2a705da55022b960ba03f75920b4eae>,bool>::_Copy": {
            "offset": "0x2A0B0"
        },
        "std::_Func_impl_no_alloc<<lambda_a2a705da55022b960ba03f75920b4eae>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_a2a705da55022b960ba03f75920b4eae>,bool>::_Do_call": {
            "offset": "0x2A0D0"
        },
        "std::_Func_impl_no_alloc<<lambda_a2a705da55022b960ba03f75920b4eae>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_a2a705da55022b960ba03f75920b4eae>,bool>::_Move": {
            "offset": "0x2A0B0"
        },
        "std::_Func_impl_no_alloc<<lambda_a2a705da55022b960ba03f75920b4eae>,bool>::_Target_type": {
            "offset": "0x2A0F0"
        },
        "std::_Func_impl_no_alloc<<lambda_a4df0db871dcfd5dd8b5d7e659554cd2>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Copy": {
            "offset": "0x2F2F0"
        },
        "std::_Func_impl_no_alloc<<lambda_a4df0db871dcfd5dd8b5d7e659554cd2>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_a4df0db871dcfd5dd8b5d7e659554cd2>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Do_call": {
            "offset": "0x2F300"
        },
        "std::_Func_impl_no_alloc<<lambda_a4df0db871dcfd5dd8b5d7e659554cd2>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_a4df0db871dcfd5dd8b5d7e659554cd2>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Move": {
            "offset": "0x2F2F0"
        },
        "std::_Func_impl_no_alloc<<lambda_a4df0db871dcfd5dd8b5d7e659554cd2>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Target_type": {
            "offset": "0x2F320"
        },
        "std::_Func_impl_no_alloc<<lambda_aa691ef91e0e6d57a02b97500c675ee7>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Copy": {
            "offset": "0x2F330"
        },
        "std::_Func_impl_no_alloc<<lambda_aa691ef91e0e6d57a02b97500c675ee7>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_aa691ef91e0e6d57a02b97500c675ee7>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Do_call": {
            "offset": "0x2F300"
        },
        "std::_Func_impl_no_alloc<<lambda_aa691ef91e0e6d57a02b97500c675ee7>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_aa691ef91e0e6d57a02b97500c675ee7>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Move": {
            "offset": "0x2F330"
        },
        "std::_Func_impl_no_alloc<<lambda_aa691ef91e0e6d57a02b97500c675ee7>,bool,CDataFileMountInterface *,CDataFileMgr::DataFile &>::_Target_type": {
            "offset": "0x2F340"
        },
        "std::_Func_impl_no_alloc<<lambda_ab8404bbb51945a2b053e678f89f6c89>,bool>::_Copy": {
            "offset": "0x6FC00"
        },
        "std::_Func_impl_no_alloc<<lambda_ab8404bbb51945a2b053e678f89f6c89>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_ab8404bbb51945a2b053e678f89f6c89>,bool>::_Do_call": {
            "offset": "0x6FC20"
        },
        "std::_Func_impl_no_alloc<<lambda_ab8404bbb51945a2b053e678f89f6c89>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_ab8404bbb51945a2b053e678f89f6c89>,bool>::_Move": {
            "offset": "0x6FC00"
        },
        "std::_Func_impl_no_alloc<<lambda_ab8404bbb51945a2b053e678f89f6c89>,bool>::_Target_type": {
            "offset": "0x6FC40"
        },
        "std::_Func_impl_no_alloc<<lambda_ae7e227b2b04fd90847d50fd4f6f21da>,bool>::_Copy": {
            "offset": "0x5EF90"
        },
        "std::_Func_impl_no_alloc<<lambda_ae7e227b2b04fd90847d50fd4f6f21da>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_ae7e227b2b04fd90847d50fd4f6f21da>,bool>::_Do_call": {
            "offset": "0x5EFB0"
        },
        "std::_Func_impl_no_alloc<<lambda_ae7e227b2b04fd90847d50fd4f6f21da>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_ae7e227b2b04fd90847d50fd4f6f21da>,bool>::_Move": {
            "offset": "0x5EF90"
        },
        "std::_Func_impl_no_alloc<<lambda_ae7e227b2b04fd90847d50fd4f6f21da>,bool>::_Target_type": {
            "offset": "0x5EFC0"
        },
        "std::_Func_impl_no_alloc<<lambda_b02a45ca5eca8643ce675259100e4a18>,bool>::_Copy": {
            "offset": "0x2F9E0"
        },
        "std::_Func_impl_no_alloc<<lambda_b02a45ca5eca8643ce675259100e4a18>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_b02a45ca5eca8643ce675259100e4a18>,bool>::_Do_call": {
            "offset": "0x2FA00"
        },
        "std::_Func_impl_no_alloc<<lambda_b02a45ca5eca8643ce675259100e4a18>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_b02a45ca5eca8643ce675259100e4a18>,bool>::_Move": {
            "offset": "0x2F9E0"
        },
        "std::_Func_impl_no_alloc<<lambda_b02a45ca5eca8643ce675259100e4a18>,bool>::_Target_type": {
            "offset": "0x2FA40"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Copy": {
            "offset": "0x634A0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Delete_this": {
            "offset": "0x590C0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Do_call": {
            "offset": "0x63500"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Target_type": {
            "offset": "0x63510"
        },
        "std::_Func_impl_no_alloc<<lambda_c0f7dcc21db5e4a476c835ef64ac06e4>,bool>::_Copy": {
            "offset": "0x2F810"
        },
        "std::_Func_impl_no_alloc<<lambda_c0f7dcc21db5e4a476c835ef64ac06e4>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_c0f7dcc21db5e4a476c835ef64ac06e4>,bool>::_Do_call": {
            "offset": "0x2F830"
        },
        "std::_Func_impl_no_alloc<<lambda_c0f7dcc21db5e4a476c835ef64ac06e4>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_c0f7dcc21db5e4a476c835ef64ac06e4>,bool>::_Move": {
            "offset": "0x2F810"
        },
        "std::_Func_impl_no_alloc<<lambda_c0f7dcc21db5e4a476c835ef64ac06e4>,bool>::_Target_type": {
            "offset": "0x2F840"
        },
        "std::_Func_impl_no_alloc<<lambda_c6e1fe83036411445c3d425ad1c64bd1>,bool>::_Copy": {
            "offset": "0x25AF0"
        },
        "std::_Func_impl_no_alloc<<lambda_c6e1fe83036411445c3d425ad1c64bd1>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_c6e1fe83036411445c3d425ad1c64bd1>,bool>::_Do_call": {
            "offset": "0x25B10"
        },
        "std::_Func_impl_no_alloc<<lambda_c6e1fe83036411445c3d425ad1c64bd1>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_c6e1fe83036411445c3d425ad1c64bd1>,bool>::_Move": {
            "offset": "0x25AF0"
        },
        "std::_Func_impl_no_alloc<<lambda_c6e1fe83036411445c3d425ad1c64bd1>,bool>::_Target_type": {
            "offset": "0x25B30"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Copy": {
            "offset": "0x59220"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Do_call": {
            "offset": "0x59240"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Move": {
            "offset": "0x59220"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Target_type": {
            "offset": "0x59320"
        },
        "std::_Func_impl_no_alloc<<lambda_d9656e19c325c30cd335f8ec93b74c68>,void,void const *,int>::_Copy": {
            "offset": "0x22000"
        },
        "std::_Func_impl_no_alloc<<lambda_d9656e19c325c30cd335f8ec93b74c68>,void,void const *,int>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_d9656e19c325c30cd335f8ec93b74c68>,void,void const *,int>::_Do_call": {
            "offset": "0x22020"
        },
        "std::_Func_impl_no_alloc<<lambda_d9656e19c325c30cd335f8ec93b74c68>,void,void const *,int>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_d9656e19c325c30cd335f8ec93b74c68>,void,void const *,int>::_Move": {
            "offset": "0x22000"
        },
        "std::_Func_impl_no_alloc<<lambda_d9656e19c325c30cd335f8ec93b74c68>,void,void const *,int>::_Target_type": {
            "offset": "0x220E0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1e42c5c4c41355e26db279ade4bcd8e>,bool>::_Copy": {
            "offset": "0x787D0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1e42c5c4c41355e26db279ade4bcd8e>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1e42c5c4c41355e26db279ade4bcd8e>,bool>::_Do_call": {
            "offset": "0x787F0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1e42c5c4c41355e26db279ade4bcd8e>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1e42c5c4c41355e26db279ade4bcd8e>,bool>::_Move": {
            "offset": "0x787D0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1e42c5c4c41355e26db279ade4bcd8e>,bool>::_Target_type": {
            "offset": "0x78840"
        },
        "std::_Func_impl_no_alloc<<lambda_e3ec813411c41dc3541000444d5ff774>,bool>::_Copy": {
            "offset": "0x78740"
        },
        "std::_Func_impl_no_alloc<<lambda_e3ec813411c41dc3541000444d5ff774>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_e3ec813411c41dc3541000444d5ff774>,bool>::_Do_call": {
            "offset": "0x78760"
        },
        "std::_Func_impl_no_alloc<<lambda_e3ec813411c41dc3541000444d5ff774>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_e3ec813411c41dc3541000444d5ff774>,bool>::_Move": {
            "offset": "0x78740"
        },
        "std::_Func_impl_no_alloc<<lambda_e3ec813411c41dc3541000444d5ff774>,bool>::_Target_type": {
            "offset": "0x78780"
        },
        "std::_Func_impl_no_alloc<<lambda_e4ba7588b360fe652a3faff73b7b991b>,void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Copy": {
            "offset": "0x5EC90"
        },
        "std::_Func_impl_no_alloc<<lambda_e4ba7588b360fe652a3faff73b7b991b>,void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Delete_this": {
            "offset": "0x5ED50"
        },
        "std::_Func_impl_no_alloc<<lambda_e4ba7588b360fe652a3faff73b7b991b>,void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Do_call": {
            "offset": "0x5ED30"
        },
        "std::_Func_impl_no_alloc<<lambda_e4ba7588b360fe652a3faff73b7b991b>,void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_e4ba7588b360fe652a3faff73b7b991b>,void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_e4ba7588b360fe652a3faff73b7b991b>,void,bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Target_type": {
            "offset": "0x5ED40"
        },
        "std::_Func_impl_no_alloc<<lambda_e76b68dccad249dd70ad4c037713b23e>,bool>::_Copy": {
            "offset": "0x6F700"
        },
        "std::_Func_impl_no_alloc<<lambda_e76b68dccad249dd70ad4c037713b23e>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_e76b68dccad249dd70ad4c037713b23e>,bool>::_Do_call": {
            "offset": "0x6F720"
        },
        "std::_Func_impl_no_alloc<<lambda_e76b68dccad249dd70ad4c037713b23e>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_e76b68dccad249dd70ad4c037713b23e>,bool>::_Move": {
            "offset": "0x6F700"
        },
        "std::_Func_impl_no_alloc<<lambda_e76b68dccad249dd70ad4c037713b23e>,bool>::_Target_type": {
            "offset": "0x6F740"
        },
        "std::_Func_impl_no_alloc<<lambda_e9ea21dee26c305b03315b2667a50268>,bool>::_Copy": {
            "offset": "0x1A880"
        },
        "std::_Func_impl_no_alloc<<lambda_e9ea21dee26c305b03315b2667a50268>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_e9ea21dee26c305b03315b2667a50268>,bool>::_Do_call": {
            "offset": "0x1A8A0"
        },
        "std::_Func_impl_no_alloc<<lambda_e9ea21dee26c305b03315b2667a50268>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_e9ea21dee26c305b03315b2667a50268>,bool>::_Move": {
            "offset": "0x1A880"
        },
        "std::_Func_impl_no_alloc<<lambda_e9ea21dee26c305b03315b2667a50268>,bool>::_Target_type": {
            "offset": "0x1A8C0"
        },
        "std::_Func_impl_no_alloc<<lambda_eae4a17f64911edbb9552e7485b4bbb0>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Copy": {
            "offset": "0x21A20"
        },
        "std::_Func_impl_no_alloc<<lambda_eae4a17f64911edbb9552e7485b4bbb0>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_eae4a17f64911edbb9552e7485b4bbb0>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Do_call": {
            "offset": "0x21A30"
        },
        "std::_Func_impl_no_alloc<<lambda_eae4a17f64911edbb9552e7485b4bbb0>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_eae4a17f64911edbb9552e7485b4bbb0>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Move": {
            "offset": "0x21A20"
        },
        "std::_Func_impl_no_alloc<<lambda_eae4a17f64911edbb9552e7485b4bbb0>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Target_type": {
            "offset": "0x21A40"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x58E20"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x58F00"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x58EA0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0x210B0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x58EF0"
        },
        "std::_Func_impl_no_alloc<<lambda_f331c76443f54e4874cdea1c72b41b06>,bool,enum rage::InitFunctionType>::_Copy": {
            "offset": "0x2FAC0"
        },
        "std::_Func_impl_no_alloc<<lambda_f331c76443f54e4874cdea1c72b41b06>,bool,enum rage::InitFunctionType>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_f331c76443f54e4874cdea1c72b41b06>,bool,enum rage::InitFunctionType>::_Do_call": {
            "offset": "0x2FAE0"
        },
        "std::_Func_impl_no_alloc<<lambda_f331c76443f54e4874cdea1c72b41b06>,bool,enum rage::InitFunctionType>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_f331c76443f54e4874cdea1c72b41b06>,bool,enum rage::InitFunctionType>::_Move": {
            "offset": "0x2FAC0"
        },
        "std::_Func_impl_no_alloc<<lambda_f331c76443f54e4874cdea1c72b41b06>,bool,enum rage::InitFunctionType>::_Target_type": {
            "offset": "0x2FB30"
        },
        "std::_Func_impl_no_alloc<<lambda_f5968c4b18e405350bc98239297f0d48>,bool>::_Copy": {
            "offset": "0x78790"
        },
        "std::_Func_impl_no_alloc<<lambda_f5968c4b18e405350bc98239297f0d48>,bool>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_f5968c4b18e405350bc98239297f0d48>,bool>::_Do_call": {
            "offset": "0x787B0"
        },
        "std::_Func_impl_no_alloc<<lambda_f5968c4b18e405350bc98239297f0d48>,bool>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_f5968c4b18e405350bc98239297f0d48>,bool>::_Move": {
            "offset": "0x78790"
        },
        "std::_Func_impl_no_alloc<<lambda_f5968c4b18e405350bc98239297f0d48>,bool>::_Target_type": {
            "offset": "0x787C0"
        },
        "std::_Func_impl_no_alloc<<lambda_fbd37c60be11893d41ba7850fe1633c9>,bool,enum rage::InitFunctionType>::_Copy": {
            "offset": "0x2FA50"
        },
        "std::_Func_impl_no_alloc<<lambda_fbd37c60be11893d41ba7850fe1633c9>,bool,enum rage::InitFunctionType>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_fbd37c60be11893d41ba7850fe1633c9>,bool,enum rage::InitFunctionType>::_Do_call": {
            "offset": "0x2FA70"
        },
        "std::_Func_impl_no_alloc<<lambda_fbd37c60be11893d41ba7850fe1633c9>,bool,enum rage::InitFunctionType>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_fbd37c60be11893d41ba7850fe1633c9>,bool,enum rage::InitFunctionType>::_Move": {
            "offset": "0x2FA50"
        },
        "std::_Func_impl_no_alloc<<lambda_fbd37c60be11893d41ba7850fe1633c9>,bool,enum rage::InitFunctionType>::_Target_type": {
            "offset": "0x2FAB0"
        },
        "std::_Func_impl_no_alloc<<lambda_fe88ff6dbc907fb0feeae768dbc364ca>,void>::_Copy": {
            "offset": "0x72400"
        },
        "std::_Func_impl_no_alloc<<lambda_fe88ff6dbc907fb0feeae768dbc364ca>,void>::_Delete_this": {
            "offset": "0x1A8E0"
        },
        "std::_Func_impl_no_alloc<<lambda_fe88ff6dbc907fb0feeae768dbc364ca>,void>::_Do_call": {
            "offset": "0x72410"
        },
        "std::_Func_impl_no_alloc<<lambda_fe88ff6dbc907fb0feeae768dbc364ca>,void>::_Get": {
            "offset": "0x1A8D0"
        },
        "std::_Func_impl_no_alloc<<lambda_fe88ff6dbc907fb0feeae768dbc364ca>,void>::_Move": {
            "offset": "0x72400"
        },
        "std::_Func_impl_no_alloc<<lambda_fe88ff6dbc907fb0feeae768dbc364ca>,void>::_Target_type": {
            "offset": "0x72420"
        },
        "std::_Guess_median_unchecked<jitasm::compiler::OrderedLabel *,std::less<void> >": {
            "offset": "0x34FB0"
        },
        "std::_Hash<std::_Umap_traits<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Forced_rehash": {
            "offset": "0x212F0"
        },
        "std::_Hash<std::_Umap_traits<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Try_emplace<int>": {
            "offset": "0x38750"
        },
        "std::_Hash<std::_Umap_traits<int,std::list<unsigned int,std::allocator<unsigned int> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > >,0> >::_Forced_rehash": {
            "offset": "0x212F0"
        },
        "std::_Hash<std::_Umap_traits<int,std::list<unsigned int,std::allocator<unsigned int> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > >,0> >::_Try_emplace<int>": {
            "offset": "0x38A30"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x226C0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::_Forced_rehash": {
            "offset": "0x53C30"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x38470"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::_Unchecked_erase": {
            "offset": "0x54840"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::clear": {
            "offset": "0x55920"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::shared_ptr<StreamingPackfileEntry>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x226C0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::shared_ptr<StreamingPackfileEntry>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > >,0> >::_Forced_rehash": {
            "offset": "0x255C0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::shared_ptr<StreamingPackfileEntry>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > >,0> >::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > >": {
            "offset": "0x22790"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x226C0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> >,0> >::_Forced_rehash": {
            "offset": "0x255C0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> >,0> >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x736A0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,MapTypesFile,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,MapTypesFile> >,0> >::_Forced_rehash": {
            "offset": "0x212F0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,MapTypesFile,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,MapTypesFile> >,0> >::_Unchecked_erase": {
            "offset": "0x21580"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,MapTypesFile,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,MapTypesFile> >,0> >::clear": {
            "offset": "0x218B0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,MapTypesFile,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,MapTypesFile> >,0> >::emplace<std::pair<unsigned int const ,MapTypesFile> >": {
            "offset": "0x1C680"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,`ValidateGeometry'::`77'::PolyEdgeMap,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> >,0> >::_Forced_rehash": {
            "offset": "0x6EC50"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,`ValidateGeometry'::`77'::PolyEdgeMap,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> >,0> >::_Try_emplace<unsigned int const &>": {
            "offset": "0x6CE50"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,`ValidateGeometry'::`77'::PolyEdgeMap,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> >,0> >::~_Hash<std::_Umap_traits<unsigned int,`ValidateGeometry'::`77'::PolyEdgeMap,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> >,0> >": {
            "offset": "0x6D1B0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Forced_rehash": {
            "offset": "0x212F0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Unchecked_erase": {
            "offset": "0x2C260"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear": {
            "offset": "0x2C430"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,int> >,0> >::emplace<std::pair<unsigned int const ,int> >": {
            "offset": "0x5F480"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Hash<std::_Umap_traits<unsigned int,int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,int> >,0> >": {
            "offset": "0x2A830"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Forced_rehash": {
            "offset": "0x212F0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Rehash_for_1": {
            "offset": "0x76150"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Try_emplace<unsigned int const &>": {
            "offset": "0x73440"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Try_emplace<unsigned int>": {
            "offset": "0x73440"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,1> >::_Forced_rehash": {
            "offset": "0x212F0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,1> >::~_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,1> >": {
            "offset": "0x2A830"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,void *,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,void *> >,0> >::_Forced_rehash": {
            "offset": "0x212F0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,void *,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,void *> >,0> >::emplace<unsigned int &,NewTypeId * &>": {
            "offset": "0x2A1A0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,void *,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,void *> >,0> >::~_Hash<std::_Umap_traits<unsigned int,void *,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,void *> >,0> >": {
            "offset": "0x2A780"
        },
        "std::_Hash<std::_Uset_traits<int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<int>,0> >::_Forced_rehash": {
            "offset": "0x2C0A0"
        },
        "std::_Hash<std::_Uset_traits<int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<int>,0> >::emplace<int>": {
            "offset": "0x2A480"
        },
        "std::_Hash<std::_Uset_traits<int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<int>,0> >::~_Hash<std::_Uset_traits<int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<int>,0> >": {
            "offset": "0x2A830"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x226C0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Forced_rehash": {
            "offset": "0x75DF0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x73980"
        },
        "std::_Hash<std::_Uset_traits<unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<unsigned int>,0> >::_Forced_rehash": {
            "offset": "0x2C0A0"
        },
        "std::_Hash<std::_Uset_traits<unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<unsigned int>,0> >::_Unchecked_erase": {
            "offset": "0x2C260"
        },
        "std::_Hash<std::_Uset_traits<unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<unsigned int>,0> >::clear": {
            "offset": "0x2C430"
        },
        "std::_Hash<std::_Uset_traits<unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<unsigned int>,0> >::emplace<unsigned int const &>": {
            "offset": "0x2A480"
        },
        "std::_Hash<std::_Uset_traits<unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<unsigned int>,0> >::~_Hash<std::_Uset_traits<unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<unsigned int>,0> >": {
            "offset": "0x2A830"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0> > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned int> >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned int> >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned int> >,std::_Iterator_base0> > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::tuple<rage::fiDevice *,unsigned __int64,unsigned __int64> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::tuple<rage::fiDevice *,unsigned __int64,unsigned __int64> > > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,MapTypesFile> > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,MapTypesFile> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,MapTypesFile> > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > > > > >::_Assign_grow": {
            "offset": "0x6EB10"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > > > > >": {
            "offset": "0x6D260"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,int> > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,int> > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,void *> > > > > >::_Assign_grow": {
            "offset": "0x210C0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,void *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,void *> > > > > >": {
            "offset": "0x1DA70"
        },
        "std::_Init_once_completer::~_Init_once_completer": {
            "offset": "0x29A20"
        },
        "std::_Inplace_merge_buffer_left<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x35170"
        },
        "std::_Inplace_merge_buffer_right<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x35320"
        },
        "std::_Insert_string<char,std::char_traits<char>,unsigned __int64>": {
            "offset": "0x1C090"
        },
        "std::_Insertion_sort_isort_max_chunks<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x35A00"
        },
        "std::_Insertion_sort_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x35CA0"
        },
        "std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x26240"
        },
        "std::_List_node<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,void *> > >": {
            "offset": "0x34D90"
        },
        "std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >": {
            "offset": "0x34E30"
        },
        "std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >": {
            "offset": "0x34ED0"
        },
        "std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,void *> > >": {
            "offset": "0x34E30"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<int,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<int,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x73CE0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A860"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,void *> > >": {
            "offset": "0x3A8A0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >": {
            "offset": "0x3A930"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >,void *> > >": {
            "offset": "0x22CA0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,void *> > >": {
            "offset": "0x3A930"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,MapTypesFile>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,MapTypesFile>,void *> > >": {
            "offset": "0x1DAD0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap>,void *> > >": {
            "offset": "0x2A760"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,int>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,int>,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A860"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,void *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,void *>,void *> > >": {
            "offset": "0x2A760"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<unsigned int,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<unsigned int,void *> > >": {
            "offset": "0x2A740"
        },
        "std::_Make_heap_unchecked<std::pair<unsigned __int64,unsigned __int64> *,jitasm::compiler::ControlFlowGraph::sort_backedge>": {
            "offset": "0x35ED0"
        },
        "std::_Maklocstr<char>": {
            "offset": "0x1A7F0"
        },
        "std::_Med3_unchecked<std::pair<unsigned __int64,unsigned __int64> *,jitasm::compiler::ControlFlowGraph::sort_backedge>": {
            "offset": "0x36050"
        },
        "std::_Med3_unchecked<unsigned __int64 *,jitasm::compiler::Lifetime::LessCost>": {
            "offset": "0x36180"
        },
        "std::_Med3_unchecked<unsigned __int64 *,std::_Ref_fn<jitasm::compiler::Lifetime::LessAssignOrder> >": {
            "offset": "0x360F0"
        },
        "std::_Move_backward_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>": {
            "offset": "0x36250"
        },
        "std::_Move_unchecked<jitasm::Instr *,jitasm::Instr *>": {
            "offset": "0x36310"
        },
        "std::_Move_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>": {
            "offset": "0x362B0"
        },
        "std::_Optimistic_temporary_buffer<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Optimistic_temporary_buffer<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x3A9C0"
        },
        "std::_Partition_by_median_guess_unchecked<std::pair<unsigned __int64,unsigned __int64> *,jitasm::compiler::ControlFlowGraph::sort_backedge>": {
            "offset": "0x36340"
        },
        "std::_Partition_by_median_guess_unchecked<unsigned __int64 *,jitasm::compiler::Lifetime::LessCost>": {
            "offset": "0x36900"
        },
        "std::_Partition_by_median_guess_unchecked<unsigned __int64 *,std::_Ref_fn<jitasm::compiler::Lifetime::LessAssignOrder> >": {
            "offset": "0x36670"
        },
        "std::_Pop_heap_hole_by_index<std::pair<unsigned __int64,unsigned __int64> *,std::pair<unsigned __int64,unsigned __int64>,jitasm::compiler::ControlFlowGraph::sort_backedge>": {
            "offset": "0x36C60"
        },
        "std::_Pop_heap_hole_by_index<unsigned __int64 *,unsigned __int64,jitasm::compiler::Lifetime::LessCost>": {
            "offset": "0x36E90"
        },
        "std::_Pop_heap_hole_by_index<unsigned __int64 *,unsigned __int64,std::_Ref_fn<jitasm::compiler::Lifetime::LessAssignOrder> >": {
            "offset": "0x36D90"
        },
        "std::_Ref_count_base::_Get_deleter": {
            "offset": "0x210B0"
        },
        "std::_Ref_count_obj2<GFxValue>::_Delete_this": {
            "offset": "0x255A0"
        },
        "std::_Ref_count_obj2<GFxValue>::_Destroy": {
            "offset": "0x6FB90"
        },
        "std::_Ref_count_obj2<StreamingPackfileEntry>::_Delete_this": {
            "offset": "0x255A0"
        },
        "std::_Ref_count_obj2<StreamingPackfileEntry>::_Destroy": {
            "offset": "0x167B0"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<bool> >::_Delete_this": {
            "offset": "0x255A0"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<bool> >::_Destroy": {
            "offset": "0x63040"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Delete_this": {
            "offset": "0x255A0"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Destroy": {
            "offset": "0x59140"
        },
        "std::_Sort_unchecked<jitasm::compiler::OrderedLabel *,std::less<void> >": {
            "offset": "0x37870"
        },
        "std::_Sort_unchecked<std::pair<unsigned __int64,unsigned __int64> *,jitasm::compiler::ControlFlowGraph::sort_backedge>": {
            "offset": "0x37650"
        },
        "std::_Sort_unchecked<unsigned __int64 *,jitasm::compiler::Lifetime::LessCost>": {
            "offset": "0x38020"
        },
        "std::_Sort_unchecked<unsigned __int64 *,std::_Ref_fn<jitasm::compiler::Lifetime::LessAssignOrder> >": {
            "offset": "0x37D30"
        },
        "std::_Stable_sort_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x38360"
        },
        "std::_String_val<std::_Simple_types<char> >::_Xran": {
            "offset": "0x28D60"
        },
        "std::_Throw_bad_array_new_length": {
            "offset": "0x19530"
        },
        "std::_Throw_bad_cast": {
            "offset": "0x214F0"
        },
        "std::_Throw_tree_length_error": {
            "offset": "0x19550"
        },
        "std::_Tidy_deallocate_guard<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tidy_deallocate_guard<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x3A9D0"
        },
        "std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >": {
            "offset": "0x7EB40"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MinimapOverlayLoadRequest,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> >": {
            "offset": "0x70240"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MinimapOverlayLoadRequest,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x25F70"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MinimapOverlayLoadRequest,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> >,0> >::_Erase": {
            "offset": "0x71810"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x32DE0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x25F70"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Erase": {
            "offset": "0x536B0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_hint<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0xED20"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_lower_bound<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0xEFA0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >": {
            "offset": "0x16810"
        },
        "std::_Tree<std::_Tmap_traits<unsigned int,std::pair<int,int>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<int,int> > >,1> >::_Erase": {
            "offset": "0x534E0"
        },
        "std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_hint<int>": {
            "offset": "0x34540"
        },
        "std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >": {
            "offset": "0x3A9F0"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,IgnoreCaseLess,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase": {
            "offset": "0x55DD0"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x700A0"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x25F70"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Find_hint<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x347D0"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x34A70"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::insert<0,0>": {
            "offset": "0x79290"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >": {
            "offset": "0x3AA50"
        },
        "std::_Tree<std::_Tset_traits<std::pair<streaming::strStreamingModule *,int>,std::less<std::pair<streaming::strStreamingModule *,int> >,std::allocator<std::pair<streaming::strStreamingModule *,int> >,0> >::_Erase": {
            "offset": "0x53A10"
        },
        "std::_Tree<std::_Tset_traits<std::pair<streaming::strStreamingModule *,int>,std::less<std::pair<streaming::strStreamingModule *,int> >,std::allocator<std::pair<streaming::strStreamingModule *,int> >,0> >::clear": {
            "offset": "0x559B0"
        },
        "std::_Tree<std::_Tset_traits<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Eqrange<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x33EB0"
        },
        "std::_Tree<std::_Tset_traits<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Erase": {
            "offset": "0x536B0"
        },
        "std::_Tree<std::_Tset_traits<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Erase_unchecked": {
            "offset": "0x53BA0"
        },
        "std::_Tree<std::_Tset_traits<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x34B40"
        },
        "std::_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >::~_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >": {
            "offset": "0x86EB0"
        },
        "std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x34F40"
        },
        "std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>,void *> > >": {
            "offset": "0x70560"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3AA80"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::pair<int,int> >,void *> > >": {
            "offset": "0x3A7E0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x167F0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>,void *> > >": {
            "offset": "0x3A800"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x3A820"
        },
        "std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >": {
            "offset": "0x34260"
        },
        "std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x34480"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Extract": {
            "offset": "0x27FE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Lrotate": {
            "offset": "0x283B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Rrotate": {
            "offset": "0x28410"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,int>,void *> > >": {
            "offset": "0x342C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,int> > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::shared_ptr<GFxValue> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,std::shared_ptr<GFxValue> >,void *> > >": {
            "offset": "0x703F0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::shared_ptr<GFxValue> > > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>,void *> > >": {
            "offset": "0x704A0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> > >::_Extract": {
            "offset": "0x27FE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> > >::_Lrotate": {
            "offset": "0x283B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest> > >::_Rrotate": {
            "offset": "0x28410"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x34320"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Extract": {
            "offset": "0x27FE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Lrotate": {
            "offset": "0x283B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Rrotate": {
            "offset": "0x28410"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0xECC0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::tuple<streaming::strStreamingModule *,unsigned int> const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::tuple<streaming::strStreamingModule *,unsigned int> const ,unsigned int>,void *> > >": {
            "offset": "0x733E0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::tuple<streaming::strStreamingModule *,unsigned int> const ,unsigned int> > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<streaming::strStreamingModule *,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<streaming::strStreamingModule *,int>,void *> > >": {
            "offset": "0x34420"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<streaming::strStreamingModule *,int> > >::_Extract": {
            "offset": "0x27FE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<streaming::strStreamingModule *,int> > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<streaming::strStreamingModule *,int> > >::_Lrotate": {
            "offset": "0x283B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<streaming::strStreamingModule *,int> > >::_Rrotate": {
            "offset": "0x28410"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x26100"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::pair<int,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::pair<int,int> >,void *> > >": {
            "offset": "0x342C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::pair<int,int> > > >::_Extract": {
            "offset": "0x27FE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::pair<int,int> > > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::pair<int,int> > > >::_Lrotate": {
            "offset": "0x283B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::pair<int,int> > > >::_Rrotate": {
            "offset": "0x28410"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x34320"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Extract": {
            "offset": "0x27FE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0x192D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Lrotate": {
            "offset": "0x283B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Rrotate": {
            "offset": "0x28410"
        },
        "std::_Tree_val<std::_Tree_simple_types<tbb::detail::d1::global_control *> >::_Erase_tree<tbb::detail::d1::tbb_allocator<std::_Tree_node<tbb::detail::d1::global_control *,void *> > >": {
            "offset": "0x86E40"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x1DB20"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Uninitialized_backout_al<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x3AAC0"
        },
        "std::_Uninitialized_copy_n<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x38D10"
        },
        "std::_Uninitialized_merge_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,<lambda_39060df8cb3a2fcec89be66c996a24e9> >": {
            "offset": "0x38DA0"
        },
        "std::_Uninitialized_move<jitasm::Instr *,std::allocator<jitasm::Instr> >": {
            "offset": "0x39060"
        },
        "std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x1C600"
        },
        "std::_Uninitialized_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,rage::ResourceFlags> *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,rage::ResourceFlags> > >": {
            "offset": "0x26490"
        },
        "std::_Uninitialized_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x38FC0"
        },
        "std::_Uninitialized_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int> *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int> > >": {
            "offset": "0x38F30"
        },
        "std::_Uninitialized_move<std::tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::allocator<std::tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x38F30"
        },
        "std::_Uninitialized_move_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *>": {
            "offset": "0x390C0"
        },
        "std::_Xlen_string": {
            "offset": "0x19570"
        },
        "std::allocator<CMapDataContents *>::deallocate": {
            "offset": "0x55C40"
        },
        "std::allocator<char>::allocate": {
            "offset": "0x19590"
        },
        "std::allocator<char>::deallocate": {
            "offset": "0x25840"
        },
        "std::allocator<float>::allocate": {
            "offset": "0x217D0"
        },
        "std::allocator<float>::deallocate": {
            "offset": "0x21980"
        },
        "std::allocator<hook::pattern_match>::allocate": {
            "offset": "0x54BD0"
        },
        "std::allocator<hook::pattern_match>::deallocate": {
            "offset": "0x55C40"
        },
        "std::allocator<int>::allocate": {
            "offset": "0x217D0"
        },
        "std::allocator<int>::deallocate": {
            "offset": "0x21980"
        },
        "std::allocator<jitasm::Instr>::allocate": {
            "offset": "0x54CB0"
        },
        "std::allocator<jitasm::Instr>::deallocate": {
            "offset": "0x55CE0"
        },
        "std::allocator<jitasm::compiler::BasicBlock *>::allocate": {
            "offset": "0x54BD0"
        },
        "std::allocator<jitasm::compiler::BasicBlock *>::deallocate": {
            "offset": "0x55C40"
        },
        "std::allocator<jitasm::compiler::Lifetime::Interval>::allocate": {
            "offset": "0x54D20"
        },
        "std::allocator<jitasm::compiler::Lifetime::Interval>::deallocate": {
            "offset": "0x55D30"
        },
        "std::allocator<jitasm::compiler::OrderedLabel>::allocate": {
            "offset": "0x2EA30"
        },
        "std::allocator<jitasm::compiler::OrderedLabel>::deallocate": {
            "offset": "0x2EAA0"
        },
        "std::allocator<jitasm::compiler::RegUsePoint>::deallocate": {
            "offset": "0x2EAA0"
        },
        "std::allocator<jitasm::compiler::VarAttribute>::deallocate": {
            "offset": "0x55D80"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate": {
            "offset": "0x21840"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate": {
            "offset": "0x219D0"
        },
        "std::allocator<std::pair<int,int> >::deallocate": {
            "offset": "0x55C40"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,rage::ResourceFlags> >::deallocate": {
            "offset": "0x284C0"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate": {
            "offset": "0x54C40"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate": {
            "offset": "0x55C90"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int> >::deallocate": {
            "offset": "0x284C0"
        },
        "std::allocator<std::pair<unsigned __int64,unsigned __int64> >::deallocate": {
            "offset": "0x2EAA0"
        },
        "std::allocator<std::tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate": {
            "offset": "0x284C0"
        },
        "std::allocator<std::tuple<streaming::strStreamingModule *,int> >::allocate": {
            "offset": "0x2EA30"
        },
        "std::allocator<std::tuple<streaming::strStreamingModule *,int> >::deallocate": {
            "offset": "0x2EAA0"
        },
        "std::allocator<unsigned __int64>::allocate": {
            "offset": "0x54BD0"
        },
        "std::allocator<unsigned __int64>::deallocate": {
            "offset": "0x55C40"
        },
        "std::allocator<unsigned char>::deallocate": {
            "offset": "0x25840"
        },
        "std::allocator<unsigned int>::allocate": {
            "offset": "0x217D0"
        },
        "std::allocator<unsigned int>::deallocate": {
            "offset": "0x21980"
        },
        "std::allocator<wchar_t>::allocate": {
            "offset": "0x195F0"
        },
        "std::bad_alloc::bad_alloc": {
            "offset": "0x16570"
        },
        "std::bad_alloc::~bad_alloc": {
            "offset": "0x16A00"
        },
        "std::bad_array_new_length::bad_array_new_length": {
            "offset": "0x165F0"
        },
        "std::bad_array_new_length::~bad_array_new_length": {
            "offset": "0x16A00"
        },
        "std::bad_cast::bad_cast": {
            "offset": "0x1D6F0"
        },
        "std::bad_cast::~bad_cast": {
            "offset": "0x16A00"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Endwrite": {
            "offset": "0x21200"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Lock": {
            "offset": "0x1A9D0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Reset_back": {
            "offset": "0x214B0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Unlock": {
            "offset": "0x1A9F0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::imbue": {
            "offset": "0x1B4D0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::overflow": {
            "offset": "0x1AA10"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::pbackfail": {
            "offset": "0x1ABD0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::seekoff": {
            "offset": "0x1B230"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::seekpos": {
            "offset": "0x1B300"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::setbuf": {
            "offset": "0x1B3A0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::sync": {
            "offset": "0x1B480"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::uflow": {
            "offset": "0x1AD70"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::underflow": {
            "offset": "0x1ACF0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::xsgetn": {
            "offset": "0x1B030"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::xsputn": {
            "offset": "0x1B170"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >": {
            "offset": "0x1DB70"
        },
        "std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >": {
            "offset": "0x1CD90"
        },
        "std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x1E050"
        },
        "std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x1E340"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>": {
            "offset": "0xEC00"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_from_iter<boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::use_default,boost::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_upperF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::use_default,boost::use_default>,std::nullptr_t>": {
            "offset": "0x32A50"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>": {
            "offset": "0x1C300"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>": {
            "offset": "0x1C470"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >": {
            "offset": "0x81240"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate": {
            "offset": "0x168D0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append": {
            "offset": "0x61C00"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign": {
            "offset": "0x197E0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x16390"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>": {
            "offset": "0x303D0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str": {
            "offset": "0x54E10"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x168D0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>": {
            "offset": "0x7B600"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_967c2ed818824c5314a20ec3af46b793>,unsigned __int64,wchar_t const *,unsigned __int64>": {
            "offset": "0x6F790"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate": {
            "offset": "0x16930"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append": {
            "offset": "0x19660"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x6F910"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::push_back": {
            "offset": "0x82F80"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve": {
            "offset": "0x830E0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x16930"
        },
        "std::basic_string_view<char,std::char_traits<char> >::basic_string_view<char,std::char_traits<char> >": {
            "offset": "0x39E20"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow": {
            "offset": "0x21A50"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail": {
            "offset": "0x21BC0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff": {
            "offset": "0x21D20"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos": {
            "offset": "0x21EA0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow": {
            "offset": "0x21C50"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x22D20"
        },
        "std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str": {
            "offset": "0x25880"
        },
        "std::call_once<<lambda_f5263b7659a0349927d6254c3c7dfeb0> >": {
            "offset": "0x297F0"
        },
        "std::deque<jitasm::Frontend::ControlState,std::allocator<jitasm::Frontend::ControlState> >::~deque<jitasm::Frontend::ControlState,std::allocator<jitasm::Frontend::ControlState> >": {
            "offset": "0x3AB30"
        },
        "std::deque<jitasm::Frontend::Label,std::allocator<jitasm::Frontend::Label> >::_Growmap": {
            "offset": "0x54090"
        },
        "std::deque<jitasm::Frontend::Label,std::allocator<jitasm::Frontend::Label> >::_Tidy": {
            "offset": "0x54550"
        },
        "std::deque<jitasm::Frontend::Label,std::allocator<jitasm::Frontend::Label> >::_Xlen": {
            "offset": "0x54A60"
        },
        "std::deque<jitasm::Frontend::Label,std::allocator<jitasm::Frontend::Label> >::deque<jitasm::Frontend::Label,std::allocator<jitasm::Frontend::Label> >": {
            "offset": "0x39E50"
        },
        "std::deque<jitasm::Frontend::Label,std::allocator<jitasm::Frontend::Label> >::~deque<jitasm::Frontend::Label,std::allocator<jitasm::Frontend::Label> >": {
            "offset": "0x3AC00"
        },
        "std::deque<jitasm::compiler::BasicBlock *,std::allocator<jitasm::compiler::BasicBlock *> >::_Growmap": {
            "offset": "0x53EB0"
        },
        "std::deque<jitasm::compiler::BasicBlock *,std::allocator<jitasm::compiler::BasicBlock *> >::_Tidy": {
            "offset": "0x54490"
        },
        "std::deque<jitasm::compiler::BasicBlock *,std::allocator<jitasm::compiler::BasicBlock *> >::_Xlen": {
            "offset": "0x54A60"
        },
        "std::deque<jitasm::compiler::BasicBlock *,std::allocator<jitasm::compiler::BasicBlock *> >::push_back": {
            "offset": "0x57020"
        },
        "std::deque<jitasm::compiler::BasicBlock *,std::allocator<jitasm::compiler::BasicBlock *> >::push_front": {
            "offset": "0x570E0"
        },
        "std::deque<jitasm::compiler::BasicBlock *,std::allocator<jitasm::compiler::BasicBlock *> >::~deque<jitasm::compiler::BasicBlock *,std::allocator<jitasm::compiler::BasicBlock *> >": {
            "offset": "0x3AB00"
        },
        "std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> >": {
            "offset": "0x392A0"
        },
        "std::endl<char,std::char_traits<char> >": {
            "offset": "0x22A90"
        },
        "std::exception::exception": {
            "offset": "0x16620"
        },
        "std::exception::what": {
            "offset": "0x1A6C0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0> >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned int> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned int> >,std::_Iterator_base0> >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,MapTypesFile> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,MapTypesFile> > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > > > >": {
            "offset": "0x6D120"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,int> > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >": {
            "offset": "0x1C9C0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,void *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,void *> > > > >": {
            "offset": "0x1C9C0"
        },
        "std::function<bool __cdecl(CDataFileMountInterface *,CDataFileMgr::DataFile &)>::~function<bool __cdecl(CDataFileMountInterface *,CDataFileMgr::DataFile &)>": {
            "offset": "0x1DA40"
        },
        "std::function<bool __cdecl(ConsoleExecutionContext &)>::~function<bool __cdecl(ConsoleExecutionContext &)>": {
            "offset": "0x1DA40"
        },
        "std::function<bool __cdecl(char const *)>::~function<bool __cdecl(char const *)>": {
            "offset": "0x1DA40"
        },
        "std::function<bool __cdecl(enum rage::InitFunctionType)>::~function<bool __cdecl(enum rage::InitFunctionType)>": {
            "offset": "0x1DA40"
        },
        "std::function<bool __cdecl(void)>::~function<bool __cdecl(void)>": {
            "offset": "0x1DA40"
        },
        "std::function<void __cdecl(bool const &)>::~function<void __cdecl(bool const &)>": {
            "offset": "0x1DA40"
        },
        "std::function<void __cdecl(int const &)>::~function<void __cdecl(int const &)>": {
            "offset": "0x1DA40"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x1DA40"
        },
        "std::function<void __cdecl(unsigned int)>::~function<void __cdecl(unsigned int)>": {
            "offset": "0x1DA40"
        },
        "std::function<void __cdecl(void)>::function<void __cdecl(void)>": {
            "offset": "0x73C60"
        },
        "std::function<void __cdecl(void)>::~function<void __cdecl(void)>": {
            "offset": "0x1DA40"
        },
        "std::invalid_argument::invalid_argument": {
            "offset": "0x86100"
        },
        "std::invalid_argument::~invalid_argument": {
            "offset": "0x16A00"
        },
        "std::length_error::length_error": {
            "offset": "0x86190"
        },
        "std::length_error::~length_error": {
            "offset": "0x16A00"
        },
        "std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >": {
            "offset": "0x2A8E0"
        },
        "std::list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x26540"
        },
        "std::list<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~list<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x3AC30"
        },
        "std::list<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,std::allocator<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > > >::~list<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > >,std::allocator<std::pair<int const ,std::list<unsigned int,std::allocator<unsigned int> > > > >": {
            "offset": "0x3ACA0"
        },
        "std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >": {
            "offset": "0x3ACD0"
        },
        "std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> > > >": {
            "offset": "0x22E30"
        },
        "std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::tuple<rage::fiDevice *,unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::tuple<rage::fiDevice *,unsigned __int64,unsigned __int64> > > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::tuple<rage::fiDevice *,unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::tuple<rage::fiDevice *,unsigned __int64,unsigned __int64> > > >": {
            "offset": "0x5F9E0"
        },
        "std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> > >": {
            "offset": "0x3ACD0"
        },
        "std::list<std::pair<unsigned int const ,MapTypesFile>,std::allocator<std::pair<unsigned int const ,MapTypesFile> > >::~list<std::pair<unsigned int const ,MapTypesFile>,std::allocator<std::pair<unsigned int const ,MapTypesFile> > >": {
            "offset": "0x1DD00"
        },
        "std::list<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap>,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > >::~list<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap>,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > >": {
            "offset": "0x6D2C0"
        },
        "std::list<std::pair<unsigned int const ,int>,std::allocator<std::pair<unsigned int const ,int> > >::~list<std::pair<unsigned int const ,int>,std::allocator<std::pair<unsigned int const ,int> > >": {
            "offset": "0x2A8E0"
        },
        "std::list<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~list<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x3AC30"
        },
        "std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >": {
            "offset": "0x2A8E0"
        },
        "std::list<std::pair<unsigned int const ,void *>,std::allocator<std::pair<unsigned int const ,void *> > >::~list<std::pair<unsigned int const ,void *>,std::allocator<std::pair<unsigned int const ,void *> > >": {
            "offset": "0x2A940"
        },
        "std::list<unsigned int,std::allocator<unsigned int> >::push_front": {
            "offset": "0x571A0"
        },
        "std::list<unsigned int,std::allocator<unsigned int> >::~list<unsigned int,std::allocator<unsigned int> >": {
            "offset": "0x2A8E0"
        },
        "std::list<void *,std::allocator<void *> >::~list<void *,std::allocator<void *> >": {
            "offset": "0x2A8E0"
        },
        "std::locale::~locale": {
            "offset": "0x1E210"
        },
        "std::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>": {
            "offset": "0x87470"
        },
        "std::logic_error::logic_error": {
            "offset": "0x861E0"
        },
        "std::map<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::~map<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >": {
            "offset": "0x3AD00"
        },
        "std::numpunct<char>::do_decimal_point": {
            "offset": "0x7F270"
        },
        "std::numpunct<char>::do_falsename": {
            "offset": "0x7F280"
        },
        "std::numpunct<char>::do_grouping": {
            "offset": "0x7F2C0"
        },
        "std::numpunct<char>::do_thousands_sep": {
            "offset": "0x7F300"
        },
        "std::numpunct<char>::do_truename": {
            "offset": "0x7F310"
        },
        "std::numpunct<char>::numpunct<char>": {
            "offset": "0x7E990"
        },
        "std::out_of_range::out_of_range": {
            "offset": "0x862C0"
        },
        "std::out_of_range::~out_of_range": {
            "offset": "0x16A00"
        },
        "std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x3AD60"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MinimapOverlayLoadRequest>": {
            "offset": "0x168D0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x3ADD0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::shared_ptr<StreamingPackfileEntry> >": {
            "offset": "0x22EA0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,rage::ResourceFlags>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,rage::ResourceFlags>": {
            "offset": "0x168D0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x3ADD0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>": {
            "offset": "0x168D0"
        },
        "std::pair<unsigned int const ,MapTypesFile>::~pair<unsigned int const ,MapTypesFile>": {
            "offset": "0x1DD70"
        },
        "std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x3AD60"
        },
        "std::rotate<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<jitasm::compiler::BasicBlock *> > > >": {
            "offset": "0x39880"
        },
        "std::runtime_error::runtime_error": {
            "offset": "0x86310"
        },
        "std::runtime_error::~runtime_error": {
            "offset": "0x16A00"
        },
        "std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >": {
            "offset": "0x3A9F0"
        },
        "std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x39EA0"
        },
        "std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x3AA50"
        },
        "std::shared_lock<std::shared_mutex>::~shared_lock<std::shared_mutex>": {
            "offset": "0x3AEF0"
        },
        "std::shared_ptr<GFxValue>::~shared_ptr<GFxValue>": {
            "offset": "0x22F50"
        },
        "std::shared_ptr<StreamingPackfileEntry>::~shared_ptr<StreamingPackfileEntry>": {
            "offset": "0x22F50"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<bool> >::~shared_ptr<internal::ConsoleVariableEntry<bool> >": {
            "offset": "0x22F50"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<int> >::~shared_ptr<internal::ConsoleVariableEntry<int> >": {
            "offset": "0x22F50"
        },
        "std::shared_ptr<internal::ConsoleVariableEntryBase>::~shared_ptr<internal::ConsoleVariableEntryBase>": {
            "offset": "0x22F50"
        },
        "std::to_string": {
            "offset": "0x25990"
        },
        "std::tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><unsigned int &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>": {
            "offset": "0x303A0"
        },
        "std::tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x168D0"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x168D0"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x3ADD0"
        },
        "std::unique_lock<std::mutex>::~unique_lock<std::mutex>": {
            "offset": "0x22FA0"
        },
        "std::unique_lock<std::shared_mutex>::~unique_lock<std::shared_mutex>": {
            "offset": "0x73D70"
        },
        "std::unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >::~unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >": {
            "offset": "0x5A400"
        },
        "std::unique_ptr<fwEvent<>::callback,std::default_delete<fwEvent<>::callback> >::~unique_ptr<fwEvent<>::callback,std::default_delete<fwEvent<>::callback> >": {
            "offset": "0x1DD80"
        },
        "std::unique_ptr<fwEvent<DamageEventMetaData const &>::callback,std::default_delete<fwEvent<DamageEventMetaData const &>::callback> >::~unique_ptr<fwEvent<DamageEventMetaData const &>::callback,std::default_delete<fwEvent<DamageEventMetaData const &>::callback> >": {
            "offset": "0x1DD80"
        },
        "std::unique_ptr<fwEvent<GameEventData const &>::callback,std::default_delete<fwEvent<GameEventData const &>::callback> >::~unique_ptr<fwEvent<GameEventData const &>::callback,std::default_delete<fwEvent<GameEventData const &>::callback> >": {
            "offset": "0x1DD80"
        },
        "std::unique_ptr<fwEvent<GameEventMetaData const &>::callback,std::default_delete<fwEvent<GameEventMetaData const &>::callback> >::~unique_ptr<fwEvent<GameEventMetaData const &>::callback,std::default_delete<fwEvent<GameEventMetaData const &>::callback> >": {
            "offset": "0x1DD80"
        },
        "std::unique_ptr<fwEvent<PopulationCreationState *>::callback,std::default_delete<fwEvent<PopulationCreationState *>::callback> >::~unique_ptr<fwEvent<PopulationCreationState *>::callback,std::default_delete<fwEvent<PopulationCreationState *>::callback> >": {
            "offset": "0x1DD80"
        },
        "std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >": {
            "offset": "0x1DD90"
        },
        "std::unordered_map<unsigned int,`ValidateGeometry'::`77'::PolyEdgeMap,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > >::~unordered_map<unsigned int,`ValidateGeometry'::`77'::PolyEdgeMap,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,`ValidateGeometry'::`77'::PolyEdgeMap> > >": {
            "offset": "0x6D320"
        },
        "std::use_facet<std::codecvt<char,char,_Mbstatet> >": {
            "offset": "0x1CC30"
        },
        "std::use_facet<std::ctype<char> >": {
            "offset": "0x39CF0"
        },
        "std::use_facet<std::numpunct<char> >": {
            "offset": "0x7E660"
        },
        "streaming::AddDataFileToLoadList": {
            "offset": "0x3EFD0"
        },
        "streaming::AddDefMetaToLoadList": {
            "offset": "0x3F260"
        },
        "streaming::AddMetaToLoadList": {
            "offset": "0x3F2B0"
        },
        "streaming::GetRawStreamerByIndex": {
            "offset": "0x72170"
        },
        "streaming::GetRawStreamerForFile": {
            "offset": "0x72180"
        },
        "streaming::GetStreamingBaseNameForHash": {
            "offset": "0x756C0"
        },
        "streaming::GetStreamingIndexForLocalHashKey": {
            "offset": "0x757D0"
        },
        "streaming::GetStreamingIndexForName": {
            "offset": "0x75830"
        },
        "streaming::GetStreamingNameForIndex": {
            "offset": "0x75970"
        },
        "streaming::GetStreamingPackfileByIndex": {
            "offset": "0x27BC0"
        },
        "streaming::GetStreamingPackfileForEntry": {
            "offset": "0x27BE0"
        },
        "streaming::IsRawHandle": {
            "offset": "0x489D0"
        },
        "streaming::IsStreamerShuttingDown": {
            "offset": "0x489E0"
        },
        "streaming::LoadObjectsNow": {
            "offset": "0x72270"
        },
        "streaming::Manager::FindAllDependents": {
            "offset": "0x71F50"
        },
        "streaming::Manager::FindDependentsInner": {
            "offset": "0x71F60"
        },
        "streaming::Manager::GetInstance": {
            "offset": "0x72150"
        },
        "streaming::Manager::IsObjectReadyToDelete": {
            "offset": "0x72260"
        },
        "streaming::Manager::Manager": {
            "offset": "0x1D420"
        },
        "streaming::Manager::RegisterObject": {
            "offset": "0x72280"
        },
        "streaming::Manager::ReleaseObject": {
            "offset": "0x723A0"
        },
        "streaming::Manager::RequestObject": {
            "offset": "0x723B0"
        },
        "streaming::Manager::UnregisterObject": {
            "offset": "0x723C0"
        },
        "streaming::Manager::~Manager": {
            "offset": "0x1DF50"
        },
        "streaming::RegisterRawStreamingFile": {
            "offset": "0x722A0"
        },
        "streaming::RemoveDataFileFromLoadList": {
            "offset": "0x4FCC0"
        },
        "streaming::strStreamingModuleMgr::GetStreamingModule": {
            "offset": "0x72250"
        },
        "streaming::strStreamingModuleMgr::strStreamingModuleMgr": {
            "offset": "0x1DA10"
        },
        "streaming::strStreamingModuleMgr::~strStreamingModuleMgr": {
            "offset": "0x1E390"
        },
        "tbb::detail::d0::raii_guard<<lambda_0e1f910659e28e696fc4a81fef6b33ad> >::~raii_guard<<lambda_0e1f910659e28e696fc4a81fef6b33ad> >": {
            "offset": "0x5FAA0"
        },
        "tbb::detail::d0::raii_guard<<lambda_2abf46fda104b340581b3b32bec86e55> >::~raii_guard<<lambda_2abf46fda104b340581b3b32bec86e55> >": {
            "offset": "0x5FAA0"
        },
        "tbb::detail::d0::raii_guard<<lambda_62f6282f9e0ccd767dd6cd7995d2adb2> >::~raii_guard<<lambda_62f6282f9e0ccd767dd6cd7995d2adb2> >": {
            "offset": "0x5FAA0"
        },
        "tbb::detail::d0::raii_guard<<lambda_8bd0887c7dc64179bbe9ac0ebe78d5ea> >::~raii_guard<<lambda_8bd0887c7dc64179bbe9ac0ebe78d5ea> >": {
            "offset": "0x5FB70"
        },
        "tbb::detail::d1::unique_scoped_lock<tbb::detail::d1::spin_mutex>::~unique_scoped_lock<tbb::detail::d1::spin_mutex>": {
            "offset": "0x86F20"
        },
        "tbb::detail::d2::concurrent_queue<std::function<void __cdecl(void)>,tbb::detail::d1::cache_aligned_allocator<std::function<void __cdecl(void)> > >::clear": {
            "offset": "0x61C90"
        },
        "tbb::detail::d2::concurrent_queue<std::list<unsigned int,std::allocator<unsigned int> >,tbb::detail::d1::cache_aligned_allocator<std::list<unsigned int,std::allocator<unsigned int> > > >::clear": {
            "offset": "0x61F90"
        },
        "tbb::detail::d2::concurrent_queue<void *,tbb::detail::d1::cache_aligned_allocator<void *> >::internal_try_pop": {
            "offset": "0x62530"
        },
        "tbb::detail::d2::concurrent_queue<void *,tbb::detail::d1::cache_aligned_allocator<void *> >::~concurrent_queue<void *,tbb::detail::d1::cache_aligned_allocator<void *> >": {
            "offset": "0x5F930"
        },
        "tbb::detail::d2::micro_queue<std::function<void __cdecl(void)>,tbb::detail::d1::cache_aligned_allocator<std::function<void __cdecl(void)> > >::prepare_page": {
            "offset": "0x62D60"
        },
        "tbb::detail::d2::micro_queue<std::list<unsigned int,std::allocator<unsigned int> >,tbb::detail::d1::cache_aligned_allocator<std::list<unsigned int,std::allocator<unsigned int> > > >::prepare_page": {
            "offset": "0x62ED0"
        },
        "tbb::detail::d2::micro_queue<void *,tbb::detail::d1::cache_aligned_allocator<void *> >::prepare_page": {
            "offset": "0x62BF0"
        },
        "tbb::detail::r1::AvailableHwConcurrency": {
            "offset": "0x87170"
        },
        "tbb::detail::r1::PrintExtraVersionInfo": {
            "offset": "0x86F90"
        },
        "tbb::detail::r1::`dynamic initializer for '__TBB_InitOnceHiddenInstance''": {
            "offset": "0xDD60"
        },
        "tbb::detail::r1::`dynamic initializer for 'allowed_parallelism_ctl''": {
            "offset": "0xDBF0"
        },
        "tbb::detail::r1::`dynamic initializer for 'lifetime_ctl''": {
            "offset": "0xDC40"
        },
        "tbb::detail::r1::`dynamic initializer for 'stack_size_ctl''": {
            "offset": "0xDC90"
        },
        "tbb::detail::r1::`dynamic initializer for 'terminate_on_exception_ctl''": {
            "offset": "0xDCE0"
        },
        "tbb::detail::r1::allocate_memory": {
            "offset": "0x86890"
        },
        "tbb::detail::r1::allowed_parallelism_control::active_value": {
            "offset": "0x86BC0"
        },
        "tbb::detail::r1::allowed_parallelism_control::apply_active": {
            "offset": "0x86BB0"
        },
        "tbb::detail::r1::allowed_parallelism_control::default_value": {
            "offset": "0x86B20"
        },
        "tbb::detail::r1::allowed_parallelism_control::is_first_arg_preferred": {
            "offset": "0x86BA0"
        },
        "tbb::detail::r1::arena::has_enqueued_tasks": {
            "offset": "0x87F50"
        },
        "tbb::detail::r1::bad_last_alloc::bad_last_alloc": {
            "offset": "0x86090"
        },
        "tbb::detail::r1::bad_last_alloc::what": {
            "offset": "0x86800"
        },
        "tbb::detail::r1::bad_last_alloc::~bad_last_alloc": {
            "offset": "0x16A00"
        },
        "tbb::detail::r1::cache_aligned_allocate": {
            "offset": "0x868C0"
        },
        "tbb::detail::r1::cache_aligned_deallocate": {
            "offset": "0x86920"
        },
        "tbb::detail::r1::clear_address_waiter_table": {
            "offset": "0x87CE0"
        },
        "tbb::detail::r1::concurrent_monitor_mutex::get_semaphore": {
            "offset": "0x876D0"
        },
        "tbb::detail::r1::control_storage::active_value": {
            "offset": "0x86A90"
        },
        "tbb::detail::r1::control_storage::apply_active": {
            "offset": "0x86A70"
        },
        "tbb::detail::r1::control_storage::is_first_arg_preferred": {
            "offset": "0x86A80"
        },
        "tbb::detail::r1::deallocate_memory": {
            "offset": "0x86930"
        },
        "tbb::detail::r1::detect_cpu_features": {
            "offset": "0x87060"
        },
        "tbb::detail::r1::do_throw<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0x85C80"
        },
        "tbb::detail::r1::do_throw<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0x85CB0"
        },
        "tbb::detail::r1::do_throw<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0x85CE0"
        },
        "tbb::detail::r1::do_throw<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0x85D10"
        },
        "tbb::detail::r1::do_throw<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0x85D40"
        },
        "tbb::detail::r1::do_throw<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0x85D70"
        },
        "tbb::detail::r1::do_throw<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0x85DA0"
        },
        "tbb::detail::r1::do_throw<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0x85DD0"
        },
        "tbb::detail::r1::do_throw<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0x85E00"
        },
        "tbb::detail::r1::do_throw<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0x85E30"
        },
        "tbb::detail::r1::do_throw<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0x85E60"
        },
        "tbb::detail::r1::do_throw<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0x85E90"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0x85EC0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0x85EE0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0x85F00"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0x85F20"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0x85F40"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0x85F60"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0x85F80"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0x85FA0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0x85FC0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0x85FE0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0x86000"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0x86020"
        },
        "tbb::detail::r1::dummy_allocate_binding_handler": {
            "offset": "0x210B0"
        },
        "tbb::detail::r1::dummy_apply_affinity": {
            "offset": "0x167B0"
        },
        "tbb::detail::r1::dummy_deallocate_binding_handler": {
            "offset": "0x167B0"
        },
        "tbb::detail::r1::dummy_destroy_system_topology": {
            "offset": "0x167B0"
        },
        "tbb::detail::r1::dummy_get_default_concurrency": {
            "offset": "0x87C40"
        },
        "tbb::detail::r1::dummy_restore_affinity": {
            "offset": "0x167B0"
        },
        "tbb::detail::r1::dynamic_link": {
            "offset": "0x86F80"
        },
        "tbb::detail::r1::dynamic_unlink": {
            "offset": "0x167B0"
        },
        "tbb::detail::r1::dynamic_unlink_all": {
            "offset": "0x167B0"
        },
        "tbb::detail::r1::gcc_rethrow_exception_broken": {
            "offset": "0x28800"
        },
        "tbb::detail::r1::get_address_waiter_table": {
            "offset": "0x87E80"
        },
        "tbb::detail::r1::governor::acquire_resources": {
            "offset": "0x87C50"
        },
        "tbb::detail::r1::governor::default_num_threads": {
            "offset": "0x87650"
        },
        "tbb::detail::r1::governor::release_resources": {
            "offset": "0x87CA0"
        },
        "tbb::detail::r1::handle_perror": {
            "offset": "0x86680"
        },
        "tbb::detail::r1::initialize_allocate_handler": {
            "offset": "0x86830"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocate_handler": {
            "offset": "0x86860"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocator": {
            "offset": "0x86940"
        },
        "tbb::detail::r1::initialize_hardware_concurrency_info": {
            "offset": "0x87230"
        },
        "tbb::detail::r1::lifetime_control::apply_active": {
            "offset": "0x86CD0"
        },
        "tbb::detail::r1::lifetime_control::default_value": {
            "offset": "0x210B0"
        },
        "tbb::detail::r1::lifetime_control::is_first_arg_preferred": {
            "offset": "0x28800"
        },
        "tbb::detail::r1::market::add_ref_unsafe": {
            "offset": "0x87550"
        },
        "tbb::detail::r1::market::app_parallelism_limit": {
            "offset": "0x86F40"
        },
        "tbb::detail::r1::market::release": {
            "offset": "0x87770"
        },
        "tbb::detail::r1::market::set_active_num_workers": {
            "offset": "0x878F0"
        },
        "tbb::detail::r1::market::update_allotment": {
            "offset": "0x87B30"
        },
        "tbb::detail::r1::missing_wait::missing_wait": {
            "offset": "0x86260"
        },
        "tbb::detail::r1::missing_wait::what": {
            "offset": "0x86810"
        },
        "tbb::detail::r1::missing_wait::~missing_wait": {
            "offset": "0x16A00"
        },
        "tbb::detail::r1::runtime_warning": {
            "offset": "0x870B0"
        },
        "tbb::detail::r1::stack_size_control::apply_active": {
            "offset": "0x86A70"
        },
        "tbb::detail::r1::stack_size_control::default_value": {
            "offset": "0x86CC0"
        },
        "tbb::detail::r1::std_cache_aligned_allocate": {
            "offset": "0x86A50"
        },
        "tbb::detail::r1::std_cache_aligned_deallocate": {
            "offset": "0x86A60"
        },
        "tbb::detail::r1::terminate_on_exception": {
            "offset": "0x86F60"
        },
        "tbb::detail::r1::terminate_on_exception_control::default_value": {
            "offset": "0x210B0"
        },
        "tbb::detail::r1::throw_exception": {
            "offset": "0x86750"
        },
        "tbb::detail::r1::unsafe_wait::unsafe_wait": {
            "offset": "0x863A0"
        },
        "tbb::detail::r1::unsafe_wait::~unsafe_wait": {
            "offset": "0x16A00"
        },
        "tbb::detail::r1::user_abort::user_abort": {
            "offset": "0x86430"
        },
        "tbb::detail::r1::user_abort::what": {
            "offset": "0x86820"
        },
        "tbb::detail::r1::user_abort::~user_abort": {
            "offset": "0x16A00"
        },
        "utf8::exception::exception": {
            "offset": "0x82310"
        },
        "utf8::internal::append<std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,char>": {
            "offset": "0x81390"
        },
        "utf8::internal::validate_next<std::_String_view_iterator<std::char_traits<char> > >": {
            "offset": "0x81CC0"
        },
        "utf8::invalid_code_point::invalid_code_point": {
            "offset": "0x823A0"
        },
        "utf8::invalid_code_point::what": {
            "offset": "0x83290"
        },
        "utf8::invalid_code_point::~invalid_code_point": {
            "offset": "0x16A00"
        },
        "utf8::invalid_utf8::invalid_utf8": {
            "offset": "0x82410"
        },
        "utf8::invalid_utf8::what": {
            "offset": "0x832A0"
        },
        "utf8::invalid_utf8::~invalid_utf8": {
            "offset": "0x16A00"
        },
        "utf8::not_enough_room::not_enough_room": {
            "offset": "0x82470"
        },
        "utf8::not_enough_room::what": {
            "offset": "0x832B0"
        },
        "utf8::not_enough_room::~not_enough_room": {
            "offset": "0x16A00"
        },
        "va<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x22AD0"
        },
        "va_impl<char,fmt::v8::basic_format_args<fmt::v8::basic_printf_context<fmt::v8::appender,char> > >": {
            "offset": "0x81AA0"
        },
        "vva": {
            "offset": "0x83270"
        },
        "xbr::GetGameBuild": {
            "offset": "0x204F0"
        },
        "xbr::GetReplaceExecutableInit": {
            "offset": "0x83C00"
        },
        "xbr::GetRequestedGameBuildInit": {
            "offset": "0x83E20"
        },
        "xbr::`dynamic initializer for 'kGameBuildUniquifiers''": {
            "offset": "0x1D50"
        }
    }
}