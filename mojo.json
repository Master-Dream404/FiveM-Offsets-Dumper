{
    "mojo.dll": {
        "ApplySecOffset": {
            "offset": "0x131B00"
        },
        "DllMain": {
            "offset": "0x246DE0"
        },
        "DloadAcquireSectionWriteAccess": {
            "offset": "0x245428"
        },
        "DloadGetSRWLockFunctionPointers": {
            "offset": "0x2454D4"
        },
        "DloadMakePermanentImageCommit": {
            "offset": "0x245574"
        },
        "DloadObtainSection": {
            "offset": "0x24560C"
        },
        "DloadProtectSection": {
            "offset": "0x2456A8"
        },
        "DloadReleaseSectionWriteAccess": {
            "offset": "0x245738"
        },
        "FileVersionInfo::CreateFileVersionInfo": {
            "offset": "0x3E940"
        },
        "FileVersionInfo::CreateFileVersionInfoForModule": {
            "offset": "0x3E990"
        },
        "FileVersionInfo::FileVersionInfo": {
            "offset": "0x3E580"
        },
        "FileVersionInfo::~FileVersionInfo": {
            "offset": "0x3E790"
        },
        "FileVersionInfoWin::CreateFileVersionInfoWin": {
            "offset": "0x3EA50"
        },
        "FileVersionInfoWin::FileVersionInfoWin": {
            "offset": "0x3E670"
        },
        "FileVersionInfoWin::GetFileVersion": {
            "offset": "0x3EC60"
        },
        "FileVersionInfoWin::GetStringValue": {
            "offset": "0x3ED10"
        },
        "FileVersionInfoWin::GetValue": {
            "offset": "0x3ED70"
        },
        "FileVersionInfoWin::company_name": {
            "offset": "0x3F0A0"
        },
        "FileVersionInfoWin::company_short_name": {
            "offset": "0x3F100"
        },
        "FileVersionInfoWin::file_description": {
            "offset": "0x3F160"
        },
        "FileVersionInfoWin::file_version": {
            "offset": "0x3F1C0"
        },
        "FileVersionInfoWin::internal_name": {
            "offset": "0x3F220"
        },
        "FileVersionInfoWin::original_filename": {
            "offset": "0x3F280"
        },
        "FileVersionInfoWin::product_name": {
            "offset": "0x3F2E0"
        },
        "FileVersionInfoWin::product_short_name": {
            "offset": "0x3F340"
        },
        "FileVersionInfoWin::product_version": {
            "offset": "0x3F3A0"
        },
        "FileVersionInfoWin::special_build": {
            "offset": "0x3F400"
        },
        "FileVersionInfoWin::~FileVersionInfoWin": {
            "offset": "0x3E7A0"
        },
        "GetHandleVerifier": {
            "offset": "0x18D340"
        },
        "IPC::Channel::AssociatedInterfaceSupport::AssociatedInterfaceSupport": {
            "offset": "0x199940"
        },
        "IPC::Channel::AssociatedInterfaceSupport::~AssociatedInterfaceSupport": {
            "offset": "0x199AC0"
        },
        "IPC::Channel::Channel": {
            "offset": "0x199970"
        },
        "IPC::Channel::CreateClient": {
            "offset": "0x19A440"
        },
        "IPC::Channel::CreateServer": {
            "offset": "0x19A580"
        },
        "IPC::Channel::Flush": {
            "offset": "0x19A710"
        },
        "IPC::Channel::GetAssociatedInterfaceSupport": {
            "offset": "0x12A0"
        },
        "IPC::Channel::Pause": {
            "offset": "0x19AA90"
        },
        "IPC::Channel::Unpause": {
            "offset": "0x19AC40"
        },
        "IPC::Channel::WillConnect": {
            "offset": "0x19AE70"
        },
        "IPC::Channel::~Channel": {
            "offset": "0x199AD0"
        },
        "IPC::ChannelMojo::AddGenericAssociatedInterface": {
            "offset": "0x19D4B0"
        },
        "IPC::ChannelMojo::ChannelMojo": {
            "offset": "0x19CC20"
        },
        "IPC::ChannelMojo::Close": {
            "offset": "0x19D7E0"
        },
        "IPC::ChannelMojo::Connect": {
            "offset": "0x19D8A0"
        },
        "IPC::ChannelMojo::Create": {
            "offset": "0x19DB00"
        },
        "IPC::ChannelMojo::CreateThreadSafeChannel": {
            "offset": "0x19DCC0"
        },
        "IPC::ChannelMojo::Flush": {
            "offset": "0x19E190"
        },
        "IPC::ChannelMojo::ForwardMessageFromThreadSafePtr": {
            "offset": "0x19E1A0"
        },
        "IPC::ChannelMojo::ForwardMessageWithResponderFromThreadSafePtr": {
            "offset": "0x19E290"
        },
        "IPC::ChannelMojo::GetAssociatedInterfaceSupport": {
            "offset": "0x19E3B0"
        },
        "IPC::ChannelMojo::GetGenericRemoteAssociatedInterface": {
            "offset": "0x19E3C0"
        },
        "IPC::ChannelMojo::OnAssociatedInterfaceRequest": {
            "offset": "0x19E460"
        },
        "IPC::ChannelMojo::OnBrokenDataReceived": {
            "offset": "0x19E610"
        },
        "IPC::ChannelMojo::OnMessageReceived": {
            "offset": "0x19E660"
        },
        "IPC::ChannelMojo::OnPeerPidReceived": {
            "offset": "0x19E750"
        },
        "IPC::ChannelMojo::OnPipeError": {
            "offset": "0x19E760"
        },
        "IPC::ChannelMojo::Pause": {
            "offset": "0x19E990"
        },
        "IPC::ChannelMojo::ReadFromMessageAttachmentSet": {
            "offset": "0x19E9B0"
        },
        "IPC::ChannelMojo::Send": {
            "offset": "0x19F030"
        },
        "IPC::ChannelMojo::Unpause": {
            "offset": "0x19F2A0"
        },
        "IPC::ChannelMojo::WriteToMessageAttachmentSet": {
            "offset": "0x19F300"
        },
        "IPC::ChannelMojo::~ChannelMojo": {
            "offset": "0x19CF00"
        },
        "IPC::ChannelProxy::AddFilter": {
            "offset": "0x1A14E0"
        },
        "IPC::ChannelProxy::AddGenericAssociatedInterfaceForIOThread": {
            "offset": "0x1A1730"
        },
        "IPC::ChannelProxy::ChannelProxy": {
            "offset": "0x1A08A0"
        },
        "IPC::ChannelProxy::ClearIPCTaskRunner": {
            "offset": "0x1A1B20"
        },
        "IPC::ChannelProxy::Close": {
            "offset": "0x1A1BE0"
        },
        "IPC::ChannelProxy::Context::AddListenerTaskRunner": {
            "offset": "0x1A1880"
        },
        "IPC::ChannelProxy::Context::Clear": {
            "offset": "0x1A1B10"
        },
        "IPC::ChannelProxy::Context::Context": {
            "offset": "0x1A0940"
        },
        "IPC::ChannelProxy::Context::CreateChannel": {
            "offset": "0x1A1F50"
        },
        "IPC::ChannelProxy::Context::FlushChannel": {
            "offset": "0x1A2600"
        },
        "IPC::ChannelProxy::Context::GetTaskRunner": {
            "offset": "0x1A2780"
        },
        "IPC::ChannelProxy::Context::OnAddFilter": {
            "offset": "0x1A2E90"
        },
        "IPC::ChannelProxy::Context::OnAssociatedInterfaceRequest": {
            "offset": "0x1A3110"
        },
        "IPC::ChannelProxy::Context::OnChannelClosed": {
            "offset": "0x1A31F0"
        },
        "IPC::ChannelProxy::Context::OnChannelConnected": {
            "offset": "0x1A34B0"
        },
        "IPC::ChannelProxy::Context::OnChannelError": {
            "offset": "0x1A35C0"
        },
        "IPC::ChannelProxy::Context::OnChannelOpened": {
            "offset": "0x1A3770"
        },
        "IPC::ChannelProxy::Context::OnDispatchAssociatedInterfaceRequest": {
            "offset": "0x1A38C0"
        },
        "IPC::ChannelProxy::Context::OnDispatchBadMessage": {
            "offset": "0x1A3920"
        },
        "IPC::ChannelProxy::Context::OnDispatchConnected": {
            "offset": "0x1A3940"
        },
        "IPC::ChannelProxy::Context::OnDispatchError": {
            "offset": "0x1A39E0"
        },
        "IPC::ChannelProxy::Context::OnDispatchMessage": {
            "offset": "0x1A3A00"
        },
        "IPC::ChannelProxy::Context::OnMessageReceived": {
            "offset": "0x1A3A50"
        },
        "IPC::ChannelProxy::Context::OnMessageReceivedNoFilter": {
            "offset": "0x1A3CD0"
        },
        "IPC::ChannelProxy::Context::OnRemoveFilter": {
            "offset": "0x1A3DE0"
        },
        "IPC::ChannelProxy::Context::OnSendMessage": {
            "offset": "0x1A3F80"
        },
        "IPC::ChannelProxy::Context::PauseChannel": {
            "offset": "0x1A40B0"
        },
        "IPC::ChannelProxy::Context::RemoveListenerTaskRunner": {
            "offset": "0x1A43A0"
        },
        "IPC::ChannelProxy::Context::TryFilters": {
            "offset": "0x1A4910"
        },
        "IPC::ChannelProxy::Context::UnpauseChannel": {
            "offset": "0x1A4C00"
        },
        "IPC::ChannelProxy::Context::~Context": {
            "offset": "0x1A11C0"
        },
        "IPC::ChannelProxy::Create": {
            "offset": "0x1A1EA0"
        },
        "IPC::ChannelProxy::Flush": {
            "offset": "0x1A2560"
        },
        "IPC::ChannelProxy::GetGenericRemoteAssociatedInterface": {
            "offset": "0x1A2690"
        },
        "IPC::ChannelProxy::Init": {
            "offset": "0x1A2A40"
        },
        "IPC::ChannelProxy::OnChannelInit": {
            "offset": "0x12B0"
        },
        "IPC::ChannelProxy::Pause": {
            "offset": "0x1A4010"
        },
        "IPC::ChannelProxy::RemoveFilter": {
            "offset": "0x1A4140"
        },
        "IPC::ChannelProxy::Send": {
            "offset": "0x1A46E0"
        },
        "IPC::ChannelProxy::SendInternal": {
            "offset": "0x1A47A0"
        },
        "IPC::ChannelProxy::Unpause": {
            "offset": "0x1A4AB0"
        },
        "IPC::ChannelProxy::context": {
            "offset": "0xAAA0"
        },
        "IPC::ChannelProxy::did_init": {
            "offset": "0x5B1A0"
        },
        "IPC::ChannelProxy::ipc_task_runner": {
            "offset": "0x1A4FB0"
        },
        "IPC::ChannelProxy::ipc_task_runner_refptr": {
            "offset": "0x1A4FD0"
        },
        "IPC::ChannelProxy::~ChannelProxy": {
            "offset": "0x1A10E0"
        },
        "IPC::GetPlatformFileForTransit": {
            "offset": "0x1B1710"
        },
        "IPC::HandleWin::HandleWin": {
            "offset": "0x3570"
        },
        "IPC::HandleWin::get_handle": {
            "offset": "0xAB80"
        },
        "IPC::HandleWin::set_handle": {
            "offset": "0x199380"
        },
        "IPC::Listener::Listener": {
            "offset": "0x1999A0"
        },
        "IPC::Listener::OnAssociatedInterfaceRequest": {
            "offset": "0x19A8C0"
        },
        "IPC::Listener::OnBadMessageReceived": {
            "offset": "0x12B0"
        },
        "IPC::Listener::OnChannelConnected": {
            "offset": "0x12B0"
        },
        "IPC::Listener::OnChannelError": {
            "offset": "0x12B0"
        },
        "IPC::Listener::~Listener": {
            "offset": "0x199AF0"
        },
        "IPC::Message::EnsureMessageAttachmentSet": {
            "offset": "0x1A5DB0"
        },
        "IPC::Message::FindNext": {
            "offset": "0x1A5E50"
        },
        "IPC::Message::HasAttachments": {
            "offset": "0x1A5F30"
        },
        "IPC::Message::Init": {
            "offset": "0x1A5F50"
        },
        "IPC::Message::IsValid": {
            "offset": "0x1993A0"
        },
        "IPC::Message::Log": {
            "offset": "0x12B0"
        },
        "IPC::Message::Message": {
            "offset": "0x1A5B30"
        },
        "IPC::Message::NextMessageInfo::NextMessageInfo": {
            "offset": "0x1A5BD0"
        },
        "IPC::Message::NextMessageInfo::~NextMessageInfo": {
            "offset": "0x12B0"
        },
        "IPC::Message::ReadAttachment": {
            "offset": "0x1A5F60"
        },
        "IPC::Message::SetHeaderValues": {
            "offset": "0x1A6050"
        },
        "IPC::Message::WriteAttachment": {
            "offset": "0x1A6110"
        },
        "IPC::Message::attachment_set": {
            "offset": "0xD9B0"
        },
        "IPC::Message::dispatch_error": {
            "offset": "0xD590"
        },
        "IPC::Message::flags": {
            "offset": "0x199660"
        },
        "IPC::Message::header": {
            "offset": "0x1996F0"
        },
        "IPC::Message::is_caller_pumping_messages": {
            "offset": "0x199760"
        },
        "IPC::Message::is_reply": {
            "offset": "0x199780"
        },
        "IPC::Message::is_reply_error": {
            "offset": "0x1997A0"
        },
        "IPC::Message::is_sync": {
            "offset": "0x1997C0"
        },
        "IPC::Message::priority": {
            "offset": "0x1997E0"
        },
        "IPC::Message::routing_id": {
            "offset": "0x199800"
        },
        "IPC::Message::set_dispatch_error": {
            "offset": "0x199820"
        },
        "IPC::Message::set_reply": {
            "offset": "0x199830"
        },
        "IPC::Message::set_reply_error": {
            "offset": "0x199850"
        },
        "IPC::Message::set_routing_id": {
            "offset": "0x199870"
        },
        "IPC::Message::set_sync": {
            "offset": "0x199890"
        },
        "IPC::Message::set_unblock": {
            "offset": "0x1998B0"
        },
        "IPC::Message::should_unblock": {
            "offset": "0x1998E0"
        },
        "IPC::Message::type": {
            "offset": "0x199900"
        },
        "IPC::Message::~Message": {
            "offset": "0x1A5C40"
        },
        "IPC::MessageAttachment::CreateFromMojoHandle": {
            "offset": "0x1A6310"
        },
        "IPC::MessageAttachment::MessageAttachment": {
            "offset": "0x1A6230"
        },
        "IPC::MessageAttachment::TakeMojoHandle": {
            "offset": "0x1A64B0"
        },
        "IPC::MessageAttachment::~MessageAttachment": {
            "offset": "0x1A6260"
        },
        "IPC::MessageAttachmentSet::AddAttachment": {
            "offset": "0x1A6AB0"
        },
        "IPC::MessageAttachmentSet::CommitAllDescriptors": {
            "offset": "0x1A6BA0"
        },
        "IPC::MessageAttachmentSet::GetAttachmentAt": {
            "offset": "0x1A6BE0"
        },
        "IPC::MessageAttachmentSet::MessageAttachmentSet": {
            "offset": "0x1A68B0"
        },
        "IPC::MessageAttachmentSet::empty": {
            "offset": "0xD550"
        },
        "IPC::MessageAttachmentSet::num_descriptors": {
            "offset": "0x1A6D60"
        },
        "IPC::MessageAttachmentSet::size": {
            "offset": "0x1A6E20"
        },
        "IPC::MessageAttachmentSet::~MessageAttachmentSet": {
            "offset": "0x1A6940"
        },
        "IPC::MessageFilter::GetSupportedMessageClasses": {
            "offset": "0x12C0"
        },
        "IPC::MessageFilter::MessageFilter": {
            "offset": "0x1B7F30"
        },
        "IPC::MessageFilter::OnChannelClosing": {
            "offset": "0x12B0"
        },
        "IPC::MessageFilter::OnChannelConnected": {
            "offset": "0x12B0"
        },
        "IPC::MessageFilter::OnChannelError": {
            "offset": "0x12B0"
        },
        "IPC::MessageFilter::OnFilterAdded": {
            "offset": "0x12B0"
        },
        "IPC::MessageFilter::OnFilterRemoved": {
            "offset": "0x12B0"
        },
        "IPC::MessageFilter::OnMessageReceived": {
            "offset": "0x12C0"
        },
        "IPC::MessageFilter::~MessageFilter": {
            "offset": "0x1B7F50"
        },
        "IPC::MessageFilterRouter::AddFilter": {
            "offset": "0x1B80F0"
        },
        "IPC::MessageFilterRouter::Clear": {
            "offset": "0x1B82F0"
        },
        "IPC::MessageFilterRouter::MessageFilterRouter": {
            "offset": "0x1B8010"
        },
        "IPC::MessageFilterRouter::RemoveFilter": {
            "offset": "0x1B8330"
        },
        "IPC::MessageFilterRouter::TryFilters": {
            "offset": "0x1B8450"
        },
        "IPC::MessageFilterRouter::~MessageFilterRouter": {
            "offset": "0x1B8070"
        },
        "IPC::MessageReplyDeserializer::MessageReplyDeserializer": {
            "offset": "0x19CE00"
        },
        "IPC::MessageReplyDeserializer::SerializeOutputParameters": {
            "offset": "0x1B64E0"
        },
        "IPC::MessageReplyDeserializer::~MessageReplyDeserializer": {
            "offset": "0x19D070"
        },
        "IPC::MessageRouter::AddRoute": {
            "offset": "0x1B90E0"
        },
        "IPC::MessageRouter::GetRoute": {
            "offset": "0x1B9440"
        },
        "IPC::MessageRouter::MessageRouter": {
            "offset": "0x1B8E50"
        },
        "IPC::MessageRouter::OnControlMessageReceived": {
            "offset": "0x1B9610"
        },
        "IPC::MessageRouter::OnMessageReceived": {
            "offset": "0x1B9690"
        },
        "IPC::MessageRouter::RemoveRoute": {
            "offset": "0x1B99E0"
        },
        "IPC::MessageRouter::RouteMessage": {
            "offset": "0x1B99F0"
        },
        "IPC::MessageRouter::Send": {
            "offset": "0x1B9A40"
        },
        "IPC::MessageRouter::~MessageRouter": {
            "offset": "0x1B8FC0"
        },
        "IPC::MessageView::MessageView": {
            "offset": "0x1B9E40"
        },
        "IPC::MessageView::TakeBufferView": {
            "offset": "0x19AC20"
        },
        "IPC::MessageView::TakeHandles": {
            "offset": "0x1B9F30"
        },
        "IPC::MessageView::data": {
            "offset": "0x19B040"
        },
        "IPC::MessageView::size": {
            "offset": "0x19C410"
        },
        "IPC::MessageView::~MessageView": {
            "offset": "0x1B9E60"
        },
        "IPC::MojoBootstrap::Create": {
            "offset": "0x1AD050"
        },
        "IPC::MojoBootstrap::MojoBootstrap": {
            "offset": "0x199A50"
        },
        "IPC::MojoBootstrap::~MojoBootstrap": {
            "offset": "0x199B90"
        },
        "IPC::MojoMessageHelper::MojoMessageHelper": {
            "offset": "0x3FB0"
        },
        "IPC::MojoMessageHelper::ReadMessagePipeFrom": {
            "offset": "0x1B14E0"
        },
        "IPC::MojoMessageHelper::WriteMessagePipeTo": {
            "offset": "0x1B1670"
        },
        "IPC::ParamTraits<IPC::HandleWin>::Log": {
            "offset": "0x1993D0"
        },
        "IPC::ParamTraits<IPC::HandleWin>::Read": {
            "offset": "0x199480"
        },
        "IPC::ParamTraits<IPC::HandleWin>::Write": {
            "offset": "0x199550"
        },
        "IPC::ParamTraits<float>::Read": {
            "offset": "0x19E9A0"
        },
        "IPC::ParamTraits<float>::Write": {
            "offset": "0x19F2E0"
        },
        "IPC::PlatformFileForTransit::GetHandle": {
            "offset": "0xAB80"
        },
        "IPC::PlatformFileForTransit::IsValid": {
            "offset": "0x4AB0"
        },
        "IPC::PlatformFileForTransit::PlatformFileForTransit": {
            "offset": "0x30F0"
        },
        "IPC::Sender::Sender": {
            "offset": "0x199A60"
        },
        "IPC::Sender::~Sender": {
            "offset": "0x199AD0"
        },
        "IPC::SyncChannel::AddListenerTaskRunner": {
            "offset": "0x1B2D30"
        },
        "IPC::SyncChannel::Create": {
            "offset": "0x1B3320"
        },
        "IPC::SyncChannel::CreateSyncMessageFilter": {
            "offset": "0x1B33A0"
        },
        "IPC::SyncChannel::OnChannelInit": {
            "offset": "0x1B3D10"
        },
        "IPC::SyncChannel::OnDispatchEventSignaled": {
            "offset": "0x1B3EA0"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::DispatchMessages": {
            "offset": "0x1B3540"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::DispatchMessagesTask": {
            "offset": "0x1B3840"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::DispatchReplies": {
            "offset": "0x1B38D0"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::NestedSendDoneWatcher::Run": {
            "offset": "0x1B4CA0"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::NestedSendDoneWatcher::StartWatching": {
            "offset": "0x1B5460"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::NestedSendDoneWatcher::~NestedSendDoneWatcher": {
            "offset": "0x1B29D0"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::OnDispatchEventReady": {
            "offset": "0x1B3E80"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::QueueMessage": {
            "offset": "0x1B4850"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage::~QueuedMessage": {
            "offset": "0x1A0F50"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::ReceivedSyncMsgQueue": {
            "offset": "0x1B2110"
        },
        "IPC::SyncChannel::ReceivedSyncMsgQueue::RemoveContext": {
            "offset": "0x1B4AC0"
        },
        "IPC::SyncChannel::RemoveListenerTaskRunner": {
            "offset": "0x1B4C90"
        },
        "IPC::SyncChannel::Send": {
            "offset": "0x1B4EF0"
        },
        "IPC::SyncChannel::SetRestrictDispatchChannelGroup": {
            "offset": "0x1B5450"
        },
        "IPC::SyncChannel::StartWatching": {
            "offset": "0x1B5530"
        },
        "IPC::SyncChannel::SyncChannel": {
            "offset": "0x1B2330"
        },
        "IPC::SyncChannel::SyncContext::CancelPendingSends": {
            "offset": "0x1B2DB0"
        },
        "IPC::SyncChannel::SyncContext::Clear": {
            "offset": "0x1B3250"
        },
        "IPC::SyncChannel::SyncContext::GetSendDoneEvent": {
            "offset": "0x1B3C30"
        },
        "IPC::SyncChannel::SyncContext::OnChannelClosed": {
            "offset": "0x1B3CB0"
        },
        "IPC::SyncChannel::SyncContext::OnChannelError": {
            "offset": "0x1B3CE0"
        },
        "IPC::SyncChannel::SyncContext::OnChannelOpened": {
            "offset": "0x1B3D40"
        },
        "IPC::SyncChannel::SyncContext::OnMessageReceived": {
            "offset": "0x1B3F90"
        },
        "IPC::SyncChannel::SyncContext::OnSendDoneEventSignaled": {
            "offset": "0x1B40F0"
        },
        "IPC::SyncChannel::SyncContext::OnShutdownEventSignaled": {
            "offset": "0x1B4170"
        },
        "IPC::SyncChannel::SyncContext::Pop": {
            "offset": "0x1B43C0"
        },
        "IPC::SyncChannel::SyncContext::Push": {
            "offset": "0x1B46A0"
        },
        "IPC::SyncChannel::SyncContext::TryToUnblockListener": {
            "offset": "0x1B5620"
        },
        "IPC::SyncChannel::WaitForReply": {
            "offset": "0x1B5880"
        },
        "IPC::SyncChannel::WaitForReplyWithNestedMessageLoop": {
            "offset": "0x1B5C60"
        },
        "IPC::SyncChannel::sync_context": {
            "offset": "0xAAA0"
        },
        "IPC::SyncChannel::~SyncChannel": {
            "offset": "0x1B2A60"
        },
        "IPC::SyncMessage::EnableMessagePumping": {
            "offset": "0x19E170"
        },
        "IPC::SyncMessage::GenerateReply": {
            "offset": "0x1B6090"
        },
        "IPC::SyncMessage::GetDataIterator": {
            "offset": "0x1B61E0"
        },
        "IPC::SyncMessage::GetMessageId": {
            "offset": "0x1B6240"
        },
        "IPC::SyncMessage::GetReplyDeserializer": {
            "offset": "0x1B6290"
        },
        "IPC::SyncMessage::IsMessageReplyTo": {
            "offset": "0x1B6320"
        },
        "IPC::SyncMessage::ReadSyncHeader": {
            "offset": "0x1B63C0"
        },
        "IPC::SyncMessage::ShouldPumpMessages": {
            "offset": "0x199760"
        },
        "IPC::SyncMessage::SyncMessage": {
            "offset": "0x1B5F20"
        },
        "IPC::SyncMessage::WriteSyncHeader": {
            "offset": "0x1B6560"
        },
        "IPC::SyncMessage::~SyncMessage": {
            "offset": "0x1B5F90"
        },
        "IPC::SyncMessageFilter::GetGenericRemoteAssociatedInterface": {
            "offset": "0x1B6BE0"
        },
        "IPC::SyncMessageFilter::OnChannelClosing": {
            "offset": "0x1B6D30"
        },
        "IPC::SyncMessageFilter::OnChannelError": {
            "offset": "0x1B6D30"
        },
        "IPC::SyncMessageFilter::OnFilterAdded": {
            "offset": "0x1B6DB0"
        },
        "IPC::SyncMessageFilter::OnMessageReceived": {
            "offset": "0x1B6FC0"
        },
        "IPC::SyncMessageFilter::Send": {
            "offset": "0x1B7230"
        },
        "IPC::SyncMessageFilter::SendOnIOThread": {
            "offset": "0x1B7D30"
        },
        "IPC::SyncMessageFilter::SignalAllEvents": {
            "offset": "0x1B7DE0"
        },
        "IPC::SyncMessageFilter::SyncMessageFilter": {
            "offset": "0x1B68A0"
        },
        "IPC::SyncMessageFilter::~SyncMessageFilter": {
            "offset": "0x1B69B0"
        },
        "IPC::TakePlatformFileForTransit": {
            "offset": "0x1B17C0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Accept": {
            "offset": "0x1AB500"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::AcceptOnProxyThread": {
            "offset": "0x1ABAD0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::AcceptSyncMessage": {
            "offset": "0x1ABD90"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::AssociateInterface": {
            "offset": "0x1AC0D0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::AttachEndpointClient": {
            "offset": "0x1AC540"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Bind": {
            "offset": "0x1ACB00"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::ChannelAssociatedGroupController": {
            "offset": "0x1A9B80"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::CloseEndpointHandle": {
            "offset": "0x1ACDC0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::ControlMessageProxyThunk::Accept": {
            "offset": "0x1ABAC0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::ControlMessageProxyThunk::~ControlMessageProxyThunk": {
            "offset": "0x199B80"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::CreateChannelEndpoints": {
            "offset": "0x1AD1E0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::CreateLocalEndpointHandle": {
            "offset": "0x1AD5F0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::DetachEndpointClient": {
            "offset": "0x1ADAE0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::AllowWokenUpBySyncWatchOnSameThread": {
            "offset": "0x1AC030"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::AttachClient": {
            "offset": "0x1AC380"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::DetachClient": {
            "offset": "0x1AD930"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::EnsureSyncWatcherExists": {
            "offset": "0x1ADC60"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::OnSyncMessageEventReady": {
            "offset": "0x1AF400"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::SendMessageW": {
            "offset": "0x1AFD40"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::SyncWatch": {
            "offset": "0x1B01A0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::~Endpoint": {
            "offset": "0x1AAC70"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::FindEndpoint": {
            "offset": "0x1ADF60"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::FindOrInsertEndpoint": {
            "offset": "0x1ADFE0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::MarkClosedAndMaybeRemove": {
            "offset": "0x1AE3C0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::MarkPeerClosedAndMaybeRemove": {
            "offset": "0x1AE440"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper::~MessageWrapper": {
            "offset": "0x1AAE60"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::NotifyEndpointOfError": {
            "offset": "0x1AE4E0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::NotifyEndpointOfErrorOnEndpointThread": {
            "offset": "0x1AE770"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::OnPeerAssociatedEndpointClosed": {
            "offset": "0x1AECD0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::OnPipeError": {
            "offset": "0x1AF000"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::PrefersSerializedMessages": {
            "offset": "0xAAC0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::RaiseError": {
            "offset": "0x12B0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::SendMessageOnMasterThread": {
            "offset": "0x1AF9A0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::SendMessageW": {
            "offset": "0x1AFA60"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::ShutDown": {
            "offset": "0x1AFFF0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::WaitForFlushToComplete": {
            "offset": "0x1B03B0"
        },
        "IPC::`anonymous namespace'::ChannelAssociatedGroupController::~ChannelAssociatedGroupController": {
            "offset": "0x1AA770"
        },
        "IPC::`anonymous namespace'::ControllerMemoryDumpProvider::OnMemoryDump": {
            "offset": "0x1AE8C0"
        },
        "IPC::`anonymous namespace'::GetMemoryDumpProvider": {
            "offset": "0x1AE2E0"
        },
        "IPC::`anonymous namespace'::MojoBootstrapImpl::Connect": {
            "offset": "0x1ACFE0"
        },
        "IPC::`anonymous namespace'::MojoBootstrapImpl::Flush": {
            "offset": "0x1AE1A0"
        },
        "IPC::`anonymous namespace'::MojoBootstrapImpl::GetAssociatedGroup": {
            "offset": "0x15B0"
        },
        "IPC::`anonymous namespace'::MojoBootstrapImpl::Pause": {
            "offset": "0x1AF660"
        },
        "IPC::`anonymous namespace'::MojoBootstrapImpl::Unpause": {
            "offset": "0x1B0320"
        },
        "IPC::`anonymous namespace'::OnEventReady": {
            "offset": "0x1B3F60"
        },
        "IPC::`anonymous namespace'::RemoveFilterImpl": {
            "offset": "0x1B83D0"
        },
        "IPC::`anonymous namespace'::TryFiltersImpl": {
            "offset": "0x1B84C0"
        },
        "IPC::internal::ChannelReader::AsyncReadComplete": {
            "offset": "0x1A5180"
        },
        "IPC::internal::ChannelReader::ChannelReader": {
            "offset": "0x1A4FF0"
        },
        "IPC::internal::ChannelReader::CheckMessageSize": {
            "offset": "0x1A51A0"
        },
        "IPC::internal::ChannelReader::CleanUp": {
            "offset": "0x12B0"
        },
        "IPC::internal::ChannelReader::DispatchMessageW": {
            "offset": "0x1A5270"
        },
        "IPC::internal::ChannelReader::HandleDispatchError": {
            "offset": "0x1A5360"
        },
        "IPC::internal::ChannelReader::HandleExternalMessage": {
            "offset": "0x1A5380"
        },
        "IPC::internal::ChannelReader::HandleTranslatedMessage": {
            "offset": "0x1A53C0"
        },
        "IPC::internal::ChannelReader::IsHelloMessage": {
            "offset": "0x1A5510"
        },
        "IPC::internal::ChannelReader::IsInternalMessage": {
            "offset": "0x1A5550"
        },
        "IPC::internal::ChannelReader::ProcessIncomingMessages": {
            "offset": "0x1A55A0"
        },
        "IPC::internal::ChannelReader::TranslateInputData": {
            "offset": "0x1A5690"
        },
        "IPC::internal::ChannelReader::listener": {
            "offset": "0xAAA0"
        },
        "IPC::internal::ChannelReader::set_listener": {
            "offset": "0xBCE0"
        },
        "IPC::internal::ChannelReader::~ChannelReader": {
            "offset": "0x1A5060"
        },
        "IPC::internal::HandleAttachmentWin::GetType": {
            "offset": "0x8BA20"
        },
        "IPC::internal::HandleAttachmentWin::HandleAttachmentWin": {
            "offset": "0x199080"
        },
        "IPC::internal::HandleAttachmentWin::Take": {
            "offset": "0x199290"
        },
        "IPC::internal::HandleAttachmentWin::~HandleAttachmentWin": {
            "offset": "0x199160"
        },
        "IPC::internal::MessagePipeReader::Close": {
            "offset": "0x1A77B0"
        },
        "IPC::internal::MessagePipeReader::GetAssociatedInterface": {
            "offset": "0x1A7890"
        },
        "IPC::internal::MessagePipeReader::GetRemoteInterface": {
            "offset": "0x1A7960"
        },
        "IPC::internal::MessagePipeReader::IsValid": {
            "offset": "0x19A890"
        },
        "IPC::internal::MessagePipeReader::MessagePipeReader": {
            "offset": "0x1A6F30"
        },
        "IPC::internal::MessagePipeReader::OnPipeError": {
            "offset": "0x1A79F0"
        },
        "IPC::internal::MessagePipeReader::Receive": {
            "offset": "0x1A7A90"
        },
        "IPC::internal::MessagePipeReader::Send": {
            "offset": "0x1A7DB0"
        },
        "IPC::internal::MessagePipeReader::SetPeerPid": {
            "offset": "0x1A82C0"
        },
        "IPC::internal::MessagePipeReader::sender": {
            "offset": "0x15B0"
        },
        "IPC::internal::MessagePipeReader::~MessagePipeReader": {
            "offset": "0x1A72B0"
        },
        "IPC::internal::MojoHandleAttachment::GetType": {
            "offset": "0x12A0"
        },
        "IPC::internal::MojoHandleAttachment::MojoHandleAttachment": {
            "offset": "0x1B11B0"
        },
        "IPC::internal::MojoHandleAttachment::TakeHandle": {
            "offset": "0x1B1300"
        },
        "IPC::internal::MojoHandleAttachment::~MojoHandleAttachment": {
            "offset": "0x1B1200"
        },
        "IPC::mojom::Channel::~Channel": {
            "offset": "0x19CEF0"
        },
        "IPC::mojom::ChannelProxy::ChannelProxy": {
            "offset": "0x23D5D0"
        },
        "IPC::mojom::ChannelProxy::GetAssociatedInterface": {
            "offset": "0x23DD30"
        },
        "IPC::mojom::ChannelProxy::Receive": {
            "offset": "0x23E1F0"
        },
        "IPC::mojom::ChannelProxy::SetPeerPid": {
            "offset": "0x23F2F0"
        },
        "IPC::mojom::ChannelRequestValidator::Accept": {
            "offset": "0x23D620"
        },
        "IPC::mojom::ChannelStub<mojo::RawPtrImplRefTraits<IPC::mojom::Channel> >::Accept": {
            "offset": "0x1A7560"
        },
        "IPC::mojom::ChannelStub<mojo::RawPtrImplRefTraits<IPC::mojom::Channel> >::AcceptWithResponder": {
            "offset": "0x1A7580"
        },
        "IPC::mojom::ChannelStubDispatch::Accept": {
            "offset": "0x23D670"
        },
        "IPC::mojom::ChannelStubDispatch::AcceptWithResponder": {
            "offset": "0x23DCF0"
        },
        "IPC::mojom::internal::Channel_GetAssociatedInterface_Params_Data::BufferWriter::data": {
            "offset": "0x23F5B0"
        },
        "IPC::mojom::internal::Channel_GetAssociatedInterface_Params_Data::Channel_GetAssociatedInterface_Params_Data": {
            "offset": "0x23C9E0"
        },
        "IPC::mojom::internal::Channel_GetAssociatedInterface_Params_Data::Validate": {
            "offset": "0x23CE50"
        },
        "IPC::mojom::internal::Channel_Receive_Params_Data::BufferWriter::data": {
            "offset": "0x23F6A0"
        },
        "IPC::mojom::internal::Channel_Receive_Params_Data::Channel_Receive_Params_Data": {
            "offset": "0x23CA00"
        },
        "IPC::mojom::internal::Channel_Receive_Params_Data::Validate": {
            "offset": "0x23D010"
        },
        "IPC::mojom::internal::Channel_SetPeerPid_Params_Data::BufferWriter::data": {
            "offset": "0x23F790"
        },
        "IPC::mojom::internal::Channel_SetPeerPid_Params_Data::Channel_SetPeerPid_Params_Data": {
            "offset": "0x23CA00"
        },
        "IPC::mojom::internal::Channel_SetPeerPid_Params_Data::Validate": {
            "offset": "0x23D140"
        },
        "IPC::mojom::internal::Message_Data::BufferWriter::data": {
            "offset": "0x23F880"
        },
        "IPC::mojom::internal::Message_Data::Message_Data": {
            "offset": "0x23CA20"
        },
        "IPC::mojom::internal::Message_Data::Validate": {
            "offset": "0x23D1D0"
        },
        "IsLeapYear": {
            "offset": "0x131CD0"
        },
        "JSONFileValueDeserializer::Deserialize": {
            "offset": "0x5ACD0"
        },
        "JSONFileValueDeserializer::GetErrorMessageForCode": {
            "offset": "0x5AEB0"
        },
        "JSONFileValueDeserializer::JSONFileValueDeserializer": {
            "offset": "0x5AA80"
        },
        "JSONFileValueDeserializer::ReadFileToString": {
            "offset": "0x5AF80"
        },
        "JSONFileValueDeserializer::get_last_read_size": {
            "offset": "0xD9B0"
        },
        "JSONFileValueDeserializer::~JSONFileValueDeserializer": {
            "offset": "0x5AB10"
        },
        "JSONFileValueSerializer::JSONFileValueSerializer": {
            "offset": "0x5AAD0"
        },
        "JSONFileValueSerializer::Serialize": {
            "offset": "0x5B060"
        },
        "JSONFileValueSerializer::SerializeAndOmitBinaryValues": {
            "offset": "0x5B070"
        },
        "JSONFileValueSerializer::SerializeInternal": {
            "offset": "0x5B080"
        },
        "JSONFileValueSerializer::~JSONFileValueSerializer": {
            "offset": "0x5AB40"
        },
        "JSONStringValueDeserializer::Deserialize": {
            "offset": "0x62770"
        },
        "JSONStringValueDeserializer::JSONStringValueDeserializer": {
            "offset": "0x625D0"
        },
        "JSONStringValueDeserializer::~JSONStringValueDeserializer": {
            "offset": "0x62610"
        },
        "JSONStringValueSerializer::JSONStringValueSerializer": {
            "offset": "0x625F0"
        },
        "JSONStringValueSerializer::Serialize": {
            "offset": "0x627B0"
        },
        "JSONStringValueSerializer::SerializeAndOmitBinaryValues": {
            "offset": "0x627E0"
        },
        "JSONStringValueSerializer::SerializeInternal": {
            "offset": "0x62810"
        },
        "JSONStringValueSerializer::pretty_print": {
            "offset": "0x5B1A0"
        },
        "JSONStringValueSerializer::set_pretty_print": {
            "offset": "0x5B1B0"
        },
        "JSONStringValueSerializer::~JSONStringValueSerializer": {
            "offset": "0x62620"
        },
        "Microsoft::WRL::ComPtr<ABI::Windows::Storage::Streams::IBuffer>::~ComPtr<ABI::Windows::Storage::Streams::IBuffer>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<ABI::Windows::UI::ViewManagement::IUIViewSettings>::~ComPtr<ABI::Windows::UI::ViewManagement::IUIViewSettings>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IEnumWbemClassObject>::~ComPtr<IEnumWbemClassObject>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IPersistFile>::~ComPtr<IPersistFile>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IPropertyStore>::~ComPtr<IPropertyStore>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IShellLinkW>::~ComPtr<IShellLinkW>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IUIViewSettingsInterop>::~ComPtr<IUIViewSettingsInterop>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IWbemClassObject>::~ComPtr<IWbemClassObject>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IWbemLocator>::~ComPtr<IWbemLocator>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<IWbemServices>::~ComPtr<IWbemServices>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<Windows::Storage::Streams::IBufferByteAccess>::~ComPtr<Windows::Storage::Streams::IBufferByteAccess>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::ComPtr<base::win::EnumVariant>::~ComPtr<base::win::EnumVariant>": {
            "offset": "0x183F50"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::CanCastTo": {
            "offset": "0x192F20"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::CastToUnknown": {
            "offset": "0x3FB0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::FillArrayWithIid": {
            "offset": "0x1930A0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::GetIidCount": {
            "offset": "0x8BA40"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>": {
            "offset": "0x1926B0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>": {
            "offset": "0x192960"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >::CanCastTo": {
            "offset": "0x192EC0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >::CastToUnknown": {
            "offset": "0x3FB0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >::FillArrayWithIid": {
            "offset": "0x12B0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >::GetIidCount": {
            "offset": "0x12A0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >": {
            "offset": "0x192650"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >::~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >": {
            "offset": "0x192930"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1>::CanCastTo": {
            "offset": "0x184250"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1>::FillArrayWithIid": {
            "offset": "0x12B0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<19>,1>::GetIidCount": {
            "offset": "0x12A0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumVARIANT>::CanCastTo": {
            "offset": "0x184260"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumVARIANT>::CastToUnknown": {
            "offset": "0x3FB0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumVARIANT>::FillArrayWithIid": {
            "offset": "0x1843A0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumVARIANT>::GetIidCount": {
            "offset": "0x8BA40"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumVARIANT>::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumVARIANT>": {
            "offset": "0x3FB0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>::CanCastTo": {
            "offset": "0x184250"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>::FillArrayWithIid": {
            "offset": "0x12B0"
        },
        "Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>::GetIidCount": {
            "offset": "0x12A0"
        },
        "Microsoft::WRL::Details::Make<base::win::EnumVariant,unsigned long>": {
            "offset": "0x183A60"
        },
        "Microsoft::WRL::Details::MakeAllocator<base::win::EnumVariant>::~MakeAllocator<base::win::EnumVariant>": {
            "offset": "0x183F80"
        },
        "Microsoft::WRL::Details::RuntimeClassBaseT<19>::RuntimeClassInitialize": {
            "offset": "0x12A0"
        },
        "Microsoft::WRL::Details::RuntimeClassBaseT<2>::RuntimeClassInitialize": {
            "offset": "0x12A0"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::AddRef": {
            "offset": "0x184220"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::GetRefCount": {
            "offset": "0x27780"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::InternalAddRef": {
            "offset": "0x184220"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::InternalRelease": {
            "offset": "0x1843C0"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::QueryInterface": {
            "offset": "0x184620"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::Release": {
            "offset": "0x1846C0"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>": {
            "offset": "0x183E70"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IEnumVARIANT>": {
            "offset": "0x183FA0"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IWeakReference>::AddRef": {
            "offset": "0x184220"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IWeakReference>::QueryInterface": {
            "offset": "0x193440"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IWeakReference>::Release": {
            "offset": "0x1934F0"
        },
        "Microsoft::WRL::Details::WeakReferenceImpl::Resolve": {
            "offset": "0x1935F0"
        },
        "Microsoft::WRL::FtmBase::DisconnectObject": {
            "offset": "0x193080"
        },
        "Microsoft::WRL::FtmBase::GetMarshalSizeMax": {
            "offset": "0x193160"
        },
        "Microsoft::WRL::FtmBase::GetUnmarshalClass": {
            "offset": "0x1931B0"
        },
        "Microsoft::WRL::FtmBase::MarshalInterface": {
            "offset": "0x193420"
        },
        "Microsoft::WRL::FtmBase::ReleaseMarshalData": {
            "offset": "0x1935D0"
        },
        "Microsoft::WRL::FtmBase::UnmarshalInterface": {
            "offset": "0x193660"
        },
        "Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumVARIANT>::CustomQueryInterface": {
            "offset": "0x184390"
        },
        "Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumVARIANT>::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumVARIANT>": {
            "offset": "0x183E20"
        },
        "Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumVARIANT>::~RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumVARIANT>": {
            "offset": "0x183FA0"
        },
        "MojoAcceptInvitation": {
            "offset": "0x1FC340"
        },
        "MojoAcceptInvitationImpl": {
            "offset": "0x1CF4B0"
        },
        "MojoAddTrigger": {
            "offset": "0x1FC360"
        },
        "MojoAddTriggerImpl": {
            "offset": "0x1CF280"
        },
        "MojoAppendMessageData": {
            "offset": "0x1FC380"
        },
        "MojoAppendMessageDataImpl": {
            "offset": "0x1CEF90"
        },
        "MojoArmTrap": {
            "offset": "0x1FC3A0"
        },
        "MojoArmTrapImpl": {
            "offset": "0x1CF2E0"
        },
        "MojoAttachMessagePipeToInvitation": {
            "offset": "0x1FC3C0"
        },
        "MojoAttachMessagePipeToInvitationImpl": {
            "offset": "0x1CF410"
        },
        "MojoBeginReadData": {
            "offset": "0x1FC3E0"
        },
        "MojoBeginReadDataImpl": {
            "offset": "0x1CF170"
        },
        "MojoBeginWriteData": {
            "offset": "0x1FC400"
        },
        "MojoBeginWriteDataImpl": {
            "offset": "0x1CF0F0"
        },
        "MojoClose": {
            "offset": "0x1FC420"
        },
        "MojoCloseImpl": {
            "offset": "0x1CEE90"
        },
        "MojoCreateDataPipe": {
            "offset": "0x1FC440"
        },
        "MojoCreateDataPipeImpl": {
            "offset": "0x1CF0A0"
        },
        "MojoCreateInvitation": {
            "offset": "0x1FC460"
        },
        "MojoCreateInvitationImpl": {
            "offset": "0x1CF3F0"
        },
        "MojoCreateMessage": {
            "offset": "0x1FC480"
        },
        "MojoCreateMessageImpl": {
            "offset": "0x1CEF40"
        },
        "MojoCreateMessagePipe": {
            "offset": "0x1FC4A0"
        },
        "MojoCreateMessagePipeImpl": {
            "offset": "0x1CEEC0"
        },
        "MojoCreateSharedBuffer": {
            "offset": "0x1FC4C0"
        },
        "MojoCreateSharedBufferImpl": {
            "offset": "0x1CF1C0"
        },
        "MojoCreateTrap": {
            "offset": "0x1FC4E0"
        },
        "MojoCreateTrapImpl": {
            "offset": "0x1CF260"
        },
        "MojoDestroyMessage": {
            "offset": "0x1FC500"
        },
        "MojoDestroyMessageImpl": {
            "offset": "0x1CEF60"
        },
        "MojoDuplicateBufferHandle": {
            "offset": "0x1FC520"
        },
        "MojoDuplicateBufferHandleImpl": {
            "offset": "0x1CF1E0"
        },
        "MojoEmbedderSetSystemThunks": {
            "offset": "0x1FBF30"
        },
        "MojoEndReadData": {
            "offset": "0x1FC540"
        },
        "MojoEndReadDataImpl": {
            "offset": "0x1CF1A0"
        },
        "MojoEndWriteData": {
            "offset": "0x1FC560"
        },
        "MojoEndWriteDataImpl": {
            "offset": "0x1CF120"
        },
        "MojoExtractMessagePipeFromInvitation": {
            "offset": "0x1FC580"
        },
        "MojoExtractMessagePipeFromInvitationImpl": {
            "offset": "0x1CF440"
        },
        "MojoFuseMessagePipes": {
            "offset": "0x1FC5A0"
        },
        "MojoFuseMessagePipesImpl": {
            "offset": "0x1CEF20"
        },
        "MojoGetBufferInfo": {
            "offset": "0x1FC5C0"
        },
        "MojoGetBufferInfoImpl": {
            "offset": "0x1CF240"
        },
        "MojoGetMessageContext": {
            "offset": "0x1FC5E0"
        },
        "MojoGetMessageContextImpl": {
            "offset": "0x1CF050"
        },
        "MojoGetMessageData": {
            "offset": "0x1FC600"
        },
        "MojoGetMessageDataImpl": {
            "offset": "0x1CEFE0"
        },
        "MojoGetTimeTicksNow": {
            "offset": "0x1FC620"
        },
        "MojoGetTimeTicksNowImpl": {
            "offset": "0x1CEE80"
        },
        "MojoInitialize": {
            "offset": "0x1FC650"
        },
        "MojoInitializeImpl": {
            "offset": "0x1CEE20"
        },
        "MojoMapBuffer": {
            "offset": "0x1FC760"
        },
        "MojoMapBufferImpl": {
            "offset": "0x1CF200"
        },
        "MojoNotifyBadMessage": {
            "offset": "0x1FC780"
        },
        "MojoNotifyBadMessageImpl": {
            "offset": "0x1CF070"
        },
        "MojoQueryHandleSignalsState": {
            "offset": "0x1FC7A0"
        },
        "MojoQueryHandleSignalsStateImpl": {
            "offset": "0x1CEEA0"
        },
        "MojoQueryQuota": {
            "offset": "0x1FC7C0"
        },
        "MojoQueryQuotaImpl": {
            "offset": "0x1CF500"
        },
        "MojoReadData": {
            "offset": "0x1FC7E0"
        },
        "MojoReadDataImpl": {
            "offset": "0x1CF140"
        },
        "MojoReadMessage": {
            "offset": "0x1FC800"
        },
        "MojoReadMessageImpl": {
            "offset": "0x1CEF00"
        },
        "MojoRemoveTrigger": {
            "offset": "0x1FC820"
        },
        "MojoRemoveTriggerImpl": {
            "offset": "0x1CF2C0"
        },
        "MojoSendInvitation": {
            "offset": "0x1FC840"
        },
        "MojoSendInvitationImpl": {
            "offset": "0x1CF470"
        },
        "MojoSerializeMessage": {
            "offset": "0x1FC860"
        },
        "MojoSerializeMessageImpl": {
            "offset": "0x1CEF70"
        },
        "MojoSetMessageContext": {
            "offset": "0x1FC880"
        },
        "MojoSetMessageContextImpl": {
            "offset": "0x1CF020"
        },
        "MojoSetQuota": {
            "offset": "0x1FC8A0"
        },
        "MojoSetQuotaImpl": {
            "offset": "0x1CF4D0"
        },
        "MojoShutdown": {
            "offset": "0x1FC8C0"
        },
        "MojoShutdownImpl": {
            "offset": "0x1CF530"
        },
        "MojoUnmapBuffer": {
            "offset": "0x1FC8E0"
        },
        "MojoUnmapBufferImpl": {
            "offset": "0x1CF230"
        },
        "MojoUnwrapPlatformHandle": {
            "offset": "0x1FC900"
        },
        "MojoUnwrapPlatformHandleImpl": {
            "offset": "0x1CF330"
        },
        "MojoUnwrapPlatformSharedMemoryRegion": {
            "offset": "0x1FC920"
        },
        "MojoUnwrapPlatformSharedMemoryRegionImpl": {
            "offset": "0x1CF3A0"
        },
        "MojoWrapPlatformHandle": {
            "offset": "0x1FC940"
        },
        "MojoWrapPlatformHandleImpl": {
            "offset": "0x1CF310"
        },
        "MojoWrapPlatformSharedMemoryRegion": {
            "offset": "0x1FC960"
        },
        "MojoWrapPlatformSharedMemoryRegionImpl": {
            "offset": "0x1CF350"
        },
        "MojoWriteData": {
            "offset": "0x1FC980"
        },
        "MojoWriteDataImpl": {
            "offset": "0x1CF0C0"
        },
        "MojoWriteMessage": {
            "offset": "0x1FC9A0"
        },
        "MojoWriteMessageImpl": {
            "offset": "0x1CEEE0"
        },
        "OnThreadExit": {
            "offset": "0x13D3E0"
        },
        "PR_GMTParameters": {
            "offset": "0x12A0"
        },
        "PR_NormalizeTime": {
            "offset": "0x131D30"
        },
        "PR_ParseTimeString": {
            "offset": "0x132150"
        },
        "PiddFromDllName": {
            "offset": "0x2457CC"
        },
        "StringCchPrintfW": {
            "offset": "0x196890"
        },
        "SuperFastHash": {
            "offset": "0x1337D0"
        },
        "_DllMainCRTStartup": {
            "offset": "0x2467E0"
        },
        "_Init_thread_abort": {
            "offset": "0x245F10"
        },
        "_Init_thread_footer": {
            "offset": "0x245F40"
        },
        "_Init_thread_header": {
            "offset": "0x245FA0"
        },
        "_Init_thread_notify": {
            "offset": "0x246008"
        },
        "_Init_thread_wait": {
            "offset": "0x24604C"
        },
        "_RTC_Initialize": {
            "offset": "0x246E4C"
        },
        "_RTC_Terminate": {
            "offset": "0x246E88"
        },
        "__ArrayUnwind": {
            "offset": "0x245DAC"
        },
        "__GSHandlerCheck": {
            "offset": "0x245C90"
        },
        "__GSHandlerCheckCommon": {
            "offset": "0x245CB0"
        },
        "__GSHandlerCheck_EH": {
            "offset": "0x2463B4"
        },
        "__HrLoadAllImportsForDll": {
            "offset": "0x24586C"
        },
        "__chkstk": {
            "offset": "0x2460C0"
        },
        "__crt_debugger_hook": {
            "offset": "0x246BE0"
        },
        "__delayLoadHelper2": {
            "offset": "0x2458E0"
        },
        "__isa_available_init": {
            "offset": "0x246EC4"
        },
        "__local_stdio_printf_options": {
            "offset": "0x3F460"
        },
        "__local_stdio_scanf_options": {
            "offset": "0x246E20"
        },
        "__raise_securityfailure": {
            "offset": "0x246118"
        },
        "__report_gsfailure": {
            "offset": "0x24614C"
        },
        "__report_rangecheckfailure": {
            "offset": "0x246220"
        },
        "__report_securityfailure": {
            "offset": "0x246234"
        },
        "__scrt_acquire_startup_lock": {
            "offset": "0x246860"
        },
        "__scrt_dllmain_after_initialize_c": {
            "offset": "0x24689C"
        },
        "__scrt_dllmain_before_initialize_c": {
            "offset": "0x2468D0"
        },
        "__scrt_dllmain_crt_thread_attach": {
            "offset": "0x2468E8"
        },
        "__scrt_dllmain_crt_thread_detach": {
            "offset": "0x246910"
        },
        "__scrt_dllmain_exception_filter": {
            "offset": "0x246928"
        },
        "__scrt_dllmain_uninitialize_c": {
            "offset": "0x246988"
        },
        "__scrt_dllmain_uninitialize_critical": {
            "offset": "0x2469B8"
        },
        "__scrt_fastfail": {
            "offset": "0x246BE8"
        },
        "__scrt_get_dyn_tls_init_callback": {
            "offset": "0x246E44"
        },
        "__scrt_initialize_crt": {
            "offset": "0x2469CC"
        },
        "__scrt_initialize_default_local_stdio_options": {
            "offset": "0x246E28"
        },
        "__scrt_initialize_onexit_tables": {
            "offset": "0x246A18"
        },
        "__scrt_initialize_thread_safe_statics": {
            "offset": "0x245E18"
        },
        "__scrt_initialize_type_info": {
            "offset": "0x246E04"
        },
        "__scrt_is_nonwritable_in_current_image": {
            "offset": "0x246AA4"
        },
        "__scrt_is_nonwritable_in_current_image$filt$0": {
            "offset": "0x277805"
        },
        "__scrt_is_ucrt_dll_in_use": {
            "offset": "0x247070"
        },
        "__scrt_release_startup_lock": {
            "offset": "0x246B3C"
        },
        "__scrt_stub_for_acrt_initialize": {
            "offset": "0xAAC0"
        },
        "__scrt_stub_for_acrt_thread_attach": {
            "offset": "0xAAC0"
        },
        "__scrt_stub_for_acrt_thread_detach": {
            "offset": "0xAAC0"
        },
        "__scrt_stub_for_acrt_uninitialize": {
            "offset": "0xAAC0"
        },
        "__scrt_stub_for_acrt_uninitialize_critical": {
            "offset": "0xAAC0"
        },
        "__scrt_stub_for_is_c_termination_complete": {
            "offset": "0x12A0"
        },
        "__scrt_throw_std_bad_alloc": {
            "offset": "0x246840"
        },
        "__scrt_throw_std_bad_array_new_length": {
            "offset": "0x12D0"
        },
        "__scrt_uninitialize_crt": {
            "offset": "0x246B60"
        },
        "__scrt_uninitialize_thread_safe_statics": {
            "offset": "0x245EE8"
        },
        "__scrt_uninitialize_type_info": {
            "offset": "0x246E14"
        },
        "__security_check_cookie": {
            "offset": "0x245D20"
        },
        "__security_init_cookie": {
            "offset": "0x246D34"
        },
        "__std_find_trivial_1": {
            "offset": "0x2472A0"
        },
        "__std_find_trivial_2": {
            "offset": "0x247370"
        },
        "__std_find_trivial_8": {
            "offset": "0x247440"
        },
        "__std_min_element_8": {
            "offset": "0x247510"
        },
        "__std_reverse_trivially_swappable_8": {
            "offset": "0x247520"
        },
        "_get_startup_argv_mode": {
            "offset": "0x8BA40"
        },
        "_guard_check_icall_nop": {
            "offset": "0x245C10"
        },
        "_guard_dispatch_icall_nop": {
            "offset": "0x247750"
        },
        "_guard_xfg_dispatch_icall_nop": {
            "offset": "0x247770"
        },
        "_onexit": {
            "offset": "0x246B8C"
        },
        "_snwprintf_s": {
            "offset": "0x3F470"
        },
        "`__ArrayUnwind'::`1'::filt$0": {
            "offset": "0x2776E2"
        },
        "`anonymous namespace'::AmountOfMemory": {
            "offset": "0xDAF30"
        },
        "`anonymous namespace'::AutoNativeLock::~AutoNativeLock": {
            "offset": "0x18D1C0"
        },
        "`anonymous namespace'::CollectChildGDIUsageAndDie": {
            "offset": "0x37AA0"
        },
        "`anonymous namespace'::CollectGdiHandleCountsImpl<`anonymous namespace'::RegularProcessTypes>": {
            "offset": "0x36850"
        },
        "`anonymous namespace'::CollectGdiHandleCountsImpl<`anonymous namespace'::WowProcessTypes>": {
            "offset": "0x36B00"
        },
        "`anonymous namespace'::CrashIfCannotAllocateSmallBitmap": {
            "offset": "0x37FD0"
        },
        "`anonymous namespace'::CrashIfExcessiveHandles": {
            "offset": "0x380A0"
        },
        "`anonymous namespace'::CrashIfPagefileUsageTooLarge": {
            "offset": "0x38100"
        },
        "`anonymous namespace'::CrashIfPrivateUsageTooLarge": {
            "offset": "0x38150"
        },
        "`anonymous namespace'::DefaultWinHeapAlignedFreeImpl": {
            "offset": "0x1720"
        },
        "`anonymous namespace'::DefaultWinHeapAlignedMallocImpl": {
            "offset": "0x16F0"
        },
        "`anonymous namespace'::DefaultWinHeapAlignedReallocImpl": {
            "offset": "0x1700"
        },
        "`anonymous namespace'::DefaultWinHeapCallocImpl": {
            "offset": "0x15F0"
        },
        "`anonymous namespace'::DefaultWinHeapFreeImpl": {
            "offset": "0x16D0"
        },
        "`anonymous namespace'::DefaultWinHeapGetSizeEstimateImpl": {
            "offset": "0x16E0"
        },
        "`anonymous namespace'::DefaultWinHeapMallocImpl": {
            "offset": "0x15E0"
        },
        "`anonymous namespace'::DefaultWinHeapMemalignImpl": {
            "offset": "0x1650"
        },
        "`anonymous namespace'::DefaultWinHeapReallocImpl": {
            "offset": "0x16C0"
        },
        "`anonymous namespace'::FileDeleter": {
            "offset": "0x498C0"
        },
        "`anonymous namespace'::GetFirstProcess": {
            "offset": "0x381A0"
        },
        "`anonymous namespace'::GetGdiTableEntries<`anonymous namespace'::RegularProcessTypes>": {
            "offset": "0x36DB0"
        },
        "`anonymous namespace'::GetGdiTableEntries<`anonymous namespace'::WowProcessTypes>": {
            "offset": "0x372B0"
        },
        "`anonymous namespace'::GetLock": {
            "offset": "0x18D380"
        },
        "`anonymous namespace'::GetNumGdiHandles": {
            "offset": "0x38320"
        },
        "`anonymous namespace'::GetPreferredUILanguageList": {
            "offset": "0x185D40"
        },
        "`anonymous namespace'::GetRoActivateInstanceFunction": {
            "offset": "0x180EA0"
        },
        "`anonymous namespace'::GetRoInitializeFunction": {
            "offset": "0x180FA0"
        },
        "`anonymous namespace'::GetRoUninitializeFunction": {
            "offset": "0x181020"
        },
        "`anonymous namespace'::GetTLSMetadataLock": {
            "offset": "0x13CC70"
        },
        "`anonymous namespace'::GetToolhelpSnapshot": {
            "offset": "0x38390"
        },
        "`anonymous namespace'::GetVsFixedFileInfo": {
            "offset": "0x3EF90"
        },
        "`anonymous namespace'::InvalidParameter": {
            "offset": "0x189270"
        },
        "`anonymous namespace'::K32GetProcessMemoryInfo": {
            "offset": "0x38560"
        },
        "`anonymous namespace'::LoadComBaseFunction": {
            "offset": "0x1810A0"
        },
        "`anonymous namespace'::MD5Transform": {
            "offset": "0x594C0"
        },
        "`anonymous namespace'::NotImplemented": {
            "offset": "0x1FC220"
        },
        "`anonymous namespace'::OnNoMemory": {
            "offset": "0xEA90"
        },
        "`anonymous namespace'::OnThreadExitInternal": {
            "offset": "0x13CFF0"
        },
        "`anonymous namespace'::PureCall": {
            "offset": "0x189290"
        },
        "`anonymous namespace'::_Minmax_element<1,`anonymous namespace'::_Minmax_traits_8>": {
            "offset": "0x2470D0"
        },
        "`base::`anonymous namespace'::SetNameInternal'::`1'::filt$0": {
            "offset": "0x262080"
        },
        "`base::win::WrappedWindowProc<&base::PowerMonitorDeviceSource::PowerMessageWindow::WndProcThunk>'::`1'::filt$0": {
            "offset": "0x2585D0"
        },
        "`base::win::WrappedWindowProc<&base::win::MessageWindow::WindowProc>'::`1'::filt$0": {
            "offset": "0x2585D0"
        },
        "`dllmain_crt_process_attach'::`1'::fin$0": {
            "offset": "0x27778B"
        },
        "`dllmain_crt_process_detach'::`1'::fin$0": {
            "offset": "0x2777A2"
        },
        "`dllmain_crt_process_detach'::`1'::fin$1": {
            "offset": "0x2777BB"
        },
        "`dllmain_dispatch'::`1'::filt$0": {
            "offset": "0x2777CF"
        },
        "`dynamic initializer for 'malloc_default''": {
            "offset": "0x1000"
        },
        "abort_noreturn": {
            "offset": "0x129A30"
        },
        "atexit": {
            "offset": "0x246BC8"
        },
        "base::ASCIIToUTF16": {
            "offset": "0xD5850"
        },
        "base::AdaptCallbackForRepeating<>": {
            "offset": "0x54DF0"
        },
        "base::AddActionCallback": {
            "offset": "0xA3640"
        },
        "base::AlignedAlloc": {
            "offset": "0x695E0"
        },
        "base::AllocPages": {
            "offset": "0xE1B0"
        },
        "base::AppendToFile": {
            "offset": "0x4E730"
        },
        "base::ArmCFITable::ArmCFITable": {
            "offset": "0xB1D50"
        },
        "base::ArmCFITable::FindEntryForAddress": {
            "offset": "0xB2000"
        },
        "base::ArmCFITable::GetTableSizeForTesting": {
            "offset": "0xAB80"
        },
        "base::ArmCFITable::Parse": {
            "offset": "0xB2840"
        },
        "base::ArmCFITable::~ArmCFITable": {
            "offset": "0x12B0"
        },
        "base::AssertLongCPUWorkAllowed": {
            "offset": "0x13E250"
        },
        "base::AsserterBase::AsserterBase": {
            "offset": "0x2FC0"
        },
        "base::AsserterBase::~AsserterBase": {
            "offset": "0x12B0"
        },
        "base::AssociateFieldTrialParams": {
            "offset": "0x856D0"
        },
        "base::AssociateFieldTrialParamsFromString": {
            "offset": "0x85710"
        },
        "base::AtExitManager::AtExitManager": {
            "offset": "0x1B680"
        },
        "base::AtExitManager::DisableAllAtExitManagers": {
            "offset": "0x1BC10"
        },
        "base::AtExitManager::ProcessCallbacksNow": {
            "offset": "0x1BC70"
        },
        "base::AtExitManager::RegisterCallback": {
            "offset": "0x1C410"
        },
        "base::AtExitManager::RegisterTask": {
            "offset": "0x1C540"
        },
        "base::AtExitManager::~AtExitManager": {
            "offset": "0x1B7A0"
        },
        "base::AtomicFlag::AtomicFlag": {
            "offset": "0xD7EA0"
        },
        "base::AtomicFlag::IsSet": {
            "offset": "0xAF20"
        },
        "base::AtomicFlag::Set": {
            "offset": "0xD7F00"
        },
        "base::AtomicFlag::UnsafeResetForTesting": {
            "offset": "0xD7FA0"
        },
        "base::AtomicFlag::~AtomicFlag": {
            "offset": "0xD7EF0"
        },
        "base::AutoReset<base::TimeTicks>::~AutoReset<base::TimeTicks>": {
            "offset": "0xFEB60"
        },
        "base::AutoReset<bool>::~AutoReset<bool>": {
            "offset": "0x76F70"
        },
        "base::BarrierClosure": {
            "offset": "0x1CBC0"
        },
        "base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::as_string": {
            "offset": "0x26110"
        },
        "base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::front": {
            "offset": "0x15FB60"
        },
        "base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::as_string": {
            "offset": "0x26270"
        },
        "base::BigEndianReader::BigEndianReader": {
            "offset": "0x1E1C0"
        },
        "base::BigEndianReader::ReadBytes": {
            "offset": "0x1E1D0"
        },
        "base::BigEndianReader::ReadPiece": {
            "offset": "0x1E220"
        },
        "base::BigEndianReader::ReadU16": {
            "offset": "0x1E240"
        },
        "base::BigEndianReader::ReadU16LengthPrefixed": {
            "offset": "0x1E270"
        },
        "base::BigEndianReader::ReadU32": {
            "offset": "0x1E2C0"
        },
        "base::BigEndianReader::ReadU64": {
            "offset": "0x1E310"
        },
        "base::BigEndianReader::ReadU8": {
            "offset": "0x1E3A0"
        },
        "base::BigEndianReader::ReadU8LengthPrefixed": {
            "offset": "0x1E3C0"
        },
        "base::BigEndianReader::Skip": {
            "offset": "0x1E400"
        },
        "base::BigEndianReader::ptr": {
            "offset": "0xAB80"
        },
        "base::BigEndianReader::remaining": {
            "offset": "0x1E540"
        },
        "base::BigEndianWriter::BigEndianWriter": {
            "offset": "0x1E1C0"
        },
        "base::BigEndianWriter::Skip": {
            "offset": "0x1E400"
        },
        "base::BigEndianWriter::WriteBytes": {
            "offset": "0x1E420"
        },
        "base::BigEndianWriter::WriteU16": {
            "offset": "0x1E460"
        },
        "base::BigEndianWriter::WriteU32": {
            "offset": "0x1E490"
        },
        "base::BigEndianWriter::WriteU64": {
            "offset": "0x1E4C0"
        },
        "base::BigEndianWriter::WriteU8": {
            "offset": "0x1E520"
        },
        "base::BigEndianWriter::ptr": {
            "offset": "0xAB80"
        },
        "base::BigEndianWriter::remaining": {
            "offset": "0x1E540"
        },
        "base::BindOnce<void (__cdecl IPC::ChannelProxy::Context::*)(void),scoped_refptr<IPC::ChannelProxy::Context> &>": {
            "offset": "0x19F7D0"
        },
        "base::BindOnce<void (__cdecl base::StackSamplingProfiler::SamplingThread::*)(int),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int &>": {
            "offset": "0xB51D0"
        },
        "base::BindOnce<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error)>),base::internal::OwnedWrapper<base::`anonymous namespace'::GenericFileHelper,std::default_delete<base::`anonymous namespace'::GenericFileHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >": {
            "offset": "0x48710"
        },
        "base::BindOnce<void (__cdecl base::internal::BaseTimerTaskInternal::*)(void),base::internal::OwnedWrapper<base::internal::BaseTimerTaskInternal,std::default_delete<base::internal::BaseTimerTaskInternal> > >": {
            "offset": "0x1441F0"
        },
        "base::BindOnce<void (__cdecl base::trace_event::MemoryDumpScheduler::*)(unsigned int),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler>,unsigned int &>": {
            "offset": "0xB51D0"
        },
        "base::BindOnce<void (__cdecl base::trace_event::TraceLog::*)(int,bool),base::internal::UnretainedWrapper<base::trace_event::TraceLog>,int &,bool &>": {
            "offset": "0x1619F0"
        },
        "base::BindOnce<void (__cdecl*)(base::File),base::File>": {
            "offset": "0x48620"
        },
        "base::BindOnce<void (__cdecl*)(base::`anonymous namespace'::PostTaskAndReplyRelay),base::A0x8d52a0ae::PostTaskAndReplyRelay>": {
            "offset": "0x134AB0"
        },
        "base::BindOnce<void (__cdecl*)(mojo::Message,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),mojo::Message>": {
            "offset": "0x211F90"
        },
        "base::BindOnce<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > const &,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > &,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xDBEC0"
        },
        "base::BindRepeating<void (__cdecl IPC::internal::MessagePipeReader::*)(unsigned int),base::internal::UnretainedWrapper<IPC::internal::MessagePipeReader>,unsigned int const &>": {
            "offset": "0x1A6E30"
        },
        "base::BindRepeating<void (__cdecl base::RunLoop::*)(void),base::WeakPtr<base::RunLoop> >": {
            "offset": "0xBA0C0"
        },
        "base::BindRepeating<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SingleThreadTaskRunner> const &,base::RepeatingCallback<void __cdecl(void)> >": {
            "offset": "0xB9FA0"
        },
        "base::BitsToOpenEndedUnitInterval": {
            "offset": "0xB9AA0"
        },
        "base::BooleanHistogram::BooleanHistogram": {
            "offset": "0x87C30"
        },
        "base::BooleanHistogram::DeserializeInfoImpl": {
            "offset": "0x89750"
        },
        "base::BooleanHistogram::GetHistogramType": {
            "offset": "0x8BA20"
        },
        "base::BooleanHistogram::PersistentCreate": {
            "offset": "0x8CA60"
        },
        "base::BooleanHistogram::~BooleanHistogram": {
            "offset": "0x39E0"
        },
        "base::BucketRanges::BucketRanges": {
            "offset": "0x7A6F0"
        },
        "base::BucketRanges::CalculateChecksum": {
            "offset": "0x7A840"
        },
        "base::BucketRanges::Equals": {
            "offset": "0x7A870"
        },
        "base::BucketRanges::HasValidChecksum": {
            "offset": "0x7A8C0"
        },
        "base::BucketRanges::ResetChecksum": {
            "offset": "0x7A910"
        },
        "base::BucketRanges::bucket_count": {
            "offset": "0xD420"
        },
        "base::BucketRanges::checksum": {
            "offset": "0xD480"
        },
        "base::BucketRanges::persistent_reference": {
            "offset": "0xD800"
        },
        "base::BucketRanges::range": {
            "offset": "0xD900"
        },
        "base::BucketRanges::set_checksum": {
            "offset": "0xD9C0"
        },
        "base::BucketRanges::set_persistent_reference": {
            "offset": "0xD9F0"
        },
        "base::BucketRanges::set_range": {
            "offset": "0xDAA0"
        },
        "base::BucketRanges::size": {
            "offset": "0xDD10"
        },
        "base::BucketRanges::~BucketRanges": {
            "offset": "0x7A7E0"
        },
        "base::CPU::CPU": {
            "offset": "0x26ED0"
        },
        "base::CPU::GetIntelMicroArchitecture": {
            "offset": "0x27310"
        },
        "base::CPU::Initialize": {
            "offset": "0x27370"
        },
        "base::CPU::cpu_brand": {
            "offset": "0xD7F0"
        },
        "base::CPU::extended_family": {
            "offset": "0xD480"
        },
        "base::CPU::extended_model": {
            "offset": "0x276B0"
        },
        "base::CPU::family": {
            "offset": "0xD9A0"
        },
        "base::CPU::has_aesni": {
            "offset": "0x276C0"
        },
        "base::CPU::has_avx": {
            "offset": "0x276E0"
        },
        "base::CPU::has_avx2": {
            "offset": "0x276D0"
        },
        "base::CPU::has_mmx": {
            "offset": "0x276F0"
        },
        "base::CPU::has_non_stop_time_stamp_counter": {
            "offset": "0x27700"
        },
        "base::CPU::has_popcnt": {
            "offset": "0x27710"
        },
        "base::CPU::has_sse": {
            "offset": "0x27760"
        },
        "base::CPU::has_sse2": {
            "offset": "0x27720"
        },
        "base::CPU::has_sse3": {
            "offset": "0x27730"
        },
        "base::CPU::has_sse41": {
            "offset": "0x27740"
        },
        "base::CPU::has_sse42": {
            "offset": "0x27750"
        },
        "base::CPU::has_ssse3": {
            "offset": "0x27770"
        },
        "base::CPU::is_running_in_vm": {
            "offset": "0xD590"
        },
        "base::CPU::model": {
            "offset": "0x27780"
        },
        "base::CPU::signature": {
            "offset": "0x1480"
        },
        "base::CPU::stepping": {
            "offset": "0xD600"
        },
        "base::CPU::type": {
            "offset": "0x27790"
        },
        "base::CPU::vendor_name": {
            "offset": "0xD5E0"
        },
        "base::CPU::~CPU": {
            "offset": "0x26F60"
        },
        "base::CancelableSyncSocket::CancelableSyncSocket": {
            "offset": "0xD6D70"
        },
        "base::CancelableSyncSocket::Close": {
            "offset": "0xD7020"
        },
        "base::CancelableSyncSocket::CreatePair": {
            "offset": "0xD70B0"
        },
        "base::CancelableSyncSocket::Receive": {
            "offset": "0xD7900"
        },
        "base::CancelableSyncSocket::ReceiveWithTimeout": {
            "offset": "0xD7B10"
        },
        "base::CancelableSyncSocket::Send": {
            "offset": "0xD7C10"
        },
        "base::CancelableSyncSocket::Shutdown": {
            "offset": "0xD7E20"
        },
        "base::CancelableSyncSocket::~CancelableSyncSocket": {
            "offset": "0xD6E10"
        },
        "base::CancelableTaskTracker::CancelableTaskTracker": {
            "offset": "0xDC1E0"
        },
        "base::CancelableTaskTracker::HasTrackedTasks": {
            "offset": "0xDCAC0"
        },
        "base::CancelableTaskTracker::IsCanceled": {
            "offset": "0xDCB70"
        },
        "base::CancelableTaskTracker::NewTrackedTaskId": {
            "offset": "0xDCBD0"
        },
        "base::CancelableTaskTracker::PostTask": {
            "offset": "0xDD1A0"
        },
        "base::CancelableTaskTracker::PostTaskAndReply": {
            "offset": "0xDD320"
        },
        "base::CancelableTaskTracker::RunIfNotCanceled": {
            "offset": "0xDD840"
        },
        "base::CancelableTaskTracker::RunThenUntrackIfNotCanceled": {
            "offset": "0xDDA50"
        },
        "base::CancelableTaskTracker::Track": {
            "offset": "0xDDAE0"
        },
        "base::CancelableTaskTracker::TryCancel": {
            "offset": "0xDDDA0"
        },
        "base::CancelableTaskTracker::TryCancelAll": {
            "offset": "0xDDF70"
        },
        "base::CancelableTaskTracker::Untrack": {
            "offset": "0xDE1E0"
        },
        "base::CancelableTaskTracker::~CancelableTaskTracker": {
            "offset": "0xDC6E0"
        },
        "base::CharacterMatcher<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Find": {
            "offset": "0xCF930"
        },
        "base::CharacterMatcher<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::Find": {
            "offset": "0xCFA10"
        },
        "base::CheckedContiguousIterator<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >::CheckComparable": {
            "offset": "0x175970"
        },
        "base::CheckedContiguousIterator<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >::CheckedContiguousIterator<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const >::CheckedContiguousIterator<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<base::Value const >::CheckedContiguousIterator<base::Value const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<base::Value>::CheckedContiguousIterator<base::Value>": {
            "offset": "0x16C8C0"
        },
        "base::CheckedContiguousIterator<int const >::CheckedContiguousIterator<int const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<mojo::ScopedHandleBase<mojo::Handle> >::CheckedContiguousIterator<mojo::ScopedHandleBase<mojo::Handle> >": {
            "offset": "0x16C8C0"
        },
        "base::CheckedContiguousIterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::CheckedContiguousIterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::CheckedContiguousIterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const >::CheckComparable": {
            "offset": "0x175970"
        },
        "base::CheckedContiguousIterator<std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const >::CheckedContiguousIterator<std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<std::pair<unsigned int,mojo::internal::GenericValidationInfo> const >::CheckedContiguousIterator<std::pair<unsigned int,mojo::internal::GenericValidationInfo> const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedContiguousIterator<unsigned char const >::CheckedContiguousIterator<unsigned char const >": {
            "offset": "0x173920"
        },
        "base::CheckedContiguousIterator<unsigned int const >::CheckedContiguousIterator<unsigned int const >": {
            "offset": "0x62DC0"
        },
        "base::CheckedObserver::CheckedObserver": {
            "offset": "0xA52A0"
        },
        "base::CheckedObserver::IsInObserverList": {
            "offset": "0xA53A0"
        },
        "base::CheckedObserver::~CheckedObserver": {
            "offset": "0xA52D0"
        },
        "base::CleanupProcesses": {
            "offset": "0xAB9C0"
        },
        "base::Clock::Clock": {
            "offset": "0x1404D0"
        },
        "base::Clock::~Clock": {
            "offset": "0x1404E0"
        },
        "base::CloseFile": {
            "offset": "0x4BED0"
        },
        "base::CollapseWhitespace": {
            "offset": "0xCF350"
        },
        "base::CollapseWhitespaceASCII": {
            "offset": "0xCF370"
        },
        "base::CollapseWhitespaceT<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xCB920"
        },
        "base::CollapseWhitespaceT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xCBAE0"
        },
        "base::CommandLine::AppendArg": {
            "offset": "0x21360"
        },
        "base::CommandLine::AppendArgNative": {
            "offset": "0x214F0"
        },
        "base::CommandLine::AppendArgPath": {
            "offset": "0x214F0"
        },
        "base::CommandLine::AppendArguments": {
            "offset": "0x21530"
        },
        "base::CommandLine::AppendSwitch": {
            "offset": "0x215E0"
        },
        "base::CommandLine::AppendSwitchASCII": {
            "offset": "0x21680"
        },
        "base::CommandLine::AppendSwitchNative": {
            "offset": "0x21760"
        },
        "base::CommandLine::AppendSwitchPath": {
            "offset": "0x21C60"
        },
        "base::CommandLine::CommandLine": {
            "offset": "0x20E50"
        },
        "base::CommandLine::CopySwitchesFrom": {
            "offset": "0x220B0"
        },
        "base::CommandLine::ForCurrentProcess": {
            "offset": "0x22290"
        },
        "base::CommandLine::FromString": {
            "offset": "0x22320"
        },
        "base::CommandLine::GetArgs": {
            "offset": "0x22590"
        },
        "base::CommandLine::GetArgumentsString": {
            "offset": "0x22760"
        },
        "base::CommandLine::GetArgumentsStringInternal": {
            "offset": "0x22780"
        },
        "base::CommandLine::GetArgumentsStringWithPlaceholders": {
            "offset": "0x22E00"
        },
        "base::CommandLine::GetCommandLineString": {
            "offset": "0x22E20"
        },
        "base::CommandLine::GetCommandLineStringInternal": {
            "offset": "0x22E40"
        },
        "base::CommandLine::GetCommandLineStringWithPlaceholders": {
            "offset": "0x22FA0"
        },
        "base::CommandLine::GetProgram": {
            "offset": "0x22FC0"
        },
        "base::CommandLine::GetSwitchValueASCII": {
            "offset": "0x23180"
        },
        "base::CommandLine::GetSwitchValueNative": {
            "offset": "0x233A0"
        },
        "base::CommandLine::GetSwitchValuePath": {
            "offset": "0x23600"
        },
        "base::CommandLine::GetSwitches": {
            "offset": "0xDDC0"
        },
        "base::CommandLine::HasSwitch": {
            "offset": "0x237E0"
        },
        "base::CommandLine::Init": {
            "offset": "0x23820"
        },
        "base::CommandLine::InitFromArgv": {
            "offset": "0x23B40"
        },
        "base::CommandLine::InitUsingArgvForTesting": {
            "offset": "0x23D10"
        },
        "base::CommandLine::InitializedForCurrentProcess": {
            "offset": "0x23FA0"
        },
        "base::CommandLine::ParseFromString": {
            "offset": "0x24390"
        },
        "base::CommandLine::PrependWrapper": {
            "offset": "0x246A0"
        },
        "base::CommandLine::RemoveSwitch": {
            "offset": "0x25420"
        },
        "base::CommandLine::Reset": {
            "offset": "0x25980"
        },
        "base::CommandLine::SetProgram": {
            "offset": "0x25A50"
        },
        "base::CommandLine::argv": {
            "offset": "0x3FB0"
        },
        "base::CommandLine::set_slash_is_not_a_switch": {
            "offset": "0x26590"
        },
        "base::CommandLine::~CommandLine": {
            "offset": "0x21090"
        },
        "base::CompareCaseInsensitiveASCII": {
            "offset": "0xCF3C0"
        },
        "base::CompareCaseInsensitiveASCIIT<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xCBCB0"
        },
        "base::CompareCaseInsensitiveASCIIT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xCBDD0"
        },
        "base::ConditionVariable::Broadcast": {
            "offset": "0xD8060"
        },
        "base::ConditionVariable::ConditionVariable": {
            "offset": "0xD7FB0"
        },
        "base::ConditionVariable::Signal": {
            "offset": "0xD8070"
        },
        "base::ConditionVariable::TimedWait": {
            "offset": "0xD8080"
        },
        "base::ConditionVariable::Wait": {
            "offset": "0xD8210"
        },
        "base::ConditionVariable::declare_only_used_while_idle": {
            "offset": "0xD520"
        },
        "base::ConditionVariable::~ConditionVariable": {
            "offset": "0x12B0"
        },
        "base::Contains<base::small_map<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,1,base::internal::select_equal_key<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,0>::equal_key,base::internal::small_map_default_init<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > > > >,unsigned int,0>": {
            "offset": "0x217FE0"
        },
        "base::ContainsOnlyChars": {
            "offset": "0xCF410"
        },
        "base::ContentsEqual": {
            "offset": "0x4BFE0"
        },
        "base::CopyFileW": {
            "offset": "0x4EB70"
        },
        "base::Crc32": {
            "offset": "0x7A950"
        },
        "base::CreateAndOpenTemporaryFile": {
            "offset": "0x4C2E0"
        },
        "base::CreateAndOpenTemporaryFileInDir": {
            "offset": "0x4EB80"
        },
        "base::CreateCOMSTATaskRunner": {
            "offset": "0xE3E60"
        },
        "base::CreateFilePathValue": {
            "offset": "0x1703A0"
        },
        "base::CreateSequencedTaskRunner": {
            "offset": "0xE3EB0"
        },
        "base::CreateSingleThreadTaskRunner": {
            "offset": "0xE3EF0"
        },
        "base::CreateTaskRunner": {
            "offset": "0xE3F40"
        },
        "base::CreateTemporaryDirInDir": {
            "offset": "0x4F0E0"
        },
        "base::CreateTemporaryFile": {
            "offset": "0x4F670"
        },
        "base::CreateTemporaryFileInDir": {
            "offset": "0x4F740"
        },
        "base::CreateTimeDeltaValue": {
            "offset": "0x170430"
        },
        "base::CreateTimeValue": {
            "offset": "0x170500"
        },
        "base::CreateUnguessableTokenValue": {
            "offset": "0x170540"
        },
        "base::CreateUpdateableSequencedTaskRunner": {
            "offset": "0xE3F80"
        },
        "base::CreateWinHardLink": {
            "offset": "0x4FB80"
        },
        "base::CustomHistogram::ArrayToCustomEnumRanges": {
            "offset": "0x88CF0"
        },
        "base::CustomHistogram::CustomHistogram": {
            "offset": "0x87CD0"
        },
        "base::CustomHistogram::DeserializeInfoImpl": {
            "offset": "0x89A40"
        },
        "base::CustomHistogram::GetBucketSize": {
            "offset": "0x8B590"
        },
        "base::CustomHistogram::GetHistogramType": {
            "offset": "0x8BA30"
        },
        "base::CustomHistogram::PersistentCreate": {
            "offset": "0x8CB20"
        },
        "base::CustomHistogram::SerializeInfoImpl": {
            "offset": "0x8CDD0"
        },
        "base::CustomHistogram::ValidateCustomRanges": {
            "offset": "0x8D390"
        },
        "base::CustomHistogram::~CustomHistogram": {
            "offset": "0x39F0"
        },
        "base::DCheckAsserter::DCheckAsserter": {
            "offset": "0x3170"
        },
        "base::DCheckAsserter::warn": {
            "offset": "0x13B3B0"
        },
        "base::DCheckAsserter::~DCheckAsserter": {
            "offset": "0x12B0"
        },
        "base::DecommitSystemPages": {
            "offset": "0xE6B0"
        },
        "base::DefaultClock::DefaultClock": {
            "offset": "0x140590"
        },
        "base::DefaultClock::GetInstance": {
            "offset": "0x140650"
        },
        "base::DefaultClock::Now": {
            "offset": "0x6B3B0"
        },
        "base::DefaultClock::~DefaultClock": {
            "offset": "0x1405A0"
        },
        "base::DefaultSingleSampleMetric::DefaultSingleSampleMetric": {
            "offset": "0x9C810"
        },
        "base::DefaultSingleSampleMetric::SetSample": {
            "offset": "0x9CC10"
        },
        "base::DefaultSingleSampleMetric::~DefaultSingleSampleMetric": {
            "offset": "0x9C910"
        },
        "base::DefaultTickClock::DefaultTickClock": {
            "offset": "0x746B0"
        },
        "base::DefaultTickClock::GetInstance": {
            "offset": "0x140670"
        },
        "base::DefaultTickClock::NowTicks": {
            "offset": "0x140680"
        },
        "base::DefaultTickClock::~DefaultTickClock": {
            "offset": "0x140660"
        },
        "base::DeferredSequencedTaskRunner::DeferredSequencedTaskRunner": {
            "offset": "0x3A550"
        },
        "base::DeferredSequencedTaskRunner::DeferredTask::~DeferredTask": {
            "offset": "0x3A720"
        },
        "base::DeferredSequencedTaskRunner::PostDelayedTask": {
            "offset": "0x3A7D0"
        },
        "base::DeferredSequencedTaskRunner::PostNonNestableDelayedTask": {
            "offset": "0x3A950"
        },
        "base::DeferredSequencedTaskRunner::QueueDeferredTask": {
            "offset": "0x3AAD0"
        },
        "base::DeferredSequencedTaskRunner::RunsTasksInCurrentSequence": {
            "offset": "0x3AC10"
        },
        "base::DeferredSequencedTaskRunner::Start": {
            "offset": "0x3ACA0"
        },
        "base::DeferredSequencedTaskRunner::StartImpl": {
            "offset": "0x3AD10"
        },
        "base::DeferredSequencedTaskRunner::StartWithTaskRunner": {
            "offset": "0x3AF30"
        },
        "base::DeferredSequencedTaskRunner::~DeferredSequencedTaskRunner": {
            "offset": "0x3A6A0"
        },
        "base::DelayedPersistentAllocation::DelayedPersistentAllocation": {
            "offset": "0x96450"
        },
        "base::DelayedPersistentAllocation::Get": {
            "offset": "0x985D0"
        },
        "base::DelayedPersistentAllocation::reference": {
            "offset": "0x2C110"
        },
        "base::DelayedPersistentAllocation::~DelayedPersistentAllocation": {
            "offset": "0x12B0"
        },
        "base::DelegateSimpleThread::Delegate::Delegate": {
            "offset": "0x137970"
        },
        "base::DelegateSimpleThread::Delegate::~Delegate": {
            "offset": "0x12B0"
        },
        "base::DelegateSimpleThread::DelegateSimpleThread": {
            "offset": "0x137A70"
        },
        "base::DelegateSimpleThread::Run": {
            "offset": "0x1386C0"
        },
        "base::DelegateSimpleThread::~DelegateSimpleThread": {
            "offset": "0x137DD0"
        },
        "base::DelegateSimpleThreadPool::AddWork": {
            "offset": "0x138310"
        },
        "base::DelegateSimpleThreadPool::DelegateSimpleThreadPool": {
            "offset": "0x137B50"
        },
        "base::DelegateSimpleThreadPool::JoinAll": {
            "offset": "0x138560"
        },
        "base::DelegateSimpleThreadPool::Run": {
            "offset": "0x138760"
        },
        "base::DelegateSimpleThreadPool::Start": {
            "offset": "0x138BE0"
        },
        "base::DelegateSimpleThreadPool::~DelegateSimpleThreadPool": {
            "offset": "0x137DE0"
        },
        "base::DeleteFileAfterReboot": {
            "offset": "0x4FC00"
        },
        "base::DeleteFileRecursively": {
            "offset": "0x503C0"
        },
        "base::DeleteFileW": {
            "offset": "0x503D0"
        },
        "base::DeleteHelper<base::`anonymous namespace'::PostTaskAndReplyRelay>::DoDelete": {
            "offset": "0x134F50"
        },
        "base::DeleteHelper<mojo::DataPipeProducer::SequenceState>::DoDelete": {
            "offset": "0x2321C0"
        },
        "base::DeleteHelper<mojo::MessageReceiver>::DoDelete": {
            "offset": "0x214510"
        },
        "base::DeserializeHistogramInfo": {
            "offset": "0x8EB10"
        },
        "base::DevicePathToDriveLetterPath": {
            "offset": "0x503E0"
        },
        "base::DictionaryValue::Clear": {
            "offset": "0x175A20"
        },
        "base::DictionaryValue::CreateDeepCopy": {
            "offset": "0x176520"
        },
        "base::DictionaryValue::DeepCopy": {
            "offset": "0x1767B0"
        },
        "base::DictionaryValue::DeepCopyWithoutEmptyChildren": {
            "offset": "0x1768F0"
        },
        "base::DictionaryValue::DictionaryValue": {
            "offset": "0x3190"
        },
        "base::DictionaryValue::From": {
            "offset": "0x178230"
        },
        "base::DictionaryValue::Get": {
            "offset": "0x178460"
        },
        "base::DictionaryValue::GetBinary": {
            "offset": "0x1788B0"
        },
        "base::DictionaryValue::GetBoolean": {
            "offset": "0x178A50"
        },
        "base::DictionaryValue::GetBooleanWithoutPathExpansion": {
            "offset": "0x178B90"
        },
        "base::DictionaryValue::GetDictionary": {
            "offset": "0x178DC0"
        },
        "base::DictionaryValue::GetDictionaryWithoutPathExpansion": {
            "offset": "0x178F10"
        },
        "base::DictionaryValue::GetDouble": {
            "offset": "0x179050"
        },
        "base::DictionaryValue::GetDoubleWithoutPathExpansion": {
            "offset": "0x179250"
        },
        "base::DictionaryValue::GetInteger": {
            "offset": "0x179420"
        },
        "base::DictionaryValue::GetIntegerWithoutPathExpansion": {
            "offset": "0x179560"
        },
        "base::DictionaryValue::GetList": {
            "offset": "0x179790"
        },
        "base::DictionaryValue::GetListWithoutPathExpansion": {
            "offset": "0x1799C0"
        },
        "base::DictionaryValue::GetString": {
            "offset": "0x179C00"
        },
        "base::DictionaryValue::GetStringASCII": {
            "offset": "0x179E60"
        },
        "base::DictionaryValue::GetStringWithoutPathExpansion": {
            "offset": "0x17A1D0"
        },
        "base::DictionaryValue::GetWithoutPathExpansion": {
            "offset": "0x17A3B0"
        },
        "base::DictionaryValue::HasKey": {
            "offset": "0x17A4B0"
        },
        "base::DictionaryValue::Iterator::Advance": {
            "offset": "0x5930"
        },
        "base::DictionaryValue::Iterator::IsAtEnd": {
            "offset": "0xACB0"
        },
        "base::DictionaryValue::Iterator::Iterator": {
            "offset": "0x173A60"
        },
        "base::DictionaryValue::Iterator::key": {
            "offset": "0xAAA0"
        },
        "base::DictionaryValue::Iterator::value": {
            "offset": "0xDDB0"
        },
        "base::DictionaryValue::Iterator::~Iterator": {
            "offset": "0x12B0"
        },
        "base::DictionaryValue::Remove": {
            "offset": "0x17B0B0"
        },
        "base::DictionaryValue::RemovePath": {
            "offset": "0x17B5E0"
        },
        "base::DictionaryValue::RemoveWithoutPathExpansion": {
            "offset": "0x17BA50"
        },
        "base::DictionaryValue::Set": {
            "offset": "0x17BC10"
        },
        "base::DictionaryValue::SetBoolean": {
            "offset": "0x17C160"
        },
        "base::DictionaryValue::SetDictionary": {
            "offset": "0x17C1D0"
        },
        "base::DictionaryValue::SetDouble": {
            "offset": "0x17C250"
        },
        "base::DictionaryValue::SetInteger": {
            "offset": "0x17C570"
        },
        "base::DictionaryValue::SetList": {
            "offset": "0x17C1D0"
        },
        "base::DictionaryValue::SetString": {
            "offset": "0x17D850"
        },
        "base::DictionaryValue::SetWithoutPathExpansion": {
            "offset": "0x17DDF0"
        },
        "base::DictionaryValue::Swap": {
            "offset": "0x17DF10"
        },
        "base::DictionaryValue::begin": {
            "offset": "0xD3D0"
        },
        "base::DictionaryValue::empty": {
            "offset": "0xD550"
        },
        "base::DictionaryValue::end": {
            "offset": "0xD540"
        },
        "base::DictionaryValue::size": {
            "offset": "0xAA60"
        },
        "base::DictionaryValue::~DictionaryValue": {
            "offset": "0x3A00"
        },
        "base::DisallowBaseSyncPrimitives": {
            "offset": "0x13E430"
        },
        "base::DisallowBlocking": {
            "offset": "0x13E4B0"
        },
        "base::DisallowUnresponsiveTasks": {
            "offset": "0x13E530"
        },
        "base::DiscardSystemPages": {
            "offset": "0xE740"
        },
        "base::DiscardableMemory::DiscardableMemory": {
            "offset": "0x69880"
        },
        "base::DiscardableMemory::~DiscardableMemory": {
            "offset": "0x69890"
        },
        "base::DiscardableMemoryAllocator::AllocateLockedDiscardableMemoryWithRetryOrDie": {
            "offset": "0x69950"
        },
        "base::DiscardableMemoryAllocator::DiscardableMemoryAllocator": {
            "offset": "0x69940"
        },
        "base::DiscardableMemoryAllocator::GetInstance": {
            "offset": "0x69AC0"
        },
        "base::DiscardableMemoryAllocator::SetInstance": {
            "offset": "0x69B50"
        },
        "base::DiscardableMemoryAllocator::~DiscardableMemoryAllocator": {
            "offset": "0x12B0"
        },
        "base::DiscardableSharedMemory::Close": {
            "offset": "0x6A5D0"
        },
        "base::DiscardableSharedMemory::CreateAndMap": {
            "offset": "0x6A610"
        },
        "base::DiscardableSharedMemory::CreateSharedMemoryOwnershipEdge": {
            "offset": "0x6A820"
        },
        "base::DiscardableSharedMemory::DiscardableSharedMemory": {
            "offset": "0x69D90"
        },
        "base::DiscardableSharedMemory::DuplicateRegion": {
            "offset": "0x6A940"
        },
        "base::DiscardableSharedMemory::IsMemoryLocked": {
            "offset": "0x6AB10"
        },
        "base::DiscardableSharedMemory::IsMemoryResident": {
            "offset": "0x6ABF0"
        },
        "base::DiscardableSharedMemory::Lock": {
            "offset": "0x6ACF0"
        },
        "base::DiscardableSharedMemory::LockPages": {
            "offset": "0x12A0"
        },
        "base::DiscardableSharedMemory::Map": {
            "offset": "0x6B1A0"
        },
        "base::DiscardableSharedMemory::Now": {
            "offset": "0x6B3B0"
        },
        "base::DiscardableSharedMemory::Purge": {
            "offset": "0x6B3D0"
        },
        "base::DiscardableSharedMemory::Unlock": {
            "offset": "0x6B6B0"
        },
        "base::DiscardableSharedMemory::UnlockPages": {
            "offset": "0x12B0"
        },
        "base::DiscardableSharedMemory::Unmap": {
            "offset": "0x6BE50"
        },
        "base::DiscardableSharedMemory::last_known_usage": {
            "offset": "0x6BEC0"
        },
        "base::DiscardableSharedMemory::mapped_id": {
            "offset": "0x6BED0"
        },
        "base::DiscardableSharedMemory::mapped_size": {
            "offset": "0x6BEE0"
        },
        "base::DiscardableSharedMemory::memory": {
            "offset": "0x6BEF0"
        },
        "base::DiscardableSharedMemory::~DiscardableSharedMemory": {
            "offset": "0x6A100"
        },
        "base::DoIsStringASCII<char>": {
            "offset": "0xCBEF0"
        },
        "base::DoIsStringASCII<wchar_t>": {
            "offset": "0xCC030"
        },
        "base::DoReplaceMatchesAfterOffset<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::CharacterMatcher<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0xCC220"
        },
        "base::DoReplaceMatchesAfterOffset<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::SubstringMatcher<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0xCC6E0"
        },
        "base::DoReplaceMatchesAfterOffset<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,base::CharacterMatcher<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0xCCB40"
        },
        "base::DoReplaceMatchesAfterOffset<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,base::SubstringMatcher<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0xCD020"
        },
        "base::DoReplaceStringPlaceholders<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xCD4B0"
        },
        "base::DoReplaceStringPlaceholders<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xCD900"
        },
        "base::DummyHistogram::Add": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::AddCount": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::AddSamples": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::AddSamplesFromPickle": {
            "offset": "0xAAC0"
        },
        "base::DummyHistogram::CheckName": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::DummyHistogram": {
            "offset": "0x7A9A0"
        },
        "base::DummyHistogram::GetCountAndBucketData": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::GetHistogramType": {
            "offset": "0x7AB70"
        },
        "base::DummyHistogram::GetInstance": {
            "offset": "0x7AB80"
        },
        "base::DummyHistogram::GetParameters": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::HasConstructionArguments": {
            "offset": "0xAAC0"
        },
        "base::DummyHistogram::SerializeInfoImpl": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::SnapshotDelta": {
            "offset": "0x7ACD0"
        },
        "base::DummyHistogram::SnapshotFinalDelta": {
            "offset": "0x7ACD0"
        },
        "base::DummyHistogram::SnapshotSamples": {
            "offset": "0x7ACD0"
        },
        "base::DummyHistogram::WriteAscii": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::WriteHTMLGraph": {
            "offset": "0x12B0"
        },
        "base::DummyHistogram::name_hash": {
            "offset": "0x7AD60"
        },
        "base::DummyHistogram::~DummyHistogram": {
            "offset": "0x7A9D0"
        },
        "base::ElapsedThreadTimer::Elapsed": {
            "offset": "0x143320"
        },
        "base::ElapsedThreadTimer::ElapsedThreadTimer": {
            "offset": "0x1431B0"
        },
        "base::ElapsedThreadTimer::is_supported": {
            "offset": "0xD790"
        },
        "base::ElapsedTimer::Begin": {
            "offset": "0x9A20"
        },
        "base::ElapsedTimer::Elapsed": {
            "offset": "0x143390"
        },
        "base::ElapsedTimer::ElapsedTimer": {
            "offset": "0x1431F0"
        },
        "base::EmptyString": {
            "offset": "0xCF440"
        },
        "base::EmptyString16": {
            "offset": "0xCF430"
        },
        "base::EnableTerminationOnHeapCorruption": {
            "offset": "0xAE3E0"
        },
        "base::EnableTerminationOnOutOfMemory": {
            "offset": "0xAE400"
        },
        "base::EndsWith": {
            "offset": "0xCF590"
        },
        "base::EnsureProcessTerminated": {
            "offset": "0xAB530"
        },
        "base::Environment::Create": {
            "offset": "0x3B140"
        },
        "base::Environment::Environment": {
            "offset": "0x1D380"
        },
        "base::Environment::HasVar": {
            "offset": "0x3B6A0"
        },
        "base::Environment::~Environment": {
            "offset": "0x3B100"
        },
        "base::EqualsASCII": {
            "offset": "0xCF720"
        },
        "base::EqualsCaseInsensitiveASCII": {
            "offset": "0xCF7A0"
        },
        "base::EscapeBytesAsInvalidJSONString": {
            "offset": "0x64BB0"
        },
        "base::EscapeJSONString": {
            "offset": "0x64D10"
        },
        "base::FastHash": {
            "offset": "0x58A40"
        },
        "base::FeatureList::AddFeaturesToAllocator": {
            "offset": "0x3C030"
        },
        "base::FeatureList::AssociateReportingFieldTrial": {
            "offset": "0x3C220"
        },
        "base::FeatureList::CheckFeatureIdentity": {
            "offset": "0x3C3D0"
        },
        "base::FeatureList::ClearInstanceForTesting": {
            "offset": "0x3C7F0"
        },
        "base::FeatureList::FeatureList": {
            "offset": "0x3BE10"
        },
        "base::FeatureList::FinalizeInitialization": {
            "offset": "0x3C820"
        },
        "base::FeatureList::GetAssociatedFieldTrial": {
            "offset": "0x3C8B0"
        },
        "base::FeatureList::GetCommandLineFeatureOverrides": {
            "offset": "0x3CAD0"
        },
        "base::FeatureList::GetFeatureOverrides": {
            "offset": "0x3CAE0"
        },
        "base::FeatureList::GetFeatureOverridesImpl": {
            "offset": "0x3CAF0"
        },
        "base::FeatureList::GetFieldTrial": {
            "offset": "0x3CF10"
        },
        "base::FeatureList::GetInstance": {
            "offset": "0x3CF30"
        },
        "base::FeatureList::InitializeFromCommandLine": {
            "offset": "0x3CF40"
        },
        "base::FeatureList::InitializeFromSharedMemory": {
            "offset": "0x3D000"
        },
        "base::FeatureList::InitializeInstance": {
            "offset": "0x3D3D0"
        },
        "base::FeatureList::IsEnabled": {
            "offset": "0x3D530"
        },
        "base::FeatureList::IsFeatureEnabled": {
            "offset": "0x3D560"
        },
        "base::FeatureList::IsFeatureOverriddenFromCommandLine": {
            "offset": "0x3D7A0"
        },
        "base::FeatureList::RegisterExtraFeatureOverrides": {
            "offset": "0x3D920"
        },
        "base::FeatureList::RegisterFieldTrialOverride": {
            "offset": "0x3D9A0"
        },
        "base::FeatureList::RegisterOverride": {
            "offset": "0x3DC00"
        },
        "base::FeatureList::RegisterOverridesFromCommandLine": {
            "offset": "0x3DFC0"
        },
        "base::FeatureList::RestoreInstanceForTesting": {
            "offset": "0x3E3C0"
        },
        "base::FeatureList::ScopedDisallowOverrides::ScopedDisallowOverrides": {
            "offset": "0x3BEB0"
        },
        "base::FeatureList::ScopedDisallowOverrides::~ScopedDisallowOverrides": {
            "offset": "0x3C020"
        },
        "base::FeatureList::SetInstance": {
            "offset": "0x3E460"
        },
        "base::FeatureList::SplitFeatureListString": {
            "offset": "0x3E500"
        },
        "base::FeatureList::~FeatureList": {
            "offset": "0x3BFB0"
        },
        "base::FeatureParam<bool,0>::Get": {
            "offset": "0x868F0"
        },
        "base::FeatureParam<double,0>::Get": {
            "offset": "0x86600"
        },
        "base::FeatureParam<int,0>::Get": {
            "offset": "0x86530"
        },
        "base::FeatureParam<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>::Get": {
            "offset": "0x866E0"
        },
        "base::FieldTrial::ActiveGroup::~ActiveGroup": {
            "offset": "0x7C700"
        },
        "base::FieldTrial::AppendGroup": {
            "offset": "0x7DEB0"
        },
        "base::FieldTrial::CreateSimulatedFieldTrial": {
            "offset": "0x7ED60"
        },
        "base::FieldTrial::Disable": {
            "offset": "0x80100"
        },
        "base::FieldTrial::EnableBenchmarking": {
            "offset": "0x80320"
        },
        "base::FieldTrial::EntropyProvider::EntropyProvider": {
            "offset": "0x2DA20"
        },
        "base::FieldTrial::EntropyProvider::~EntropyProvider": {
            "offset": "0x7C870"
        },
        "base::FieldTrial::FieldTrial": {
            "offset": "0x7C210"
        },
        "base::FieldTrial::FieldTrialEntry::GetParams": {
            "offset": "0x81C00"
        },
        "base::FieldTrial::FieldTrialEntry::GetPickleIterator": {
            "offset": "0x82190"
        },
        "base::FieldTrial::FieldTrialEntry::GetTrialAndGroupName": {
            "offset": "0x823A0"
        },
        "base::FieldTrial::FieldTrialEntry::ReadStringPair": {
            "offset": "0x83190"
        },
        "base::FieldTrial::FinalizeGroupChoice": {
            "offset": "0x809F0"
        },
        "base::FieldTrial::FinalizeGroupChoiceImpl": {
            "offset": "0x80A00"
        },
        "base::FieldTrial::GetActiveGroup": {
            "offset": "0x81310"
        },
        "base::FieldTrial::GetGroupNameWithoutActivation": {
            "offset": "0x81580"
        },
        "base::FieldTrial::GetStateWhileLocked": {
            "offset": "0x82340"
        },
        "base::FieldTrial::SetForced": {
            "offset": "0x83920"
        },
        "base::FieldTrial::SetGroupChoice": {
            "offset": "0x83950"
        },
        "base::FieldTrial::SetTrialRegistered": {
            "offset": "0x83B20"
        },
        "base::FieldTrial::State::State": {
            "offset": "0x7C6C0"
        },
        "base::FieldTrial::State::~State": {
            "offset": "0x12B0"
        },
        "base::FieldTrial::default_group_name": {
            "offset": "0x36250"
        },
        "base::FieldTrial::group": {
            "offset": "0x84310"
        },
        "base::FieldTrial::group_name": {
            "offset": "0x84340"
        },
        "base::FieldTrial::group_name_internal": {
            "offset": "0x36290"
        },
        "base::FieldTrial::trial_name": {
            "offset": "0x36300"
        },
        "base::FieldTrial::~FieldTrial": {
            "offset": "0x7C880"
        },
        "base::FieldTrialList::ActivateFieldTrialEntryWhileLocked": {
            "offset": "0x7CDA0"
        },
        "base::FieldTrialList::AddObserver": {
            "offset": "0x7D190"
        },
        "base::FieldTrialList::AddToAllocatorWhileLocked": {
            "offset": "0x7D1D0"
        },
        "base::FieldTrialList::AllParamsToString": {
            "offset": "0x7D350"
        },
        "base::FieldTrialList::AllStatesToString": {
            "offset": "0x7DB10"
        },
        "base::FieldTrialList::AppendFieldTrialHandleIfNeeded": {
            "offset": "0x7DE40"
        },
        "base::FieldTrialList::BackupInstanceForTesting": {
            "offset": "0x7E140"
        },
        "base::FieldTrialList::ClearParamsFromSharedMemoryForTesting": {
            "offset": "0x7E160"
        },
        "base::FieldTrialList::CopyFieldTrialStateToFlags": {
            "offset": "0x7E6C0"
        },
        "base::FieldTrialList::CreateFeaturesFromCommandLine": {
            "offset": "0x7EA10"
        },
        "base::FieldTrialList::CreateFieldTrial": {
            "offset": "0x7EBA0"
        },
        "base::FieldTrialList::CreateTrialsFromCommandLine": {
            "offset": "0x7EDD0"
        },
        "base::FieldTrialList::CreateTrialsFromSharedMemoryMapping": {
            "offset": "0x7F110"
        },
        "base::FieldTrialList::CreateTrialsFromSharedMemoryRegion": {
            "offset": "0x7F600"
        },
        "base::FieldTrialList::CreateTrialsFromString": {
            "offset": "0x7F670"
        },
        "base::FieldTrialList::CreateTrialsFromSwitchValue": {
            "offset": "0x7FB30"
        },
        "base::FieldTrialList::DeserializeSharedMemoryRegionMetadata": {
            "offset": "0x7FBD0"
        },
        "base::FieldTrialList::DumpAllFieldTrialsToPersistentAllocator": {
            "offset": "0x801E0"
        },
        "base::FieldTrialList::DuplicateFieldTrialSharedMemoryForTesting": {
            "offset": "0x802E0"
        },
        "base::FieldTrialList::FieldTrialList": {
            "offset": "0x7C460"
        },
        "base::FieldTrialList::Find": {
            "offset": "0x80AC0"
        },
        "base::FieldTrialList::FindFullName": {
            "offset": "0x80B50"
        },
        "base::FieldTrialList::FindValue": {
            "offset": "0x80BB0"
        },
        "base::FieldTrialList::GetActiveFieldTrialGroups": {
            "offset": "0x80C00"
        },
        "base::FieldTrialList::GetActiveFieldTrialGroupsFromString": {
            "offset": "0x80EB0"
        },
        "base::FieldTrialList::GetAllFieldTrialsFromPersistentAllocator": {
            "offset": "0x81400"
        },
        "base::FieldTrialList::GetEntropyProviderForOneTimeRandomization": {
            "offset": "0x814D0"
        },
        "base::FieldTrialList::GetFieldTrialCount": {
            "offset": "0x814F0"
        },
        "base::FieldTrialList::GetInitiallyActiveFieldTrials": {
            "offset": "0x815A0"
        },
        "base::FieldTrialList::GetInstance": {
            "offset": "0x81BF0"
        },
        "base::FieldTrialList::GetParamsFromSharedMemory": {
            "offset": "0x82050"
        },
        "base::FieldTrialList::GetRegisteredTrials": {
            "offset": "0x821E0"
        },
        "base::FieldTrialList::InstantiateFieldTrialAllocatorIfNeeded": {
            "offset": "0x82430"
        },
        "base::FieldTrialList::IsTrialActive": {
            "offset": "0x82670"
        },
        "base::FieldTrialList::NotifyFieldTrialGroupSelection": {
            "offset": "0x82970"
        },
        "base::FieldTrialList::Observer::Observer": {
            "offset": "0x2E250"
        },
        "base::FieldTrialList::Observer::~Observer": {
            "offset": "0x7CCE0"
        },
        "base::FieldTrialList::OnGroupFinalized": {
            "offset": "0x82CA0"
        },
        "base::FieldTrialList::PreLockedFind": {
            "offset": "0x83120"
        },
        "base::FieldTrialList::Register": {
            "offset": "0x831E0"
        },
        "base::FieldTrialList::RemoveObserver": {
            "offset": "0x833B0"
        },
        "base::FieldTrialList::RemoveSynchronousObserver": {
            "offset": "0x83440"
        },
        "base::FieldTrialList::RestoreInstanceForTesting": {
            "offset": "0x83630"
        },
        "base::FieldTrialList::SerializeSharedMemoryRegionMetadata": {
            "offset": "0x83670"
        },
        "base::FieldTrialList::SetSynchronousObserver": {
            "offset": "0x83A80"
        },
        "base::FieldTrialList::StatesToString": {
            "offset": "0x83C10"
        },
        "base::FieldTrialList::TrialExists": {
            "offset": "0x83EF0"
        },
        "base::FieldTrialList::~FieldTrialList": {
            "offset": "0x7C9A0"
        },
        "base::FieldTrialParamAssociator::AssociateFieldTrialParams": {
            "offset": "0x84F60"
        },
        "base::FieldTrialParamAssociator::ClearAllCachedParamsForTesting": {
            "offset": "0x85080"
        },
        "base::FieldTrialParamAssociator::ClearAllParamsForTesting": {
            "offset": "0x85110"
        },
        "base::FieldTrialParamAssociator::ClearParamsForTesting": {
            "offset": "0x851A0"
        },
        "base::FieldTrialParamAssociator::FieldTrialParamAssociator": {
            "offset": "0x84B70"
        },
        "base::FieldTrialParamAssociator::GetFieldTrialParams": {
            "offset": "0x85280"
        },
        "base::FieldTrialParamAssociator::GetFieldTrialParamsWithoutFallback": {
            "offset": "0x852F0"
        },
        "base::FieldTrialParamAssociator::GetInstance": {
            "offset": "0x85400"
        },
        "base::FieldTrialParamAssociator::~FieldTrialParamAssociator": {
            "offset": "0x84BF0"
        },
        "base::File::Close": {
            "offset": "0x53140"
        },
        "base::File::DeleteOnClose": {
            "offset": "0x53210"
        },
        "base::File::DoInitialize": {
            "offset": "0x53240"
        },
        "base::File::Duplicate": {
            "offset": "0x53750"
        },
        "base::File::ErrorToString": {
            "offset": "0x3FC10"
        },
        "base::File::File": {
            "offset": "0x3FA80"
        },
        "base::File::Flush": {
            "offset": "0x53900"
        },
        "base::File::GetInfo": {
            "offset": "0x53A10"
        },
        "base::File::GetLastFileError": {
            "offset": "0x53BD0"
        },
        "base::File::GetLength": {
            "offset": "0x53BF0"
        },
        "base::File::GetPlatformFile": {
            "offset": "0xAB80"
        },
        "base::File::Info::Info": {
            "offset": "0x3FAD0"
        },
        "base::File::Info::~Info": {
            "offset": "0x12B0"
        },
        "base::File::Initialize": {
            "offset": "0x40270"
        },
        "base::File::IsValid": {
            "offset": "0x53D10"
        },
        "base::File::Lock": {
            "offset": "0x53D20"
        },
        "base::File::OSErrorToFileError": {
            "offset": "0x53EA0"
        },
        "base::File::Read": {
            "offset": "0x540E0"
        },
        "base::File::ReadAndCheck": {
            "offset": "0x40330"
        },
        "base::File::ReadAtCurrentPos": {
            "offset": "0x542C0"
        },
        "base::File::ReadAtCurrentPosAndCheck": {
            "offset": "0x40360"
        },
        "base::File::ReadAtCurrentPosNoBestEffort": {
            "offset": "0x54470"
        },
        "base::File::ReadNoBestEffort": {
            "offset": "0x54480"
        },
        "base::File::Seek": {
            "offset": "0x54490"
        },
        "base::File::SetLength": {
            "offset": "0x54660"
        },
        "base::File::SetPlatformFile": {
            "offset": "0x547D0"
        },
        "base::File::SetTimes": {
            "offset": "0x547E0"
        },
        "base::File::TakePlatformFile": {
            "offset": "0x54920"
        },
        "base::File::Unlock": {
            "offset": "0x54970"
        },
        "base::File::Write": {
            "offset": "0x54A80"
        },
        "base::File::WriteAndCheck": {
            "offset": "0x40390"
        },
        "base::File::WriteAtCurrentPos": {
            "offset": "0x54C40"
        },
        "base::File::WriteAtCurrentPosAndCheck": {
            "offset": "0x403C0"
        },
        "base::File::WriteAtCurrentPosNoBestEffort": {
            "offset": "0x54DE0"
        },
        "base::File::async": {
            "offset": "0x1D190"
        },
        "base::File::created": {
            "offset": "0x1D1A0"
        },
        "base::File::error_details": {
            "offset": "0x1D1B0"
        },
        "base::File::~File": {
            "offset": "0x3FB40"
        },
        "base::FileEnumerator::FileEnumerator": {
            "offset": "0x409F0"
        },
        "base::FileEnumerator::FileInfo::FileInfo": {
            "offset": "0x40C60"
        },
        "base::FileEnumerator::FileInfo::GetLastModifiedTime": {
            "offset": "0x40FF0"
        },
        "base::FileEnumerator::FileInfo::GetName": {
            "offset": "0x41010"
        },
        "base::FileEnumerator::FileInfo::GetSize": {
            "offset": "0x41070"
        },
        "base::FileEnumerator::FileInfo::find_data": {
            "offset": "0x3FB0"
        },
        "base::FileEnumerator::FileInfo::~FileInfo": {
            "offset": "0x12B0"
        },
        "base::FileEnumerator::GetInfo": {
            "offset": "0x40E10"
        },
        "base::FileEnumerator::IsPatternMatched": {
            "offset": "0x41110"
        },
        "base::FileEnumerator::IsTypeMatched": {
            "offset": "0x40480"
        },
        "base::FileEnumerator::Next": {
            "offset": "0x411D0"
        },
        "base::FileEnumerator::ShouldSkip": {
            "offset": "0x40490"
        },
        "base::FileEnumerator::~FileEnumerator": {
            "offset": "0x40D40"
        },
        "base::FileHelper::FileHelper": {
            "offset": "0x48840"
        },
        "base::FileHelper::PassFile": {
            "offset": "0x49E00"
        },
        "base::FileHelper::~FileHelper": {
            "offset": "0x48BD0"
        },
        "base::FilePath::AddExtension": {
            "offset": "0x41FF0"
        },
        "base::FilePath::AddExtensionASCII": {
            "offset": "0x422C0"
        },
        "base::FilePath::Append": {
            "offset": "0x42480"
        },
        "base::FilePath::AppendASCII": {
            "offset": "0x42940"
        },
        "base::FilePath::AppendRelativePath": {
            "offset": "0x42AB0"
        },
        "base::FilePath::AsEndingWithSeparator": {
            "offset": "0x42DC0"
        },
        "base::FilePath::AsUTF16Unsafe": {
            "offset": "0x42F60"
        },
        "base::FilePath::AsUTF8Unsafe": {
            "offset": "0x42FA0"
        },
        "base::FilePath::BaseName": {
            "offset": "0x42FE0"
        },
        "base::FilePath::CompareEqualIgnoreCase": {
            "offset": "0x9A50"
        },
        "base::FilePath::CompareIgnoreCase": {
            "offset": "0x43200"
        },
        "base::FilePath::CompareLessIgnoreCase": {
            "offset": "0x9A80"
        },
        "base::FilePath::DirName": {
            "offset": "0x432E0"
        },
        "base::FilePath::EndsWithSeparator": {
            "offset": "0x435A0"
        },
        "base::FilePath::Extension": {
            "offset": "0x43A60"
        },
        "base::FilePath::FilePath": {
            "offset": "0x41E20"
        },
        "base::FilePath::FinalExtension": {
            "offset": "0x44000"
        },
        "base::FilePath::FromUTF16Unsafe": {
            "offset": "0x44280"
        },
        "base::FilePath::FromUTF8Unsafe": {
            "offset": "0x442B0"
        },
        "base::FilePath::GetComponents": {
            "offset": "0x44380"
        },
        "base::FilePath::InsertBeforeExtension": {
            "offset": "0x44D20"
        },
        "base::FilePath::InsertBeforeExtensionASCII": {
            "offset": "0x44F20"
        },
        "base::FilePath::IsAbsolute": {
            "offset": "0x45090"
        },
        "base::FilePath::IsParent": {
            "offset": "0x45180"
        },
        "base::FilePath::IsSeparator": {
            "offset": "0x453F0"
        },
        "base::FilePath::LossyDisplayName": {
            "offset": "0x45420"
        },
        "base::FilePath::MatchesExtension": {
            "offset": "0x45460"
        },
        "base::FilePath::MaybeAsASCII": {
            "offset": "0x455E0"
        },
        "base::FilePath::NormalizePathSeparators": {
            "offset": "0x45680"
        },
        "base::FilePath::NormalizePathSeparatorsTo": {
            "offset": "0x456A0"
        },
        "base::FilePath::ReadFromPickle": {
            "offset": "0x459F0"
        },
        "base::FilePath::ReferencesParent": {
            "offset": "0x45B90"
        },
        "base::FilePath::RemoveExtension": {
            "offset": "0x45F40"
        },
        "base::FilePath::RemoveFinalExtension": {
            "offset": "0x46150"
        },
        "base::FilePath::ReplaceExtension": {
            "offset": "0x46360"
        },
        "base::FilePath::StripTrailingSeparators": {
            "offset": "0x46710"
        },
        "base::FilePath::StripTrailingSeparatorsInternal": {
            "offset": "0x46780"
        },
        "base::FilePath::WriteToPickle": {
            "offset": "0x46A40"
        },
        "base::FilePath::clear": {
            "offset": "0xD500"
        },
        "base::FilePath::empty": {
            "offset": "0xD560"
        },
        "base::FilePath::value": {
            "offset": "0x3FB0"
        },
        "base::FilePath::~FilePath": {
            "offset": "0x20FD0"
        },
        "base::FilePathWatcher::FilePathWatcher": {
            "offset": "0x475D0"
        },
        "base::FilePathWatcher::PlatformDelegate::PlatformDelegate": {
            "offset": "0x46FB0"
        },
        "base::FilePathWatcher::PlatformDelegate::~PlatformDelegate": {
            "offset": "0x47080"
        },
        "base::FilePathWatcher::RecursiveWatchAvailable": {
            "offset": "0xAAC0"
        },
        "base::FilePathWatcher::Watch": {
            "offset": "0x47220"
        },
        "base::FilePathWatcher::~FilePathWatcher": {
            "offset": "0x46FD0"
        },
        "base::FilePersistentMemoryAllocator::Cache": {
            "offset": "0x97830"
        },
        "base::FilePersistentMemoryAllocator::FilePersistentMemoryAllocator": {
            "offset": "0x96670"
        },
        "base::FilePersistentMemoryAllocator::FlushPartial": {
            "offset": "0x983C0"
        },
        "base::FilePersistentMemoryAllocator::IsFileAcceptable": {
            "offset": "0x98E60"
        },
        "base::FilePersistentMemoryAllocator::~FilePersistentMemoryAllocator": {
            "offset": "0x96FA0"
        },
        "base::FileProxy::Close": {
            "offset": "0x48D70"
        },
        "base::FileProxy::CreateOrOpen": {
            "offset": "0x48FB0"
        },
        "base::FileProxy::CreateTemporary": {
            "offset": "0x492B0"
        },
        "base::FileProxy::DuplicateFile": {
            "offset": "0x498A0"
        },
        "base::FileProxy::FileProxy": {
            "offset": "0x48920"
        },
        "base::FileProxy::Flush": {
            "offset": "0x498E0"
        },
        "base::FileProxy::GetInfo": {
            "offset": "0x49B20"
        },
        "base::FileProxy::GetPlatformFile": {
            "offset": "0x49DE0"
        },
        "base::FileProxy::IsValid": {
            "offset": "0x49DF0"
        },
        "base::FileProxy::Read": {
            "offset": "0x49FB0"
        },
        "base::FileProxy::SetFile": {
            "offset": "0x4AAE0"
        },
        "base::FileProxy::SetLength": {
            "offset": "0x4ABB0"
        },
        "base::FileProxy::SetTimes": {
            "offset": "0x4AE40"
        },
        "base::FileProxy::TakeFile": {
            "offset": "0x4B0D0"
        },
        "base::FileProxy::Write": {
            "offset": "0x4B0F0"
        },
        "base::FileProxy::created": {
            "offset": "0x4B4A0"
        },
        "base::FileProxy::task_runner": {
            "offset": "0xAAA0"
        },
        "base::FileProxy::~FileProxy": {
            "offset": "0x48C40"
        },
        "base::FileToFILE": {
            "offset": "0x515C0"
        },
        "base::FileTracing::IsCategoryEnabled": {
            "offset": "0x4B590"
        },
        "base::FileTracing::ScopedEnabler::ScopedEnabler": {
            "offset": "0x4B4B0"
        },
        "base::FileTracing::ScopedEnabler::~ScopedEnabler": {
            "offset": "0x4B4E0"
        },
        "base::FileTracing::ScopedTrace::Initialize": {
            "offset": "0x4B550"
        },
        "base::FileTracing::ScopedTrace::ScopedTrace": {
            "offset": "0x30F0"
        },
        "base::FileTracing::ScopedTrace::~ScopedTrace": {
            "offset": "0x4B510"
        },
        "base::FileTracing::SetProvider": {
            "offset": "0x4B5C0"
        },
        "base::FormatBytesUnlocalized": {
            "offset": "0xCFD70"
        },
        "base::Frame::Frame": {
            "offset": "0x29200"
        },
        "base::Frame::~Frame": {
            "offset": "0x12B0"
        },
        "base::FreePages": {
            "offset": "0xE860"
        },
        "base::GenerateGUID": {
            "offset": "0x586F0"
        },
        "base::GetAccessFlags": {
            "offset": "0xE980"
        },
        "base::GetAllocPageErrorCode": {
            "offset": "0xEA40"
        },
        "base::GetAppOutput": {
            "offset": "0xAC300"
        },
        "base::GetAppOutputAndError": {
            "offset": "0xAC330"
        },
        "base::GetAppOutputWithExitCode": {
            "offset": "0xACA40"
        },
        "base::GetCurrentProcId": {
            "offset": "0xAE520"
        },
        "base::GetCurrentProcessHandle": {
            "offset": "0xAE530"
        },
        "base::GetCurrentProcessIntegrityLevel": {
            "offset": "0xAE760"
        },
        "base::GetDiscardableMemoryBacking": {
            "offset": "0x12A0"
        },
        "base::GetFieldTrialParamByFeatureAsBool": {
            "offset": "0x869C0"
        },
        "base::GetFieldTrialParamByFeatureAsDouble": {
            "offset": "0x86C00"
        },
        "base::GetFieldTrialParamByFeatureAsInt": {
            "offset": "0x86E30"
        },
        "base::GetFieldTrialParamValue": {
            "offset": "0x87040"
        },
        "base::GetFieldTrialParamValueByFeature": {
            "offset": "0x87240"
        },
        "base::GetFieldTrialParams": {
            "offset": "0x872C0"
        },
        "base::GetFieldTrialParamsByFeature": {
            "offset": "0x872F0"
        },
        "base::GetFileInfo": {
            "offset": "0x517C0"
        },
        "base::GetFileSize": {
            "offset": "0x4C360"
        },
        "base::GetFunctionPointerFromNativeLibrary": {
            "offset": "0xA4800"
        },
        "base::GetHandleLimit": {
            "offset": "0xAF9E0"
        },
        "base::GetHomeDir": {
            "offset": "0x518E0"
        },
        "base::GetLoadableModuleName": {
            "offset": "0xA4810"
        },
        "base::GetMaxFds": {
            "offset": "0xAFA20"
        },
        "base::GetMaximumPathComponentLength": {
            "offset": "0x51A10"
        },
        "base::GetNativeLibraryName": {
            "offset": "0xA4840"
        },
        "base::GetPageSize": {
            "offset": "0xAFA30"
        },
        "base::GetParentProcessId": {
            "offset": "0xAE540"
        },
        "base::GetProcId": {
            "offset": "0xAE6B0"
        },
        "base::GetProcessCount": {
            "offset": "0xAED00"
        },
        "base::GetProgramCounter": {
            "offset": "0x656B0"
        },
        "base::GetQuotedJSONString": {
            "offset": "0x651D0"
        },
        "base::GetRandomPageBase": {
            "offset": "0x1E00"
        },
        "base::GetRegisteredTaskExecutorForTraits": {
            "offset": "0x108E80"
        },
        "base::GetSampleMetadataRecorder": {
            "offset": "0xB3E40"
        },
        "base::GetSamplingProfilerCurrentThreadToken": {
            "offset": "0xB4080"
        },
        "base::GetSystemCommitCharge": {
            "offset": "0xAFA40"
        },
        "base::GetSystemMemoryInfo": {
            "offset": "0xAFB10"
        },
        "base::GetSystemPerformanceInfo": {
            "offset": "0xAFBA0"
        },
        "base::GetTLSForCurrentTaskExecutor": {
            "offset": "0x108F30"
        },
        "base::GetTaskExecutorForCurrentThread": {
            "offset": "0x108FB0"
        },
        "base::GetTempDir": {
            "offset": "0x51B60"
        },
        "base::GetTerminationStatus": {
            "offset": "0xABA20"
        },
        "base::GetUniqueIdForProcess": {
            "offset": "0xAE4F0"
        },
        "base::GetUniquePath": {
            "offset": "0x4C3C0"
        },
        "base::GetUniquePathNumber": {
            "offset": "0x4C5A0"
        },
        "base::GetValueAsFilePath": {
            "offset": "0x170600"
        },
        "base::GetValueAsTime": {
            "offset": "0x170710"
        },
        "base::GetValueAsTimeDelta": {
            "offset": "0x170760"
        },
        "base::GetValueAsUnguessableToken": {
            "offset": "0x170860"
        },
        "base::GlobalHistogramAllocator::ConstructFilePath": {
            "offset": "0x92B50"
        },
        "base::GlobalHistogramAllocator::ConstructFilePathForUploadDir": {
            "offset": "0x92C10"
        },
        "base::GlobalHistogramAllocator::ConstructFilePaths": {
            "offset": "0x92D10"
        },
        "base::GlobalHistogramAllocator::ConstructFilePathsForUploadDir": {
            "offset": "0x930C0"
        },
        "base::GlobalHistogramAllocator::CreateSpareFile": {
            "offset": "0x93E30"
        },
        "base::GlobalHistogramAllocator::CreateSpareFileInDir": {
            "offset": "0x93FA0"
        },
        "base::GlobalHistogramAllocator::CreateWithActiveFile": {
            "offset": "0x94060"
        },
        "base::GlobalHistogramAllocator::CreateWithActiveFileInDir": {
            "offset": "0x94100"
        },
        "base::GlobalHistogramAllocator::CreateWithFile": {
            "offset": "0x94240"
        },
        "base::GlobalHistogramAllocator::CreateWithLocalMemory": {
            "offset": "0x94480"
        },
        "base::GlobalHistogramAllocator::CreateWithPersistentMemory": {
            "offset": "0x94570"
        },
        "base::GlobalHistogramAllocator::CreateWithSharedMemoryRegion": {
            "offset": "0x94650"
        },
        "base::GlobalHistogramAllocator::DeletePersistentLocation": {
            "offset": "0x94780"
        },
        "base::GlobalHistogramAllocator::Get": {
            "offset": "0x94810"
        },
        "base::GlobalHistogramAllocator::GetPersistentLocation": {
            "offset": "0xD5F0"
        },
        "base::GlobalHistogramAllocator::GlobalHistogramAllocator": {
            "offset": "0x91E80"
        },
        "base::GlobalHistogramAllocator::ImportHistogramsToStatisticsRecorder": {
            "offset": "0x94FB0"
        },
        "base::GlobalHistogramAllocator::ParseFilePath": {
            "offset": "0x95420"
        },
        "base::GlobalHistogramAllocator::ReleaseForTesting": {
            "offset": "0x95840"
        },
        "base::GlobalHistogramAllocator::Set": {
            "offset": "0x95930"
        },
        "base::GlobalHistogramAllocator::SetPersistentLocation": {
            "offset": "0x95A70"
        },
        "base::GlobalHistogramAllocator::WriteToPersistentLocation": {
            "offset": "0x95B30"
        },
        "base::GlobalHistogramAllocator::~GlobalHistogramAllocator": {
            "offset": "0x920B0"
        },
        "base::HasReservationForTesting": {
            "offset": "0xEA50"
        },
        "base::Hash": {
            "offset": "0x58BD0"
        },
        "base::HashInts32": {
            "offset": "0x58BE0"
        },
        "base::HashInts64": {
            "offset": "0x58C30"
        },
        "base::HashMetricName": {
            "offset": "0x919C0"
        },
        "base::HeapHandle::HeapHandle": {
            "offset": "0x3570"
        },
        "base::HeapHandle::Invalid": {
            "offset": "0x3570"
        },
        "base::HeapHandle::IsValid": {
            "offset": "0x26A50"
        },
        "base::HeapHandle::index": {
            "offset": "0xAB80"
        },
        "base::HeapHandle::reset": {
            "offset": "0x26CE0"
        },
        "base::HexDigitToInt": {
            "offset": "0xCFE80"
        },
        "base::HexEncode": {
            "offset": "0xC6B70"
        },
        "base::HexStringToByteContainer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xC6220"
        },
        "base::HexStringToBytes": {
            "offset": "0xC6B90"
        },
        "base::HexStringToInt": {
            "offset": "0xC6BD0"
        },
        "base::HexStringToInt64": {
            "offset": "0xC6BB0"
        },
        "base::HexStringToSpan": {
            "offset": "0xC6BF0"
        },
        "base::HexStringToString": {
            "offset": "0xC6D50"
        },
        "base::HexStringToUInt": {
            "offset": "0xC6E90"
        },
        "base::HexStringToUInt64": {
            "offset": "0xC6D70"
        },
        "base::HighResolutionTimerManager::HighResolutionTimerManager": {
            "offset": "0x1433E0"
        },
        "base::HighResolutionTimerManager::OnPowerStateChange": {
            "offset": "0x1436A0"
        },
        "base::HighResolutionTimerManager::OnResume": {
            "offset": "0x143750"
        },
        "base::HighResolutionTimerManager::OnSuspend": {
            "offset": "0x1437F0"
        },
        "base::HighResolutionTimerManager::UseHiResClock": {
            "offset": "0x143920"
        },
        "base::HighResolutionTimerManager::hi_res_clock_available": {
            "offset": "0xD630"
        },
        "base::HighResolutionTimerManager::~HighResolutionTimerManager": {
            "offset": "0x143570"
        },
        "base::Histogram::Add": {
            "offset": "0x88A00"
        },
        "base::Histogram::AddCount": {
            "offset": "0x88A10"
        },
        "base::Histogram::AddSamples": {
            "offset": "0x88BC0"
        },
        "base::Histogram::AddSamplesFromPickle": {
            "offset": "0x88BD0"
        },
        "base::Histogram::DeserializeInfoImpl": {
            "offset": "0x89EB0"
        },
        "base::Histogram::FindCorruption": {
            "offset": "0x8B380"
        },
        "base::Histogram::GetAsciiBucketRange": {
            "offset": "0x8B4A0"
        },
        "base::Histogram::GetBucketSize": {
            "offset": "0x8B5A0"
        },
        "base::Histogram::GetCountAndBucketData": {
            "offset": "0x8B7B0"
        },
        "base::Histogram::GetHistogramType": {
            "offset": "0x12A0"
        },
        "base::Histogram::GetParameters": {
            "offset": "0x8BA70"
        },
        "base::Histogram::GetPeakBucketSize": {
            "offset": "0x8BC80"
        },
        "base::Histogram::HasConstructionArguments": {
            "offset": "0x8BD10"
        },
        "base::Histogram::Histogram": {
            "offset": "0x87F10"
        },
        "base::Histogram::InitializeBucketRanges": {
            "offset": "0x8BFF0"
        },
        "base::Histogram::InspectConstructionArguments": {
            "offset": "0x8C6B0"
        },
        "base::Histogram::PersistentCreate": {
            "offset": "0x8CBF0"
        },
        "base::Histogram::PrintEmptyBucket": {
            "offset": "0xAAC0"
        },
        "base::Histogram::SerializeInfoImpl": {
            "offset": "0x8CE60"
        },
        "base::Histogram::SnapshotAllSamples": {
            "offset": "0x8D000"
        },
        "base::Histogram::SnapshotDelta": {
            "offset": "0x8D050"
        },
        "base::Histogram::SnapshotFinalDelta": {
            "offset": "0x8D160"
        },
        "base::Histogram::SnapshotSamples": {
            "offset": "0x8D260"
        },
        "base::Histogram::SnapshotUnloggedSamples": {
            "offset": "0x8D300"
        },
        "base::Histogram::ValidateHistogramContents": {
            "offset": "0x8D400"
        },
        "base::Histogram::WriteAscii": {
            "offset": "0x8D6C0"
        },
        "base::Histogram::WriteAsciiBucketContext": {
            "offset": "0x8D760"
        },
        "base::Histogram::WriteAsciiHeader": {
            "offset": "0x8D7D0"
        },
        "base::Histogram::WriteAsciiImpl": {
            "offset": "0x8D8D0"
        },
        "base::Histogram::WriteHTMLGraph": {
            "offset": "0x8DFE0"
        },
        "base::Histogram::bucket_count": {
            "offset": "0x8E270"
        },
        "base::Histogram::bucket_ranges": {
            "offset": "0x8E290"
        },
        "base::Histogram::declared_max": {
            "offset": "0x8E2C0"
        },
        "base::Histogram::declared_min": {
            "offset": "0x8E2F0"
        },
        "base::Histogram::name_hash": {
            "offset": "0x8E360"
        },
        "base::Histogram::ranges": {
            "offset": "0x8E370"
        },
        "base::Histogram::~Histogram": {
            "offset": "0x88520"
        },
        "base::HistogramBase::AddBoolean": {
            "offset": "0x8E7F0"
        },
        "base::HistogramBase::AddKiB": {
            "offset": "0x8E800"
        },
        "base::HistogramBase::AddKilo": {
            "offset": "0x8E880"
        },
        "base::HistogramBase::AddScaled": {
            "offset": "0x8E900"
        },
        "base::HistogramBase::AddTime": {
            "offset": "0x5800"
        },
        "base::HistogramBase::AddTimeMicrosecondsGranularity": {
            "offset": "0x8E9D0"
        },
        "base::HistogramBase::AddTimeMillisecondsGranularity": {
            "offset": "0x8EA30"
        },
        "base::HistogramBase::CheckName": {
            "offset": "0x8EA80"
        },
        "base::HistogramBase::ClearFlags": {
            "offset": "0x8EB00"
        },
        "base::HistogramBase::FindAndRunCallback": {
            "offset": "0x8EBA0"
        },
        "base::HistogramBase::FindCorruption": {
            "offset": "0x12A0"
        },
        "base::HistogramBase::GetPermanentName": {
            "offset": "0x8ECD0"
        },
        "base::HistogramBase::GetSimpleAsciiBucketRange": {
            "offset": "0x8EE20"
        },
        "base::HistogramBase::HistogramBase": {
            "offset": "0x8E720"
        },
        "base::HistogramBase::SerializeInfo": {
            "offset": "0x8F0D0"
        },
        "base::HistogramBase::SetFlags": {
            "offset": "0x8F120"
        },
        "base::HistogramBase::ValidateHistogramContents": {
            "offset": "0x12B0"
        },
        "base::HistogramBase::WriteAsciiBucketGraph": {
            "offset": "0x8F130"
        },
        "base::HistogramBase::WriteAsciiBucketValue": {
            "offset": "0x8F290"
        },
        "base::HistogramBase::WriteJSON": {
            "offset": "0x8F2C0"
        },
        "base::HistogramBase::flags": {
            "offset": "0xD600"
        },
        "base::HistogramBase::histogram_name": {
            "offset": "0xAAA0"
        },
        "base::HistogramBase::~HistogramBase": {
            "offset": "0x8E740"
        },
        "base::HistogramDeltaSerialization::DeserializeAndAddSamples": {
            "offset": "0x8F6E0"
        },
        "base::HistogramDeltaSerialization::HistogramDeltaSerialization": {
            "offset": "0x8F5A0"
        },
        "base::HistogramDeltaSerialization::PrepareAndSerializeDeltas": {
            "offset": "0x8F840"
        },
        "base::HistogramDeltaSerialization::RecordDelta": {
            "offset": "0x8F900"
        },
        "base::HistogramDeltaSerialization::~HistogramDeltaSerialization": {
            "offset": "0x8F600"
        },
        "base::HistogramFlattener::HistogramFlattener": {
            "offset": "0x8F5F0"
        },
        "base::HistogramFlattener::~HistogramFlattener": {
            "offset": "0x12B0"
        },
        "base::HistogramSamples::AccumulateSingleSample": {
            "offset": "0x90840"
        },
        "base::HistogramSamples::Add": {
            "offset": "0x908B0"
        },
        "base::HistogramSamples::AddFromPickle": {
            "offset": "0x90990"
        },
        "base::HistogramSamples::AtomicSingleSample::Accumulate": {
            "offset": "0x90760"
        },
        "base::HistogramSamples::AtomicSingleSample::AtomicSingleSample": {
            "offset": "0x1BD0"
        },
        "base::HistogramSamples::AtomicSingleSample::Extract": {
            "offset": "0x90B00"
        },
        "base::HistogramSamples::AtomicSingleSample::IsDisabled": {
            "offset": "0x90DE0"
        },
        "base::HistogramSamples::AtomicSingleSample::Load": {
            "offset": "0x90DF0"
        },
        "base::HistogramSamples::HistogramSamples": {
            "offset": "0x90550"
        },
        "base::HistogramSamples::IncreaseSumAndCount": {
            "offset": "0x90DC0"
        },
        "base::HistogramSamples::LocalMetadata::LocalMetadata": {
            "offset": "0x90600"
        },
        "base::HistogramSamples::RecordNegativeSample": {
            "offset": "0x90F50"
        },
        "base::HistogramSamples::Serialize": {
            "offset": "0x91080"
        },
        "base::HistogramSamples::Subtract": {
            "offset": "0x91190"
        },
        "base::HistogramSamples::id": {
            "offset": "0xD660"
        },
        "base::HistogramSamples::meta": {
            "offset": "0xAAA0"
        },
        "base::HistogramSamples::redundant_count": {
            "offset": "0xD910"
        },
        "base::HistogramSamples::single_sample": {
            "offset": "0xDD00"
        },
        "base::HistogramSamples::sum": {
            "offset": "0xDD30"
        },
        "base::HistogramSamples::~HistogramSamples": {
            "offset": "0x90670"
        },
        "base::HistogramSnapshotManager::HistogramSnapshotManager": {
            "offset": "0x912E0"
        },
        "base::HistogramSnapshotManager::PrepareDelta": {
            "offset": "0x914A0"
        },
        "base::HistogramSnapshotManager::PrepareDeltas": {
            "offset": "0x914E0"
        },
        "base::HistogramSnapshotManager::PrepareFinalDelta": {
            "offset": "0x91570"
        },
        "base::HistogramSnapshotManager::PrepareSamples": {
            "offset": "0x915B0"
        },
        "base::HistogramSnapshotManager::~HistogramSnapshotManager": {
            "offset": "0x91430"
        },
        "base::HistogramTypeToString": {
            "offset": "0x8EE50"
        },
        "base::IDMap<IPC::Listener *,int>::AddWithIDInternal": {
            "offset": "0x1B91A0"
        },
        "base::IDMap<IPC::Listener *,int>::IsRemoved": {
            "offset": "0x1B9450"
        },
        "base::IDMap<IPC::Listener *,int>::Lookup": {
            "offset": "0x1B94C0"
        },
        "base::IDMap<IPC::Listener *,int>::Remove": {
            "offset": "0x1B96E0"
        },
        "base::IDMap<IPC::Listener *,int>::~IDMap<IPC::Listener *,int>": {
            "offset": "0x1B8F30"
        },
        "base::ImportantFileWriter::ClearPendingWrite": {
            "offset": "0x55990"
        },
        "base::ImportantFileWriter::DataSerializer::DataSerializer": {
            "offset": "0x55370"
        },
        "base::ImportantFileWriter::DataSerializer::~DataSerializer": {
            "offset": "0x12B0"
        },
        "base::ImportantFileWriter::DoScheduledWrite": {
            "offset": "0x55A80"
        },
        "base::ImportantFileWriter::HasPendingWrite": {
            "offset": "0x55C70"
        },
        "base::ImportantFileWriter::ImportantFileWriter": {
            "offset": "0x55410"
        },
        "base::ImportantFileWriter::RegisterOnNextWriteCallbacks": {
            "offset": "0x55E00"
        },
        "base::ImportantFileWriter::ScheduleWrite": {
            "offset": "0x55F50"
        },
        "base::ImportantFileWriter::SetTimerForTesting": {
            "offset": "0x56120"
        },
        "base::ImportantFileWriter::WriteFileAtomically": {
            "offset": "0x56130"
        },
        "base::ImportantFileWriter::WriteNow": {
            "offset": "0x56740"
        },
        "base::ImportantFileWriter::commit_interval": {
            "offset": "0x56CA0"
        },
        "base::ImportantFileWriter::path": {
            "offset": "0x15B0"
        },
        "base::ImportantFileWriter::timer": {
            "offset": "0x56EC0"
        },
        "base::ImportantFileWriter::~ImportantFileWriter": {
            "offset": "0x55730"
        },
        "base::InternalHeapHandleStorage::ClearHeapHandle": {
            "offset": "0x26A10"
        },
        "base::InternalHeapHandleStorage::GetHeapHandle": {
            "offset": "0x26A30"
        },
        "base::InternalHeapHandleStorage::InternalHeapHandleStorage": {
            "offset": "0x26650"
        },
        "base::InternalHeapHandleStorage::SetHeapHandle": {
            "offset": "0x26C40"
        },
        "base::InternalHeapHandleStorage::handle": {
            "offset": "0xAAA0"
        },
        "base::InternalHeapHandleStorage::swap": {
            "offset": "0x26CF0"
        },
        "base::InternalHeapHandleStorage::~InternalHeapHandleStorage": {
            "offset": "0x266A0"
        },
        "base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::ClearHeapHandle": {
            "offset": "0x10A690"
        },
        "base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::FillHole<base::internal::DelayedTaskManager::DelayedTask>": {
            "offset": "0x1094E0"
        },
        "base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::MakeHole": {
            "offset": "0x10A780"
        },
        "base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::MoveHole": {
            "offset": "0x10A810"
        },
        "base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::MoveHoleDownAndFill<base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::WithLeafElement,base::internal::DelayedTaskManager::DelayedTask>": {
            "offset": "0x1095D0"
        },
        "base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::MoveHoleUpAndFill<base::internal::DelayedTaskManager::DelayedTask>": {
            "offset": "0x1098E0"
        },
        "base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::~IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask,base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >": {
            "offset": "0x109FD0"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::ClearHeapHandle": {
            "offset": "0x111770"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::FillHole<base::internal::PriorityQueue::TaskSourceAndSortKey>": {
            "offset": "0x110980"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::Less": {
            "offset": "0x111B90"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::MakeHole": {
            "offset": "0x111CE0"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::MoveHole": {
            "offset": "0x111D90"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::MoveHoleDownAndFill<base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::WithElement,base::internal::PriorityQueue::TaskSourceAndSortKey>": {
            "offset": "0x110AC0"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::MoveHoleDownAndFill<base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::WithLeafElement,base::internal::PriorityQueue::TaskSourceAndSortKey>": {
            "offset": "0x110D10"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::MoveHoleUpAndFill<base::internal::PriorityQueue::TaskSourceAndSortKey>": {
            "offset": "0x110F50"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::SetHeapHandle": {
            "offset": "0x1125A0"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::clear": {
            "offset": "0x112B50"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::erase": {
            "offset": "0x112C20"
        },
        "base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::~IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey,base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >": {
            "offset": "0x111560"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::ClearHeapHandle": {
            "offset": "0x101B20"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::FillHole<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>": {
            "offset": "0x100D60"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Less": {
            "offset": "0x101D10"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::MakeHole": {
            "offset": "0x101E20"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::MoveHole": {
            "offset": "0x101EB0"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::MoveHoleDownAndFill<base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::WithElement,base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>": {
            "offset": "0x100E50"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::MoveHoleDownAndFill<base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::WithLeafElement,base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>": {
            "offset": "0x101040"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::MoveHoleUpAndFill<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>": {
            "offset": "0x101220"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::SetHeapHandle": {
            "offset": "0x102340"
        },
        "base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::~IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp,base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >": {
            "offset": "0x101720"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::ClearHeapHandle": {
            "offset": "0x106430"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::FillHole<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>": {
            "offset": "0x1053D0"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Less": {
            "offset": "0x1071E0"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::MakeHole": {
            "offset": "0x1072E0"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::MoveHole": {
            "offset": "0x107370"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::MoveHoleDownAndFill<base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::WithElement,base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>": {
            "offset": "0x1054D0"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::MoveHoleDownAndFill<base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::WithLeafElement,base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>": {
            "offset": "0x1056B0"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::MoveHoleUpAndFill<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>": {
            "offset": "0x105880"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::erase": {
            "offset": "0x1082F0"
        },
        "base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::~IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder,base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual,base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >": {
            "offset": "0x105D60"
        },
        "base::IsCurrentProcessElevated": {
            "offset": "0xAE9E0"
        },
        "base::IsLink": {
            "offset": "0x12C0"
        },
        "base::IsMachineExternallyManaged": {
            "offset": "0x3B0F0"
        },
        "base::IsStringASCII": {
            "offset": "0xCFF60"
        },
        "base::IsStringUTF8": {
            "offset": "0xCFF70"
        },
        "base::IsUnicodeWhitespace": {
            "offset": "0xD00D0"
        },
        "base::IsValidCharacter": {
            "offset": "0x60EA0"
        },
        "base::IsValidGUID": {
            "offset": "0x58850"
        },
        "base::IsValidGUIDOutputString": {
            "offset": "0x58920"
        },
        "base::IsWprintfFormatPortable": {
            "offset": "0xD0100"
        },
        "base::JSONReader::ErrorCodeToString": {
            "offset": "0x61A90"
        },
        "base::JSONReader::GetErrorMessage": {
            "offset": "0x61F20"
        },
        "base::JSONReader::JSONReader": {
            "offset": "0x61840"
        },
        "base::JSONReader::Read": {
            "offset": "0x61F40"
        },
        "base::JSONReader::ReadAndReturnErrorDeprecated": {
            "offset": "0x61FB0"
        },
        "base::JSONReader::ReadAndReturnValueWithError": {
            "offset": "0x62140"
        },
        "base::JSONReader::ReadDeprecated": {
            "offset": "0x62350"
        },
        "base::JSONReader::ReadToValue": {
            "offset": "0x62480"
        },
        "base::JSONReader::ReadToValueDeprecated": {
            "offset": "0x624B0"
        },
        "base::JSONReader::ValueWithError::ValueWithError": {
            "offset": "0x61930"
        },
        "base::JSONReader::ValueWithError::~ValueWithError": {
            "offset": "0x61990"
        },
        "base::JSONReader::error_code": {
            "offset": "0x625C0"
        },
        "base::JSONReader::~JSONReader": {
            "offset": "0x61960"
        },
        "base::JSONWriter::BuildJSONString": {
            "offset": "0x62F80"
        },
        "base::JSONWriter::IndentLine": {
            "offset": "0x63D90"
        },
        "base::JSONWriter::JSONWriter": {
            "offset": "0x62E90"
        },
        "base::JSONWriter::Write": {
            "offset": "0x63DA0"
        },
        "base::JSONWriter::WriteWithOptions": {
            "offset": "0x63DB0"
        },
        "base::JoinString": {
            "offset": "0xD0240"
        },
        "base::JoinStringT<std::initializer_list<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xCDFC0"
        },
        "base::JoinStringT<std::initializer_list<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xCE1D0"
        },
        "base::KillProcesses": {
            "offset": "0xAB7F0"
        },
        "base::LapTimer::GetAccumulatedTime": {
            "offset": "0x143B60"
        },
        "base::LapTimer::HasTimeLimitExpired": {
            "offset": "0x143B90"
        },
        "base::LapTimer::HasTimedAllLaps": {
            "offset": "0x143BC0"
        },
        "base::LapTimer::IsWarmedUp": {
            "offset": "0x143BE0"
        },
        "base::LapTimer::LapTimer": {
            "offset": "0x143AC0"
        },
        "base::LapTimer::LapsPerSecond": {
            "offset": "0x143BF0"
        },
        "base::LapTimer::NextLap": {
            "offset": "0x143D30"
        },
        "base::LapTimer::NumLaps": {
            "offset": "0x61510"
        },
        "base::LapTimer::Reset": {
            "offset": "0x143E70"
        },
        "base::LapTimer::Start": {
            "offset": "0x143F30"
        },
        "base::LapTimer::TimePerLap": {
            "offset": "0x144080"
        },
        "base::LapTimer::~LapTimer": {
            "offset": "0x143B40"
        },
        "base::Latin1OrUTF16ToUTF16": {
            "offset": "0xC3180"
        },
        "base::LaunchElevatedProcess": {
            "offset": "0xACB20"
        },
        "base::LaunchOptions::LaunchOptions": {
            "offset": "0xAC000"
        },
        "base::LaunchOptions::~LaunchOptions": {
            "offset": "0xAC0E0"
        },
        "base::LaunchOptionsForTest": {
            "offset": "0xAC180"
        },
        "base::LaunchProcess": {
            "offset": "0xAE030"
        },
        "base::LazyInstance<base::Lock,base::internal::LeakyLazyInstanceTraits<base::Lock> >::Pointer": {
            "offset": "0xA1080"
        },
        "base::LazyInstance<base::SequenceLocalStorageSlot<mojo::SyncMessageResponseContext *,std::default_delete<mojo::SyncMessageResponseContext *> >,base::internal::LeakyLazyInstanceTraits<base::SequenceLocalStorageSlot<mojo::SyncMessageResponseContext *,std::default_delete<mojo::SyncMessageResponseContext *> > > >::Get": {
            "offset": "0x214580"
        },
        "base::LazyInstance<base::SequenceLocalStorageSlot<mojo::internal::MessageDispatchContext *,std::default_delete<mojo::internal::MessageDispatchContext *> >,base::internal::LeakyLazyInstanceTraits<base::SequenceLocalStorageSlot<mojo::internal::MessageDispatchContext *,std::default_delete<mojo::internal::MessageDispatchContext *> > > >::Get": {
            "offset": "0x214580"
        },
        "base::LazyInstance<base::ThreadLocalBoolean,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalBoolean> >::Pointer": {
            "offset": "0x135F70"
        },
        "base::LazyInstance<base::ThreadLocalPointer<base::SequencedTaskRunnerHandle>,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<base::SequencedTaskRunnerHandle> > >::Pointer": {
            "offset": "0x6E510"
        },
        "base::LazyInstance<base::ThreadLocalPointer<base::ThreadTaskRunnerHandle>,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<base::ThreadTaskRunnerHandle> > >::Pointer": {
            "offset": "0x6E510"
        },
        "base::LazyInstance<base::ThreadLocalPointer<base::internal::BlockingObserver>,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<base::internal::BlockingObserver> > >::Pointer": {
            "offset": "0x135DA0"
        },
        "base::LazyInstance<base::ThreadLocalPointer<base::internal::ObserverListThreadSafeBase::NotificationDataBase const >,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<base::internal::ObserverListThreadSafeBase::NotificationDataBase const > > >::Pointer": {
            "offset": "0x6E510"
        },
        "base::LazyInstance<base::ThreadLocalPointer<base::internal::SequenceLocalStorageMap>,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<base::internal::SequenceLocalStorageMap> > >::Pointer": {
            "offset": "0x136E80"
        },
        "base::LazyInstance<base::ThreadLocalPointer<base::internal::ThreadGroup const >,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<base::internal::ThreadGroup const > > >::Pointer": {
            "offset": "0x6E510"
        },
        "base::LazyInstance<base::ThreadLocalPointer<base::internal::UncheckedScopedBlockingCall>,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<base::internal::UncheckedScopedBlockingCall> > >::Pointer": {
            "offset": "0x135DA0"
        },
        "base::LazyInstance<base::ThreadLocalPointer<enum base::TaskPriority const >,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<enum base::TaskPriority const > > >::Pointer": {
            "offset": "0x6E510"
        },
        "base::LazyInstance<base::ThreadLocalPointer<mojo::core::RequestContext>,base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<mojo::core::RequestContext> > >::Pointer": {
            "offset": "0x6E510"
        },
        "base::LazyInstance<base::`anonymous namespace'::ThreadLocalBooleanWithStacks,base::internal::LeakyLazyInstanceTraits<base::`anonymous namespace'::ThreadLocalBooleanWithStacks> >::Get": {
            "offset": "0x13E5C0"
        },
        "base::LazyInstance<base::`anonymous namespace'::ThreadLocalBooleanWithStacks,base::internal::LeakyLazyInstanceTraits<base::`anonymous namespace'::ThreadLocalBooleanWithStacks> >::Pointer": {
            "offset": "0x13E5C0"
        },
        "base::LazyInstance<base::internal::`anonymous namespace'::SafeAcquisitionTracker,base::internal::LeakyLazyInstanceTraits<base::internal::`anonymous namespace'::SafeAcquisitionTracker> >::Get": {
            "offset": "0xDF5B0"
        },
        "base::LazyInstance<std::unique_ptr<base::WaitableEvent,std::default_delete<base::WaitableEvent> >,base::internal::LeakyLazyInstanceTraits<std::unique_ptr<base::WaitableEvent,std::default_delete<base::WaitableEvent> > > >::Get": {
            "offset": "0x1B3A60"
        },
        "base::LazyInstanceTraitsBase<base::`anonymous namespace'::ThreadLocalBooleanWithStacks>::New": {
            "offset": "0x13E710"
        },
        "base::LazyInstanceTraitsBase<base::internal::`anonymous namespace'::SafeAcquisitionTracker>::New": {
            "offset": "0xDF780"
        },
        "base::LazyInstanceTraitsBase<base::win::MessageWindow::WindowClass>::New": {
            "offset": "0x187740"
        },
        "base::LazyInstanceTraitsBase<mojo::core::ports::`anonymous namespace'::RandomNameGenerator>::New": {
            "offset": "0x1ED570"
        },
        "base::LinearHistogram::DeserializeInfoImpl": {
            "offset": "0x8A150"
        },
        "base::LinearHistogram::GetAsciiBucketRange": {
            "offset": "0x8B4E0"
        },
        "base::LinearHistogram::GetBucketSize": {
            "offset": "0x8B6B0"
        },
        "base::LinearHistogram::GetHistogramType": {
            "offset": "0x8BA40"
        },
        "base::LinearHistogram::InitializeBucketRanges": {
            "offset": "0x8C330"
        },
        "base::LinearHistogram::LinearHistogram": {
            "offset": "0x88190"
        },
        "base::LinearHistogram::PersistentCreate": {
            "offset": "0x8CCB0"
        },
        "base::LinearHistogram::PrintEmptyBucket": {
            "offset": "0x8CD70"
        },
        "base::LinearHistogram::~LinearHistogram": {
            "offset": "0x88570"
        },
        "base::ListValue::Append": {
            "offset": "0x174DD0"
        },
        "base::ListValue::AppendBoolean": {
            "offset": "0x175480"
        },
        "base::ListValue::AppendDouble": {
            "offset": "0x1754C0"
        },
        "base::ListValue::AppendIfNotPresent": {
            "offset": "0x175500"
        },
        "base::ListValue::AppendInteger": {
            "offset": "0x175620"
        },
        "base::ListValue::AppendString": {
            "offset": "0x1756A0"
        },
        "base::ListValue::AppendStrings": {
            "offset": "0x1757B0"
        },
        "base::ListValue::Clear": {
            "offset": "0x175A70"
        },
        "base::ListValue::CreateDeepCopy": {
            "offset": "0x176580"
        },
        "base::ListValue::DeepCopy": {
            "offset": "0x176810"
        },
        "base::ListValue::Erase": {
            "offset": "0x176C40"
        },
        "base::ListValue::Find": {
            "offset": "0x1774B0"
        },
        "base::ListValue::From": {
            "offset": "0x1782B0"
        },
        "base::ListValue::Get": {
            "offset": "0x178530"
        },
        "base::ListValue::GetBoolean": {
            "offset": "0x178B30"
        },
        "base::ListValue::GetDictionary": {
            "offset": "0x178EA0"
        },
        "base::ListValue::GetDouble": {
            "offset": "0x179150"
        },
        "base::ListValue::GetInteger": {
            "offset": "0x179500"
        },
        "base::ListValue::GetList": {
            "offset": "0x179870"
        },
        "base::ListValue::GetSize": {
            "offset": "0xAA60"
        },
        "base::ListValue::GetString": {
            "offset": "0x179D50"
        },
        "base::ListValue::Insert": {
            "offset": "0x17A600"
        },
        "base::ListValue::ListValue": {
            "offset": "0x3190"
        },
        "base::ListValue::Remove": {
            "offset": "0x17B340"
        },
        "base::ListValue::Reserve": {
            "offset": "0x17BBB0"
        },
        "base::ListValue::Set": {
            "offset": "0x17BEC0"
        },
        "base::ListValue::Swap": {
            "offset": "0x17DF80"
        },
        "base::ListValue::begin": {
            "offset": "0xD3D0"
        },
        "base::ListValue::empty": {
            "offset": "0xD550"
        },
        "base::ListValue::end": {
            "offset": "0xD540"
        },
        "base::ListValue::~ListValue": {
            "offset": "0x3A00"
        },
        "base::LoadNativeLibrary": {
            "offset": "0xA4410"
        },
        "base::LoadNativeLibraryWithOptions": {
            "offset": "0xA4AA0"
        },
        "base::LoadSystemLibrary": {
            "offset": "0xA4C50"
        },
        "base::LocalPersistentMemoryAllocator::AllocateLocalMemory": {
            "offset": "0x97730"
        },
        "base::LocalPersistentMemoryAllocator::DeallocateLocalMemory": {
            "offset": "0x98150"
        },
        "base::LocalPersistentMemoryAllocator::LocalPersistentMemoryAllocator": {
            "offset": "0x96780"
        },
        "base::LocalPersistentMemoryAllocator::~LocalPersistentMemoryAllocator": {
            "offset": "0x97000"
        },
        "base::Location::CreateFromHere": {
            "offset": "0x65670"
        },
        "base::Location::Current": {
            "offset": "0x65690"
        },
        "base::Location::Location": {
            "offset": "0x655B0"
        },
        "base::Location::ToString": {
            "offset": "0x656C0"
        },
        "base::Location::file_name": {
            "offset": "0xAAA0"
        },
        "base::Location::function_name": {
            "offset": "0xAB80"
        },
        "base::Location::has_source_info": {
            "offset": "0xD640"
        },
        "base::Location::line_number": {
            "offset": "0xD600"
        },
        "base::Location::program_counter": {
            "offset": "0xD8F0"
        },
        "base::Lock::Acquire": {
            "offset": "0x5130"
        },
        "base::Lock::AssertAcquired": {
            "offset": "0xD82E0"
        },
        "base::Lock::CheckHeldAndUnmark": {
            "offset": "0xD8370"
        },
        "base::Lock::CheckUnheldAndMark": {
            "offset": "0xD8400"
        },
        "base::Lock::HandlesMultipleThreadPriorities": {
            "offset": "0xAAC0"
        },
        "base::Lock::Lock": {
            "offset": "0xD8240"
        },
        "base::Lock::Release": {
            "offset": "0xB760"
        },
        "base::Lock::Try": {
            "offset": "0xC120"
        },
        "base::Lock::~Lock": {
            "offset": "0xD8270"
        },
        "base::LockFreeAddressHashSet::Contains": {
            "offset": "0xBD170"
        },
        "base::LockFreeAddressHashSet::Copy": {
            "offset": "0xBD230"
        },
        "base::LockFreeAddressHashSet::FindNode": {
            "offset": "0xBD440"
        },
        "base::LockFreeAddressHashSet::Hash": {
            "offset": "0xBD500"
        },
        "base::LockFreeAddressHashSet::Insert": {
            "offset": "0xBD520"
        },
        "base::LockFreeAddressHashSet::LockFreeAddressHashSet": {
            "offset": "0xBCD90"
        },
        "base::LockFreeAddressHashSet::Remove": {
            "offset": "0xBD700"
        },
        "base::LockFreeAddressHashSet::buckets_count": {
            "offset": "0xBD820"
        },
        "base::LockFreeAddressHashSet::size": {
            "offset": "0xBD8A0"
        },
        "base::LockFreeAddressHashSet::~LockFreeAddressHashSet": {
            "offset": "0xBD0B0"
        },
        "base::LogInvalidEnumValue": {
            "offset": "0x87350"
        },
        "base::LowerCaseEqualsASCII": {
            "offset": "0xD0420"
        },
        "base::MD5DigestToBase16": {
            "offset": "0x58DE0"
        },
        "base::MD5Final": {
            "offset": "0x59040"
        },
        "base::MD5Init": {
            "offset": "0x59350"
        },
        "base::MD5String": {
            "offset": "0x59380"
        },
        "base::MD5Sum": {
            "offset": "0x59430"
        },
        "base::MD5Update": {
            "offset": "0x59CB0"
        },
        "base::MadvFreeDiscardableMemoryPosix::GetPageCount": {
            "offset": "0xAAB0"
        },
        "base::MakeAbsoluteFilePath": {
            "offset": "0x51C50"
        },
        "base::MakeLongFilePath": {
            "offset": "0x51D70"
        },
        "base::MakeRefCounted<base::internal::PooledSingleThreadTaskRunnerManager::PooledSingleThreadTaskRunner,base::internal::PooledSingleThreadTaskRunnerManager *,base::TaskTraits const &,base::internal::WorkerThread * &,enum base::SingleThreadTaskRunnerThreadMode &>": {
            "offset": "0x10D750"
        },
        "base::MappedReadOnlyRegion::IsValid": {
            "offset": "0x82770"
        },
        "base::MappedReadOnlyRegion::~MappedReadOnlyRegion": {
            "offset": "0x7CCC0"
        },
        "base::MatchPattern": {
            "offset": "0xC4110"
        },
        "base::MemoryMappedFile::CalculateVMAlignedBoundaries": {
            "offset": "0x56FF0"
        },
        "base::MemoryMappedFile::CloseHandles": {
            "offset": "0x57910"
        },
        "base::MemoryMappedFile::Initialize": {
            "offset": "0x2A9A0"
        },
        "base::MemoryMappedFile::IsValid": {
            "offset": "0x578D0"
        },
        "base::MemoryMappedFile::MapFileRegionToMemory": {
            "offset": "0x579A0"
        },
        "base::MemoryMappedFile::MapImageToMemory": {
            "offset": "0x57E30"
        },
        "base::MemoryMappedFile::MemoryMappedFile": {
            "offset": "0x578E0"
        },
        "base::MemoryMappedFile::data": {
            "offset": "0xD670"
        },
        "base::MemoryMappedFile::length": {
            "offset": "0xD470"
        },
        "base::MemoryMappedFile::~MemoryMappedFile": {
            "offset": "0x56EE0"
        },
        "base::MemoryPressureListener::AreNotificationsSuppressed": {
            "offset": "0x6D8E0"
        },
        "base::MemoryPressureListener::DoNotifyMemoryPressure": {
            "offset": "0x6D9F0"
        },
        "base::MemoryPressureListener::MemoryPressureListener": {
            "offset": "0x6CF20"
        },
        "base::MemoryPressureListener::Notify": {
            "offset": "0x6DF60"
        },
        "base::MemoryPressureListener::NotifyMemoryPressure": {
            "offset": "0x6E1C0"
        },
        "base::MemoryPressureListener::SetNotificationsSuppressed": {
            "offset": "0x6EAA0"
        },
        "base::MemoryPressureListener::SimulatePressureNotification": {
            "offset": "0x6EAB0"
        },
        "base::MemoryPressureListener::SyncNotify": {
            "offset": "0x6EAC0"
        },
        "base::MemoryPressureListener::~MemoryPressureListener": {
            "offset": "0x6D3A0"
        },
        "base::MemoryPressureMonitor::Get": {
            "offset": "0x6F2F0"
        },
        "base::MemoryPressureMonitor::MemoryPressureMonitor": {
            "offset": "0x6F130"
        },
        "base::MemoryPressureMonitor::RecordMemoryPressure": {
            "offset": "0x6F300"
        },
        "base::MemoryPressureMonitor::~MemoryPressureMonitor": {
            "offset": "0x6F1D0"
        },
        "base::MessageLoop::AddTaskObserver": {
            "offset": "0x74F80"
        },
        "base::MessageLoop::BindToCurrentThread": {
            "offset": "0x75030"
        },
        "base::MessageLoop::CreateDefaultTaskQueue": {
            "offset": "0x752A0"
        },
        "base::MessageLoop::CreateMessagePump": {
            "offset": "0x75350"
        },
        "base::MessageLoop::CreateUnbound": {
            "offset": "0x75470"
        },
        "base::MessageLoop::GetSequenceManagerImpl": {
            "offset": "0xAAB0"
        },
        "base::MessageLoop::IsBoundToCurrentThread": {
            "offset": "0x755A0"
        },
        "base::MessageLoop::IsIdleForTesting": {
            "offset": "0x755B0"
        },
        "base::MessageLoop::IsType": {
            "offset": "0x755C0"
        },
        "base::MessageLoop::MessageLoop": {
            "offset": "0x74860"
        },
        "base::MessageLoop::RemoveTaskObserver": {
            "offset": "0x756A0"
        },
        "base::MessageLoop::SetTaskRunner": {
            "offset": "0x75750"
        },
        "base::MessageLoop::SetTimerSlack": {
            "offset": "0x75840"
        },
        "base::MessageLoop::task_runner": {
            "offset": "0x75F20"
        },
        "base::MessageLoop::type": {
            "offset": "0xD680"
        },
        "base::MessageLoop::~MessageLoop": {
            "offset": "0x74B20"
        },
        "base::MessageLoopCurrent::AddDestructionObserver": {
            "offset": "0x76100"
        },
        "base::MessageLoopCurrent::AddTaskObserver": {
            "offset": "0x761D0"
        },
        "base::MessageLoopCurrent::DestructionObserver::DestructionObserver": {
            "offset": "0x746D0"
        },
        "base::MessageLoopCurrent::DestructionObserver::~DestructionObserver": {
            "offset": "0x12B0"
        },
        "base::MessageLoopCurrent::Get": {
            "offset": "0x76270"
        },
        "base::MessageLoopCurrent::GetCurrentSequenceManagerImpl": {
            "offset": "0x76470"
        },
        "base::MessageLoopCurrent::GetNull": {
            "offset": "0x30F0"
        },
        "base::MessageLoopCurrent::IsBoundToCurrentThread": {
            "offset": "0x76490"
        },
        "base::MessageLoopCurrent::IsIdleForTesting": {
            "offset": "0x764B0"
        },
        "base::MessageLoopCurrent::IsSet": {
            "offset": "0x76540"
        },
        "base::MessageLoopCurrent::MessageLoopCurrent": {
            "offset": "0x2FB0"
        },
        "base::MessageLoopCurrent::NestableTasksAllowed": {
            "offset": "0x765C0"
        },
        "base::MessageLoopCurrent::RemoveDestructionObserver": {
            "offset": "0x76730"
        },
        "base::MessageLoopCurrent::RemoveTaskObserver": {
            "offset": "0x76800"
        },
        "base::MessageLoopCurrent::ScopedNestableTaskAllower::ScopedNestableTaskAllower": {
            "offset": "0x760B0"
        },
        "base::MessageLoopCurrent::ScopedNestableTaskAllower::~ScopedNestableTaskAllower": {
            "offset": "0x760E0"
        },
        "base::MessageLoopCurrent::SetAddQueueTimeToTasks": {
            "offset": "0x768A0"
        },
        "base::MessageLoopCurrent::SetNestableTasksAllowed": {
            "offset": "0x76940"
        },
        "base::MessageLoopCurrent::SetTaskRunner": {
            "offset": "0x769E0"
        },
        "base::MessageLoopCurrentForIO::Get": {
            "offset": "0x76290"
        },
        "base::MessageLoopCurrentForIO::GetMessagePumpForIO": {
            "offset": "0x76480"
        },
        "base::MessageLoopCurrentForIO::IsSet": {
            "offset": "0x76560"
        },
        "base::MessageLoopCurrentForIO::MessageLoopCurrentForIO": {
            "offset": "0x2FB0"
        },
        "base::MessageLoopCurrentForIO::RegisterIOHandler": {
            "offset": "0x765D0"
        },
        "base::MessageLoopCurrentForIO::RegisterJobObject": {
            "offset": "0x76680"
        },
        "base::MessageLoopCurrentForIO::WaitForIOCompletion": {
            "offset": "0x76AC0"
        },
        "base::MessageLoopCurrentForUI::AddMessagePumpObserver": {
            "offset": "0x761A0"
        },
        "base::MessageLoopCurrentForUI::Get": {
            "offset": "0x76380"
        },
        "base::MessageLoopCurrentForUI::GetMessagePumpForUI": {
            "offset": "0x76480"
        },
        "base::MessageLoopCurrentForUI::IsSet": {
            "offset": "0x76590"
        },
        "base::MessageLoopCurrentForUI::MessageLoopCurrentForUI": {
            "offset": "0x2FB0"
        },
        "base::MessageLoopCurrentForUI::RemoveMessagePumpObserver": {
            "offset": "0x767D0"
        },
        "base::MessagePump::Create": {
            "offset": "0x76B80"
        },
        "base::MessagePump::Delegate::Delegate": {
            "offset": "0x746C0"
        },
        "base::MessagePump::Delegate::NextWorkInfo::remaining_delay": {
            "offset": "0x77160"
        },
        "base::MessagePump::Delegate::~Delegate": {
            "offset": "0x12B0"
        },
        "base::MessagePump::MessagePump": {
            "offset": "0x74A50"
        },
        "base::MessagePump::SetTimerSlack": {
            "offset": "0x12B0"
        },
        "base::MessagePump::~MessagePump": {
            "offset": "0x76B70"
        },
        "base::MessagePumpDefault::MessagePumpDefault": {
            "offset": "0x76F20"
        },
        "base::MessagePumpDefault::Quit": {
            "offset": "0x56CB0"
        },
        "base::MessagePumpDefault::Run": {
            "offset": "0x77060"
        },
        "base::MessagePumpDefault::ScheduleDelayedWork": {
            "offset": "0x12B0"
        },
        "base::MessagePumpDefault::ScheduleWork": {
            "offset": "0x77150"
        },
        "base::MessagePumpDefault::~MessagePumpDefault": {
            "offset": "0x76F80"
        },
        "base::MessagePumpForIO::DoRunLoop": {
            "offset": "0x77E60"
        },
        "base::MessagePumpForIO::GetIOItem": {
            "offset": "0x78280"
        },
        "base::MessagePumpForIO::IOContext::IOContext": {
            "offset": "0x77560"
        },
        "base::MessagePumpForIO::IOHandler::~IOHandler": {
            "offset": "0x1BFCC0"
        },
        "base::MessagePumpForIO::MatchCompletedIOItem": {
            "offset": "0x78750"
        },
        "base::MessagePumpForIO::MessagePumpForIO": {
            "offset": "0x77570"
        },
        "base::MessagePumpForIO::ProcessInternalIOItem": {
            "offset": "0x78970"
        },
        "base::MessagePumpForIO::RegisterIOHandler": {
            "offset": "0x794D0"
        },
        "base::MessagePumpForIO::RegisterJobObject": {
            "offset": "0x795A0"
        },
        "base::MessagePumpForIO::ScheduleDelayedWork": {
            "offset": "0x798F0"
        },
        "base::MessagePumpForIO::ScheduleWork": {
            "offset": "0x79C90"
        },
        "base::MessagePumpForIO::WaitForIOCompletion": {
            "offset": "0x79E20"
        },
        "base::MessagePumpForIO::WaitForWork": {
            "offset": "0x7A090"
        },
        "base::MessagePumpForIO::~MessagePumpForIO": {
            "offset": "0x77940"
        },
        "base::MessagePumpForUI::AddObserver": {
            "offset": "0x77CB0"
        },
        "base::MessagePumpForUI::DoRunLoop": {
            "offset": "0x77F90"
        },
        "base::MessagePumpForUI::EnableWmQuit": {
            "offset": "0x781F0"
        },
        "base::MessagePumpForUI::HandleTimerMessage": {
            "offset": "0x78480"
        },
        "base::MessagePumpForUI::HandleWorkMessage": {
            "offset": "0x78570"
        },
        "base::MessagePumpForUI::KillNativeTimer": {
            "offset": "0x78660"
        },
        "base::MessagePumpForUI::MessageCallback": {
            "offset": "0x788A0"
        },
        "base::MessagePumpForUI::MessagePumpForUI": {
            "offset": "0x77700"
        },
        "base::MessagePumpForUI::Observer::Observer": {
            "offset": "0x74A70"
        },
        "base::MessagePumpForUI::ProcessMessageHelper": {
            "offset": "0x78A80"
        },
        "base::MessagePumpForUI::ProcessNextWindowsMessage": {
            "offset": "0x79130"
        },
        "base::MessagePumpForUI::ProcessPumpReplacementMessage": {
            "offset": "0x79210"
        },
        "base::MessagePumpForUI::RemoveObserver": {
            "offset": "0x79670"
        },
        "base::MessagePumpForUI::ScheduleDelayedWork": {
            "offset": "0x79970"
        },
        "base::MessagePumpForUI::ScheduleNativeTimer": {
            "offset": "0x79A40"
        },
        "base::MessagePumpForUI::ScheduleWork": {
            "offset": "0x79D50"
        },
        "base::MessagePumpForUI::WaitForWork": {
            "offset": "0x7A1D0"
        },
        "base::MessagePumpForUI::~MessagePumpForUI": {
            "offset": "0x77A10"
        },
        "base::MessagePumpWin::MessagePumpWin": {
            "offset": "0x77890"
        },
        "base::MessagePumpWin::Quit": {
            "offset": "0x793F0"
        },
        "base::MessagePumpWin::Run": {
            "offset": "0x79820"
        },
        "base::MessagePumpWin::~MessagePumpWin": {
            "offset": "0x77A60"
        },
        "base::MetadataRecorder::CreateMetadataProvider": {
            "offset": "0xB2FF0"
        },
        "base::MetadataRecorder::GetItems": {
            "offset": "0xB30E0"
        },
        "base::MetadataRecorder::ItemInternal::ItemInternal": {
            "offset": "0xB2CF0"
        },
        "base::MetadataRecorder::ItemInternal::~ItemInternal": {
            "offset": "0x12B0"
        },
        "base::MetadataRecorder::MetadataRecorder": {
            "offset": "0xB2D10"
        },
        "base::MetadataRecorder::ReclaimInactiveSlots": {
            "offset": "0xB3240"
        },
        "base::MetadataRecorder::Remove": {
            "offset": "0xB32C0"
        },
        "base::MetadataRecorder::ScopedGetItems::GetItems": {
            "offset": "0xB3180"
        },
        "base::MetadataRecorder::Set": {
            "offset": "0xB33B0"
        },
        "base::MetadataRecorder::TryReclaimInactiveSlots": {
            "offset": "0xB3600"
        },
        "base::MetadataRecorder::~MetadataRecorder": {
            "offset": "0xB2DE0"
        },
        "base::ModuleCache::AddNonNativeModule": {
            "offset": "0xBDC30"
        },
        "base::ModuleCache::CreateModuleForAddress": {
            "offset": "0xBE100"
        },
        "base::ModuleCache::FindModuleForAddress": {
            "offset": "0xBDD10"
        },
        "base::ModuleCache::GetModuleForAddress": {
            "offset": "0xBDDB0"
        },
        "base::ModuleCache::GetModules": {
            "offset": "0xBDE60"
        },
        "base::ModuleCache::InjectModuleForTesting": {
            "offset": "0xBDF20"
        },
        "base::ModuleCache::Module::Module": {
            "offset": "0xB2CE0"
        },
        "base::ModuleCache::Module::~Module": {
            "offset": "0x12B0"
        },
        "base::ModuleCache::ModuleCache": {
            "offset": "0xBDB50"
        },
        "base::ModuleCache::~ModuleCache": {
            "offset": "0xBDC10"
        },
        "base::Move": {
            "offset": "0x4C820"
        },
        "base::NamedProcessIterator::IncludeEntry": {
            "offset": "0xAF110"
        },
        "base::NamedProcessIterator::NamedProcessIterator": {
            "offset": "0xAEAB0"
        },
        "base::NamedProcessIterator::~NamedProcessIterator": {
            "offset": "0xAEC20"
        },
        "base::NativeLibraryLoadError::NativeLibraryLoadError": {
            "offset": "0x1BD0"
        },
        "base::NativeLibraryLoadError::ToString": {
            "offset": "0xA5160"
        },
        "base::NativeLibraryOptions::NativeLibraryOptions": {
            "offset": "0x35A0"
        },
        "base::NativeLibraryTraits::Free": {
            "offset": "0xC2390"
        },
        "base::NativeLibraryTraits::InvalidValue": {
            "offset": "0x12A0"
        },
        "base::NativeUnwinderWin::CanUnwindFrom": {
            "offset": "0xB3950"
        },
        "base::NativeUnwinderWin::TryUnwind": {
            "offset": "0xB3980"
        },
        "base::NormalizeFilePath": {
            "offset": "0x52070"
        },
        "base::NullableString16::NullableString16": {
            "offset": "0xC3810"
        },
        "base::NullableString16::as_optional_string16": {
            "offset": "0x3FB0"
        },
        "base::NullableString16::is_null": {
            "offset": "0xD760"
        },
        "base::NullableString16::string": {
            "offset": "0xC38E0"
        },
        "base::NullableString16::~NullableString16": {
            "offset": "0xC3820"
        },
        "base::NumberToString": {
            "offset": "0xC8450"
        },
        "base::NumberToString16": {
            "offset": "0xC7E60"
        },
        "base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>::Compact": {
            "offset": "0x6D8F0"
        },
        "base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>::Iter::EnsureValidIndex": {
            "offset": "0x6DA70"
        },
        "base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>::Iter::GetCurrent": {
            "offset": "0x6DB40"
        },
        "base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>::Iter::Iter": {
            "offset": "0x6CCF0"
        },
        "base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>::Iter::~Iter": {
            "offset": "0x6D2C0"
        },
        "base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>::begin": {
            "offset": "0x6EE30"
        },
        "base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>::~ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter>": {
            "offset": "0x6CF70"
        },
        "base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter>::Compact": {
            "offset": "0x6D8F0"
        },
        "base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::EnsureValidIndex": {
            "offset": "0x6DA70"
        },
        "base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::Iter": {
            "offset": "0x6CCF0"
        },
        "base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::~Iter": {
            "offset": "0x6D2C0"
        },
        "base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter>::begin": {
            "offset": "0x6EE30"
        },
        "base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter>::~ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter>": {
            "offset": "0x6CF70"
        },
        "base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter>::Compact": {
            "offset": "0x6D8F0"
        },
        "base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter>::Iter::EnsureValidIndex": {
            "offset": "0x6DA70"
        },
        "base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter>::Iter::Iter": {
            "offset": "0x6CCF0"
        },
        "base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter>::Iter::~Iter": {
            "offset": "0x6D2C0"
        },
        "base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter>::begin": {
            "offset": "0x6EE30"
        },
        "base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter>::~ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter>": {
            "offset": "0x6CF70"
        },
        "base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>::Compact": {
            "offset": "0x6D8F0"
        },
        "base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::EnsureValidIndex": {
            "offset": "0x6DA70"
        },
        "base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::GetCurrent": {
            "offset": "0x6DB40"
        },
        "base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::Iter": {
            "offset": "0x6CCF0"
        },
        "base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::~Iter": {
            "offset": "0x6D2C0"
        },
        "base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>::begin": {
            "offset": "0x6EE30"
        },
        "base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>::~ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter>": {
            "offset": "0x6CF70"
        },
        "base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter>::Compact": {
            "offset": "0x6D8F0"
        },
        "base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::EnsureValidIndex": {
            "offset": "0x6DA70"
        },
        "base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::Iter": {
            "offset": "0x6CCF0"
        },
        "base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::~Iter": {
            "offset": "0x6D2C0"
        },
        "base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter>::begin": {
            "offset": "0x6EE30"
        },
        "base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter>::~ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter>": {
            "offset": "0x6CF70"
        },
        "base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter>::Compact": {
            "offset": "0x6D8F0"
        },
        "base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::EnsureValidIndex": {
            "offset": "0x6DA70"
        },
        "base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::Iter": {
            "offset": "0x6CCF0"
        },
        "base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter>::Iter::~Iter": {
            "offset": "0x6D2C0"
        },
        "base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter>::begin": {
            "offset": "0x6EE30"
        },
        "base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter>::~ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter>": {
            "offset": "0x6CF70"
        },
        "base::ObserverListThreadSafe<base::FieldTrialList::Observer>::AddObserver": {
            "offset": "0x6D430"
        },
        "base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData::~NotificationData": {
            "offset": "0x6D250"
        },
        "base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotifySynchronously<void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x7AF50"
        },
        "base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotifyWrapper": {
            "offset": "0x6E2F0"
        },
        "base::ObserverListThreadSafe<base::MemoryPressureListener>::AddObserver": {
            "offset": "0x6D430"
        },
        "base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData::~NotificationData": {
            "offset": "0x6D250"
        },
        "base::ObserverListThreadSafe<base::MemoryPressureListener>::Notify<void (__cdecl base::MemoryPressureListener::*)(enum base::MemoryPressureListener::MemoryPressureLevel),enum base::MemoryPressureListener::MemoryPressureLevel &>": {
            "offset": "0x6C4D0"
        },
        "base::ObserverListThreadSafe<base::MemoryPressureListener>::NotifyWrapper": {
            "offset": "0x6E2F0"
        },
        "base::ObserverListThreadSafe<base::PowerObserver>::AddObserver": {
            "offset": "0x6D430"
        },
        "base::ObserverListThreadSafe<base::PowerObserver>::NotificationData::~NotificationData": {
            "offset": "0x6D250"
        },
        "base::ObserverListThreadSafe<base::PowerObserver>::Notify<void (__cdecl base::PowerObserver::*)(bool),bool &>": {
            "offset": "0xA92D0"
        },
        "base::ObserverListThreadSafe<base::PowerObserver>::Notify<void (__cdecl base::PowerObserver::*)(void)>": {
            "offset": "0xA9010"
        },
        "base::ObserverListThreadSafe<base::PowerObserver>::NotifyWrapper": {
            "offset": "0x6E2F0"
        },
        "base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::AddObserver": {
            "offset": "0x6D430"
        },
        "base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData::~NotificationData": {
            "offset": "0x6D250"
        },
        "base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::Notify<void (__cdecl base::SystemMonitor::DevicesChangedObserver::*)(enum base::SystemMonitor::DeviceType),enum base::SystemMonitor::DeviceType &>": {
            "offset": "0x6C4D0"
        },
        "base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotifyWrapper": {
            "offset": "0x6E2F0"
        },
        "base::OffsetAdjuster::AdjustOffset": {
            "offset": "0xD35E0"
        },
        "base::OffsetAdjuster::AdjustOffsets": {
            "offset": "0xD36C0"
        },
        "base::OffsetAdjuster::Adjustment::Adjustment": {
            "offset": "0xD3550"
        },
        "base::OffsetAdjuster::MergeSequentialAdjustments": {
            "offset": "0xD3820"
        },
        "base::OffsetAdjuster::UnadjustOffset": {
            "offset": "0xD44D0"
        },
        "base::OffsetAdjuster::UnadjustOffsets": {
            "offset": "0xD4540"
        },
        "base::OnTaskRunnerDeleter::OnTaskRunnerDeleter": {
            "offset": "0xC2EF0"
        },
        "base::OnTaskRunnerDeleter::~OnTaskRunnerDeleter": {
            "offset": "0xC2F20"
        },
        "base::OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>::~OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<std::unique_ptr<base::MessagePump,std::default_delete<base::MessagePump> > __cdecl(void)>::~OnceCallback<std::unique_ptr<base::MessagePump,std::default_delete<base::MessagePump> > __cdecl(void)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>::~OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(base::WaitableEvent *)>::~OnceCallback<void __cdecl(base::WaitableEvent *)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(base::internal::Task)>::~OnceCallback<void __cdecl(base::internal::Task)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(bool)>::~OnceCallback<void __cdecl(bool)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(bool,unsigned __int64,std::unique_ptr<base::trace_event::ProcessMemoryDump,std::default_delete<base::trace_event::ProcessMemoryDump> >)>::~OnceCallback<void __cdecl(bool,unsigned __int64,std::unique_ptr<base::trace_event::ProcessMemoryDump,std::default_delete<base::trace_event::ProcessMemoryDump> >)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(enum base::File::Error)>::Run": {
            "offset": "0x4A7F0"
        },
        "base::OnceCallback<void __cdecl(enum base::File::Error)>::~OnceCallback<void __cdecl(enum base::File::Error)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)>::~OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)>::~OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(enum base::File::Error,char const *,int)>::~OnceCallback<void __cdecl(enum base::File::Error,char const *,int)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(enum base::File::Error,int)>::~OnceCallback<void __cdecl(enum base::File::Error,int)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent)>::Run": {
            "offset": "0x4A7F0"
        },
        "base::OnceCallback<void __cdecl(enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent)>::~OnceCallback<void __cdecl(enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(mojo::ConnectionGroup::Ref)>::~OnceCallback<void __cdecl(mojo::ConnectionGroup::Ref)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int)>::~OnceCallback<void __cdecl(mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>)>::~OnceCallback<void __cdecl(mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::Run": {
            "offset": "0x2046F0"
        },
        "base::OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,base::TimeTicks const &,base::TimeTicks const &)>::~OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,base::TimeTicks const &,base::TimeTicks const &)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(unsigned int)>::~OnceCallback<void __cdecl(unsigned int)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::Run": {
            "offset": "0x2109F0"
        },
        "base::OnceCallback<void __cdecl(unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~OnceCallback<void __cdecl(unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x3850"
        },
        "base::OnceCallback<void __cdecl(void)>::Run": {
            "offset": "0x1CDA0"
        },
        "base::OnceCallback<void __cdecl(void)>::~OnceCallback<void __cdecl(void)>": {
            "offset": "0x3850"
        },
        "base::OneShotEvent::OneShotEvent": {
            "offset": "0xA5910"
        },
        "base::OneShotEvent::Post": {
            "offset": "0xA5AA0"
        },
        "base::OneShotEvent::PostDelayed": {
            "offset": "0xA5AF0"
        },
        "base::OneShotEvent::PostImpl": {
            "offset": "0xA5B70"
        },
        "base::OneShotEvent::Signal": {
            "offset": "0xA5CD0"
        },
        "base::OneShotEvent::is_signaled": {
            "offset": "0xA6000"
        },
        "base::OneShotEvent::~OneShotEvent": {
            "offset": "0xA5A00"
        },
        "base::OneShotTimer::FireNow": {
            "offset": "0x144BF0"
        },
        "base::OneShotTimer::OnStop": {
            "offset": "0x144F10"
        },
        "base::OneShotTimer::OneShotTimer": {
            "offset": "0x144310"
        },
        "base::OneShotTimer::RunUserTask": {
            "offset": "0x1453D0"
        },
        "base::OneShotTimer::Start": {
            "offset": "0x145870"
        },
        "base::OneShotTimer::~OneShotTimer": {
            "offset": "0x144740"
        },
        "base::OpenFile": {
            "offset": "0x521A0"
        },
        "base::Optional<base::FilePath>::~Optional<base::FilePath>": {
            "offset": "0x1FBF20"
        },
        "base::Optional<base::Lock>::~Optional<base::Lock>": {
            "offset": "0x205B30"
        },
        "base::Optional<base::OneShotTimer>::~Optional<base::OneShotTimer>": {
            "offset": "0x1162F0"
        },
        "base::Optional<base::ScopedBlockingCall>::~Optional<base::ScopedBlockingCall>": {
            "offset": "0x96F90"
        },
        "base::Optional<base::ScopedNativeLibrary>::~Optional<base::ScopedNativeLibrary>": {
            "offset": "0x1162F0"
        },
        "base::Optional<base::SequencedTaskRunnerHandle>::~Optional<base::SequencedTaskRunnerHandle>": {
            "offset": "0x116320"
        },
        "base::Optional<base::SimpleTaskExecutor>::~Optional<base::SimpleTaskExecutor>": {
            "offset": "0x1162F0"
        },
        "base::Optional<base::ThreadTaskRunnerHandle>::~Optional<base::ThreadTaskRunnerHandle>": {
            "offset": "0x116330"
        },
        "base::Optional<base::TimeTicks>::value": {
            "offset": "0xFACC0"
        },
        "base::Optional<base::Value>::~Optional<base::Value>": {
            "offset": "0x5D8C0"
        },
        "base::Optional<base::debug::ScopedEventWaitActivity>::~Optional<base::debug::ScopedEventWaitActivity>": {
            "offset": "0xD8E80"
        },
        "base::Optional<base::internal::ScopedBlockingCallWithBaseSyncPrimitives>::~Optional<base::internal::ScopedBlockingCallWithBaseSyncPrimitives>": {
            "offset": "0xD8050"
        },
        "base::Optional<base::internal::SequenceLocalStorageMap>::~Optional<base::internal::SequenceLocalStorageMap>": {
            "offset": "0x116310"
        },
        "base::Optional<base::internal::Task>::~Optional<base::internal::Task>": {
            "offset": "0x1162E0"
        },
        "base::Optional<base::internal::TransactionWithRegisteredTaskSource>::~Optional<base::internal::TransactionWithRegisteredTaskSource>": {
            "offset": "0x11B350"
        },
        "base::Optional<base::internal::`anonymous namespace'::EphemeralTaskExecutor>::~Optional<base::internal::`anonymous namespace'::EphemeralTaskExecutor>": {
            "offset": "0x1162F0"
        },
        "base::Optional<mojo::DisconnectReason>::~Optional<mojo::DisconnectReason>": {
            "offset": "0x1AA040"
        },
        "base::Optional<mojo::HandleSignalTracker>::~Optional<mojo::HandleSignalTracker>": {
            "offset": "0x205B20"
        },
        "base::Optional<mojo::PlatformHandle>::~Optional<mojo::PlatformHandle>": {
            "offset": "0x1D8EE0"
        },
        "base::Optional<mojo::SimpleWatcher>::~Optional<mojo::SimpleWatcher>": {
            "offset": "0x218D00"
        },
        "base::Optional<mojo::core::ports::PortLocker>::~Optional<mojo::core::ports::PortLocker>": {
            "offset": "0x1E8F40"
        },
        "base::Optional<mojo_base::internal::BigBufferSharedMemoryRegion>::~Optional<mojo_base::internal::BigBufferSharedMemoryRegion>": {
            "offset": "0x1FD2E0"
        },
        "base::Optional<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~Optional<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xC3820"
        },
        "base::Optional<unsigned __int64>::value": {
            "offset": "0xFACC0"
        },
        "base::PartitionAllocBaseInit": {
            "offset": "0x104C0"
        },
        "base::PartitionAllocGlobalInit": {
            "offset": "0x105B0"
        },
        "base::PartitionAllocHooks::AllocationObserverHookIfEnabled": {
            "offset": "0xF700"
        },
        "base::PartitionAllocHooks::AllocationOverrideHookIfEnabled": {
            "offset": "0xF710"
        },
        "base::PartitionAllocHooks::AreHooksEnabled": {
            "offset": "0x9A00"
        },
        "base::PartitionAllocHooks::FreeObserverHookIfEnabled": {
            "offset": "0xFCC0"
        },
        "base::PartitionAllocHooks::FreeOverrideHookIfEnabled": {
            "offset": "0xFCD0"
        },
        "base::PartitionAllocHooks::ReallocObserverHookIfEnabled": {
            "offset": "0x16090"
        },
        "base::PartitionAllocHooks::ReallocOverrideHookIfEnabled": {
            "offset": "0x160F0"
        },
        "base::PartitionAllocHooks::SetObserverHooks": {
            "offset": "0x16100"
        },
        "base::PartitionAllocHooks::SetOverrideHooks": {
            "offset": "0x16220"
        },
        "base::PartitionAllocMemoryReclaimer::Instance": {
            "offset": "0xAC20"
        },
        "base::PartitionAllocMemoryReclaimer::PartitionAllocMemoryReclaimer": {
            "offset": "0x3200"
        },
        "base::PartitionAllocMemoryReclaimer::Reclaim": {
            "offset": "0xB1C0"
        },
        "base::PartitionAllocMemoryReclaimer::RecordStatistics": {
            "offset": "0xB4A0"
        },
        "base::PartitionAllocMemoryReclaimer::RegisterPartition": {
            "offset": "0xB4E0"
        },
        "base::PartitionAllocMemoryReclaimer::ResetForTesting": {
            "offset": "0xB990"
        },
        "base::PartitionAllocMemoryReclaimer::Start": {
            "offset": "0xBD20"
        },
        "base::PartitionAllocMemoryReclaimer::UnregisterPartition": {
            "offset": "0xC1A0"
        },
        "base::PartitionAllocMemoryReclaimer::~PartitionAllocMemoryReclaimer": {
            "offset": "0x3A50"
        },
        "base::PartitionAllocatorGeneric::PartitionAllocatorGeneric": {
            "offset": "0xF430"
        },
        "base::PartitionAllocatorGeneric::init": {
            "offset": "0xD690"
        },
        "base::PartitionAllocatorGeneric::root": {
            "offset": "0x3FB0"
        },
        "base::PartitionAllocatorGeneric::~PartitionAllocatorGeneric": {
            "offset": "0x3AE0"
        },
        "base::PartitionDumpBucketStats": {
            "offset": "0x10640"
        },
        "base::PartitionDumpPageStats": {
            "offset": "0x10C70"
        },
        "base::PartitionPurgePage": {
            "offset": "0x112C0"
        },
        "base::PartitionReallocDirectMappedInPlace": {
            "offset": "0x11BA0"
        },
        "base::PartitionReallocGenericFlags": {
            "offset": "0x12310"
        },
        "base::PartitionRoot::Alloc": {
            "offset": "0x5940"
        },
        "base::PartitionRoot::AllocFlags": {
            "offset": "0x7400"
        },
        "base::PartitionRoot::DumpStats": {
            "offset": "0xF720"
        },
        "base::PartitionRoot::Init": {
            "offset": "0xFCE0"
        },
        "base::PartitionRoot::PartitionRoot": {
            "offset": "0x3280"
        },
        "base::PartitionRoot::PurgeMemory": {
            "offset": "0x15F20"
        },
        "base::PartitionRoot::buckets": {
            "offset": "0xD430"
        },
        "base::PartitionRoot::~PartitionRoot": {
            "offset": "0xF650"
        },
        "base::PartitionRootGeneric::ActualSize": {
            "offset": "0x5150"
        },
        "base::PartitionRootGeneric::Alloc": {
            "offset": "0x6630"
        },
        "base::PartitionRootGeneric::AllocFlags": {
            "offset": "0x80E0"
        },
        "base::PartitionRootGeneric::DumpStats": {
            "offset": "0xF9A0"
        },
        "base::PartitionRootGeneric::Free": {
            "offset": "0x9C90"
        },
        "base::PartitionRootGeneric::Init": {
            "offset": "0xFD60"
        },
        "base::PartitionRootGeneric::PartitionRootGeneric": {
            "offset": "0xF550"
        },
        "base::PartitionRootGeneric::PurgeMemory": {
            "offset": "0x15F30"
        },
        "base::PartitionRootGeneric::Realloc": {
            "offset": "0x16070"
        },
        "base::PartitionRootGeneric::TryRealloc": {
            "offset": "0x16350"
        },
        "base::PartitionRootGeneric::~PartitionRootGeneric": {
            "offset": "0xF650"
        },
        "base::PartitionStatsDumper::PartitionStatsDumper": {
            "offset": "0x33A0"
        },
        "base::PathExists": {
            "offset": "0x524A0"
        },
        "base::PathIsWritable": {
            "offset": "0x52510"
        },
        "base::PathProvider": {
            "offset": "0x1CEF0"
        },
        "base::PathProviderWin": {
            "offset": "0x1D490"
        },
        "base::PathService::DisableCache": {
            "offset": "0xA6510"
        },
        "base::PathService::Get": {
            "offset": "0xA65D0"
        },
        "base::PathService::Override": {
            "offset": "0xA6B40"
        },
        "base::PathService::OverrideAndCreateIfNeeded": {
            "offset": "0xA6B50"
        },
        "base::PathService::RegisterProvider": {
            "offset": "0xA6DB0"
        },
        "base::PathService::RemoveOverride": {
            "offset": "0xA6F00"
        },
        "base::PendingTask::PendingTask": {
            "offset": "0xA76D0"
        },
        "base::PendingTask::~PendingTask": {
            "offset": "0x3850"
        },
        "base::PersistentHash": {
            "offset": "0x58D50"
        },
        "base::PersistentHistogramAllocator::AllocateHistogram": {
            "offset": "0x92430"
        },
        "base::PersistentHistogramAllocator::ClearLastCreatedReferenceForTesting": {
            "offset": "0x92B40"
        },
        "base::PersistentHistogramAllocator::CreateHistogram": {
            "offset": "0x934A0"
        },
        "base::PersistentHistogramAllocator::CreateTrackingHistograms": {
            "offset": "0x94040"
        },
        "base::PersistentHistogramAllocator::FinalizeHistogram": {
            "offset": "0x947E0"
        },
        "base::PersistentHistogramAllocator::GetHistogram": {
            "offset": "0x94820"
        },
        "base::PersistentHistogramAllocator::GetOrCreateStatisticsRecorderHistogram": {
            "offset": "0x94AB0"
        },
        "base::PersistentHistogramAllocator::Id": {
            "offset": "0x8BFE0"
        },
        "base::PersistentHistogramAllocator::Iterator::GetNext": {
            "offset": "0x8BA50"
        },
        "base::PersistentHistogramAllocator::Iterator::GetNextWithIgnore": {
            "offset": "0x94A30"
        },
        "base::PersistentHistogramAllocator::Iterator::Iterator": {
            "offset": "0x91F10"
        },
        "base::PersistentHistogramAllocator::MergeHistogramDeltaToStatisticsRecorder": {
            "offset": "0x95260"
        },
        "base::PersistentHistogramAllocator::MergeHistogramFinalDeltaToStatisticsRecorder": {
            "offset": "0x95340"
        },
        "base::PersistentHistogramAllocator::Name": {
            "offset": "0x8CA50"
        },
        "base::PersistentHistogramAllocator::PersistentHistogramAllocator": {
            "offset": "0x91F40"
        },
        "base::PersistentHistogramAllocator::UpdateTrackingHistograms": {
            "offset": "0x95A80"
        },
        "base::PersistentHistogramAllocator::UseSampleMapRecords": {
            "offset": "0x95A90"
        },
        "base::PersistentHistogramAllocator::data": {
            "offset": "0xDD30"
        },
        "base::PersistentHistogramAllocator::last_created": {
            "offset": "0x8E340"
        },
        "base::PersistentHistogramAllocator::length": {
            "offset": "0x8E350"
        },
        "base::PersistentHistogramAllocator::memory_allocator": {
            "offset": "0xAAA0"
        },
        "base::PersistentHistogramAllocator::size": {
            "offset": "0x8E350"
        },
        "base::PersistentHistogramAllocator::used": {
            "offset": "0x8E390"
        },
        "base::PersistentHistogramAllocator::~PersistentHistogramAllocator": {
            "offset": "0x920E0"
        },
        "base::PersistentHistogramStorage::Disable": {
            "offset": "0x963F0"
        },
        "base::PersistentHistogramStorage::PersistentHistogramStorage": {
            "offset": "0x95D70"
        },
        "base::PersistentHistogramStorage::set_storage_base_dir": {
            "offset": "0x96400"
        },
        "base::PersistentHistogramStorage::~PersistentHistogramStorage": {
            "offset": "0x95F70"
        },
        "base::PersistentMemoryAllocator::Allocate": {
            "offset": "0x97410"
        },
        "base::PersistentMemoryAllocator::AllocateImpl": {
            "offset": "0x97470"
        },
        "base::PersistentMemoryAllocator::ChangeType": {
            "offset": "0x978F0"
        },
        "base::PersistentMemoryAllocator::CreateTrackingHistograms": {
            "offset": "0x97B30"
        },
        "base::PersistentMemoryAllocator::Flush": {
            "offset": "0x98390"
        },
        "base::PersistentMemoryAllocator::FlushPartial": {
            "offset": "0x12B0"
        },
        "base::PersistentMemoryAllocator::GetAllocSize": {
            "offset": "0x98860"
        },
        "base::PersistentMemoryAllocator::GetAsReference": {
            "offset": "0x988D0"
        },
        "base::PersistentMemoryAllocator::GetBlock": {
            "offset": "0x29F20"
        },
        "base::PersistentMemoryAllocator::GetBlockData": {
            "offset": "0x29F40"
        },
        "base::PersistentMemoryAllocator::GetMemoryInfo": {
            "offset": "0x98AB0"
        },
        "base::PersistentMemoryAllocator::GetMemoryState": {
            "offset": "0x98AE0"
        },
        "base::PersistentMemoryAllocator::GetType": {
            "offset": "0x98DD0"
        },
        "base::PersistentMemoryAllocator::Id": {
            "offset": "0x98E20"
        },
        "base::PersistentMemoryAllocator::IsCorrupt": {
            "offset": "0x98E30"
        },
        "base::PersistentMemoryAllocator::IsFull": {
            "offset": "0x98E90"
        },
        "base::PersistentMemoryAllocator::IsMemoryAcceptable": {
            "offset": "0x98EA0"
        },
        "base::PersistentMemoryAllocator::IsReadonly": {
            "offset": "0xD590"
        },
        "base::PersistentMemoryAllocator::Iterator::GetAsReference": {
            "offset": "0x29F10"
        },
        "base::PersistentMemoryAllocator::Iterator::GetLast": {
            "offset": "0x98AA0"
        },
        "base::PersistentMemoryAllocator::Iterator::GetNext": {
            "offset": "0x98AF0"
        },
        "base::PersistentMemoryAllocator::Iterator::GetNextOfType": {
            "offset": "0x98C50"
        },
        "base::PersistentMemoryAllocator::Iterator::Iterator": {
            "offset": "0x96750"
        },
        "base::PersistentMemoryAllocator::Iterator::Reset": {
            "offset": "0x99310"
        },
        "base::PersistentMemoryAllocator::MakeIterable": {
            "offset": "0x98F70"
        },
        "base::PersistentMemoryAllocator::Name": {
            "offset": "0x99120"
        },
        "base::PersistentMemoryAllocator::New<base::`anonymous namespace'::FeatureEntry>": {
            "offset": "0x3B8D0"
        },
        "base::PersistentMemoryAllocator::New<base::`anonymous namespace'::SampleRecord>": {
            "offset": "0x99520"
        },
        "base::PersistentMemoryAllocator::PersistentMemoryAllocator": {
            "offset": "0x96D90"
        },
        "base::PersistentMemoryAllocator::RecordError": {
            "offset": "0x991F0"
        },
        "base::PersistentMemoryAllocator::SetCorrupt": {
            "offset": "0x99320"
        },
        "base::PersistentMemoryAllocator::SetMemoryState": {
            "offset": "0x99410"
        },
        "base::PersistentMemoryAllocator::UpdateTrackingHistograms": {
            "offset": "0x99430"
        },
        "base::PersistentMemoryAllocator::data": {
            "offset": "0xAAA0"
        },
        "base::PersistentMemoryAllocator::length": {
            "offset": "0x276B0"
        },
        "base::PersistentMemoryAllocator::shared_meta": {
            "offset": "0xAAA0"
        },
        "base::PersistentMemoryAllocator::size": {
            "offset": "0x276B0"
        },
        "base::PersistentMemoryAllocator::used": {
            "offset": "0x99500"
        },
        "base::PersistentMemoryAllocator::~PersistentMemoryAllocator": {
            "offset": "0x97040"
        },
        "base::PersistentSampleMap::Accumulate": {
            "offset": "0x99AB0"
        },
        "base::PersistentSampleMap::AddSubtractImpl": {
            "offset": "0x99B50"
        },
        "base::PersistentSampleMap::CreatePersistentRecord": {
            "offset": "0x99D70"
        },
        "base::PersistentSampleMap::GetCount": {
            "offset": "0x99F60"
        },
        "base::PersistentSampleMap::GetNextPersistentRecord": {
            "offset": "0x99FC0"
        },
        "base::PersistentSampleMap::GetOrCreateSampleCountStorage": {
            "offset": "0x9A030"
        },
        "base::PersistentSampleMap::GetRecords": {
            "offset": "0x9A1D0"
        },
        "base::PersistentSampleMap::GetSampleCountStorage": {
            "offset": "0x9A210"
        },
        "base::PersistentSampleMap::ImportSamples": {
            "offset": "0x9A260"
        },
        "base::PersistentSampleMap::Iterator": {
            "offset": "0x9A510"
        },
        "base::PersistentSampleMap::PersistentSampleMap": {
            "offset": "0x99730"
        },
        "base::PersistentSampleMap::TotalCount": {
            "offset": "0x9A6B0"
        },
        "base::PersistentSampleMap::~PersistentSampleMap": {
            "offset": "0x997C0"
        },
        "base::PersistentSampleMapRecords::Acquire": {
            "offset": "0x92390"
        },
        "base::PersistentSampleMapRecords::CreateNew": {
            "offset": "0x93C00"
        },
        "base::PersistentSampleMapRecords::GetNext": {
            "offset": "0x94900"
        },
        "base::PersistentSampleMapRecords::PersistentSampleMapRecords": {
            "offset": "0x91FB0"
        },
        "base::PersistentSampleMapRecords::Release": {
            "offset": "0x95660"
        },
        "base::PersistentSampleMapRecords::~PersistentSampleMapRecords": {
            "offset": "0x92150"
        },
        "base::PersistentSparseHistogramDataManager::GetSampleMapRecordsWhileLocked": {
            "offset": "0x94DE0"
        },
        "base::PersistentSparseHistogramDataManager::LoadRecords": {
            "offset": "0x95040"
        },
        "base::PersistentSparseHistogramDataManager::PersistentSparseHistogramDataManager": {
            "offset": "0x91FE0"
        },
        "base::PersistentSparseHistogramDataManager::UseSampleMapRecords": {
            "offset": "0x95AA0"
        },
        "base::PersistentSparseHistogramDataManager::~PersistentSparseHistogramDataManager": {
            "offset": "0x92200"
        },
        "base::Pickle::Attachment::Attachment": {
            "offset": "0xA79A0"
        },
        "base::Pickle::Attachment::~Attachment": {
            "offset": "0xA7D10"
        },
        "base::Pickle::ClaimBytes": {
            "offset": "0xA8040"
        },
        "base::Pickle::ClaimUninitializedBytesInternal": {
            "offset": "0xA80D0"
        },
        "base::Pickle::FindNext": {
            "offset": "0xA8310"
        },
        "base::Pickle::GetTotalAllocatedSize": {
            "offset": "0xA8430"
        },
        "base::Pickle::HasAttachments": {
            "offset": "0x12C0"
        },
        "base::Pickle::PeekNext": {
            "offset": "0xA8450"
        },
        "base::Pickle::Pickle": {
            "offset": "0xA7C90"
        },
        "base::Pickle::ReadAttachment": {
            "offset": "0x12C0"
        },
        "base::Pickle::Reserve": {
            "offset": "0xA8B40"
        },
        "base::Pickle::Resize": {
            "offset": "0xA8CB0"
        },
        "base::Pickle::WriteAttachment": {
            "offset": "0xA8DB0"
        },
        "base::Pickle::WriteBool": {
            "offset": "0x35CE0"
        },
        "base::Pickle::WriteBytes": {
            "offset": "0xA8E00"
        },
        "base::Pickle::WriteBytesCommon": {
            "offset": "0xA8E10"
        },
        "base::Pickle::WriteBytesStatic<2>": {
            "offset": "0xA7970"
        },
        "base::Pickle::WriteBytesStatic<4>": {
            "offset": "0xA7980"
        },
        "base::Pickle::WriteBytesStatic<8>": {
            "offset": "0xA7990"
        },
        "base::Pickle::WriteData": {
            "offset": "0xA8ED0"
        },
        "base::Pickle::WriteDouble": {
            "offset": "0x35D00"
        },
        "base::Pickle::WriteFloat": {
            "offset": "0x35D20"
        },
        "base::Pickle::WriteInt": {
            "offset": "0x35D60"
        },
        "base::Pickle::WriteInt64": {
            "offset": "0x35D40"
        },
        "base::Pickle::WriteLong": {
            "offset": "0x35D80"
        },
        "base::Pickle::WriteString": {
            "offset": "0xA8FD0"
        },
        "base::Pickle::WriteString16": {
            "offset": "0xA8F80"
        },
        "base::Pickle::WriteUInt16": {
            "offset": "0x35DA0"
        },
        "base::Pickle::WriteUInt32": {
            "offset": "0x35D60"
        },
        "base::Pickle::WriteUInt64": {
            "offset": "0x35D40"
        },
        "base::Pickle::capacity_after_header": {
            "offset": "0xD8F0"
        },
        "base::Pickle::data": {
            "offset": "0xAAA0"
        },
        "base::Pickle::end_of_payload": {
            "offset": "0x36270"
        },
        "base::Pickle::header_size": {
            "offset": "0xAAB0"
        },
        "base::Pickle::mutable_payload": {
            "offset": "0x362C0"
        },
        "base::Pickle::payload": {
            "offset": "0x362C0"
        },
        "base::Pickle::payload_size": {
            "offset": "0x362D0"
        },
        "base::Pickle::size": {
            "offset": "0x362F0"
        },
        "base::Pickle::~Pickle": {
            "offset": "0xA7D30"
        },
        "base::PickleIterator::Advance": {
            "offset": "0xA7F40"
        },
        "base::PickleIterator::GetReadPointerAndAdvance": {
            "offset": "0xA83E0"
        },
        "base::PickleIterator::PickleIterator": {
            "offset": "0x2E280"
        },
        "base::PickleIterator::ReadBool": {
            "offset": "0xA85E0"
        },
        "base::PickleIterator::ReadBytes": {
            "offset": "0xA8630"
        },
        "base::PickleIterator::ReadData": {
            "offset": "0xA8660"
        },
        "base::PickleIterator::ReadDouble": {
            "offset": "0xA8710"
        },
        "base::PickleIterator::ReadFloat": {
            "offset": "0xA8750"
        },
        "base::PickleIterator::ReadInt": {
            "offset": "0xA8750"
        },
        "base::PickleIterator::ReadInt64": {
            "offset": "0xA8710"
        },
        "base::PickleIterator::ReadLength": {
            "offset": "0x33200"
        },
        "base::PickleIterator::ReadLong": {
            "offset": "0xA8790"
        },
        "base::PickleIterator::ReadString": {
            "offset": "0xA8980"
        },
        "base::PickleIterator::ReadString16": {
            "offset": "0xA87E0"
        },
        "base::PickleIterator::ReadStringPiece": {
            "offset": "0xA8A80"
        },
        "base::PickleIterator::ReadStringPiece16": {
            "offset": "0xA89F0"
        },
        "base::PickleIterator::ReadUInt16": {
            "offset": "0xA8AF0"
        },
        "base::PickleIterator::ReadUInt32": {
            "offset": "0xA8750"
        },
        "base::PickleIterator::ReadUInt64": {
            "offset": "0xA8710"
        },
        "base::PickleIterator::SkipBytes": {
            "offset": "0x35B90"
        },
        "base::PinSystemLibrary": {
            "offset": "0xA4E70"
        },
        "base::PlatformThread::CanIncreaseThreadPriority": {
            "offset": "0xAAC0"
        },
        "base::PlatformThread::Create": {
            "offset": "0x9AE0"
        },
        "base::PlatformThread::CreateNonJoinable": {
            "offset": "0x133AE0"
        },
        "base::PlatformThread::CreateNonJoinableWithPriority": {
            "offset": "0x133AF0"
        },
        "base::PlatformThread::CreateWithPriority": {
            "offset": "0x133DB0"
        },
        "base::PlatformThread::CurrentHandle": {
            "offset": "0x133E60"
        },
        "base::PlatformThread::CurrentId": {
            "offset": "0x133E80"
        },
        "base::PlatformThread::CurrentRef": {
            "offset": "0x133E90"
        },
        "base::PlatformThread::Delegate::Delegate": {
            "offset": "0x3180"
        },
        "base::PlatformThread::Delegate::~Delegate": {
            "offset": "0x12B0"
        },
        "base::PlatformThread::Detach": {
            "offset": "0x133EB0"
        },
        "base::PlatformThread::GetCurrentThreadPriority": {
            "offset": "0x133EC0"
        },
        "base::PlatformThread::GetDefaultThreadStackSize": {
            "offset": "0x12A0"
        },
        "base::PlatformThread::GetName": {
            "offset": "0x134120"
        },
        "base::PlatformThread::Join": {
            "offset": "0x134150"
        },
        "base::PlatformThread::SetCurrentThreadPriority": {
            "offset": "0x1338F0"
        },
        "base::PlatformThread::SetCurrentThreadPriorityImpl": {
            "offset": "0x1342F0"
        },
        "base::PlatformThread::SetName": {
            "offset": "0x134680"
        },
        "base::PlatformThread::Sleep": {
            "offset": "0x134860"
        },
        "base::PlatformThread::YieldCurrentThread": {
            "offset": "0x134AA0"
        },
        "base::PoissonAllocationSampler::AddSamplesObserver": {
            "offset": "0xBEEB0"
        },
        "base::PoissonAllocationSampler::BalanceAddressesHashSet": {
            "offset": "0xBEFD0"
        },
        "base::PoissonAllocationSampler::DoRecordAlloc": {
            "offset": "0xBF0B0"
        },
        "base::PoissonAllocationSampler::DoRecordFree": {
            "offset": "0xBF390"
        },
        "base::PoissonAllocationSampler::Get": {
            "offset": "0xBF640"
        },
        "base::PoissonAllocationSampler::GetNextSampleInterval": {
            "offset": "0xBF6C0"
        },
        "base::PoissonAllocationSampler::Init": {
            "offset": "0x12B0"
        },
        "base::PoissonAllocationSampler::InstallAllocatorHooks": {
            "offset": "0xBF7B0"
        },
        "base::PoissonAllocationSampler::InstallAllocatorHooksOnce": {
            "offset": "0xBF7F0"
        },
        "base::PoissonAllocationSampler::PoissonAllocationSampler": {
            "offset": "0xBEAF0"
        },
        "base::PoissonAllocationSampler::RecordAlloc": {
            "offset": "0xBFA00"
        },
        "base::PoissonAllocationSampler::RecordFree": {
            "offset": "0xBFA80"
        },
        "base::PoissonAllocationSampler::RemoveSamplesObserver": {
            "offset": "0xBFB60"
        },
        "base::PoissonAllocationSampler::ScopedMuteThreadSamples::IsMuted": {
            "offset": "0xBF880"
        },
        "base::PoissonAllocationSampler::ScopedMuteThreadSamples::ScopedMuteThreadSamples": {
            "offset": "0xBED00"
        },
        "base::PoissonAllocationSampler::ScopedMuteThreadSamples::~ScopedMuteThreadSamples": {
            "offset": "0xBEE00"
        },
        "base::PoissonAllocationSampler::SetHooksInstallCallback": {
            "offset": "0xBFC70"
        },
        "base::PoissonAllocationSampler::SetSamplingInterval": {
            "offset": "0xBFCF0"
        },
        "base::PoissonAllocationSampler::SuppressRandomnessForTest": {
            "offset": "0xBFD00"
        },
        "base::PoissonAllocationSampler::sampled_addresses_set": {
            "offset": "0xBFD10"
        },
        "base::PostDelayedTask": {
            "offset": "0xE45A0"
        },
        "base::PostTask": {
            "offset": "0xE46D0"
        },
        "base::PostTaskAndReply": {
            "offset": "0xE47F0"
        },
        "base::PostTaskAndReplyWithResult<base::OnceCallback,base::SysInfo::HardwareInfo,base::SysInfo::HardwareInfo,void>": {
            "offset": "0xD9FA0"
        },
        "base::PowerMonitor::AddObserver": {
            "offset": "0xA9790"
        },
        "base::PowerMonitor::GetInstance": {
            "offset": "0xA97E0"
        },
        "base::PowerMonitor::Initialize": {
            "offset": "0xA9860"
        },
        "base::PowerMonitor::IsInitialized": {
            "offset": "0xA9930"
        },
        "base::PowerMonitor::IsOnBatteryPower": {
            "offset": "0xA9950"
        },
        "base::PowerMonitor::NotifyPowerStateChange": {
            "offset": "0xA99E0"
        },
        "base::PowerMonitor::NotifyResume": {
            "offset": "0xA9B40"
        },
        "base::PowerMonitor::NotifySuspend": {
            "offset": "0xA9D00"
        },
        "base::PowerMonitor::PowerMonitor": {
            "offset": "0xA9600"
        },
        "base::PowerMonitor::RemoveObserver": {
            "offset": "0xA9EC0"
        },
        "base::PowerMonitor::ShutdownForTesting": {
            "offset": "0xA9F70"
        },
        "base::PowerMonitor::Source": {
            "offset": "0xAA060"
        },
        "base::PowerMonitor::~PowerMonitor": {
            "offset": "0xA9710"
        },
        "base::PowerMonitorDeviceSource::IsOnBatteryPowerImpl": {
            "offset": "0xAA3C0"
        },
        "base::PowerMonitorDeviceSource::PowerMessageWindow::PowerMessageWindow": {
            "offset": "0xAA1E0"
        },
        "base::PowerMonitorDeviceSource::PowerMessageWindow::WndProcThunk": {
            "offset": "0xAA480"
        },
        "base::PowerMonitorDeviceSource::PowerMessageWindow::~PowerMessageWindow": {
            "offset": "0xAA380"
        },
        "base::PowerMonitorDeviceSource::PowerMonitorDeviceSource": {
            "offset": "0xAA080"
        },
        "base::PowerMonitorDeviceSource::~PowerMonitorDeviceSource": {
            "offset": "0xAA0D0"
        },
        "base::PowerMonitorSource::IsOnBatteryPower": {
            "offset": "0xAA5E0"
        },
        "base::PowerMonitorSource::PowerMonitorSource": {
            "offset": "0xAA4F0"
        },
        "base::PowerMonitorSource::ProcessPowerEvent": {
            "offset": "0xAA650"
        },
        "base::PowerMonitorSource::SetInitialOnBatteryPowerState": {
            "offset": "0xAA730"
        },
        "base::PowerMonitorSource::~PowerMonitorSource": {
            "offset": "0xAA520"
        },
        "base::PowerObserver::OnPowerStateChange": {
            "offset": "0x12B0"
        },
        "base::PowerObserver::OnResume": {
            "offset": "0x12B0"
        },
        "base::PowerObserver::OnSuspend": {
            "offset": "0x12B0"
        },
        "base::PowerObserver::PowerObserver": {
            "offset": "0xA9700"
        },
        "base::PowerObserver::~PowerObserver": {
            "offset": "0x12B0"
        },
        "base::PreReadFile": {
            "offset": "0x525B0"
        },
        "base::PrepareForUTF16Or32Output<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xD4770"
        },
        "base::PrepareForUTF8Output<wchar_t>": {
            "offset": "0xD47A0"
        },
        "base::Process::CanBackgroundProcesses": {
            "offset": "0xAAC0"
        },
        "base::Process::Close": {
            "offset": "0xB0890"
        },
        "base::Process::CreationTime": {
            "offset": "0xB08E0"
        },
        "base::Process::Current": {
            "offset": "0xB0970"
        },
        "base::Process::DeprecatedGetProcessFromHandle": {
            "offset": "0xB0990"
        },
        "base::Process::Duplicate": {
            "offset": "0xB0B40"
        },
        "base::Process::Exited": {
            "offset": "0xB0C00"
        },
        "base::Process::GetPriority": {
            "offset": "0xB0C30"
        },
        "base::Process::Handle": {
            "offset": "0xB0CF0"
        },
        "base::Process::IsProcessBackgrounded": {
            "offset": "0xB0D10"
        },
        "base::Process::IsRunning": {
            "offset": "0x32F70"
        },
        "base::Process::IsValid": {
            "offset": "0xB0DD0"
        },
        "base::Process::Open": {
            "offset": "0xB0DF0"
        },
        "base::Process::OpenWithAccess": {
            "offset": "0xB0F10"
        },
        "base::Process::OpenWithExtraPrivileges": {
            "offset": "0xB1030"
        },
        "base::Process::Pid": {
            "offset": "0xB1150"
        },
        "base::Process::Process": {
            "offset": "0xB04E0"
        },
        "base::Process::SetProcessBackgrounded": {
            "offset": "0xB1200"
        },
        "base::Process::Terminate": {
            "offset": "0xB12E0"
        },
        "base::Process::TerminateCurrentProcessImmediately": {
            "offset": "0xB1550"
        },
        "base::Process::WaitForExit": {
            "offset": "0xB1570"
        },
        "base::Process::WaitForExitWithTimeout": {
            "offset": "0xB1590"
        },
        "base::Process::is_current": {
            "offset": "0xD630"
        },
        "base::Process::~Process": {
            "offset": "0x6F480"
        },
        "base::ProcessIterator::CheckForNextProcess": {
            "offset": "0xAF0A0"
        },
        "base::ProcessIterator::IncludeEntry": {
            "offset": "0xAEDB0"
        },
        "base::ProcessIterator::InitProcessEntry": {
            "offset": "0xAF160"
        },
        "base::ProcessIterator::NextProcessEntry": {
            "offset": "0xAEDE0"
        },
        "base::ProcessIterator::ProcessIterator": {
            "offset": "0xAEFA0"
        },
        "base::ProcessIterator::Snapshot": {
            "offset": "0xAEE20"
        },
        "base::ProcessIterator::entry": {
            "offset": "0xDDC0"
        },
        "base::ProcessIterator::~ProcessIterator": {
            "offset": "0xAEFE0"
        },
        "base::ProcessMetrics::CreateCurrentProcessMetrics": {
            "offset": "0xAF1E0"
        },
        "base::ProcessMetrics::CreateProcessMetrics": {
            "offset": "0xAF810"
        },
        "base::ProcessMetrics::GetCumulativeCPUUsage": {
            "offset": "0xAF870"
        },
        "base::ProcessMetrics::GetCumulativeDiskUsageInBytes": {
            "offset": "0xAF970"
        },
        "base::ProcessMetrics::GetDiskUsageBytesPerSecond": {
            "offset": "0xAF210"
        },
        "base::ProcessMetrics::GetIOCounters": {
            "offset": "0xAF9F0"
        },
        "base::ProcessMetrics::GetIdleWakeupsPerSecond": {
            "offset": "0xAF300"
        },
        "base::ProcessMetrics::GetMallocUsage": {
            "offset": "0x12A0"
        },
        "base::ProcessMetrics::GetPlatformIndependentCPUUsage": {
            "offset": "0xAF380"
        },
        "base::ProcessMetrics::ProcessMetrics": {
            "offset": "0xAF5F0"
        },
        "base::ProcessMetrics::~ProcessMetrics": {
            "offset": "0x6F480"
        },
        "base::ProfileBuilder::MetadataItem::MetadataItem": {
            "offset": "0xB3CB0"
        },
        "base::ProfileBuilder::ProfileBuilder": {
            "offset": "0xB2DA0"
        },
        "base::ProfileBuilder::RecordMetadata": {
            "offset": "0x12B0"
        },
        "base::ProfileBuilder::~ProfileBuilder": {
            "offset": "0x12B0"
        },
        "base::RaiseProcessToHighPriority": {
            "offset": "0xAE0F0"
        },
        "base::RandBytes": {
            "offset": "0xB9EF0"
        },
        "base::RandBytesAsString": {
            "offset": "0xB9BD0"
        },
        "base::RandDouble": {
            "offset": "0xB9C90"
        },
        "base::RandGenerator": {
            "offset": "0xB9CC0"
        },
        "base::RandInt": {
            "offset": "0xB9D80"
        },
        "base::RandUint64": {
            "offset": "0xB9ED0"
        },
        "base::RandomDataToGUIDString": {
            "offset": "0x589E0"
        },
        "base::RandomValue": {
            "offset": "0x1A520"
        },
        "base::ReadFile": {
            "offset": "0x528C0"
        },
        "base::ReadFileToString": {
            "offset": "0x4CBB0"
        },
        "base::ReadFileToStringWithMaxSize": {
            "offset": "0x4CBC0"
        },
        "base::ReadOnlySharedMemoryMapping::ReadOnlySharedMemoryMapping": {
            "offset": "0x723F0"
        },
        "base::ReadOnlySharedMemoryMapping::memory": {
            "offset": "0xAAA0"
        },
        "base::ReadOnlySharedMemoryMapping::~ReadOnlySharedMemoryMapping": {
            "offset": "0x297C0"
        },
        "base::ReadOnlySharedMemoryRegion::Create": {
            "offset": "0x710A0"
        },
        "base::ReadOnlySharedMemoryRegion::Deserialize": {
            "offset": "0x71210"
        },
        "base::ReadOnlySharedMemoryRegion::Duplicate": {
            "offset": "0x71260"
        },
        "base::ReadOnlySharedMemoryRegion::GetGUID": {
            "offset": "0x32670"
        },
        "base::ReadOnlySharedMemoryRegion::GetPlatformHandle": {
            "offset": "0x328A0"
        },
        "base::ReadOnlySharedMemoryRegion::GetSize": {
            "offset": "0x329B0"
        },
        "base::ReadOnlySharedMemoryRegion::IsValid": {
            "offset": "0x71290"
        },
        "base::ReadOnlySharedMemoryRegion::Map": {
            "offset": "0x712A0"
        },
        "base::ReadOnlySharedMemoryRegion::MapAt": {
            "offset": "0x712C0"
        },
        "base::ReadOnlySharedMemoryRegion::ReadOnlySharedMemoryRegion": {
            "offset": "0x71050"
        },
        "base::ReadOnlySharedMemoryRegion::TakeHandleForSerialization": {
            "offset": "0x71360"
        },
        "base::ReadOnlySharedMemoryRegion::set_create_hook": {
            "offset": "0x362E0"
        },
        "base::ReadOnlySharedMemoryRegion::~ReadOnlySharedMemoryRegion": {
            "offset": "0x71070"
        },
        "base::ReadOnlySharedPersistentMemoryAllocator::IsSharedMemoryAcceptable": {
            "offset": "0x98EF0"
        },
        "base::ReadOnlySharedPersistentMemoryAllocator::ReadOnlySharedPersistentMemoryAllocator": {
            "offset": "0x96E10"
        },
        "base::ReadOnlySharedPersistentMemoryAllocator::~ReadOnlySharedPersistentMemoryAllocator": {
            "offset": "0x97050"
        },
        "base::ReadTokenFromPickle": {
            "offset": "0x145A00"
        },
        "base::ReadUnicodeCharacter": {
            "offset": "0xD4920"
        },
        "base::RecommendedMaxNumberOfThreadsInThreadGroup": {
            "offset": "0x10B3A0"
        },
        "base::RecommitSystemPages": {
            "offset": "0xEAC0"
        },
        "base::RecordAction": {
            "offset": "0xA3CD0"
        },
        "base::RecordComputedAction": {
            "offset": "0xA3D90"
        },
        "base::RecordHistogramChecker::RecordHistogramChecker": {
            "offset": "0x88240"
        },
        "base::RecordHistogramChecker::~RecordHistogramChecker": {
            "offset": "0x12B0"
        },
        "base::RefCounted<base::FieldTrial,base::DefaultRefCountedTraits<base::FieldTrial> >::AddRef": {
            "offset": "0x302E0"
        },
        "base::RefCounted<base::FieldTrial,base::DefaultRefCountedTraits<base::FieldTrial> >::RefCounted<base::FieldTrial,base::DefaultRefCountedTraits<base::FieldTrial> >": {
            "offset": "0x2D700"
        },
        "base::RefCounted<base::FieldTrial,base::DefaultRefCountedTraits<base::FieldTrial> >::Release": {
            "offset": "0x346F0"
        },
        "base::RefCounted<base::FieldTrial,base::DefaultRefCountedTraits<base::FieldTrial> >::~RefCounted<base::FieldTrial,base::DefaultRefCountedTraits<base::FieldTrial> >": {
            "offset": "0x2EFD0"
        },
        "base::RefCounted<mojo::SyncHandleRegistry,base::DefaultRefCountedTraits<mojo::SyncHandleRegistry> >::AddRef": {
            "offset": "0x302E0"
        },
        "base::RefCounted<mojo::SyncHandleRegistry,base::DefaultRefCountedTraits<mojo::SyncHandleRegistry> >::RefCounted<mojo::SyncHandleRegistry,base::DefaultRefCountedTraits<mojo::SyncHandleRegistry> >": {
            "offset": "0x2D700"
        },
        "base::RefCounted<mojo::SyncHandleRegistry,base::DefaultRefCountedTraits<mojo::SyncHandleRegistry> >::Release": {
            "offset": "0x19AB10"
        },
        "base::RefCounted<mojo::SyncHandleRegistry,base::DefaultRefCountedTraits<mojo::SyncHandleRegistry> >::~RefCounted<mojo::SyncHandleRegistry,base::DefaultRefCountedTraits<mojo::SyncHandleRegistry> >": {
            "offset": "0x2EFD0"
        },
        "base::RefCountedBytes::RefCountedBytes": {
            "offset": "0x71680"
        },
        "base::RefCountedBytes::data": {
            "offset": "0x15B0"
        },
        "base::RefCountedBytes::front": {
            "offset": "0x72300"
        },
        "base::RefCountedBytes::size": {
            "offset": "0x72350"
        },
        "base::RefCountedBytes::~RefCountedBytes": {
            "offset": "0x71A00"
        },
        "base::RefCountedDeleteOnSequence<mojo::DataPipeProducer::SequenceState>::~RefCountedDeleteOnSequence<mojo::DataPipeProducer::SequenceState>": {
            "offset": "0x231DB0"
        },
        "base::RefCountedMemory::Equals": {
            "offset": "0x71F50"
        },
        "base::RefCountedMemory::RefCountedMemory": {
            "offset": "0x71710"
        },
        "base::RefCountedMemory::data": {
            "offset": "0x722F0"
        },
        "base::RefCountedMemory::~RefCountedMemory": {
            "offset": "0x71A80"
        },
        "base::RefCountedSharedMemoryMapping::CreateFromWholeRegion": {
            "offset": "0x71EA0"
        },
        "base::RefCountedSharedMemoryMapping::RefCountedSharedMemoryMapping": {
            "offset": "0x71730"
        },
        "base::RefCountedSharedMemoryMapping::front": {
            "offset": "0xD8F0"
        },
        "base::RefCountedSharedMemoryMapping::size": {
            "offset": "0xD470"
        },
        "base::RefCountedSharedMemoryMapping::~RefCountedSharedMemoryMapping": {
            "offset": "0x71AA0"
        },
        "base::RefCountedStaticMemory::RefCountedStaticMemory": {
            "offset": "0x71960"
        },
        "base::RefCountedStaticMemory::front": {
            "offset": "0xAAB0"
        },
        "base::RefCountedStaticMemory::size": {
            "offset": "0xD8F0"
        },
        "base::RefCountedStaticMemory::~RefCountedStaticMemory": {
            "offset": "0x71A80"
        },
        "base::RefCountedString::RefCountedString": {
            "offset": "0x71980"
        },
        "base::RefCountedString::TakeString": {
            "offset": "0x72030"
        },
        "base::RefCountedString::data": {
            "offset": "0x15B0"
        },
        "base::RefCountedString::front": {
            "offset": "0x72330"
        },
        "base::RefCountedString::size": {
            "offset": "0x695C0"
        },
        "base::RefCountedString::~RefCountedString": {
            "offset": "0x71AE0"
        },
        "base::RefCountedThreadSafe<IPC::ChannelProxy::Context,base::DefaultRefCountedThreadSafeTraits<IPC::ChannelProxy::Context> >::~RefCountedThreadSafe<IPC::ChannelProxy::Context,base::DefaultRefCountedThreadSafeTraits<IPC::ChannelProxy::Context> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<IPC::MessageAttachmentSet,base::DefaultRefCountedThreadSafeTraits<IPC::MessageAttachmentSet> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<IPC::MessageAttachmentSet,base::DefaultRefCountedThreadSafeTraits<IPC::MessageAttachmentSet> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<IPC::MessageAttachmentSet,base::DefaultRefCountedThreadSafeTraits<IPC::MessageAttachmentSet> >::RefCountedThreadSafe<IPC::MessageAttachmentSet,base::DefaultRefCountedThreadSafeTraits<IPC::MessageAttachmentSet> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<IPC::MessageAttachmentSet,base::DefaultRefCountedThreadSafeTraits<IPC::MessageAttachmentSet> >::Release": {
            "offset": "0x19EDA0"
        },
        "base::RefCountedThreadSafe<IPC::MessageAttachmentSet,base::DefaultRefCountedThreadSafeTraits<IPC::MessageAttachmentSet> >::~RefCountedThreadSafe<IPC::MessageAttachmentSet,base::DefaultRefCountedThreadSafeTraits<IPC::MessageAttachmentSet> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<IPC::MessageFilter,base::DefaultRefCountedThreadSafeTraits<IPC::MessageFilter> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<IPC::MessageFilter,base::DefaultRefCountedThreadSafeTraits<IPC::MessageFilter> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<IPC::MessageFilter,base::DefaultRefCountedThreadSafeTraits<IPC::MessageFilter> >::RefCountedThreadSafe<IPC::MessageFilter,base::DefaultRefCountedThreadSafeTraits<IPC::MessageFilter> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<IPC::MessageFilter,base::DefaultRefCountedThreadSafeTraits<IPC::MessageFilter> >::Release": {
            "offset": "0x19AB50"
        },
        "base::RefCountedThreadSafe<IPC::MessageFilter,base::DefaultRefCountedThreadSafeTraits<IPC::MessageFilter> >::~RefCountedThreadSafe<IPC::MessageFilter,base::DefaultRefCountedThreadSafeTraits<IPC::MessageFilter> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<IPC::SyncChannel::ReceivedSyncMsgQueue,base::DefaultRefCountedThreadSafeTraits<IPC::SyncChannel::ReceivedSyncMsgQueue> >::~RefCountedThreadSafe<IPC::SyncChannel::ReceivedSyncMsgQueue,base::DefaultRefCountedThreadSafeTraits<IPC::SyncChannel::ReceivedSyncMsgQueue> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::Pickle::Attachment,base::DefaultRefCountedThreadSafeTraits<base::Pickle::Attachment> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::Pickle::Attachment,base::DefaultRefCountedThreadSafeTraits<base::Pickle::Attachment> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::Pickle::Attachment,base::DefaultRefCountedThreadSafeTraits<base::Pickle::Attachment> >::RefCountedThreadSafe<base::Pickle::Attachment,base::DefaultRefCountedThreadSafeTraits<base::Pickle::Attachment> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::Pickle::Attachment,base::DefaultRefCountedThreadSafeTraits<base::Pickle::Attachment> >::Release": {
            "offset": "0x34730"
        },
        "base::RefCountedThreadSafe<base::Pickle::Attachment,base::DefaultRefCountedThreadSafeTraits<base::Pickle::Attachment> >::~RefCountedThreadSafe<base::Pickle::Attachment,base::DefaultRefCountedThreadSafeTraits<base::Pickle::Attachment> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::RefCountedData<base::AtomicFlag>,base::DefaultRefCountedThreadSafeTraits<base::RefCountedData<base::AtomicFlag> > >::~RefCountedThreadSafe<base::RefCountedData<base::AtomicFlag>,base::DefaultRefCountedThreadSafeTraits<base::RefCountedData<base::AtomicFlag> > >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::RefCountedMemory,base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::RefCountedMemory,base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::RefCountedMemory,base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::RefCountedThreadSafe<base::RefCountedMemory,base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::RefCountedMemory,base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::Release": {
            "offset": "0x71FF0"
        },
        "base::RefCountedThreadSafe<base::RefCountedMemory,base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::~RefCountedThreadSafe<base::RefCountedMemory,base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::TaskRunner,base::TaskRunnerTraits>::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::TaskRunner,base::TaskRunnerTraits>::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::TaskRunner,base::TaskRunnerTraits>::RefCountedThreadSafe<base::TaskRunner,base::TaskRunnerTraits>": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::TaskRunner,base::TaskRunnerTraits>::Release": {
            "offset": "0xB730"
        },
        "base::RefCountedThreadSafe<base::TaskRunner,base::TaskRunnerTraits>::~RefCountedThreadSafe<base::TaskRunner,base::TaskRunnerTraits>": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::internal::BindStateBase,base::internal::BindStateBaseRefCountTraits>::AddRef": {
            "offset": "0x5400"
        },
        "base::RefCountedThreadSafe<base::internal::BindStateBase,base::internal::BindStateBaseRefCountTraits>::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::BindStateBase,base::internal::BindStateBaseRefCountTraits>::RefCountedThreadSafe<base::internal::BindStateBase,base::internal::BindStateBaseRefCountTraits>": {
            "offset": "0x2F80"
        },
        "base::RefCountedThreadSafe<base::internal::BindStateBase,base::internal::BindStateBaseRefCountTraits>::Release": {
            "offset": "0xB6C0"
        },
        "base::RefCountedThreadSafe<base::internal::BindStateBase,base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe<base::internal::BindStateBase,base::internal::BindStateBaseRefCountTraits>": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::internal::ObserverListThreadSafeBase,base::DefaultRefCountedThreadSafeTraits<base::internal::ObserverListThreadSafeBase> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::ObserverListThreadSafeBase,base::DefaultRefCountedThreadSafeTraits<base::internal::ObserverListThreadSafeBase> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::ObserverListThreadSafeBase,base::DefaultRefCountedThreadSafeTraits<base::internal::ObserverListThreadSafeBase> >::RefCountedThreadSafe<base::internal::ObserverListThreadSafeBase,base::DefaultRefCountedThreadSafeTraits<base::internal::ObserverListThreadSafeBase> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::internal::ObserverListThreadSafeBase,base::DefaultRefCountedThreadSafeTraits<base::internal::ObserverListThreadSafeBase> >::Release": {
            "offset": "0x34730"
        },
        "base::RefCountedThreadSafe<base::internal::ObserverListThreadSafeBase,base::DefaultRefCountedThreadSafeTraits<base::internal::ObserverListThreadSafeBase> >::~RefCountedThreadSafe<base::internal::ObserverListThreadSafeBase,base::DefaultRefCountedThreadSafeTraits<base::internal::ObserverListThreadSafeBase> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::internal::TaskSource,base::DefaultRefCountedThreadSafeTraits<base::internal::TaskSource> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::TaskSource,base::DefaultRefCountedThreadSafeTraits<base::internal::TaskSource> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::TaskSource,base::DefaultRefCountedThreadSafeTraits<base::internal::TaskSource> >::RefCountedThreadSafe<base::internal::TaskSource,base::DefaultRefCountedThreadSafeTraits<base::internal::TaskSource> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::internal::TaskSource,base::DefaultRefCountedThreadSafeTraits<base::internal::TaskSource> >::Release": {
            "offset": "0x71FF0"
        },
        "base::RefCountedThreadSafe<base::internal::TaskSource,base::DefaultRefCountedThreadSafeTraits<base::internal::TaskSource> >::~RefCountedThreadSafe<base::internal::TaskSource,base::DefaultRefCountedThreadSafeTraits<base::internal::TaskSource> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::internal::WeakReference::Flag,base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::WeakReference::Flag,base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::WeakReference::Flag,base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >::RefCountedThreadSafe<base::internal::WeakReference::Flag,base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::internal::WeakReference::Flag,base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >::Release": {
            "offset": "0xB6F0"
        },
        "base::RefCountedThreadSafe<base::internal::WeakReference::Flag,base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >::~RefCountedThreadSafe<base::internal::WeakReference::Flag,base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::internal::WorkerThread,base::DefaultRefCountedThreadSafeTraits<base::internal::WorkerThread> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::WorkerThread,base::DefaultRefCountedThreadSafeTraits<base::internal::WorkerThread> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::internal::WorkerThread,base::DefaultRefCountedThreadSafeTraits<base::internal::WorkerThread> >::RefCountedThreadSafe<base::internal::WorkerThread,base::DefaultRefCountedThreadSafeTraits<base::internal::WorkerThread> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::internal::WorkerThread,base::DefaultRefCountedThreadSafeTraits<base::internal::WorkerThread> >::Release": {
            "offset": "0xE3970"
        },
        "base::RefCountedThreadSafe<base::internal::WorkerThread,base::DefaultRefCountedThreadSafeTraits<base::internal::WorkerThread> >::~RefCountedThreadSafe<base::internal::WorkerThread,base::DefaultRefCountedThreadSafeTraits<base::internal::WorkerThread> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::TaskQueue,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::TaskQueue> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::TaskQueue,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::TaskQueue> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::TaskQueue,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::TaskQueue> >::RefCountedThreadSafe<base::sequence_manager::TaskQueue,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::TaskQueue> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::TaskQueue,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::TaskQueue> >::Release": {
            "offset": "0x71FF0"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::TaskQueue,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::TaskQueue> >::~RefCountedThreadSafe<base::sequence_manager::TaskQueue,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::TaskQueue> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::internal::AssociatedThreadId,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::AssociatedThreadId> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::internal::AssociatedThreadId,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::AssociatedThreadId> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::internal::AssociatedThreadId,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::AssociatedThreadId> >::RefCountedThreadSafe<base::sequence_manager::internal::AssociatedThreadId,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::AssociatedThreadId> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::internal::AssociatedThreadId,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::AssociatedThreadId> >::Release": {
            "offset": "0x75660"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::internal::AssociatedThreadId,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::AssociatedThreadId> >::~RefCountedThreadSafe<base::sequence_manager::internal::AssociatedThreadId,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::AssociatedThreadId> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster> >::~RefCountedThreadSafe<base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster,base::DefaultRefCountedThreadSafeTraits<base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<base::trace_event::MemoryDumpProviderInfo,base::DefaultRefCountedThreadSafeTraits<base::trace_event::MemoryDumpProviderInfo> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::trace_event::MemoryDumpProviderInfo,base::DefaultRefCountedThreadSafeTraits<base::trace_event::MemoryDumpProviderInfo> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<base::trace_event::MemoryDumpProviderInfo,base::DefaultRefCountedThreadSafeTraits<base::trace_event::MemoryDumpProviderInfo> >::RefCountedThreadSafe<base::trace_event::MemoryDumpProviderInfo,base::DefaultRefCountedThreadSafeTraits<base::trace_event::MemoryDumpProviderInfo> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<base::trace_event::MemoryDumpProviderInfo,base::DefaultRefCountedThreadSafeTraits<base::trace_event::MemoryDumpProviderInfo> >::Release": {
            "offset": "0x73570"
        },
        "base::RefCountedThreadSafe<base::trace_event::MemoryDumpProviderInfo,base::DefaultRefCountedThreadSafeTraits<base::trace_event::MemoryDumpProviderInfo> >::~RefCountedThreadSafe<base::trace_event::MemoryDumpProviderInfo,base::DefaultRefCountedThreadSafeTraits<base::trace_event::MemoryDumpProviderInfo> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::AssociatedGroupController,base::DefaultRefCountedThreadSafeTraits<mojo::AssociatedGroupController> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::AssociatedGroupController,base::DefaultRefCountedThreadSafeTraits<mojo::AssociatedGroupController> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::AssociatedGroupController,base::DefaultRefCountedThreadSafeTraits<mojo::AssociatedGroupController> >::RefCountedThreadSafe<mojo::AssociatedGroupController,base::DefaultRefCountedThreadSafeTraits<mojo::AssociatedGroupController> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<mojo::AssociatedGroupController,base::DefaultRefCountedThreadSafeTraits<mojo::AssociatedGroupController> >::Release": {
            "offset": "0x19AB50"
        },
        "base::RefCountedThreadSafe<mojo::AssociatedGroupController,base::DefaultRefCountedThreadSafeTraits<mojo::AssociatedGroupController> >::~RefCountedThreadSafe<mojo::AssociatedGroupController,base::DefaultRefCountedThreadSafeTraits<mojo::AssociatedGroupController> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::ConnectionGroup,base::DefaultRefCountedThreadSafeTraits<mojo::ConnectionGroup> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::ConnectionGroup,base::DefaultRefCountedThreadSafeTraits<mojo::ConnectionGroup> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::ConnectionGroup,base::DefaultRefCountedThreadSafeTraits<mojo::ConnectionGroup> >::RefCountedThreadSafe<mojo::ConnectionGroup,base::DefaultRefCountedThreadSafeTraits<mojo::ConnectionGroup> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<mojo::ConnectionGroup,base::DefaultRefCountedThreadSafeTraits<mojo::ConnectionGroup> >::Release": {
            "offset": "0x34730"
        },
        "base::RefCountedThreadSafe<mojo::ConnectionGroup,base::DefaultRefCountedThreadSafeTraits<mojo::ConnectionGroup> >::~RefCountedThreadSafe<mojo::ConnectionGroup,base::DefaultRefCountedThreadSafeTraits<mojo::ConnectionGroup> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::ScopedInterfaceEndpointHandle::State,base::DefaultRefCountedThreadSafeTraits<mojo::ScopedInterfaceEndpointHandle::State> >::DeleteInternal<mojo::ScopedInterfaceEndpointHandle::State>": {
            "offset": "0x224620"
        },
        "base::RefCountedThreadSafe<mojo::ScopedInterfaceEndpointHandle::State,base::DefaultRefCountedThreadSafeTraits<mojo::ScopedInterfaceEndpointHandle::State> >::~RefCountedThreadSafe<mojo::ScopedInterfaceEndpointHandle::State,base::DefaultRefCountedThreadSafeTraits<mojo::ScopedInterfaceEndpointHandle::State> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::SimpleWatcher::Context,base::DefaultRefCountedThreadSafeTraits<mojo::SimpleWatcher::Context> >::Release": {
            "offset": "0x237F80"
        },
        "base::RefCountedThreadSafe<mojo::SimpleWatcher::Context,base::DefaultRefCountedThreadSafeTraits<mojo::SimpleWatcher::Context> >::~RefCountedThreadSafe<mojo::SimpleWatcher::Context,base::DefaultRefCountedThreadSafeTraits<mojo::SimpleWatcher::Context> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::ThreadSafeForwarderBase::InProgressSyncCalls,base::DefaultRefCountedThreadSafeTraits<mojo::ThreadSafeForwarderBase::InProgressSyncCalls> >::~RefCountedThreadSafe<mojo::ThreadSafeForwarderBase::InProgressSyncCalls,base::DefaultRefCountedThreadSafeTraits<mojo::ThreadSafeForwarderBase::InProgressSyncCalls> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::ThreadSafeForwarderBase::SyncResponseInfo,base::DefaultRefCountedThreadSafeTraits<mojo::ThreadSafeForwarderBase::SyncResponseInfo> >::~RefCountedThreadSafe<mojo::ThreadSafeForwarderBase::SyncResponseInfo,base::DefaultRefCountedThreadSafeTraits<mojo::ThreadSafeForwarderBase::SyncResponseInfo> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::WaitSet::State,base::DefaultRefCountedThreadSafeTraits<mojo::WaitSet::State> >::~RefCountedThreadSafe<mojo::WaitSet::State,base::DefaultRefCountedThreadSafeTraits<mojo::WaitSet::State> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::WaitSet::State::Context,base::DefaultRefCountedThreadSafeTraits<mojo::WaitSet::State::Context> >::DeleteInternal<mojo::WaitSet::State::Context>": {
            "offset": "0x239B20"
        },
        "base::RefCountedThreadSafe<mojo::WaitSet::State::Context,base::DefaultRefCountedThreadSafeTraits<mojo::WaitSet::State::Context> >::~RefCountedThreadSafe<mojo::WaitSet::State::Context,base::DefaultRefCountedThreadSafeTraits<mojo::WaitSet::State::Context> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::`anonymous namespace'::TriggerContext,base::DefaultRefCountedThreadSafeTraits<mojo::`anonymous namespace'::TriggerContext> >::~RefCountedThreadSafe<mojo::`anonymous namespace'::TriggerContext,base::DefaultRefCountedThreadSafeTraits<mojo::`anonymous namespace'::TriggerContext> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::core::Channel,base::DefaultRefCountedThreadSafeTraits<mojo::core::Channel> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::core::Channel,base::DefaultRefCountedThreadSafeTraits<mojo::core::Channel> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::core::Channel,base::DefaultRefCountedThreadSafeTraits<mojo::core::Channel> >::RefCountedThreadSafe<mojo::core::Channel,base::DefaultRefCountedThreadSafeTraits<mojo::core::Channel> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<mojo::core::Channel,base::DefaultRefCountedThreadSafeTraits<mojo::core::Channel> >::Release": {
            "offset": "0x1BAEB0"
        },
        "base::RefCountedThreadSafe<mojo::core::Channel,base::DefaultRefCountedThreadSafeTraits<mojo::core::Channel> >::~RefCountedThreadSafe<mojo::core::Channel,base::DefaultRefCountedThreadSafeTraits<mojo::core::Channel> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::core::Dispatcher,base::DefaultRefCountedThreadSafeTraits<mojo::core::Dispatcher> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::core::Dispatcher,base::DefaultRefCountedThreadSafeTraits<mojo::core::Dispatcher> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::core::Dispatcher,base::DefaultRefCountedThreadSafeTraits<mojo::core::Dispatcher> >::RefCountedThreadSafe<mojo::core::Dispatcher,base::DefaultRefCountedThreadSafeTraits<mojo::core::Dispatcher> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<mojo::core::Dispatcher,base::DefaultRefCountedThreadSafeTraits<mojo::core::Dispatcher> >::Release": {
            "offset": "0x1BE000"
        },
        "base::RefCountedThreadSafe<mojo::core::Dispatcher,base::DefaultRefCountedThreadSafeTraits<mojo::core::Dispatcher> >::~RefCountedThreadSafe<mojo::core::Dispatcher,base::DefaultRefCountedThreadSafeTraits<mojo::core::Dispatcher> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::core::NodeChannel,base::DefaultRefCountedThreadSafeTraits<mojo::core::NodeChannel> >::~RefCountedThreadSafe<mojo::core::NodeChannel,base::DefaultRefCountedThreadSafeTraits<mojo::core::NodeChannel> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::core::Watch,base::DefaultRefCountedThreadSafeTraits<mojo::core::Watch> >::~RefCountedThreadSafe<mojo::core::Watch,base::DefaultRefCountedThreadSafeTraits<mojo::core::Watch> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::core::ports::Port,base::DefaultRefCountedThreadSafeTraits<mojo::core::ports::Port> >::~RefCountedThreadSafe<mojo::core::ports::Port,base::DefaultRefCountedThreadSafeTraits<mojo::core::ports::Port> >": {
            "offset": "0x3860"
        },
        "base::RefCountedThreadSafe<mojo::internal::MessageQuotaChecker,base::DefaultRefCountedThreadSafeTraits<mojo::internal::MessageQuotaChecker> >::AddRef": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::internal::MessageQuotaChecker,base::DefaultRefCountedThreadSafeTraits<mojo::internal::MessageQuotaChecker> >::AddRefImpl": {
            "offset": "0x5410"
        },
        "base::RefCountedThreadSafe<mojo::internal::MessageQuotaChecker,base::DefaultRefCountedThreadSafeTraits<mojo::internal::MessageQuotaChecker> >::RefCountedThreadSafe<mojo::internal::MessageQuotaChecker,base::DefaultRefCountedThreadSafeTraits<mojo::internal::MessageQuotaChecker> >": {
            "offset": "0x2FA0"
        },
        "base::RefCountedThreadSafe<mojo::internal::MessageQuotaChecker,base::DefaultRefCountedThreadSafeTraits<mojo::internal::MessageQuotaChecker> >::Release": {
            "offset": "0x19AB90"
        },
        "base::RefCountedThreadSafe<mojo::internal::MessageQuotaChecker,base::DefaultRefCountedThreadSafeTraits<mojo::internal::MessageQuotaChecker> >::~RefCountedThreadSafe<mojo::internal::MessageQuotaChecker,base::DefaultRefCountedThreadSafeTraits<mojo::internal::MessageQuotaChecker> >": {
            "offset": "0x3860"
        },
        "base::RegisterTaskExecutor": {
            "offset": "0x108FD0"
        },
        "base::ReleaseReservation": {
            "offset": "0xED00"
        },
        "base::RemoveActionCallback": {
            "offset": "0xA4040"
        },
        "base::RemoveChars": {
            "offset": "0xD05D0"
        },
        "base::RemoveSampleMetadata": {
            "offset": "0xB3F20"
        },
        "base::RepeatingCallback<bool __cdecl(char const *)>::~RepeatingCallback<bool __cdecl(char const *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)>::~RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<bool __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~RepeatingCallback<bool __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<bool __cdecl(unsigned int,unsigned __int64,__int64,__int64 *)>::~RepeatingCallback<bool __cdecl(unsigned int,unsigned __int64,__int64,__int64 *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<mojo::AssociatedGroupController * __cdecl(void)>::~RepeatingCallback<mojo::AssociatedGroupController * __cdecl(void)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<unsigned __int64 __cdecl(void const *,unsigned int)>::~RepeatingCallback<unsigned __int64 __cdecl(void const *,unsigned int)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<unsigned __int64 __cdecl(void)>::~RepeatingCallback<unsigned __int64 __cdecl(void)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(__int64,__int64,int,enum base::debug::GlobalActivityTracker::ProcessPhase,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > &&)>::~RepeatingCallback<void __cdecl(__int64,__int64,int,enum base::debug::GlobalActivityTracker::ProcessPhase,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > &&)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::FieldTrialList::Observer *)>::~RepeatingCallback<void __cdecl(base::FieldTrialList::Observer *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::FilePath const &,bool)>::Run": {
            "offset": "0x47F50"
        },
        "base::RepeatingCallback<void __cdecl(base::FilePath const &,bool)>::~RepeatingCallback<void __cdecl(base::FilePath const &,bool)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::MemoryPressureListener *)>::~RepeatingCallback<void __cdecl(base::MemoryPressureListener *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::PowerObserver *)>::~RepeatingCallback<void __cdecl(base::PowerObserver *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::SystemMonitor::DevicesChangedObserver *)>::~RepeatingCallback<void __cdecl(base::SystemMonitor::DevicesChangedObserver *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::experimental::JobDelegate *)>::~RepeatingCallback<void __cdecl(base::experimental::JobDelegate *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::sequence_manager::Task const &,base::sequence_manager::LazyNow *)>::~RepeatingCallback<void __cdecl(base::sequence_manager::Task const &,base::sequence_manager::LazyNow *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::sequence_manager::Task const &,base::sequence_manager::TaskQueue::TaskTiming *,base::sequence_manager::LazyNow *)>::~RepeatingCallback<void __cdecl(base::sequence_manager::Task const &,base::sequence_manager::TaskQueue::TaskTiming *,base::sequence_manager::LazyNow *)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(base::sequence_manager::Task const &,base::sequence_manager::TaskQueue::TaskTiming const &)>::~RepeatingCallback<void __cdecl(base::sequence_manager::Task const &,base::sequence_manager::TaskQueue::TaskTiming const &)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(char const *,int,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >)>::~RepeatingCallback<void __cdecl(char const *,int,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(enum base::MemoryPressureListener::MemoryPressureLevel)>::~RepeatingCallback<void __cdecl(enum base::MemoryPressureListener::MemoryPressureLevel)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>::~RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(int)>::~RepeatingCallback<void __cdecl(int)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)>::~RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(mojo::HandleSignalsState const &)>::~RepeatingCallback<void __cdecl(mojo::HandleSignalsState const &)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(mojo::Message)>::~RepeatingCallback<void __cdecl(mojo::Message)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>::Run": {
            "offset": "0x22E8D0"
        },
        "base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>::~RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)>::~RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)>::~RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(unsigned int)>::~RepeatingCallback<void __cdecl(unsigned int)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(unsigned int,mojo::HandleSignalsState const &)>::~RepeatingCallback<void __cdecl(unsigned int,mojo::HandleSignalsState const &)>": {
            "offset": "0x3850"
        },
        "base::RepeatingCallback<void __cdecl(void)>::RepeatingCallback<void __cdecl(void)>": {
            "offset": "0x30F0"
        },
        "base::RepeatingCallback<void __cdecl(void)>::~RepeatingCallback<void __cdecl(void)>": {
            "offset": "0x3850"
        },
        "base::RepeatingTimer::OnStop": {
            "offset": "0x12B0"
        },
        "base::RepeatingTimer::RepeatingTimer": {
            "offset": "0x144430"
        },
        "base::RepeatingTimer::RunUserTask": {
            "offset": "0x145500"
        },
        "base::RepeatingTimer::Start": {
            "offset": "0x145870"
        },
        "base::RepeatingTimer::user_task": {
            "offset": "0xDDA0"
        },
        "base::RepeatingTimer::~RepeatingTimer": {
            "offset": "0x144770"
        },
        "base::ReplaceChars": {
            "offset": "0xD06C0"
        },
        "base::ReplaceFileW": {
            "offset": "0x52C20"
        },
        "base::ReplaceFirstSubstringAfterOffset": {
            "offset": "0xD07B0"
        },
        "base::ReplaceStringPlaceholders": {
            "offset": "0xD0B80"
        },
        "base::ReplaceSubstringsAfterOffset": {
            "offset": "0xD0BE0"
        },
        "base::ReserveAddressSpace": {
            "offset": "0xED80"
        },
        "base::RetainingOneShotTimer::OnStop": {
            "offset": "0x12B0"
        },
        "base::RetainingOneShotTimer::RetainingOneShotTimer": {
            "offset": "0x144550"
        },
        "base::RetainingOneShotTimer::RunUserTask": {
            "offset": "0x145620"
        },
        "base::RetainingOneShotTimer::Start": {
            "offset": "0x145870"
        },
        "base::RetainingOneShotTimer::set_user_task": {
            "offset": "0xDCF0"
        },
        "base::RetainingOneShotTimer::user_task": {
            "offset": "0xDDA0"
        },
        "base::RetainingOneShotTimer::~RetainingOneShotTimer": {
            "offset": "0x1447A0"
        },
        "base::RouteStdioToConsole": {
            "offset": "0xAE110"
        },
        "base::RunLoop::AddNestingObserverOnCurrentThread": {
            "offset": "0xBAFF0"
        },
        "base::RunLoop::AfterRun": {
            "offset": "0xBB1A0"
        },
        "base::RunLoop::BeforeRun": {
            "offset": "0xBB410"
        },
        "base::RunLoop::Delegate::Delegate": {
            "offset": "0xBA670"
        },
        "base::RunLoop::Delegate::ShouldQuitWhenIdle": {
            "offset": "0xBCBE0"
        },
        "base::RunLoop::Delegate::~Delegate": {
            "offset": "0xBABB0"
        },
        "base::RunLoop::IsNestedOnCurrentThread": {
            "offset": "0xBB960"
        },
        "base::RunLoop::IsRunningOnCurrentThread": {
            "offset": "0xBB9A0"
        },
        "base::RunLoop::NestingObserver::NestingObserver": {
            "offset": "0x74A60"
        },
        "base::RunLoop::NestingObserver::OnExitNestedRunLoop": {
            "offset": "0x12B0"
        },
        "base::RunLoop::NestingObserver::~NestingObserver": {
            "offset": "0x12B0"
        },
        "base::RunLoop::Quit": {
            "offset": "0xBBB10"
        },
        "base::RunLoop::QuitClosure": {
            "offset": "0xBBC20"
        },
        "base::RunLoop::QuitCurrentDeprecated": {
            "offset": "0xBBD50"
        },
        "base::RunLoop::QuitCurrentWhenIdleClosureDeprecated": {
            "offset": "0xBBE70"
        },
        "base::RunLoop::QuitCurrentWhenIdleDeprecated": {
            "offset": "0xBBEF0"
        },
        "base::RunLoop::QuitWhenIdle": {
            "offset": "0xBC010"
        },
        "base::RunLoop::QuitWhenIdleClosure": {
            "offset": "0xBC110"
        },
        "base::RunLoop::RegisterDelegateForCurrentThread": {
            "offset": "0xBC240"
        },
        "base::RunLoop::RemoveNestingObserverOnCurrentThread": {
            "offset": "0xBC3A0"
        },
        "base::RunLoop::Run": {
            "offset": "0xBC6A0"
        },
        "base::RunLoop::RunLoop": {
            "offset": "0xBA710"
        },
        "base::RunLoop::RunUntilIdle": {
            "offset": "0xBCAD0"
        },
        "base::RunLoop::ScopedDisableRunTimeoutForTest::ScopedDisableRunTimeoutForTest": {
            "offset": "0xBA850"
        },
        "base::RunLoop::ScopedDisableRunTimeoutForTest::~ScopedDisableRunTimeoutForTest": {
            "offset": "0xBAE50"
        },
        "base::RunLoop::ScopedDisallowRunningForTesting::ScopedDisallowRunningForTesting": {
            "offset": "0xBA890"
        },
        "base::RunLoop::ScopedDisallowRunningForTesting::~ScopedDisallowRunningForTesting": {
            "offset": "0xBAE80"
        },
        "base::RunLoop::ScopedRunTimeoutForTest::Current": {
            "offset": "0xBB730"
        },
        "base::RunLoop::ScopedRunTimeoutForTest::ScopedRunTimeoutForTest": {
            "offset": "0xBA8D0"
        },
        "base::RunLoop::ScopedRunTimeoutForTest::on_timeout": {
            "offset": "0x15A0"
        },
        "base::RunLoop::ScopedRunTimeoutForTest::timeout": {
            "offset": "0x9A20"
        },
        "base::RunLoop::ScopedRunTimeoutForTest::~ScopedRunTimeoutForTest": {
            "offset": "0xBAF10"
        },
        "base::RunLoop::running": {
            "offset": "0x75C90"
        },
        "base::RunLoop::~RunLoop": {
            "offset": "0xBAD80"
        },
        "base::SHA1HashBytes": {
            "offset": "0x5A720"
        },
        "base::SHA1HashSpan": {
            "offset": "0x5A9C0"
        },
        "base::SHA1HashString": {
            "offset": "0x5A9F0"
        },
        "base::SStringPrintf": {
            "offset": "0xD2A60"
        },
        "base::SampleCountIterator::GetBucketIndex": {
            "offset": "0x90C90"
        },
        "base::SampleCountIterator::SampleCountIterator": {
            "offset": "0x3480"
        },
        "base::SampleCountIterator::~SampleCountIterator": {
            "offset": "0x90680"
        },
        "base::SampleMap::Accumulate": {
            "offset": "0x9AA90"
        },
        "base::SampleMap::AddSubtractImpl": {
            "offset": "0x9AAE0"
        },
        "base::SampleMap::GetCount": {
            "offset": "0x9AD40"
        },
        "base::SampleMap::Iterator": {
            "offset": "0x9AD80"
        },
        "base::SampleMap::SampleMap": {
            "offset": "0x9A780"
        },
        "base::SampleMap::TotalCount": {
            "offset": "0x9AF00"
        },
        "base::SampleMap::~SampleMap": {
            "offset": "0x9A820"
        },
        "base::SamplingHeapProfiler::CachedThreadName": {
            "offset": "0xC0ED0"
        },
        "base::SamplingHeapProfiler::CaptureMixedStack": {
            "offset": "0xC0F60"
        },
        "base::SamplingHeapProfiler::CaptureNativeStack": {
            "offset": "0xC1250"
        },
        "base::SamplingHeapProfiler::CaptureStackTrace": {
            "offset": "0xC1390"
        },
        "base::SamplingHeapProfiler::Get": {
            "offset": "0xC13D0"
        },
        "base::SamplingHeapProfiler::GetSamples": {
            "offset": "0xC1450"
        },
        "base::SamplingHeapProfiler::GetStrings": {
            "offset": "0xC1570"
        },
        "base::SamplingHeapProfiler::Init": {
            "offset": "0xC1610"
        },
        "base::SamplingHeapProfiler::OnThreadNameChanged": {
            "offset": "0xC1620"
        },
        "base::SamplingHeapProfiler::RecordString": {
            "offset": "0xC1630"
        },
        "base::SamplingHeapProfiler::Sample::Sample": {
            "offset": "0xC0820"
        },
        "base::SamplingHeapProfiler::Sample::~Sample": {
            "offset": "0xC0C20"
        },
        "base::SamplingHeapProfiler::SampleAdded": {
            "offset": "0xC1670"
        },
        "base::SamplingHeapProfiler::SampleRemoved": {
            "offset": "0xC1860"
        },
        "base::SamplingHeapProfiler::SamplingHeapProfiler": {
            "offset": "0xC0900"
        },
        "base::SamplingHeapProfiler::SetRecordThreadNames": {
            "offset": "0xC1A40"
        },
        "base::SamplingHeapProfiler::SetSamplingInterval": {
            "offset": "0xC1AC0"
        },
        "base::SamplingHeapProfiler::Start": {
            "offset": "0xC1AE0"
        },
        "base::SamplingHeapProfiler::Stop": {
            "offset": "0xC1B80"
        },
        "base::SamplingHeapProfiler::~SamplingHeapProfiler": {
            "offset": "0xC0C80"
        },
        "base::ScaledLinearHistogram::AddScaledCount": {
            "offset": "0x88BE0"
        },
        "base::ScaledLinearHistogram::ScaledLinearHistogram": {
            "offset": "0x88280"
        },
        "base::ScaledLinearHistogram::histogram": {
            "offset": "0xAB80"
        },
        "base::ScaledLinearHistogram::scale": {
            "offset": "0xD9A0"
        },
        "base::ScaledLinearHistogram::~ScaledLinearHistogram": {
            "offset": "0x885F0"
        },
        "base::ScopedAllowBaseSyncPrimitives::ScopedAllowBaseSyncPrimitives": {
            "offset": "0x13D520"
        },
        "base::ScopedAllowBaseSyncPrimitives::~ScopedAllowBaseSyncPrimitives": {
            "offset": "0x13DA30"
        },
        "base::ScopedAllowBaseSyncPrimitivesForTesting::ScopedAllowBaseSyncPrimitivesForTesting": {
            "offset": "0x13D670"
        },
        "base::ScopedAllowBaseSyncPrimitivesForTesting::~ScopedAllowBaseSyncPrimitivesForTesting": {
            "offset": "0x13DAE0"
        },
        "base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope": {
            "offset": "0x13D670"
        },
        "base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope::~ScopedAllowBaseSyncPrimitivesOutsideBlockingScope": {
            "offset": "0x13DB90"
        },
        "base::ScopedAllowBlocking::ScopedAllowBlocking": {
            "offset": "0x13D710"
        },
        "base::ScopedAllowBlocking::~ScopedAllowBlocking": {
            "offset": "0x13DC40"
        },
        "base::ScopedAllowCrossThreadRefCountAccess::ScopedAllowCrossThreadRefCountAccess": {
            "offset": "0x713A0"
        },
        "base::ScopedAllowCrossThreadRefCountAccess::~ScopedAllowCrossThreadRefCountAccess": {
            "offset": "0x71430"
        },
        "base::ScopedAllowThreadRecallForStackSamplingProfiler::~ScopedAllowThreadRecallForStackSamplingProfiler": {
            "offset": "0xB56E0"
        },
        "base::ScopedAllowUnresponsiveTasksForTesting::ScopedAllowUnresponsiveTasksForTesting": {
            "offset": "0x13D800"
        },
        "base::ScopedAllowUnresponsiveTasksForTesting::~ScopedAllowUnresponsiveTasksForTesting": {
            "offset": "0x13DD40"
        },
        "base::ScopedBlockingCall::ScopedBlockingCall": {
            "offset": "0x135620"
        },
        "base::ScopedBlockingCall::~ScopedBlockingCall": {
            "offset": "0x135960"
        },
        "base::ScopedClosureRunner::Release": {
            "offset": "0x1E5F0"
        },
        "base::ScopedClosureRunner::ReplaceClosure": {
            "offset": "0x1E610"
        },
        "base::ScopedClosureRunner::RunAndReset": {
            "offset": "0x1E630"
        },
        "base::ScopedClosureRunner::ScopedClosureRunner": {
            "offset": "0x30F0"
        },
        "base::ScopedClosureRunner::~ScopedClosureRunner": {
            "offset": "0x1E580"
        },
        "base::ScopedDeferTaskPosting::DeferTaskPosting": {
            "offset": "0xE0940"
        },
        "base::ScopedDeferTaskPosting::DeferredTask::~DeferredTask": {
            "offset": "0xE0790"
        },
        "base::ScopedDeferTaskPosting::Get": {
            "offset": "0xE0AC0"
        },
        "base::ScopedDeferTaskPosting::IsPresent": {
            "offset": "0xE0B60"
        },
        "base::ScopedDeferTaskPosting::PostOrDefer": {
            "offset": "0xE0B80"
        },
        "base::ScopedDeferTaskPosting::ScopedDeferTaskPosting": {
            "offset": "0xE0690"
        },
        "base::ScopedDeferTaskPosting::Set": {
            "offset": "0xE0CD0"
        },
        "base::ScopedDeferTaskPosting::~ScopedDeferTaskPosting": {
            "offset": "0xE07F0"
        },
        "base::ScopedDisallowBlocking::ScopedDisallowBlocking": {
            "offset": "0x13D970"
        },
        "base::ScopedDisallowBlocking::~ScopedDisallowBlocking": {
            "offset": "0x13DED0"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::FreeIfNecessary": {
            "offset": "0xA47D0"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::Receiver::~Receiver": {
            "offset": "0xA4530"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>": {
            "offset": "0xA4480"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::get": {
            "offset": "0x15A0"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::get_traits": {
            "offset": "0x15A0"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::is_valid": {
            "offset": "0x2AAC0"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::release": {
            "offset": "0xA51A0"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::reset": {
            "offset": "0xA51B0"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::swap": {
            "offset": "0xA5200"
        },
        "base::ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>::~ScopedGeneric<HINSTANCE__ *,base::NativeLibraryTraits>": {
            "offset": "0xA44A0"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::FreeIfNecessary": {
            "offset": "0x180E70"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>": {
            "offset": "0x180BF0"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::get": {
            "offset": "0x15A0"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::get_traits": {
            "offset": "0x15A0"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::is_valid": {
            "offset": "0x2AAC0"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::release": {
            "offset": "0xA51A0"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::reset": {
            "offset": "0x181260"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::swap": {
            "offset": "0xA5200"
        },
        "base::ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>::~ScopedGeneric<HSTRING__ *,base::internal::ScopedHStringTraits>": {
            "offset": "0x180C40"
        },
        "base::ScopedMockElapsedTimersForTest::ScopedMockElapsedTimersForTest": {
            "offset": "0x143210"
        },
        "base::ScopedMockElapsedTimersForTest::~ScopedMockElapsedTimersForTest": {
            "offset": "0x1432A0"
        },
        "base::ScopedNativeLibrary::GetError": {
            "offset": "0xDDC0"
        },
        "base::ScopedNativeLibrary::GetFunctionPointer": {
            "offset": "0xC23A0"
        },
        "base::ScopedNativeLibrary::ScopedNativeLibrary": {
            "offset": "0xC22C0"
        },
        "base::ScopedNativeLibrary::~ScopedNativeLibrary": {
            "offset": "0xC22E0"
        },
        "base::ScopedSampleMetadata::ScopedSampleMetadata": {
            "offset": "0xB3D90"
        },
        "base::ScopedSampleMetadata::~ScopedSampleMetadata": {
            "offset": "0xB3E00"
        },
        "base::ScopedSetSequenceTokenForCurrentThread::ScopedSetSequenceTokenForCurrentThread": {
            "offset": "0xC2860"
        },
        "base::ScopedSetSequenceTokenForCurrentThread::~ScopedSetSequenceTokenForCurrentThread": {
            "offset": "0xC2990"
        },
        "base::ScopedTempDir::CreateUniqueTempDir": {
            "offset": "0x581B0"
        },
        "base::ScopedTempDir::CreateUniqueTempDirUnderPath": {
            "offset": "0x58340"
        },
        "base::ScopedTempDir::Delete": {
            "offset": "0x584E0"
        },
        "base::ScopedTempDir::GetPath": {
            "offset": "0x58530"
        },
        "base::ScopedTempDir::GetTempDirPrefix": {
            "offset": "0x585C0"
        },
        "base::ScopedTempDir::IsValid": {
            "offset": "0x585D0"
        },
        "base::ScopedTempDir::ScopedTempDir": {
            "offset": "0x57F90"
        },
        "base::ScopedTempDir::Set": {
            "offset": "0x58600"
        },
        "base::ScopedTempDir::Take": {
            "offset": "0x58660"
        },
        "base::ScopedTempDir::~ScopedTempDir": {
            "offset": "0x57FB0"
        },
        "base::SecureHashAlgorithm::Process": {
            "offset": "0x5A200"
        },
        "base::SequenceChecker::~SequenceChecker": {
            "offset": "0x3BE0"
        },
        "base::SequenceCheckerImpl::CalledOnValidSequence": {
            "offset": "0xC26B0"
        },
        "base::SequenceCheckerImpl::DetachFromSequence": {
            "offset": "0xC27D0"
        },
        "base::SequenceCheckerImpl::HasThreadLocalStorageBeenDestroyed": {
            "offset": "0xC2850"
        },
        "base::SequenceCheckerImpl::SequenceCheckerImpl": {
            "offset": "0xC24D0"
        },
        "base::SequenceCheckerImpl::~SequenceCheckerImpl": {
            "offset": "0xC2550"
        },
        "base::SequenceLocalStorageSlot<mojo::SequenceLocalSyncEventWatcher::SequenceLocalState,std::default_delete<mojo::SequenceLocalSyncEventWatcher::SequenceLocalState> >::emplace<>": {
            "offset": "0x2264F0"
        },
        "base::SequenceToken::Create": {
            "offset": "0xC2D20"
        },
        "base::SequenceToken::GetForCurrentThread": {
            "offset": "0xC2D60"
        },
        "base::SequenceToken::IsValid": {
            "offset": "0xC2EE0"
        },
        "base::SequenceToken::SequenceToken": {
            "offset": "0x74AA0"
        },
        "base::SequenceToken::ToInternalValue": {
            "offset": "0x1480"
        },
        "base::SequencedTaskRunner::DeleteOrReleaseSoonInternal": {
            "offset": "0xC2FE0"
        },
        "base::SequencedTaskRunner::PostNonNestableTask": {
            "offset": "0xC3120"
        },
        "base::SequencedTaskRunner::SequencedTaskRunner": {
            "offset": "0x34B0"
        },
        "base::SequencedTaskRunner::~SequencedTaskRunner": {
            "offset": "0x3BF0"
        },
        "base::SequencedTaskRunnerHandle::Get": {
            "offset": "0x1375F0"
        },
        "base::SequencedTaskRunnerHandle::IsSet": {
            "offset": "0x137690"
        },
        "base::SequencedTaskRunnerHandle::SequencedTaskRunnerHandle": {
            "offset": "0x137240"
        },
        "base::SequencedTaskRunnerHandle::~SequencedTaskRunnerHandle": {
            "offset": "0x137390"
        },
        "base::SetJobObjectLimitFlags": {
            "offset": "0xAE2C0"
        },
        "base::SetMmapSeedForTesting": {
            "offset": "0x1A580"
        },
        "base::SetNonBlocking": {
            "offset": "0x52D90"
        },
        "base::SetPartitionAllocOomCallback": {
            "offset": "0xDDE0"
        },
        "base::SetRecordActionTaskRunner": {
            "offset": "0xA41F0"
        },
        "base::SetSampleMetadata": {
            "offset": "0xB4010"
        },
        "base::SetSystemPagesAccess": {
            "offset": "0xEE90"
        },
        "base::SetSystemPagesAccessInternal": {
            "offset": "0xEF40"
        },
        "base::SetTaskExecutorForCurrentThread": {
            "offset": "0x109110"
        },
        "base::SharedMemoryMapping::IsValid": {
            "offset": "0x2AAC0"
        },
        "base::SharedMemoryMapping::SharedMemoryMapping": {
            "offset": "0x724B0"
        },
        "base::SharedMemoryMapping::Unmap": {
            "offset": "0x727D0"
        },
        "base::SharedMemoryMapping::guid": {
            "offset": "0x2BFC0"
        },
        "base::SharedMemoryMapping::mapped_size": {
            "offset": "0x2C080"
        },
        "base::SharedMemoryMapping::raw_memory_ptr": {
            "offset": "0xAAA0"
        },
        "base::SharedMemoryMapping::size": {
            "offset": "0x2C120"
        },
        "base::SharedMemoryMapping::~SharedMemoryMapping": {
            "offset": "0x725A0"
        },
        "base::SharedMemoryTracker::DecrementMemoryUsage": {
            "offset": "0x72B20"
        },
        "base::SharedMemoryTracker::GetDumpNameForTracing": {
            "offset": "0x72CC0"
        },
        "base::SharedMemoryTracker::GetGlobalDumpIdForTracing": {
            "offset": "0x72EF0"
        },
        "base::SharedMemoryTracker::GetInstance": {
            "offset": "0x72F80"
        },
        "base::SharedMemoryTracker::GetOrCreateSharedMemoryDump": {
            "offset": "0x73010"
        },
        "base::SharedMemoryTracker::GetOrCreateSharedMemoryDumpInternal": {
            "offset": "0x73060"
        },
        "base::SharedMemoryTracker::IncrementMemoryUsage": {
            "offset": "0x73220"
        },
        "base::SharedMemoryTracker::OnMemoryDump": {
            "offset": "0x73420"
        },
        "base::SharedMemoryTracker::SharedMemoryTracker": {
            "offset": "0x728E0"
        },
        "base::SharedMemoryTracker::~SharedMemoryTracker": {
            "offset": "0x72A00"
        },
        "base::SimpleTaskExecutor::CreateCOMSTATaskRunner": {
            "offset": "0x108690"
        },
        "base::SimpleTaskExecutor::CreateSequencedTaskRunner": {
            "offset": "0x108720"
        },
        "base::SimpleTaskExecutor::CreateSingleThreadTaskRunner": {
            "offset": "0x108720"
        },
        "base::SimpleTaskExecutor::CreateTaskRunner": {
            "offset": "0x108720"
        },
        "base::SimpleTaskExecutor::PostDelayedTask": {
            "offset": "0x108750"
        },
        "base::SimpleTaskExecutor::SimpleTaskExecutor": {
            "offset": "0x108490"
        },
        "base::SimpleTaskExecutor::~SimpleTaskExecutor": {
            "offset": "0x108580"
        },
        "base::SimpleThread::BeforeJoin": {
            "offset": "0x12B0"
        },
        "base::SimpleThread::BeforeRun": {
            "offset": "0x12B0"
        },
        "base::SimpleThread::BeforeStart": {
            "offset": "0x12B0"
        },
        "base::SimpleThread::HasBeenJoined": {
            "offset": "0x1383C0"
        },
        "base::SimpleThread::HasBeenStarted": {
            "offset": "0x1383D0"
        },
        "base::SimpleThread::HasStartBeenAttempted": {
            "offset": "0x1383E0"
        },
        "base::SimpleThread::Join": {
            "offset": "0x1383F0"
        },
        "base::SimpleThread::Options::Options": {
            "offset": "0x137C20"
        },
        "base::SimpleThread::SimpleThread": {
            "offset": "0x137CD0"
        },
        "base::SimpleThread::Start": {
            "offset": "0x1390D0"
        },
        "base::SimpleThread::StartAsync": {
            "offset": "0x139110"
        },
        "base::SimpleThread::ThreadMain": {
            "offset": "0x139210"
        },
        "base::SimpleThread::tid": {
            "offset": "0x139250"
        },
        "base::SimpleThread::~SimpleThread": {
            "offset": "0x137FD0"
        },
        "base::SingleSampleIterator::Done": {
            "offset": "0x90AF0"
        },
        "base::SingleSampleIterator::Get": {
            "offset": "0x90BD0"
        },
        "base::SingleSampleIterator::GetBucketIndex": {
            "offset": "0x90D10"
        },
        "base::SingleSampleIterator::Next": {
            "offset": "0x90EC0"
        },
        "base::SingleSampleIterator::SingleSampleIterator": {
            "offset": "0x34E0"
        },
        "base::SingleSampleIterator::~SingleSampleIterator": {
            "offset": "0x90680"
        },
        "base::SingleSampleMetric::SingleSampleMetric": {
            "offset": "0x9C8F0"
        },
        "base::SingleSampleMetric::~SingleSampleMetric": {
            "offset": "0x12B0"
        },
        "base::SingleThreadTaskExecutor::SetWorkBatchSize": {
            "offset": "0x108CA0"
        },
        "base::SingleThreadTaskExecutor::SingleThreadTaskExecutor": {
            "offset": "0x108A00"
        },
        "base::SingleThreadTaskExecutor::task_runner": {
            "offset": "0x108CB0"
        },
        "base::SingleThreadTaskExecutor::type": {
            "offset": "0xD600"
        },
        "base::SingleThreadTaskExecutor::~SingleThreadTaskExecutor": {
            "offset": "0x108BE0"
        },
        "base::SingleThreadTaskRunner::BelongsToCurrentThread": {
            "offset": "0x9A30"
        },
        "base::SingleThreadTaskRunner::SingleThreadTaskRunner": {
            "offset": "0x3510"
        },
        "base::SingleThreadTaskRunner::~SingleThreadTaskRunner": {
            "offset": "0x3BF0"
        },
        "base::Singleton<base::StackSamplingProfiler::SamplingThread,base::LeakySingletonTraits<base::StackSamplingProfiler::SamplingThread>,base::StackSamplingProfiler::SamplingThread>::get": {
            "offset": "0xB8640"
        },
        "base::Singleton<base::trace_event::TraceEventETWExport,base::StaticMemorySingletonTraits<base::trace_event::TraceEventETWExport>,base::trace_event::TraceEventETWExport>::OnExit": {
            "offset": "0x15FD20"
        },
        "base::Singleton<base::trace_event::TraceEventETWExport,base::StaticMemorySingletonTraits<base::trace_event::TraceEventETWExport>,base::trace_event::TraceEventETWExport>::get": {
            "offset": "0x15FD50"
        },
        "base::Singleton<logging::LogEventProvider,base::StaticMemorySingletonTraits<logging::LogEventProvider>,logging::LogEventProvider>::OnExit": {
            "offset": "0x69530"
        },
        "base::SparseHistogram::Add": {
            "offset": "0x88A00"
        },
        "base::SparseHistogram::AddCount": {
            "offset": "0x9CFD0"
        },
        "base::SparseHistogram::AddSamples": {
            "offset": "0x9D0C0"
        },
        "base::SparseHistogram::AddSamplesFromPickle": {
            "offset": "0x9D140"
        },
        "base::SparseHistogram::DeserializeInfoImpl": {
            "offset": "0x9D1D0"
        },
        "base::SparseHistogram::GetCountAndBucketData": {
            "offset": "0x12B0"
        },
        "base::SparseHistogram::GetHistogramType": {
            "offset": "0x9D760"
        },
        "base::SparseHistogram::GetParameters": {
            "offset": "0x12B0"
        },
        "base::SparseHistogram::HasConstructionArguments": {
            "offset": "0x12C0"
        },
        "base::SparseHistogram::PersistentCreate": {
            "offset": "0x9D770"
        },
        "base::SparseHistogram::SerializeInfoImpl": {
            "offset": "0x9D7F0"
        },
        "base::SparseHistogram::SnapshotDelta": {
            "offset": "0x9D850"
        },
        "base::SparseHistogram::SnapshotFinalDelta": {
            "offset": "0x9D9B0"
        },
        "base::SparseHistogram::SnapshotSamples": {
            "offset": "0x9DAF0"
        },
        "base::SparseHistogram::SparseHistogram": {
            "offset": "0x9CDC0"
        },
        "base::SparseHistogram::WriteAscii": {
            "offset": "0x9DBD0"
        },
        "base::SparseHistogram::WriteAsciiHeader": {
            "offset": "0x9DC70"
        },
        "base::SparseHistogram::WriteAsciiImpl": {
            "offset": "0x9DCC0"
        },
        "base::SparseHistogram::WriteHTMLGraph": {
            "offset": "0x9E030"
        },
        "base::SparseHistogram::name_hash": {
            "offset": "0x9E1C0"
        },
        "base::SparseHistogram::~SparseHistogram": {
            "offset": "0x9CEB0"
        },
        "base::SplitString": {
            "offset": "0xCA790"
        },
        "base::SplitStringIntoKeyValuePairs": {
            "offset": "0xCA930"
        },
        "base::SplitStringIntoKeyValuePairsUsingSubstr": {
            "offset": "0xCA970"
        },
        "base::SplitStringPiece": {
            "offset": "0xCAD60"
        },
        "base::SplitStringPieceUsingSubstr": {
            "offset": "0xCB090"
        },
        "base::SplitStringUsingSubstr": {
            "offset": "0xCB3E0"
        },
        "base::StackAllocator<MojoTrapEvent,4>::allocate": {
            "offset": "0x23C630"
        },
        "base::StackAllocator<MojoTrapEvent,4>::deallocate": {
            "offset": "0x23C750"
        },
        "base::StackAllocator<base::RepeatingCallback<void __cdecl(void)>,1>::allocate": {
            "offset": "0x22ABD0"
        },
        "base::StackAllocator<base::RepeatingCallback<void __cdecl(void)>,1>::deallocate": {
            "offset": "0x22AE10"
        },
        "base::StackAllocator<base::WaitableEvent *,4>::allocate": {
            "offset": "0x229090"
        },
        "base::StackAllocator<base::WaitableEvent *,4>::deallocate": {
            "offset": "0x229120"
        },
        "base::StackAllocator<bool const *,4>::allocate": {
            "offset": "0x229090"
        },
        "base::StackAllocator<bool const *,4>::deallocate": {
            "offset": "0x229120"
        },
        "base::StackAllocator<mojo::core::RequestContext::WatchNotifyFinalizer,8>::allocate": {
            "offset": "0x1F4100"
        },
        "base::StackAllocator<mojo::core::RequestContext::WatchNotifyFinalizer,8>::deallocate": {
            "offset": "0x1F42D0"
        },
        "base::StackAllocator<mojo::core::ports::PortRef const *,5>::allocate": {
            "offset": "0x1F1CE0"
        },
        "base::StackAllocator<mojo::core::ports::PortRef const *,5>::deallocate": {
            "offset": "0x1F1D70"
        },
        "base::StackAllocator<mojo::core::ports::PortRef,4>::deallocate": {
            "offset": "0x1F1DD0"
        },
        "base::StackAllocator<scoped_refptr<mojo::core::Watch>,8>::allocate": {
            "offset": "0x1F41A0"
        },
        "base::StackAllocator<scoped_refptr<mojo::core::Watch>,8>::deallocate": {
            "offset": "0x1F4330"
        },
        "base::StackAllocator<std::pair<base::HistogramBase *,int>,5>::allocate": {
            "offset": "0x121FE0"
        },
        "base::StackAllocator<std::pair<base::HistogramBase *,int>,5>::deallocate": {
            "offset": "0x122070"
        },
        "base::StackBuffer::StackBuffer": {
            "offset": "0xB4090"
        },
        "base::StackBuffer::buffer": {
            "offset": "0xB40C0"
        },
        "base::StackBuffer::size": {
            "offset": "0xAAA0"
        },
        "base::StackBuffer::~StackBuffer": {
            "offset": "0xF640"
        },
        "base::StackCopier::CopyStackContentsAndRewritePointers": {
            "offset": "0xB4190"
        },
        "base::StackCopier::RewritePointerIfInOriginalStack": {
            "offset": "0xB4210"
        },
        "base::StackCopier::StackCopier": {
            "offset": "0xB40D0"
        },
        "base::StackCopier::~StackCopier": {
            "offset": "0xB40E0"
        },
        "base::StackCopierSuspend::CopyStack": {
            "offset": "0xB43A0"
        },
        "base::StackCopierSuspend::StackCopierSuspend": {
            "offset": "0xB4240"
        },
        "base::StackCopierSuspend::~StackCopierSuspend": {
            "offset": "0xB42A0"
        },
        "base::StackSampler::Create": {
            "offset": "0xB5040"
        },
        "base::StackSampler::CreateStackBuffer": {
            "offset": "0xB4750"
        },
        "base::StackSampler::GetStackBufferSize": {
            "offset": "0xB51C0"
        },
        "base::StackSampler::StackSampler": {
            "offset": "0xB45D0"
        },
        "base::StackSampler::~StackSampler": {
            "offset": "0xB45F0"
        },
        "base::StackSamplerImpl::AddAuxUnwinder": {
            "offset": "0xB4B80"
        },
        "base::StackSamplerImpl::RecordStackFrames": {
            "offset": "0xB4C00"
        },
        "base::StackSamplerImpl::StackSamplerImpl": {
            "offset": "0xB4950"
        },
        "base::StackSamplerImpl::WalkStack": {
            "offset": "0xB4D40"
        },
        "base::StackSamplerImpl::WalkStackForTesting": {
            "offset": "0xB4ED0"
        },
        "base::StackSamplerImpl::~StackSamplerImpl": {
            "offset": "0xB4A80"
        },
        "base::StackSamplerTestDelegate::StackSamplerTestDelegate": {
            "offset": "0xB45E0"
        },
        "base::StackSamplerTestDelegate::~StackSamplerTestDelegate": {
            "offset": "0xB4600"
        },
        "base::StackSamplingProfiler::AddAuxUnwinder": {
            "offset": "0xB5DE0"
        },
        "base::StackSamplingProfiler::SamplingParams::SamplingParams": {
            "offset": "0xB5380"
        },
        "base::StackSamplingProfiler::SamplingThread::Add": {
            "offset": "0xB5950"
        },
        "base::StackSamplingProfiler::SamplingThread::AddAuxUnwinder": {
            "offset": "0xB5B60"
        },
        "base::StackSamplingProfiler::SamplingThread::AddAuxUnwinderTask": {
            "offset": "0xB5E70"
        },
        "base::StackSamplingProfiler::SamplingThread::AddCollectionTask": {
            "offset": "0xB5F90"
        },
        "base::StackSamplingProfiler::SamplingThread::CleanUp": {
            "offset": "0xB6320"
        },
        "base::StackSamplingProfiler::SamplingThread::FinishCollection": {
            "offset": "0xB6580"
        },
        "base::StackSamplingProfiler::SamplingThread::GetOrCreateTaskRunnerForAdd": {
            "offset": "0xB6700"
        },
        "base::StackSamplingProfiler::SamplingThread::GetTaskRunner": {
            "offset": "0xB6A10"
        },
        "base::StackSamplingProfiler::SamplingThread::GetTaskRunnerOnSamplingThread": {
            "offset": "0xB6BE0"
        },
        "base::StackSamplingProfiler::SamplingThread::RecordSampleTask": {
            "offset": "0xB6CC0"
        },
        "base::StackSamplingProfiler::SamplingThread::RemoveCollectionTask": {
            "offset": "0xB7030"
        },
        "base::StackSamplingProfiler::SamplingThread::ScheduleShutdownIfIdle": {
            "offset": "0xB73D0"
        },
        "base::StackSamplingProfiler::SamplingThread::ShutdownTask": {
            "offset": "0xB7AB0"
        },
        "base::StackSamplingProfiler::SamplingThread::TestPeer::ShutdownAssumingIdle": {
            "offset": "0xB7670"
        },
        "base::StackSamplingProfiler::SamplingThread::TestPeer::ShutdownTaskAndSignalEvent": {
            "offset": "0xB7D40"
        },
        "base::StackSamplingProfiler::StackSamplingProfiler": {
            "offset": "0xB5410"
        },
        "base::StackSamplingProfiler::Start": {
            "offset": "0xB7D60"
        },
        "base::StackSamplingProfiler::Stop": {
            "offset": "0xB8120"
        },
        "base::StackSamplingProfiler::TestPeer::DisableIdleShutdown": {
            "offset": "0xB6500"
        },
        "base::StackSamplingProfiler::TestPeer::IsSamplingThreadRunning": {
            "offset": "0xB6C90"
        },
        "base::StackSamplingProfiler::TestPeer::PerformSamplingThreadIdleShutdown": {
            "offset": "0xB6CB0"
        },
        "base::StackSamplingProfiler::TestPeer::Reset": {
            "offset": "0xB71E0"
        },
        "base::StackSamplingProfiler::~StackSamplingProfiler": {
            "offset": "0xB56F0"
        },
        "base::StartsWith": {
            "offset": "0xD0D50"
        },
        "base::StatisticsRecorder::ClearCallback": {
            "offset": "0x9FF70"
        },
        "base::StatisticsRecorder::CreateTemporaryForTesting": {
            "offset": "0xA01D0"
        },
        "base::StatisticsRecorder::EnsureGlobalRecorderWhileLocked": {
            "offset": "0xA0270"
        },
        "base::StatisticsRecorder::FindCallback": {
            "offset": "0xA0490"
        },
        "base::StatisticsRecorder::FindHistogram": {
            "offset": "0xA0600"
        },
        "base::StatisticsRecorder::ForgetHistogramForTesting": {
            "offset": "0xA06F0"
        },
        "base::StatisticsRecorder::GetBucketRanges": {
            "offset": "0xA0890"
        },
        "base::StatisticsRecorder::GetHistogramCount": {
            "offset": "0xA0990"
        },
        "base::StatisticsRecorder::GetHistogramProviders": {
            "offset": "0xA0A10"
        },
        "base::StatisticsRecorder::GetHistograms": {
            "offset": "0xA0B60"
        },
        "base::StatisticsRecorder::ImportGlobalPersistentHistograms": {
            "offset": "0xA0CC0"
        },
        "base::StatisticsRecorder::ImportProvidedHistograms": {
            "offset": "0xA0CE0"
        },
        "base::StatisticsRecorder::InitLogOnShutdown": {
            "offset": "0xA0E40"
        },
        "base::StatisticsRecorder::InitLogOnShutdownWhileLocked": {
            "offset": "0xA0EF0"
        },
        "base::StatisticsRecorder::NonPersistent": {
            "offset": "0xA0F50"
        },
        "base::StatisticsRecorder::PrepareDeltas": {
            "offset": "0xA1370"
        },
        "base::StatisticsRecorder::RegisterHistogramProvider": {
            "offset": "0xA15A0"
        },
        "base::StatisticsRecorder::RegisterOrDeleteDuplicate": {
            "offset": "0xA1660"
        },
        "base::StatisticsRecorder::RegisterOrDeleteDuplicateRanges": {
            "offset": "0xA1900"
        },
        "base::StatisticsRecorder::SetCallback": {
            "offset": "0xA1A40"
        },
        "base::StatisticsRecorder::SetGlobalSampleCallback": {
            "offset": "0xA1D30"
        },
        "base::StatisticsRecorder::SetRecordChecker": {
            "offset": "0xA1E60"
        },
        "base::StatisticsRecorder::ShouldRecordHistogram": {
            "offset": "0xA1F20"
        },
        "base::StatisticsRecorder::Sort": {
            "offset": "0xA1FC0"
        },
        "base::StatisticsRecorder::StatisticsRecorder": {
            "offset": "0x9F590"
        },
        "base::StatisticsRecorder::ToJSON": {
            "offset": "0xA2090"
        },
        "base::StatisticsRecorder::WithName": {
            "offset": "0xA2300"
        },
        "base::StatisticsRecorder::WriteGraph": {
            "offset": "0xA2450"
        },
        "base::StatisticsRecorder::WriteHTMLGraph": {
            "offset": "0xA2610"
        },
        "base::StatisticsRecorder::global_sample_callback": {
            "offset": "0x8E320"
        },
        "base::StatisticsRecorder::have_active_callbacks": {
            "offset": "0x8E330"
        },
        "base::StatisticsRecorder::~StatisticsRecorder": {
            "offset": "0x9FB00"
        },
        "base::StrAppend": {
            "offset": "0xC5E90"
        },
        "base::StrCat": {
            "offset": "0xC5FD0"
        },
        "base::StringAppendF": {
            "offset": "0xD2AE0"
        },
        "base::StringAppendV": {
            "offset": "0xD2B20"
        },
        "base::StringPrintV": {
            "offset": "0xD2B30"
        },
        "base::StringPrintf": {
            "offset": "0xD2C40"
        },
        "base::StringToDouble": {
            "offset": "0xC86D0"
        },
        "base::StringToInt": {
            "offset": "0xC8890"
        },
        "base::StringToInt64": {
            "offset": "0xC8850"
        },
        "base::StringToSizeT": {
            "offset": "0xC88D0"
        },
        "base::StringToUint": {
            "offset": "0xC89C0"
        },
        "base::StringToUint64": {
            "offset": "0xC88D0"
        },
        "base::StringTokenizerT<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *>::FullGetNext": {
            "offset": "0x15E060"
        },
        "base::StringTokenizerT<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *>::~StringTokenizerT<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *>": {
            "offset": "0x15DCF0"
        },
        "base::StringTokenizerT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >::FullGetNext": {
            "offset": "0x22380"
        },
        "base::StringTokenizerT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >::QuickGetNext": {
            "offset": "0x24AB0"
        },
        "base::StringTokenizerT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >::~StringTokenizerT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >": {
            "offset": "0x20F00"
        },
        "base::SubstringMatcher<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Find": {
            "offset": "0xCFB80"
        },
        "base::SubstringMatcher<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::Find": {
            "offset": "0xCFC70"
        },
        "base::SupportsUserData::ClearAllUserData": {
            "offset": "0xD6140"
        },
        "base::SupportsUserData::CloneDataFrom": {
            "offset": "0xD6210"
        },
        "base::SupportsUserData::Data::Clone": {
            "offset": "0xD61F0"
        },
        "base::SupportsUserData::Data::Data": {
            "offset": "0xD5D20"
        },
        "base::SupportsUserData::Data::~Data": {
            "offset": "0x12B0"
        },
        "base::SupportsUserData::DetachFromSequence": {
            "offset": "0xD6300"
        },
        "base::SupportsUserData::GetUserData": {
            "offset": "0xD6310"
        },
        "base::SupportsUserData::RemoveUserData": {
            "offset": "0xD6430"
        },
        "base::SupportsUserData::SetUserData": {
            "offset": "0xD6550"
        },
        "base::SupportsUserData::SupportsUserData": {
            "offset": "0xD5DC0"
        },
        "base::SupportsUserData::~SupportsUserData": {
            "offset": "0xD5E70"
        },
        "base::SupportsWeakPtr<base::FileProxy>::AsWeakPtr": {
            "offset": "0x48D20"
        },
        "base::SupportsWeakPtr<base::FileProxy>::SupportsWeakPtr<base::FileProxy>": {
            "offset": "0x48820"
        },
        "base::SupportsWeakPtr<base::FileProxy>::~SupportsWeakPtr<base::FileProxy>": {
            "offset": "0x48A60"
        },
        "base::SuspendableThreadDelegate::ScopedSuspendThread::ScopedSuspendThread": {
            "offset": "0xB4230"
        },
        "base::SuspendableThreadDelegate::ScopedSuspendThread::~ScopedSuspendThread": {
            "offset": "0x12B0"
        },
        "base::SuspendableThreadDelegate::SuspendableThreadDelegate": {
            "offset": "0xB4280"
        },
        "base::SuspendableThreadDelegate::~SuspendableThreadDelegate": {
            "offset": "0x12B0"
        },
        "base::SuspendableThreadDelegateWin::CanCopyStack": {
            "offset": "0xB8B50"
        },
        "base::SuspendableThreadDelegateWin::CreateScopedSuspendThread": {
            "offset": "0xB8B90"
        },
        "base::SuspendableThreadDelegateWin::GetRegistersToRewrite": {
            "offset": "0xB8C10"
        },
        "base::SuspendableThreadDelegateWin::GetStackBaseAddress": {
            "offset": "0xD8F0"
        },
        "base::SuspendableThreadDelegateWin::GetThreadContext": {
            "offset": "0xB8D10"
        },
        "base::SuspendableThreadDelegateWin::GetThreadId": {
            "offset": "0xD9A0"
        },
        "base::SuspendableThreadDelegateWin::ScopedSuspendThread::WasSuccessful": {
            "offset": "0x5B1A0"
        },
        "base::SuspendableThreadDelegateWin::SuspendableThreadDelegateWin": {
            "offset": "0xB88A0"
        },
        "base::SuspendableThreadDelegateWin::~SuspendableThreadDelegateWin": {
            "offset": "0xB8900"
        },
        "base::SyncSocket::Close": {
            "offset": "0xD7070"
        },
        "base::SyncSocket::CreatePair": {
            "offset": "0xD70C0"
        },
        "base::SyncSocket::Peek": {
            "offset": "0xD7780"
        },
        "base::SyncSocket::PrepareTransitDescriptor": {
            "offset": "0xD77C0"
        },
        "base::SyncSocket::Receive": {
            "offset": "0xD7940"
        },
        "base::SyncSocket::ReceiveWithTimeout": {
            "offset": "0xD7B80"
        },
        "base::SyncSocket::Release": {
            "offset": "0xD7C00"
        },
        "base::SyncSocket::Send": {
            "offset": "0xD7C50"
        },
        "base::SyncSocket::SyncSocket": {
            "offset": "0xD6DF0"
        },
        "base::SyncSocket::UnwrapHandle": {
            "offset": "0xAB80"
        },
        "base::SyncSocket::handle": {
            "offset": "0xAAA0"
        },
        "base::SyncSocket::~SyncSocket": {
            "offset": "0xD6E60"
        },
        "base::SysInfo::AmountOfAvailablePhysicalMemory": {
            "offset": "0xDA720"
        },
        "base::SysInfo::AmountOfAvailablePhysicalMemoryImpl": {
            "offset": "0xDAE40"
        },
        "base::SysInfo::AmountOfFreeDiskSpace": {
            "offset": "0xDAE80"
        },
        "base::SysInfo::AmountOfPhysicalMemory": {
            "offset": "0xDA780"
        },
        "base::SysInfo::AmountOfPhysicalMemoryImpl": {
            "offset": "0xDAFF0"
        },
        "base::SysInfo::AmountOfPhysicalMemoryMB": {
            "offset": "0x56F90"
        },
        "base::SysInfo::AmountOfTotalDiskSpace": {
            "offset": "0xDB000"
        },
        "base::SysInfo::AmountOfVirtualMemory": {
            "offset": "0xDB0B0"
        },
        "base::SysInfo::AmountOfVirtualMemoryMB": {
            "offset": "0x56FC0"
        },
        "base::SysInfo::CPUModelName": {
            "offset": "0xDB0C0"
        },
        "base::SysInfo::GetHardwareInfo": {
            "offset": "0xDA870"
        },
        "base::SysInfo::GetHardwareInfoSync": {
            "offset": "0xDB0F0"
        },
        "base::SysInfo::HardwareInfo::~HardwareInfo": {
            "offset": "0xDA620"
        },
        "base::SysInfo::HardwareModelName": {
            "offset": "0xDAA90"
        },
        "base::SysInfo::IsLowEndDevice": {
            "offset": "0xDAAC0"
        },
        "base::SysInfo::IsLowEndDeviceImpl": {
            "offset": "0xDAAF0"
        },
        "base::SysInfo::NumberOfProcessors": {
            "offset": "0xDB640"
        },
        "base::SysInfo::OperatingSystemArchitecture": {
            "offset": "0xDB660"
        },
        "base::SysInfo::OperatingSystemName": {
            "offset": "0xDB760"
        },
        "base::SysInfo::OperatingSystemVersion": {
            "offset": "0xDB7A0"
        },
        "base::SysInfo::OperatingSystemVersionNumbers": {
            "offset": "0xDB930"
        },
        "base::SysInfo::Uptime": {
            "offset": "0xDAC30"
        },
        "base::SysInfo::VMAllocationGranularity": {
            "offset": "0xDB970"
        },
        "base::SysMultiByteToWide": {
            "offset": "0xD2DA0"
        },
        "base::SysNativeMBToWide": {
            "offset": "0xD2EF0"
        },
        "base::SysUTF8ToWide": {
            "offset": "0xD2F20"
        },
        "base::SysWideToMultiByte": {
            "offset": "0xD2F50"
        },
        "base::SysWideToNativeMB": {
            "offset": "0xD30C0"
        },
        "base::SysWideToUTF8": {
            "offset": "0xD30E0"
        },
        "base::SystemAllocPages": {
            "offset": "0xF1B0"
        },
        "base::SystemMemoryInfoKB::SystemMemoryInfoKB": {
            "offset": "0x291F0"
        },
        "base::SystemMetrics::Sample": {
            "offset": "0xAF4C0"
        },
        "base::SystemMetrics::SystemMetrics": {
            "offset": "0x6A090"
        },
        "base::SystemMetrics::ToValue": {
            "offset": "0xAF500"
        },
        "base::SystemMonitor::AddDevicesChangedObserver": {
            "offset": "0xDBD10"
        },
        "base::SystemMonitor::DevicesChangedObserver::DevicesChangedObserver": {
            "offset": "0xDB990"
        },
        "base::SystemMonitor::DevicesChangedObserver::OnDevicesChanged": {
            "offset": "0x12B0"
        },
        "base::SystemMonitor::DevicesChangedObserver::~DevicesChangedObserver": {
            "offset": "0x12B0"
        },
        "base::SystemMonitor::Get": {
            "offset": "0xDBD30"
        },
        "base::SystemMonitor::NotifyDevicesChanged": {
            "offset": "0xDBD40"
        },
        "base::SystemMonitor::ProcessDevicesChanged": {
            "offset": "0xDBE30"
        },
        "base::SystemMonitor::RemoveDevicesChangedObserver": {
            "offset": "0xDBE40"
        },
        "base::SystemMonitor::SystemMonitor": {
            "offset": "0xDB9A0"
        },
        "base::SystemMonitor::~SystemMonitor": {
            "offset": "0xDBB10"
        },
        "base::SystemPerformanceInfo::SystemPerformanceInfo": {
            "offset": "0xAF7D0"
        },
        "base::SystemPerformanceInfo::ToValue": {
            "offset": "0xAFD50"
        },
        "base::TaskAnnotator::ClearObserverForTesting": {
            "offset": "0xE0F40"
        },
        "base::TaskAnnotator::CurrentTaskForThread": {
            "offset": "0xE0F50"
        },
        "base::TaskAnnotator::GetTaskTraceID": {
            "offset": "0xE1010"
        },
        "base::TaskAnnotator::RegisterObserverForTesting": {
            "offset": "0xE1020"
        },
        "base::TaskAnnotator::RunTask": {
            "offset": "0xE10B0"
        },
        "base::TaskAnnotator::ScopedSetIpcHash::ScopedSetIpcHash": {
            "offset": "0xE0D60"
        },
        "base::TaskAnnotator::ScopedSetIpcHash::~ScopedSetIpcHash": {
            "offset": "0xE0E60"
        },
        "base::TaskAnnotator::TaskAnnotator": {
            "offset": "0x3FB0"
        },
        "base::TaskAnnotator::WillQueueTask": {
            "offset": "0xE1410"
        },
        "base::TaskAnnotator::~TaskAnnotator": {
            "offset": "0x12B0"
        },
        "base::TaskExecutor::TaskExecutor": {
            "offset": "0xE2A20"
        },
        "base::TaskExecutor::~TaskExecutor": {
            "offset": "0x12B0"
        },
        "base::TaskObserver::TaskObserver": {
            "offset": "0x74AB0"
        },
        "base::TaskObserver::~TaskObserver": {
            "offset": "0x12B0"
        },
        "base::TaskPriorityToString": {
            "offset": "0x109380"
        },
        "base::TaskRunner::OnDestruct": {
            "offset": "0x128A40"
        },
        "base::TaskRunner::PostTask": {
            "offset": "0x128AE0"
        },
        "base::TaskRunner::PostTaskAndReply": {
            "offset": "0x128B40"
        },
        "base::TaskRunner::TaskRunner": {
            "offset": "0x128920"
        },
        "base::TaskRunner::~TaskRunner": {
            "offset": "0x128940"
        },
        "base::TaskRunnerTraits::Destruct": {
            "offset": "0x128A30"
        },
        "base::TaskShutdownBehaviorToString": {
            "offset": "0x109430"
        },
        "base::TaskToken::Create": {
            "offset": "0xC2D40"
        },
        "base::TaskToken::GetForCurrentThread": {
            "offset": "0xC2DA0"
        },
        "base::TaskToken::IsValid": {
            "offset": "0xC2EE0"
        },
        "base::TaskToken::TaskToken": {
            "offset": "0x74AA0"
        },
        "base::TaskTraits::InheritPriority": {
            "offset": "0x109350"
        },
        "base::TaskTraits::TaskTraits": {
            "offset": "0xAB380"
        },
        "base::TaskTraits::TaskTraits<base::ThreadPool,enum base::TaskPriority,enum base::ThreadPolicy,void>": {
            "offset": "0x123530"
        },
        "base::TaskTraits::TaskTraits<base::ThreadPool,void>": {
            "offset": "0xE3D10"
        },
        "base::TaskTraits::UpdatePriority": {
            "offset": "0xAB920"
        },
        "base::TaskTraits::extension_id": {
            "offset": "0xD790"
        },
        "base::TaskTraits::may_block": {
            "offset": "0xAB930"
        },
        "base::TaskTraits::priority": {
            "offset": "0xAB940"
        },
        "base::TaskTraits::priority_set_explicitly": {
            "offset": "0xAB950"
        },
        "base::TaskTraits::shutdown_behavior": {
            "offset": "0xAB960"
        },
        "base::TaskTraits::shutdown_behavior_set_explicitly": {
            "offset": "0xAB970"
        },
        "base::TaskTraits::thread_policy": {
            "offset": "0xAB980"
        },
        "base::TaskTraits::thread_policy_set_explicitly": {
            "offset": "0xAB990"
        },
        "base::TaskTraits::use_thread_pool": {
            "offset": "0xAB9A0"
        },
        "base::TaskTraits::with_base_sync_primitives": {
            "offset": "0xAB9B0"
        },
        "base::TaskTraitsExtensionStorage::TaskTraitsExtensionStorage": {
            "offset": "0xAB3F0"
        },
        "base::TerminateBecauseOutOfMemory": {
            "offset": "0xAE490"
        },
        "base::TextContentsEqual": {
            "offset": "0x4CED0"
        },
        "base::Thread::CleanUp": {
            "offset": "0x12B0"
        },
        "base::Thread::Delegate::Delegate": {
            "offset": "0x55380"
        },
        "base::Thread::Delegate::~Delegate": {
            "offset": "0x55720"
        },
        "base::Thread::DetachFromSequence": {
            "offset": "0x1399E0"
        },
        "base::Thread::FlushForTesting": {
            "offset": "0x139A70"
        },
        "base::Thread::GetThreadId": {
            "offset": "0x139C90"
        },
        "base::Thread::GetThreadWasQuitProperly": {
            "offset": "0x139CD0"
        },
        "base::Thread::Init": {
            "offset": "0x12B0"
        },
        "base::Thread::IsRunning": {
            "offset": "0x139D00"
        },
        "base::Thread::Options::Options": {
            "offset": "0x139350"
        },
        "base::Thread::Options::~Options": {
            "offset": "0x1395E0"
        },
        "base::Thread::Run": {
            "offset": "0x139D90"
        },
        "base::Thread::SetThreadWasQuitProperly": {
            "offset": "0x139EB0"
        },
        "base::Thread::Start": {
            "offset": "0x139EE0"
        },
        "base::Thread::StartAndWaitForTesting": {
            "offset": "0x139FC0"
        },
        "base::Thread::StartWithOptions": {
            "offset": "0x13A080"
        },
        "base::Thread::Stop": {
            "offset": "0x13A640"
        },
        "base::Thread::StopSoon": {
            "offset": "0x13A780"
        },
        "base::Thread::Thread": {
            "offset": "0x139510"
        },
        "base::Thread::ThreadMain": {
            "offset": "0x13A8A0"
        },
        "base::Thread::ThreadQuitHelper": {
            "offset": "0x13AD50"
        },
        "base::Thread::WaitUntilThreadStarted": {
            "offset": "0x13ADF0"
        },
        "base::Thread::init_com_with_mta": {
            "offset": "0x56CC0"
        },
        "base::Thread::task_runner": {
            "offset": "0x56D50"
        },
        "base::Thread::thread_name": {
            "offset": "0xD5F0"
        },
        "base::Thread::~Thread": {
            "offset": "0x1395F0"
        },
        "base::ThreadChecker::~ThreadChecker": {
            "offset": "0x74CA0"
        },
        "base::ThreadCheckerImpl::CalledOnValidThread": {
            "offset": "0x13B160"
        },
        "base::ThreadCheckerImpl::DetachFromThread": {
            "offset": "0x13B280"
        },
        "base::ThreadCheckerImpl::EnsureAssignedLockRequired": {
            "offset": "0x13B2E0"
        },
        "base::ThreadCheckerImpl::ThreadCheckerImpl": {
            "offset": "0x13AF90"
        },
        "base::ThreadCheckerImpl::~ThreadCheckerImpl": {
            "offset": "0x13B040"
        },
        "base::ThreadCollisionWarner::Check::Check": {
            "offset": "0x3140"
        },
        "base::ThreadCollisionWarner::Enter": {
            "offset": "0x13B330"
        },
        "base::ThreadCollisionWarner::EnterSelf": {
            "offset": "0x13B360"
        },
        "base::ThreadCollisionWarner::Leave": {
            "offset": "0x13B390"
        },
        "base::ThreadCollisionWarner::ScopedCheck::ScopedCheck": {
            "offset": "0x3490"
        },
        "base::ThreadCollisionWarner::ScopedCheck::~ScopedCheck": {
            "offset": "0x3B90"
        },
        "base::ThreadCollisionWarner::ScopedRecursiveCheck::ScopedRecursiveCheck": {
            "offset": "0x3140"
        },
        "base::ThreadCollisionWarner::ScopedRecursiveCheck::~ScopedRecursiveCheck": {
            "offset": "0x3B90"
        },
        "base::ThreadCollisionWarner::ThreadCollisionWarner": {
            "offset": "0x3560"
        },
        "base::ThreadCollisionWarner::~ThreadCollisionWarner": {
            "offset": "0x3C10"
        },
        "base::ThreadDelegate::ThreadDelegate": {
            "offset": "0xB4290"
        },
        "base::ThreadDelegate::~ThreadDelegate": {
            "offset": "0x12B0"
        },
        "base::ThreadIdNameManager::AddObserver": {
            "offset": "0x13B960"
        },
        "base::ThreadIdNameManager::GetDefaultInternedString": {
            "offset": "0x13BA50"
        },
        "base::ThreadIdNameManager::GetInstance": {
            "offset": "0x13BA70"
        },
        "base::ThreadIdNameManager::GetName": {
            "offset": "0x13BB60"
        },
        "base::ThreadIdNameManager::GetNameForCurrentThread": {
            "offset": "0x13BD00"
        },
        "base::ThreadIdNameManager::Observer::Observer": {
            "offset": "0xC07E0"
        },
        "base::ThreadIdNameManager::Observer::~Observer": {
            "offset": "0x13B720"
        },
        "base::ThreadIdNameManager::RegisterThread": {
            "offset": "0x13BDB0"
        },
        "base::ThreadIdNameManager::RemoveName": {
            "offset": "0x13BF90"
        },
        "base::ThreadIdNameManager::RemoveObserver": {
            "offset": "0x13C160"
        },
        "base::ThreadIdNameManager::SetName": {
            "offset": "0x13C290"
        },
        "base::ThreadIdNameManager::ThreadIdNameManager": {
            "offset": "0x13B430"
        },
        "base::ThreadIdNameManager::~ThreadIdNameManager": {
            "offset": "0x13B730"
        },
        "base::ThreadLocalBoolean::~ThreadLocalBoolean": {
            "offset": "0x13DF80"
        },
        "base::ThreadLocalPointer<base::trace_event::TraceLog::ThreadLocalEventBuffer>::~ThreadLocalPointer<base::trace_event::TraceLog::ThreadLocalEventBuffer>": {
            "offset": "0x13DF80"
        },
        "base::ThreadLocalStorage::HasBeenDestroyed": {
            "offset": "0x13CD00"
        },
        "base::ThreadLocalStorage::Slot::Free": {
            "offset": "0x13C970"
        },
        "base::ThreadLocalStorage::Slot::Get": {
            "offset": "0x13CAD0"
        },
        "base::ThreadLocalStorage::Slot::Initialize": {
            "offset": "0x13CD30"
        },
        "base::ThreadLocalStorage::Slot::Set": {
            "offset": "0x13D230"
        },
        "base::ThreadLocalStorage::Slot::Slot": {
            "offset": "0x13C6A0"
        },
        "base::ThreadLocalStorage::Slot::~Slot": {
            "offset": "0x13C6D0"
        },
        "base::ThreadPoolInstance::Create": {
            "offset": "0x126B10"
        },
        "base::ThreadPoolInstance::CreateAndStartWithDefaultParams": {
            "offset": "0x126B80"
        },
        "base::ThreadPoolInstance::Get": {
            "offset": "0x126C20"
        },
        "base::ThreadPoolInstance::InitParams::InitParams": {
            "offset": "0x1268B0"
        },
        "base::ThreadPoolInstance::InitParams::~InitParams": {
            "offset": "0x12B0"
        },
        "base::ThreadPoolInstance::ScopedBestEffortExecutionFence::ScopedBestEffortExecutionFence": {
            "offset": "0x1268D0"
        },
        "base::ThreadPoolInstance::ScopedBestEffortExecutionFence::~ScopedBestEffortExecutionFence": {
            "offset": "0x126A10"
        },
        "base::ThreadPoolInstance::ScopedExecutionFence::ScopedExecutionFence": {
            "offset": "0x126970"
        },
        "base::ThreadPoolInstance::ScopedExecutionFence::~ScopedExecutionFence": {
            "offset": "0x126A90"
        },
        "base::ThreadPoolInstance::Set": {
            "offset": "0x126C30"
        },
        "base::ThreadPoolInstance::StartWithDefaultParams": {
            "offset": "0x126C70"
        },
        "base::ThreadPoolInstance::ThreadPoolInstance": {
            "offset": "0xE2A30"
        },
        "base::ThreadPoolInstance::~ThreadPoolInstance": {
            "offset": "0x12B0"
        },
        "base::ThreadRestrictions::AssertSingletonAllowed": {
            "offset": "0x13E320"
        },
        "base::ThreadRestrictions::DisallowWaiting": {
            "offset": "0x13E5B0"
        },
        "base::ThreadRestrictions::ScopedAllowIO::ScopedAllowIO": {
            "offset": "0x13D7B0"
        },
        "base::ThreadRestrictions::ScopedAllowIO::~ScopedAllowIO": {
            "offset": "0x13DCF0"
        },
        "base::ThreadRestrictions::SetIOAllowed": {
            "offset": "0x13EBA0"
        },
        "base::ThreadRestrictions::SetSingletonAllowed": {
            "offset": "0x13EC00"
        },
        "base::ThreadRestrictions::SetWaitAllowed": {
            "offset": "0x13EC60"
        },
        "base::ThreadTaskRunnerHandle::Get": {
            "offset": "0x13F3E0"
        },
        "base::ThreadTaskRunnerHandle::IsSet": {
            "offset": "0x13F480"
        },
        "base::ThreadTaskRunnerHandle::OverrideForTesting": {
            "offset": "0x13F4B0"
        },
        "base::ThreadTaskRunnerHandle::ThreadTaskRunnerHandle": {
            "offset": "0x13EE40"
        },
        "base::ThreadTaskRunnerHandle::~ThreadTaskRunnerHandle": {
            "offset": "0x13F070"
        },
        "base::ThreadTicks::FromInternalValue": {
            "offset": "0x2FB0"
        },
        "base::ThreadTicks::GetForThread": {
            "offset": "0x141EB0"
        },
        "base::ThreadTicks::IsSupported": {
            "offset": "0xAF90"
        },
        "base::ThreadTicks::IsSupportedWin": {
            "offset": "0x1422E0"
        },
        "base::ThreadTicks::Now": {
            "offset": "0x140FA0"
        },
        "base::ThreadTicks::TSCTicksPerSecond": {
            "offset": "0x142870"
        },
        "base::ThreadTicks::ThreadTicks": {
            "offset": "0x30F0"
        },
        "base::ThreadTicks::WaitUntilInitialized": {
            "offset": "0xC490"
        },
        "base::ThreadTicks::WaitUntilInitializedWin": {
            "offset": "0x142E60"
        },
        "base::TickClock::TickClock": {
            "offset": "0x74AC0"
        },
        "base::TickClock::~TickClock": {
            "offset": "0x1406A0"
        },
        "base::Time::ActivateHighResolutionTimer": {
            "offset": "0x141920"
        },
        "base::Time::EnableHighResolutionTimer": {
            "offset": "0x141A60"
        },
        "base::Time::Explode": {
            "offset": "0x141AE0"
        },
        "base::Time::Exploded::HasValidValues": {
            "offset": "0x140BF0"
        },
        "base::Time::ExplodedMostlyEquals": {
            "offset": "0x140840"
        },
        "base::Time::FromDeltaSinceWindowsEpoch": {
            "offset": "0x2FB0"
        },
        "base::Time::FromDoubleT": {
            "offset": "0x140880"
        },
        "base::Time::FromExploded": {
            "offset": "0x141C70"
        },
        "base::Time::FromFileTime": {
            "offset": "0x141DA0"
        },
        "base::Time::FromInternalValue": {
            "offset": "0x2FB0"
        },
        "base::Time::FromJavaTime": {
            "offset": "0x140920"
        },
        "base::Time::FromJsTime": {
            "offset": "0x140990"
        },
        "base::Time::FromLocalExploded": {
            "offset": "0xA6B0"
        },
        "base::Time::FromMillisecondsSinceUnixEpoch": {
            "offset": "0x140A10"
        },
        "base::Time::FromString": {
            "offset": "0xAA10"
        },
        "base::Time::FromStringInternal": {
            "offset": "0x140A80"
        },
        "base::Time::FromTimeT": {
            "offset": "0x140B60"
        },
        "base::Time::FromUTCExploded": {
            "offset": "0xAA40"
        },
        "base::Time::FromUTCString": {
            "offset": "0xAA50"
        },
        "base::Time::GetHighResolutionTimerUsage": {
            "offset": "0x142050"
        },
        "base::Time::IsHighResolutionTimerInUse": {
            "offset": "0x142270"
        },
        "base::Time::LocalExplode": {
            "offset": "0xAFD0"
        },
        "base::Time::LocalMidnight": {
            "offset": "0xAFE0"
        },
        "base::Time::Midnight": {
            "offset": "0x140E80"
        },
        "base::Time::Now": {
            "offset": "0x140FC0"
        },
        "base::Time::NowFromSystemTime": {
            "offset": "0x141000"
        },
        "base::Time::ReadMinTimerIntervalLowResMs": {
            "offset": "0x1426B0"
        },
        "base::Time::ResetHighResolutionTimerUsage": {
            "offset": "0x142730"
        },
        "base::Time::Time": {
            "offset": "0x30F0"
        },
        "base::Time::ToDeltaSinceWindowsEpoch": {
            "offset": "0x9A20"
        },
        "base::Time::ToDoubleT": {
            "offset": "0x141080"
        },
        "base::Time::ToFileTime": {
            "offset": "0x142D20"
        },
        "base::Time::ToJavaTime": {
            "offset": "0x1410D0"
        },
        "base::Time::ToJsTime": {
            "offset": "0x141120"
        },
        "base::Time::ToJsTimeIgnoringNull": {
            "offset": "0x141170"
        },
        "base::Time::ToRoundedDownMillisecondsSinceUnixEpoch": {
            "offset": "0x1411B0"
        },
        "base::Time::ToTimeT": {
            "offset": "0x1411F0"
        },
        "base::Time::UTCExplode": {
            "offset": "0xC160"
        },
        "base::Time::UTCMidnight": {
            "offset": "0xC170"
        },
        "base::Time::UnixEpoch": {
            "offset": "0x141310"
        },
        "base::TimeDelta::FromDays": {
            "offset": "0xA5E0"
        },
        "base::TimeDelta::FromDouble": {
            "offset": "0xA620"
        },
        "base::TimeDelta::FromFileTime": {
            "offset": "0x141DF0"
        },
        "base::TimeDelta::FromHours": {
            "offset": "0xA680"
        },
        "base::TimeDelta::FromInternalValue": {
            "offset": "0x2FB0"
        },
        "base::TimeDelta::FromMicroseconds": {
            "offset": "0x2FB0"
        },
        "base::TimeDelta::FromMicrosecondsD": {
            "offset": "0xA620"
        },
        "base::TimeDelta::FromMilliseconds": {
            "offset": "0xA6C0"
        },
        "base::TimeDelta::FromMillisecondsD": {
            "offset": "0xA710"
        },
        "base::TimeDelta::FromMinutes": {
            "offset": "0xA780"
        },
        "base::TimeDelta::FromNanoseconds": {
            "offset": "0xA7B0"
        },
        "base::TimeDelta::FromNanosecondsD": {
            "offset": "0xA7E0"
        },
        "base::TimeDelta::FromProduct": {
            "offset": "0xA860"
        },
        "base::TimeDelta::FromQPCValue": {
            "offset": "0x141E20"
        },
        "base::TimeDelta::FromSeconds": {
            "offset": "0xA950"
        },
        "base::TimeDelta::FromSecondsD": {
            "offset": "0xA9A0"
        },
        "base::TimeDelta::FromWinrtDateTime": {
            "offset": "0x141DF0"
        },
        "base::TimeDelta::InDays": {
            "offset": "0x140C30"
        },
        "base::TimeDelta::InDaysFloored": {
            "offset": "0x140C60"
        },
        "base::TimeDelta::InHours": {
            "offset": "0x140CA0"
        },
        "base::TimeDelta::InMicroseconds": {
            "offset": "0xAB80"
        },
        "base::TimeDelta::InMicrosecondsF": {
            "offset": "0x140CE0"
        },
        "base::TimeDelta::InMilliseconds": {
            "offset": "0x140D10"
        },
        "base::TimeDelta::InMillisecondsF": {
            "offset": "0x140D40"
        },
        "base::TimeDelta::InMillisecondsRoundedUp": {
            "offset": "0x140D70"
        },
        "base::TimeDelta::InMinutes": {
            "offset": "0x140DC0"
        },
        "base::TimeDelta::InNanoseconds": {
            "offset": "0x140E00"
        },
        "base::TimeDelta::InSeconds": {
            "offset": "0x140E20"
        },
        "base::TimeDelta::InSecondsF": {
            "offset": "0x140E50"
        },
        "base::TimeDelta::Max": {
            "offset": "0xB100"
        },
        "base::TimeDelta::Min": {
            "offset": "0xB130"
        },
        "base::TimeDelta::TimeDelta": {
            "offset": "0x30F0"
        },
        "base::TimeDelta::ToInternalValue": {
            "offset": "0xAB80"
        },
        "base::TimeDelta::ToWinrtDateTime": {
            "offset": "0x142D90"
        },
        "base::TimeDelta::is_max": {
            "offset": "0xD720"
        },
        "base::TimeDelta::is_min": {
            "offset": "0xD740"
        },
        "base::TimeDelta::is_zero": {
            "offset": "0xAEE0"
        },
        "base::TimeDelta::magnitude": {
            "offset": "0xD7B0"
        },
        "base::TimeTicks::FromInternalValue": {
            "offset": "0x2FB0"
        },
        "base::TimeTicks::FromQPCValue": {
            "offset": "0x141E40"
        },
        "base::TimeTicks::GetClock": {
            "offset": "0x141E70"
        },
        "base::TimeTicks::IsConsistentAcrossProcesses": {
            "offset": "0x142230"
        },
        "base::TimeTicks::IsHighResolution": {
            "offset": "0x142230"
        },
        "base::TimeTicks::Now": {
            "offset": "0x140FE0"
        },
        "base::TimeTicks::SetMockTickFunction": {
            "offset": "0x142850"
        },
        "base::TimeTicks::SnappedToNextTick": {
            "offset": "0x141020"
        },
        "base::TimeTicks::TimeTicks": {
            "offset": "0x30F0"
        },
        "base::TimeTicks::UnixEpoch": {
            "offset": "0x141330"
        },
        "base::TimeToISO8601": {
            "offset": "0x141500"
        },
        "base::ToLowerASCII": {
            "offset": "0xD1000"
        },
        "base::ToUpperASCII": {
            "offset": "0xD1160"
        },
        "base::Token::CreateRandom": {
            "offset": "0x1459D0"
        },
        "base::Token::ToString": {
            "offset": "0x145A80"
        },
        "base::Token::Token": {
            "offset": "0x29200"
        },
        "base::Token::high": {
            "offset": "0xAB80"
        },
        "base::Token::is_zero": {
            "offset": "0x2C060"
        },
        "base::Token::low": {
            "offset": "0xAAA0"
        },
        "base::TouchFile": {
            "offset": "0x4D520"
        },
        "base::TrimString": {
            "offset": "0xD13C0"
        },
        "base::TrimWhitespace": {
            "offset": "0xD1570"
        },
        "base::TrimWhitespaceASCII": {
            "offset": "0xD1770"
        },
        "base::TruncateFile": {
            "offset": "0x4D5D0"
        },
        "base::TruncateUTF8ToByteSize": {
            "offset": "0xD18A0"
        },
        "base::TrySetSystemPagesAccess": {
            "offset": "0xF350"
        },
        "base::UTF16ToASCII": {
            "offset": "0xD5920"
        },
        "base::UTF16ToUTF8": {
            "offset": "0xD5B00"
        },
        "base::UTF16ToUTF8AndAdjustOffsets": {
            "offset": "0xD3DD0"
        },
        "base::UTF16ToWide": {
            "offset": "0xD5B80"
        },
        "base::UTF8ToUTF16": {
            "offset": "0xD5C10"
        },
        "base::UTF8ToUTF16AndAdjustOffsets": {
            "offset": "0xD40A0"
        },
        "base::UTF8ToUTF16WithAdjustments": {
            "offset": "0xD43C0"
        },
        "base::UTF8ToWide": {
            "offset": "0xD5C10"
        },
        "base::UkmSourceId::FromInt64": {
            "offset": "0x2FB0"
        },
        "base::UkmSourceId::FromOtherId": {
            "offset": "0xA2F60"
        },
        "base::UkmSourceId::GetType": {
            "offset": "0xA3150"
        },
        "base::UkmSourceId::New": {
            "offset": "0xA3160"
        },
        "base::UkmSourceId::ToInt64": {
            "offset": "0xAB80"
        },
        "base::UkmSourceId::UkmSourceId": {
            "offset": "0x30F0"
        },
        "base::UmaHistogramBoolean": {
            "offset": "0x8FB30"
        },
        "base::UmaHistogramCounts100": {
            "offset": "0x8FD20"
        },
        "base::UmaHistogramCounts1000": {
            "offset": "0x8FCA0"
        },
        "base::UmaHistogramCounts10000": {
            "offset": "0x8FC20"
        },
        "base::UmaHistogramCounts100000": {
            "offset": "0x8FBA0"
        },
        "base::UmaHistogramCounts10M": {
            "offset": "0x8FDA0"
        },
        "base::UmaHistogramCounts1M": {
            "offset": "0x8FE20"
        },
        "base::UmaHistogramCustomCounts": {
            "offset": "0x8FEA0"
        },
        "base::UmaHistogramCustomMicrosecondsTimes": {
            "offset": "0x8FF20"
        },
        "base::UmaHistogramCustomTimes": {
            "offset": "0x8FFA0"
        },
        "base::UmaHistogramExactLinear": {
            "offset": "0x90010"
        },
        "base::UmaHistogramLongTimes": {
            "offset": "0x90080"
        },
        "base::UmaHistogramMediumTimes": {
            "offset": "0x90100"
        },
        "base::UmaHistogramMemoryKB": {
            "offset": "0x90180"
        },
        "base::UmaHistogramMemoryLargeMB": {
            "offset": "0x90200"
        },
        "base::UmaHistogramMemoryMB": {
            "offset": "0x8FCA0"
        },
        "base::UmaHistogramMicrosecondsTimes": {
            "offset": "0x90280"
        },
        "base::UmaHistogramMicrosecondsTimesUnderTenMilliseconds": {
            "offset": "0x90300"
        },
        "base::UmaHistogramPercentage": {
            "offset": "0x90380"
        },
        "base::UmaHistogramSparse": {
            "offset": "0x903F0"
        },
        "base::UmaHistogramTimes": {
            "offset": "0x90510"
        },
        "base::UncheckedCalloc": {
            "offset": "0xAE370"
        },
        "base::UncheckedMalloc": {
            "offset": "0xAE4A0"
        },
        "base::UnguessableToken::Create": {
            "offset": "0x1702B0"
        },
        "base::UnguessableToken::Deserialize": {
            "offset": "0x1702E0"
        },
        "base::UnguessableToken::GetHighForSerialization": {
            "offset": "0x2A060"
        },
        "base::UnguessableToken::GetLowForSerialization": {
            "offset": "0x2A250"
        },
        "base::UnguessableToken::Null": {
            "offset": "0x170390"
        },
        "base::UnguessableToken::ToString": {
            "offset": "0x2BAC0"
        },
        "base::UnguessableToken::UnguessableToken": {
            "offset": "0x291F0"
        },
        "base::UnguessableToken::is_empty": {
            "offset": "0x2C060"
        },
        "base::UnloadNativeLibrary": {
            "offset": "0xA5190"
        },
        "base::UnregisterTaskExecutorForTesting": {
            "offset": "0x1091C0"
        },
        "base::UnsafeSharedMemoryRegion::Create": {
            "offset": "0x739B0"
        },
        "base::UnsafeSharedMemoryRegion::Deserialize": {
            "offset": "0x73A20"
        },
        "base::UnsafeSharedMemoryRegion::Duplicate": {
            "offset": "0x73A70"
        },
        "base::UnsafeSharedMemoryRegion::GetGUID": {
            "offset": "0x6A960"
        },
        "base::UnsafeSharedMemoryRegion::GetPlatformHandle": {
            "offset": "0x6A9F0"
        },
        "base::UnsafeSharedMemoryRegion::GetSize": {
            "offset": "0x6AA80"
        },
        "base::UnsafeSharedMemoryRegion::IsValid": {
            "offset": "0x71290"
        },
        "base::UnsafeSharedMemoryRegion::Map": {
            "offset": "0x73AA0"
        },
        "base::UnsafeSharedMemoryRegion::MapAt": {
            "offset": "0x73AC0"
        },
        "base::UnsafeSharedMemoryRegion::TakeHandleForSerialization": {
            "offset": "0x71360"
        },
        "base::UnsafeSharedMemoryRegion::UnsafeSharedMemoryRegion": {
            "offset": "0x71050"
        },
        "base::UnsafeSharedMemoryRegion::set_create_hook": {
            "offset": "0x6BF20"
        },
        "base::UnsafeSharedMemoryRegion::~UnsafeSharedMemoryRegion": {
            "offset": "0x71070"
        },
        "base::Unwinder::AddNonNativeModules": {
            "offset": "0x12B0"
        },
        "base::UpdateableSequencedTaskRunner::UpdateableSequencedTaskRunner": {
            "offset": "0xAB400"
        },
        "base::UpdateableSequencedTaskRunner::~UpdateableSequencedTaskRunner": {
            "offset": "0x3BF0"
        },
        "base::Value::Append": {
            "offset": "0x1753E0"
        },
        "base::Value::AsDictionaryValue": {
            "offset": "0x1758A0"
        },
        "base::Value::AsDoubleInternal": {
            "offset": "0x175900"
        },
        "base::Value::AsListValue": {
            "offset": "0x175910"
        },
        "base::Value::ClearList": {
            "offset": "0x175AD0"
        },
        "base::Value::Clone": {
            "offset": "0x175B80"
        },
        "base::Value::CreateDeepCopy": {
            "offset": "0x176620"
        },
        "base::Value::CreateWithCopiedBuffer": {
            "offset": "0x176660"
        },
        "base::Value::DeepCopy": {
            "offset": "0x1768B0"
        },
        "base::Value::DictEmpty": {
            "offset": "0x1769C0"
        },
        "base::Value::DictItems": {
            "offset": "0x176AA0"
        },
        "base::Value::DictSize": {
            "offset": "0x176B20"
        },
        "base::Value::Equals": {
            "offset": "0x176BA0"
        },
        "base::Value::EraseListIter": {
            "offset": "0x176D10"
        },
        "base::Value::EraseListValue": {
            "offset": "0x176FA0"
        },
        "base::Value::EraseListValueIf<<lambda_c06b5192f150becc486110e09d840248> >": {
            "offset": "0x171190"
        },
        "base::Value::EstimateMemoryUsage": {
            "offset": "0x176FB0"
        },
        "base::Value::ExtractKey": {
            "offset": "0x177110"
        },
        "base::Value::ExtractPath": {
            "offset": "0x177270"
        },
        "base::Value::FindBlobKey": {
            "offset": "0x1774E0"
        },
        "base::Value::FindBlobPath": {
            "offset": "0x177520"
        },
        "base::Value::FindBoolKey": {
            "offset": "0x177560"
        },
        "base::Value::FindBoolPath": {
            "offset": "0x1775B0"
        },
        "base::Value::FindDictKey": {
            "offset": "0x177600"
        },
        "base::Value::FindDictPath": {
            "offset": "0x177630"
        },
        "base::Value::FindDoubleKey": {
            "offset": "0x177660"
        },
        "base::Value::FindDoublePath": {
            "offset": "0x1776D0"
        },
        "base::Value::FindIntKey": {
            "offset": "0x177740"
        },
        "base::Value::FindIntPath": {
            "offset": "0x1777A0"
        },
        "base::Value::FindKey": {
            "offset": "0x177810"
        },
        "base::Value::FindKeyOfType": {
            "offset": "0x177910"
        },
        "base::Value::FindListKey": {
            "offset": "0x177950"
        },
        "base::Value::FindListPath": {
            "offset": "0x177980"
        },
        "base::Value::FindPath": {
            "offset": "0x177D10"
        },
        "base::Value::FindPathOfType": {
            "offset": "0x178140"
        },
        "base::Value::FindStringKey": {
            "offset": "0x178180"
        },
        "base::Value::FindStringPath": {
            "offset": "0x1781F0"
        },
        "base::Value::FromUniquePtrValue": {
            "offset": "0x178330"
        },
        "base::Value::GetAsBoolean": {
            "offset": "0x178580"
        },
        "base::Value::GetAsDictionary": {
            "offset": "0x1785A0"
        },
        "base::Value::GetAsDouble": {
            "offset": "0x1785C0"
        },
        "base::Value::GetAsInteger": {
            "offset": "0x178600"
        },
        "base::Value::GetAsList": {
            "offset": "0x178620"
        },
        "base::Value::GetAsString": {
            "offset": "0x1786E0"
        },
        "base::Value::GetBlob": {
            "offset": "0x178990"
        },
        "base::Value::GetBool": {
            "offset": "0x1789F0"
        },
        "base::Value::GetDouble": {
            "offset": "0x1791D0"
        },
        "base::Value::GetInt": {
            "offset": "0x1793C0"
        },
        "base::Value::GetList": {
            "offset": "0x179930"
        },
        "base::Value::GetString": {
            "offset": "0x179E00"
        },
        "base::Value::GetTypeName": {
            "offset": "0x17A310"
        },
        "base::Value::Insert": {
            "offset": "0x17A720"
        },
        "base::Value::InternalCleanup": {
            "offset": "0x17AAD0"
        },
        "base::Value::InternalMoveConstructFrom": {
            "offset": "0x17AD50"
        },
        "base::Value::MergeDictionary": {
            "offset": "0x17AE80"
        },
        "base::Value::RemoveKey": {
            "offset": "0x17B470"
        },
        "base::Value::RemovePath": {
            "offset": "0x17B880"
        },
        "base::Value::SetBoolKey": {
            "offset": "0x17C020"
        },
        "base::Value::SetBoolPath": {
            "offset": "0x17C0C0"
        },
        "base::Value::SetDoubleKey": {
            "offset": "0x17C2D0"
        },
        "base::Value::SetDoublePath": {
            "offset": "0x17C380"
        },
        "base::Value::SetIntKey": {
            "offset": "0x17C430"
        },
        "base::Value::SetIntPath": {
            "offset": "0x17C4D0"
        },
        "base::Value::SetKey": {
            "offset": "0x17C7F0"
        },
        "base::Value::SetKeyInternal": {
            "offset": "0x17C8A0"
        },
        "base::Value::SetPath": {
            "offset": "0x17CB80"
        },
        "base::Value::SetPathInternal": {
            "offset": "0x17D240"
        },
        "base::Value::SetStringKey": {
            "offset": "0x17DB30"
        },
        "base::Value::SetStringPath": {
            "offset": "0x17DD70"
        },
        "base::Value::TakeList": {
            "offset": "0x17E020"
        },
        "base::Value::ToUniquePtrValue": {
            "offset": "0x17E170"
        },
        "base::Value::Value": {
            "offset": "0x35A0"
        },
        "base::Value::is_blob": {
            "offset": "0xD6C0"
        },
        "base::Value::is_bool": {
            "offset": "0xD6D0"
        },
        "base::Value::is_dict": {
            "offset": "0xD6E0"
        },
        "base::Value::is_double": {
            "offset": "0xD6F0"
        },
        "base::Value::is_int": {
            "offset": "0xD700"
        },
        "base::Value::is_list": {
            "offset": "0xD710"
        },
        "base::Value::is_none": {
            "offset": "0xD760"
        },
        "base::Value::is_string": {
            "offset": "0xD780"
        },
        "base::Value::type": {
            "offset": "0xD790"
        },
        "base::Value::~Value": {
            "offset": "0x1746C0"
        },
        "base::ValueDeserializer::ValueDeserializer": {
            "offset": "0x3720"
        },
        "base::ValueDeserializer::~ValueDeserializer": {
            "offset": "0x1746E0"
        },
        "base::ValueSerializer::ValueSerializer": {
            "offset": "0x3730"
        },
        "base::ValueSerializer::~ValueSerializer": {
            "offset": "0x1746F0"
        },
        "base::Version::CompareTo": {
            "offset": "0x17EAF0"
        },
        "base::Version::CompareToWildcardString": {
            "offset": "0x17EBE0"
        },
        "base::Version::GetString": {
            "offset": "0x17F1A0"
        },
        "base::Version::IsValid": {
            "offset": "0x17F3F0"
        },
        "base::Version::IsValidWildcardString": {
            "offset": "0x17F400"
        },
        "base::Version::Version": {
            "offset": "0x2E280"
        },
        "base::Version::components": {
            "offset": "0x3FB0"
        },
        "base::Version::~Version": {
            "offset": "0x7A7E0"
        },
        "base::WaitForProcessesToExit": {
            "offset": "0xABCE0"
        },
        "base::WaitableEvent::IsSignaled": {
            "offset": "0xD8E90"
        },
        "base::WaitableEvent::Reset": {
            "offset": "0xD8F40"
        },
        "base::WaitableEvent::Signal": {
            "offset": "0xD8F50"
        },
        "base::WaitableEvent::TimedWait": {
            "offset": "0xD8F60"
        },
        "base::WaitableEvent::Wait": {
            "offset": "0xD91C0"
        },
        "base::WaitableEvent::WaitMany": {
            "offset": "0xD93C0"
        },
        "base::WaitableEvent::WaitableEvent": {
            "offset": "0xD8D60"
        },
        "base::WaitableEvent::declare_only_used_while_idle": {
            "offset": "0x56CB0"
        },
        "base::WaitableEvent::handle": {
            "offset": "0xAB80"
        },
        "base::WaitableEvent::~WaitableEvent": {
            "offset": "0x6F480"
        },
        "base::WaitableEventWatcher::OnObjectSignaled": {
            "offset": "0xD8650"
        },
        "base::WaitableEventWatcher::StartWatching": {
            "offset": "0xD8960"
        },
        "base::WaitableEventWatcher::StopWatching": {
            "offset": "0xD8B60"
        },
        "base::WaitableEventWatcher::WaitableEventWatcher": {
            "offset": "0xD8500"
        },
        "base::WaitableEventWatcher::~WaitableEventWatcher": {
            "offset": "0xD8550"
        },
        "base::Watchdog::Alarm": {
            "offset": "0x13FAF0"
        },
        "base::Watchdog::Arm": {
            "offset": "0x13FBA0"
        },
        "base::Watchdog::ArmAtStartTime": {
            "offset": "0x13FBD0"
        },
        "base::Watchdog::ArmSomeTimeDeltaAgo": {
            "offset": "0x13FC60"
        },
        "base::Watchdog::Cleanup": {
            "offset": "0x13FCA0"
        },
        "base::Watchdog::Disarm": {
            "offset": "0x13FD20"
        },
        "base::Watchdog::IsJoinable": {
            "offset": "0x13FE20"
        },
        "base::Watchdog::ResetStaticData": {
            "offset": "0x13FEA0"
        },
        "base::Watchdog::ThreadDelegate::SetThreadName": {
            "offset": "0x13FF10"
        },
        "base::Watchdog::ThreadDelegate::ThreadMain": {
            "offset": "0x140180"
        },
        "base::Watchdog::Watchdog": {
            "offset": "0x13F860"
        },
        "base::Watchdog::~Watchdog": {
            "offset": "0x13F9A0"
        },
        "base::WeakPtr<IPC::ChannelMojo>::~WeakPtr<IPC::ChannelMojo>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::CancelableTaskTracker>::~WeakPtr<base::CancelableTaskTracker>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::FileProxy>::~WeakPtr<base::FileProxy>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::RunLoop>::~WeakPtr<base::RunLoop>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> > >::~WeakPtr<base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> > >": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> > >::~WeakPtr<base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> > >": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::sequence_manager::internal::SequenceManagerImpl>::~WeakPtr<base::sequence_manager::internal::SequenceManagerImpl>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::sequence_manager::internal::ThreadControllerImpl>::~WeakPtr<base::sequence_manager::internal::ThreadControllerImpl>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::trace_event::BlameContext>::~WeakPtr<base::trace_event::BlameContext>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::trace_event::TraceLog::AsyncEnabledStateObserver>::~WeakPtr<base::trace_event::TraceLog::AsyncEnabledStateObserver>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<base::win::ObjectWatcher>::~WeakPtr<base::win::ObjectWatcher>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<mojo::DataPipeDrainer>::~WeakPtr<mojo::DataPipeDrainer>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<mojo::DataPipeProducer>::~WeakPtr<mojo::DataPipeProducer>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<mojo::InterfaceEndpointClient>::~WeakPtr<mojo::InterfaceEndpointClient>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<mojo::MessageDispatcher>::~WeakPtr<mojo::MessageDispatcher>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<mojo::SequenceLocalSyncEventWatcher::SequenceLocalState>::~WeakPtr<mojo::SequenceLocalSyncEventWatcher::SequenceLocalState>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<mojo::SimpleWatcher>::~WeakPtr<mojo::SimpleWatcher>": {
            "offset": "0x48A70"
        },
        "base::WeakPtr<mojo::internal::BindingStateBase>::~WeakPtr<mojo::internal::BindingStateBase>": {
            "offset": "0x48A70"
        },
        "base::WideToUTF16": {
            "offset": "0xD5B80"
        },
        "base::WideToUTF8": {
            "offset": "0xD5B00"
        },
        "base::Win32StackFrameUnwinder::TryUnwind": {
            "offset": "0xB9420"
        },
        "base::Win32StackFrameUnwinder::UnwindFunctions::UnwindFunctions": {
            "offset": "0xB9280"
        },
        "base::Win32StackFrameUnwinder::UnwindFunctions::~UnwindFunctions": {
            "offset": "0xB9320"
        },
        "base::Win32StackFrameUnwinder::Win32StackFrameUnwinder": {
            "offset": "0xB92D0"
        },
        "base::Win32StackFrameUnwinder::~Win32StackFrameUnwinder": {
            "offset": "0x39C0"
        },
        "base::WorkIdProvider::GetForCurrentThread": {
            "offset": "0x7A470"
        },
        "base::WorkIdProvider::GetWorkId": {
            "offset": "0x7A620"
        },
        "base::WorkIdProvider::IncrementWorkId": {
            "offset": "0x7A630"
        },
        "base::WorkIdProvider::IncrementWorkIdForTesting": {
            "offset": "0x7A6E0"
        },
        "base::WorkIdProvider::SetCurrentWorkIdForTesting": {
            "offset": "0xBD00"
        },
        "base::WorkIdProvider::WorkIdProvider": {
            "offset": "0x7A3B0"
        },
        "base::WorkIdProvider::~WorkIdProvider": {
            "offset": "0x7A410"
        },
        "base::WritableSharedMemoryMapping::WritableSharedMemoryMapping": {
            "offset": "0x72570"
        },
        "base::WritableSharedMemoryMapping::memory": {
            "offset": "0xAAA0"
        },
        "base::WritableSharedMemoryMapping::~WritableSharedMemoryMapping": {
            "offset": "0x297C0"
        },
        "base::WritableSharedMemoryRegion::ConvertToReadOnly": {
            "offset": "0x74390"
        },
        "base::WritableSharedMemoryRegion::ConvertToUnsafe": {
            "offset": "0x74420"
        },
        "base::WritableSharedMemoryRegion::Create": {
            "offset": "0x744B0"
        },
        "base::WritableSharedMemoryRegion::Deserialize": {
            "offset": "0x74520"
        },
        "base::WritableSharedMemoryRegion::GetGUID": {
            "offset": "0x74570"
        },
        "base::WritableSharedMemoryRegion::GetSize": {
            "offset": "0x74600"
        },
        "base::WritableSharedMemoryRegion::IsValid": {
            "offset": "0x71290"
        },
        "base::WritableSharedMemoryRegion::Map": {
            "offset": "0x73AA0"
        },
        "base::WritableSharedMemoryRegion::MapAt": {
            "offset": "0x73AC0"
        },
        "base::WritableSharedMemoryRegion::TakeHandleForSerialization": {
            "offset": "0x71360"
        },
        "base::WritableSharedMemoryRegion::UnsafeGetPlatformHandle": {
            "offset": "0x74690"
        },
        "base::WritableSharedMemoryRegion::WritableSharedMemoryRegion": {
            "offset": "0x71050"
        },
        "base::WritableSharedMemoryRegion::set_create_hook": {
            "offset": "0x746A0"
        },
        "base::WritableSharedMemoryRegion::~WritableSharedMemoryRegion": {
            "offset": "0x71070"
        },
        "base::WritableSharedPersistentMemoryAllocator::IsSharedMemoryAcceptable": {
            "offset": "0x98F30"
        },
        "base::WritableSharedPersistentMemoryAllocator::WritableSharedPersistentMemoryAllocator": {
            "offset": "0x96ED0"
        },
        "base::WritableSharedPersistentMemoryAllocator::~WritableSharedPersistentMemoryAllocator": {
            "offset": "0x97080"
        },
        "base::WriteFile": {
            "offset": "0x52DC0"
        },
        "base::WriteInto": {
            "offset": "0xD1D00"
        },
        "base::WriteTokenToPickle": {
            "offset": "0x145AB0"
        },
        "base::WriteUnicodeCharacter": {
            "offset": "0xD4B10"
        },
        "base::`anonymous namespace'::AddFeatureAndFieldTrialFlags": {
            "offset": "0x7CDF0"
        },
        "base::`anonymous namespace'::AlignToPageSize": {
            "offset": "0x6A520"
        },
        "base::`anonymous namespace'::AppendStringKeyValue": {
            "offset": "0xCA3F0"
        },
        "base::`anonymous namespace'::AppendSwitchesAndArguments": {
            "offset": "0x21C70"
        },
        "base::`anonymous namespace'::AreSearchFlagsAvailable": {
            "offset": "0xA4750"
        },
        "base::`anonymous namespace'::BarrierInfo::Run": {
            "offset": "0x1CE50"
        },
        "base::`anonymous namespace'::CancelableFileOperation<char const ,int (__cdecl*)(void *,void const *,unsigned long,unsigned long *,_OVERLAPPED *)>": {
            "offset": "0xD6900"
        },
        "base::`anonymous namespace'::CancelableFileOperation<char,int (__cdecl*)(void *,void *,unsigned long,unsigned long *,_OVERLAPPED *)>": {
            "offset": "0xD6900"
        },
        "base::`anonymous namespace'::CompareVersionComponents": {
            "offset": "0x17F0B0"
        },
        "base::`anonymous namespace'::CopyDictionaryWithoutEmptyChildren": {
            "offset": "0x175D60"
        },
        "base::`anonymous namespace'::CopyListWithoutEmptyChildren": {
            "offset": "0x175FF0"
        },
        "base::`anonymous namespace'::CopyWithoutEmptyChildren": {
            "offset": "0x176460"
        },
        "base::`anonymous namespace'::CreateModuleForHandle": {
            "offset": "0xBE1C0"
        },
        "base::`anonymous namespace'::CreateOrOpenHelper::Reply": {
            "offset": "0x4A2E0"
        },
        "base::`anonymous namespace'::CreateOrOpenHelper::RunWork": {
            "offset": "0x4A960"
        },
        "base::`anonymous namespace'::CreatePairImpl": {
            "offset": "0xD70D0"
        },
        "base::`anonymous namespace'::CreateRangesFromData": {
            "offset": "0x93C20"
        },
        "base::`anonymous namespace'::CreateTemporaryHelper::Reply": {
            "offset": "0x4A390"
        },
        "base::`anonymous namespace'::CreateTemporaryHelper::RunWork": {
            "offset": "0x4A9A0"
        },
        "base::`anonymous namespace'::CreateThreadInternal": {
            "offset": "0x133B00"
        },
        "base::`anonymous namespace'::DeleteFileAndRecordMetrics": {
            "offset": "0x4FC90"
        },
        "base::`anonymous namespace'::DeleteFileRecursive": {
            "offset": "0x4FE60"
        },
        "base::`anonymous namespace'::DoCopyFile": {
            "offset": "0x50FB0"
        },
        "base::`anonymous namespace'::DoDeleteFile": {
            "offset": "0x51160"
        },
        "base::`anonymous namespace'::DoUTFConversion<wchar_t>": {
            "offset": "0xD4DF0"
        },
        "base::`anonymous namespace'::DummyHistogramSamples::Accumulate": {
            "offset": "0x12B0"
        },
        "base::`anonymous namespace'::DummyHistogramSamples::AddSubtractImpl": {
            "offset": "0xAAC0"
        },
        "base::`anonymous namespace'::DummyHistogramSamples::GetCount": {
            "offset": "0x12A0"
        },
        "base::`anonymous namespace'::DummyHistogramSamples::Iterator": {
            "offset": "0x7AC10"
        },
        "base::`anonymous namespace'::DummyHistogramSamples::TotalCount": {
            "offset": "0x12A0"
        },
        "base::`anonymous namespace'::DummySampleCountIterator::Done": {
            "offset": "0xAAC0"
        },
        "base::`anonymous namespace'::DummySampleCountIterator::Get": {
            "offset": "0x7AB10"
        },
        "base::`anonymous namespace'::DummySampleCountIterator::Next": {
            "offset": "0x7AC60"
        },
        "base::`anonymous namespace'::EnvironmentImpl::GetVar": {
            "offset": "0x3B180"
        },
        "base::`anonymous namespace'::EnvironmentImpl::GetVarImpl": {
            "offset": "0x3B490"
        },
        "base::`anonymous namespace'::EnvironmentImpl::SetVar": {
            "offset": "0x3B6C0"
        },
        "base::`anonymous namespace'::EnvironmentImpl::UnSetVar": {
            "offset": "0x3B820"
        },
        "base::`anonymous namespace'::EqualDriveLetterCaseInsensitive": {
            "offset": "0x435F0"
        },
        "base::`anonymous namespace'::EscapeJSONStringImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x63FF0"
        },
        "base::`anonymous namespace'::EscapeJSONStringImpl<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0x645D0"
        },
        "base::`anonymous namespace'::EscapeSpecialCodePoint": {
            "offset": "0x64D20"
        },
        "base::`anonymous namespace'::ExtensionSeparatorPosition": {
            "offset": "0x43B30"
        },
        "base::`anonymous namespace'::FilePathWatcherImpl::Cancel": {
            "offset": "0x47920"
        },
        "base::`anonymous namespace'::FilePathWatcherImpl::DestroyWatch": {
            "offset": "0x47A40"
        },
        "base::`anonymous namespace'::FilePathWatcherImpl::OnObjectSignaled": {
            "offset": "0x47AB0"
        },
        "base::`anonymous namespace'::FilePathWatcherImpl::SetupWatchHandle": {
            "offset": "0x47F90"
        },
        "base::`anonymous namespace'::FilePathWatcherImpl::UpdateWatch": {
            "offset": "0x48100"
        },
        "base::`anonymous namespace'::FilePathWatcherImpl::Watch": {
            "offset": "0x48450"
        },
        "base::`anonymous namespace'::FilePathWatcherImpl::~FilePathWatcherImpl": {
            "offset": "0x47740"
        },
        "base::`anonymous namespace'::FinalExtensionSeparatorPosition": {
            "offset": "0x440D0"
        },
        "base::`anonymous namespace'::FindDriveLetter": {
            "offset": "0x441E0"
        },
        "base::`anonymous namespace'::GenericFileHelper::Close": {
            "offset": "0x48F90"
        },
        "base::`anonymous namespace'::GenericFileHelper::Flush": {
            "offset": "0x49B00"
        },
        "base::`anonymous namespace'::GenericFileHelper::Reply": {
            "offset": "0x4A4C0"
        },
        "base::`anonymous namespace'::GenericFileHelper::SetLength": {
            "offset": "0x4AE20"
        },
        "base::`anonymous namespace'::GenericFileHelper::SetTimes": {
            "offset": "0x4B0B0"
        },
        "base::`anonymous namespace'::GetAppOutputInternal": {
            "offset": "0xAC400"
        },
        "base::`anonymous namespace'::GetCurrentProcessToken": {
            "offset": "0xAE920"
        },
        "base::`anonymous namespace'::GetDebugInfoForModule": {
            "offset": "0xBE420"
        },
        "base::`anonymous namespace'::GetHighResLock": {
            "offset": "0x141FC0"
        },
        "base::`anonymous namespace'::GetInfoHelper::Reply": {
            "offset": "0x4A510"
        },
        "base::`anonymous namespace'::GetInfoHelper::RunWork": {
            "offset": "0x4AA50"
        },
        "base::`anonymous namespace'::GetMemoryPressureObserver": {
            "offset": "0x6DDA0"
        },
        "base::`anonymous namespace'::GetModuleHandleForAddress": {
            "offset": "0xBE750"
        },
        "base::`anonymous namespace'::GetPathData": {
            "offset": "0xA6A70"
        },
        "base::`anonymous namespace'::GetRandomContext": {
            "offset": "0x1A490"
        },
        "base::`anonymous namespace'::GetScopedDeferTaskPostingTLS": {
            "offset": "0xE0AE0"
        },
        "base::`anonymous namespace'::GetSleepTimeoutMs": {
            "offset": "0x78390"
        },
        "base::`anonymous namespace'::GetStaticData": {
            "offset": "0x13FD90"
        },
        "base::`anonymous namespace'::GetSwitchPrefixLength": {
            "offset": "0x23010"
        },
        "base::`anonymous namespace'::GetSystemLibraryName": {
            "offset": "0xA49F0"
        },
        "base::`anonymous namespace'::GetTLSForCurrentPendingTask": {
            "offset": "0xE0F90"
        },
        "base::`anonymous namespace'::GetTaskExecutorForTraits": {
            "offset": "0xE4300"
        },
        "base::`anonymous namespace'::GetThreadEnvironmentBlock": {
            "offset": "0xB8E00"
        },
        "base::`anonymous namespace'::GetThreadHandle": {
            "offset": "0xB8ED0"
        },
        "base::`anonymous namespace'::GetThreadNameTLS": {
            "offset": "0x13BD30"
        },
        "base::`anonymous namespace'::GetTlsCurrentSequenceToken": {
            "offset": "0xC2DE0"
        },
        "base::`anonymous namespace'::GetTlsCurrentTaskToken": {
            "offset": "0xC2E60"
        },
        "base::`anonymous namespace'::GetTlsDelegate": {
            "offset": "0xBB850"
        },
        "base::`anonymous namespace'::GetWindowsCreateString": {
            "offset": "0x18E2F0"
        },
        "base::`anonymous namespace'::GetWindowsCreateStringReference": {
            "offset": "0x185C80"
        },
        "base::`anonymous namespace'::GetWindowsDeleteString": {
            "offset": "0x18E370"
        },
        "base::`anonymous namespace'::GetWindowsGetStringRawBuffer": {
            "offset": "0x18E3F0"
        },
        "base::`anonymous namespace'::HistogramNameLesser": {
            "offset": "0xA0C90"
        },
        "base::`anonymous namespace'::InitialNowFunction": {
            "offset": "0x1415B0"
        },
        "base::`anonymous namespace'::InitializeClock": {
            "offset": "0x142120"
        },
        "base::`anonymous namespace'::InitializeNowFunctionPointer": {
            "offset": "0x142170"
        },
        "base::`anonymous namespace'::IsEmptyOrSpecialCase": {
            "offset": "0x450D0"
        },
        "base::`anonymous namespace'::IsPathAbsolute": {
            "offset": "0x45190"
        },
        "base::`anonymous namespace'::IsSwitch": {
            "offset": "0x23FB0"
        },
        "base::`anonymous namespace'::IsValidFeatureOrFieldTrialName": {
            "offset": "0x3D820"
        },
        "base::`anonymous namespace'::IteratorRangeToNumber<base::`anonymous namespace'::BaseHexIteratorRangeToInt64Traits<char const *> >::Invoke": {
            "offset": "0xC6FA0"
        },
        "base::`anonymous namespace'::IteratorRangeToNumber<base::`anonymous namespace'::BaseHexIteratorRangeToIntTraits<char const *> >::Invoke": {
            "offset": "0xC7190"
        },
        "base::`anonymous namespace'::IteratorRangeToNumber<base::`anonymous namespace'::StringPiece16ToNumberTraits<__int64,10> >::Invoke": {
            "offset": "0xC74B0"
        },
        "base::`anonymous namespace'::IteratorRangeToNumber<base::`anonymous namespace'::StringPiece16ToNumberTraits<int,10> >::Invoke": {
            "offset": "0xC7360"
        },
        "base::`anonymous namespace'::IteratorRangeToNumber<base::`anonymous namespace'::StringPieceToNumberTraits<__int64,10> >::Invoke": {
            "offset": "0xC7760"
        },
        "base::`anonymous namespace'::IteratorRangeToNumber<base::`anonymous namespace'::StringPieceToNumberTraits<int,10> >::Invoke": {
            "offset": "0xC7620"
        },
        "base::`anonymous namespace'::LoadComBaseFunction": {
            "offset": "0x18E470"
        },
        "base::`anonymous namespace'::LoadSystemLibraryHelper": {
            "offset": "0xA4CE0"
        },
        "base::`anonymous namespace'::LogFailure": {
            "offset": "0x55D10"
        },
        "base::`anonymous namespace'::LogLibrarayLoadResultToUMA": {
            "offset": "0xA4DE0"
        },
        "base::`anonymous namespace'::MakeActive::~MakeActive": {
            "offset": "0x91490"
        },
        "base::`anonymous namespace'::MatchPatternT<wchar_t,base::`anonymous namespace'::NextCharUTF16>": {
            "offset": "0xC38F0"
        },
        "base::`anonymous namespace'::MemoryPressureObserver::AddObserver": {
            "offset": "0x6D740"
        },
        "base::`anonymous namespace'::MemoryPressureObserver::Notify": {
            "offset": "0x6DF90"
        },
        "base::`anonymous namespace'::MemoryPressureObserver::RemoveObserver": {
            "offset": "0x6E800"
        },
        "base::`anonymous namespace'::MicrosecondsToFileTime": {
            "offset": "0x142390"
        },
        "base::`anonymous namespace'::OnNoMemory": {
            "offset": "0xAE420"
        },
        "base::`anonymous namespace'::OnRunTimeout": {
            "offset": "0xBB9D0"
        },
        "base::`anonymous namespace'::ParseFieldTrialsString": {
            "offset": "0x82D40"
        },
        "base::`anonymous namespace'::ParseVersionNumbers": {
            "offset": "0x17F4F0"
        },
        "base::`anonymous namespace'::PartitionAllocHook": {
            "offset": "0xBF8A0"
        },
        "base::`anonymous namespace'::PartitionFreeHook": {
            "offset": "0xBF920"
        },
        "base::`anonymous namespace'::PersistentSampleMapIterator::Done": {
            "offset": "0xD550"
        },
        "base::`anonymous namespace'::PersistentSampleMapIterator::Get": {
            "offset": "0x99E90"
        },
        "base::`anonymous namespace'::PersistentSampleMapIterator::Next": {
            "offset": "0x9A5E0"
        },
        "base::`anonymous namespace'::PickleFieldTrial": {
            "offset": "0x82F40"
        },
        "base::`anonymous namespace'::PostTaskAndReplyRelay::RunReply": {
            "offset": "0x135460"
        },
        "base::`anonymous namespace'::PostTaskAndReplyRelay::RunTaskAndPostReply": {
            "offset": "0x135550"
        },
        "base::`anonymous namespace'::PostTaskAndReplyRelay::~PostTaskAndReplyRelay": {
            "offset": "0x134BE0"
        },
        "base::`anonymous namespace'::PostTaskAndReplyTaskRunner::PostTask": {
            "offset": "0x128A60"
        },
        "base::`anonymous namespace'::PostTaskAndReplyWithTraitsTaskRunner::PostTask": {
            "offset": "0xE4620"
        },
        "base::`anonymous namespace'::ProxyToTaskRunner": {
            "offset": "0xBBA10"
        },
        "base::`anonymous namespace'::QPCNow": {
            "offset": "0x142430"
        },
        "base::`anonymous namespace'::QPCValueToTimeDelta": {
            "offset": "0x142480"
        },
        "base::`anonymous namespace'::QuoteForCommandLineToArgvW": {
            "offset": "0x24BC0"
        },
        "base::`anonymous namespace'::ReadHelper::Reply": {
            "offset": "0x4A640"
        },
        "base::`anonymous namespace'::ReadHelper::RunWork": {
            "offset": "0x4AA80"
        },
        "base::`anonymous namespace'::RecordPostOperationState": {
            "offset": "0x52AA0"
        },
        "base::`anonymous namespace'::ReleaseReservationOrTerminate": {
            "offset": "0xAE460"
        },
        "base::`anonymous namespace'::ReportHighResolutionTimerUsage": {
            "offset": "0x143890"
        },
        "base::`anonymous namespace'::ReserveAdditional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xC4B60"
        },
        "base::`anonymous namespace'::RolloverProtectedNow": {
            "offset": "0x1427D0"
        },
        "base::`anonymous namespace'::RunOrPostToTaskRunner": {
            "offset": "0xDD970"
        },
        "base::`anonymous namespace'::SampleCountPickleIterator::Done": {
            "offset": "0x276E0"
        },
        "base::`anonymous namespace'::SampleCountPickleIterator::Get": {
            "offset": "0x90B20"
        },
        "base::`anonymous namespace'::SampleCountPickleIterator::Next": {
            "offset": "0x90E00"
        },
        "base::`anonymous namespace'::SampleCountPickleIterator::~SampleCountPickleIterator": {
            "offset": "0x90680"
        },
        "base::`anonymous namespace'::SampleMapIterator::Done": {
            "offset": "0xD550"
        },
        "base::`anonymous namespace'::SampleMapIterator::Get": {
            "offset": "0x9AC70"
        },
        "base::`anonymous namespace'::SampleMapIterator::Next": {
            "offset": "0x9AE30"
        },
        "base::`anonymous namespace'::ScopedRunTimeoutForTestTLS": {
            "offset": "0xBCB60"
        },
        "base::`anonymous namespace'::SearchForChars<char,base::`anonymous namespace'::NextCharUTF8>": {
            "offset": "0xC3B00"
        },
        "base::`anonymous namespace'::SequenceManagerThreadDelegate::BindToCurrentThread": {
            "offset": "0x139820"
        },
        "base::`anonymous namespace'::SequenceManagerThreadDelegate::GetDefaultTaskRunner": {
            "offset": "0x139C70"
        },
        "base::`anonymous namespace'::SequenceManagerThreadDelegate::SequenceManagerThreadDelegate": {
            "offset": "0x139380"
        },
        "base::`anonymous namespace'::SetNameInternal": {
            "offset": "0x134820"
        },
        "base::`anonymous namespace'::SharedState::SharedState": {
            "offset": "0x69E50"
        },
        "base::`anonymous namespace'::SharedStateFromSharedMemory": {
            "offset": "0x6B620"
        },
        "base::`anonymous namespace'::StrAppendT<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0xC5080"
        },
        "base::`anonymous namespace'::StrAppendT<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xC4C20"
        },
        "base::`anonymous namespace'::StrAppendT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0xC5950"
        },
        "base::`anonymous namespace'::StrAppendT<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xC5450"
        },
        "base::`anonymous namespace'::String16ToIntImpl<unsigned __int64>": {
            "offset": "0xC6600"
        },
        "base::`anonymous namespace'::StringAppendVT<char16_t>": {
            "offset": "0xD2760"
        },
        "base::`anonymous namespace'::StringAppendVT<char>": {
            "offset": "0xD23D0"
        },
        "base::`anonymous namespace'::StringAppendVT<wchar_t>": {
            "offset": "0xD2760"
        },
        "base::`anonymous namespace'::StringToIntImpl<unsigned __int64>": {
            "offset": "0xC66E0"
        },
        "base::`anonymous namespace'::ThreadFunc": {
            "offset": "0x1348E0"
        },
        "base::`anonymous namespace'::ThreadLocalBooleanWithStacks::Set": {
            "offset": "0x13EB30"
        },
        "base::`anonymous namespace'::ToLowerASCIIImpl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xCE8C0"
        },
        "base::`anonymous namespace'::ToUpperASCIIImpl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xCEB10"
        },
        "base::`anonymous namespace'::UTFConversion<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xD4FD0"
        },
        "base::`anonymous namespace'::UTFConversion<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xD5170"
        },
        "base::`anonymous namespace'::UmaHistogramExactLinearWithSuffix<enum base::`anonymous namespace'::TempFileFailure>": {
            "offset": "0x54F90"
        },
        "base::`anonymous namespace'::UmaHistogramExactLinearWithSuffix<int>": {
            "offset": "0x54F90"
        },
        "base::`anonymous namespace'::UpdateAndGetThreadName": {
            "offset": "0xC1C60"
        },
        "base::`anonymous namespace'::UpdateTimerIntervalLocked": {
            "offset": "0x142DB0"
        },
        "base::`anonymous namespace'::Win32UnwindFunctions::LookupFunctionEntry": {
            "offset": "0xB9400"
        },
        "base::`anonymous namespace'::Win32UnwindFunctions::VirtualUnwind": {
            "offset": "0xB96D0"
        },
        "base::`anonymous namespace'::WindowsModule::GetBaseAddress": {
            "offset": "0xAAB0"
        },
        "base::`anonymous namespace'::WindowsModule::GetDebugBasename": {
            "offset": "0xBE400"
        },
        "base::`anonymous namespace'::WindowsModule::GetId": {
            "offset": "0xBE730"
        },
        "base::`anonymous namespace'::WindowsModule::GetSize": {
            "offset": "0xD480"
        },
        "base::`anonymous namespace'::WindowsModule::IsNative": {
            "offset": "0xAAC0"
        },
        "base::`anonymous namespace'::WriteHelper::Reply": {
            "offset": "0x4A770"
        },
        "base::`anonymous namespace'::WriteHelper::RunWork": {
            "offset": "0x4AAB0"
        },
        "base::`anonymous namespace'::WriteScopedStringToFileAtomically": {
            "offset": "0x56B90"
        },
        "base::`anonymous namespace'::timeGetTimeWrapper": {
            "offset": "0x1415A0"
        },
        "base::allocator::GetCallStack": {
            "offset": "0x12A0"
        },
        "base::allocator::GetHeapSample": {
            "offset": "0x12B0"
        },
        "base::allocator::GetNumericProperty": {
            "offset": "0x12C0"
        },
        "base::allocator::IsAllocatorInitialized": {
            "offset": "0x1020"
        },
        "base::allocator::IsHeapProfilerRunning": {
            "offset": "0x12C0"
        },
        "base::allocator::ReleaseFreeMemory": {
            "offset": "0x12B0"
        },
        "base::allocator::SetHooks": {
            "offset": "0x12B0"
        },
        "base::allocator::SetNumericProperty": {
            "offset": "0x12C0"
        },
        "base::allocator::WinHeapAlignedFree": {
            "offset": "0x1AE80"
        },
        "base::allocator::WinHeapAlignedMalloc": {
            "offset": "0x1AED0"
        },
        "base::allocator::WinHeapAlignedRealloc": {
            "offset": "0x1B010"
        },
        "base::allocator::WinHeapFree": {
            "offset": "0x1B1C0"
        },
        "base::allocator::WinHeapGetSizeEstimate": {
            "offset": "0x1B1F0"
        },
        "base::allocator::WinHeapMalloc": {
            "offset": "0x1B220"
        },
        "base::allocator::WinHeapRealloc": {
            "offset": "0x1B260"
        },
        "base::allocator::`anonymous namespace'::UnalignAllocation": {
            "offset": "0x1A9A0"
        },
        "base::bits::Align": {
            "offset": "0xA7F90"
        },
        "base::circular_deque<IPC::PendingSyncMsg>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<IPC::PendingSyncMsg>::SetCapacityTo": {
            "offset": "0x1B5260"
        },
        "base::circular_deque<IPC::PendingSyncMsg>::back": {
            "offset": "0x1B5E10"
        },
        "base::circular_deque<IPC::PendingSyncMsg>::~circular_deque<IPC::PendingSyncMsg>": {
            "offset": "0x1B2670"
        },
        "base::circular_deque<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>::CheckValidIndex": {
            "offset": "0x16E280"
        },
        "base::circular_deque<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>::SetCapacityTo": {
            "offset": "0x16E670"
        },
        "base::circular_deque<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>::emplace_back<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>": {
            "offset": "0x16C720"
        },
        "base::circular_deque<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>::pop_back": {
            "offset": "0x16FF50"
        },
        "base::circular_deque<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>::~circular_deque<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>": {
            "offset": "0x16CD10"
        },
        "base::circular_deque<base::DelegateSimpleThread::Delegate *>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<base::DelegateSimpleThread::Delegate *>::SetCapacityTo": {
            "offset": "0x138A00"
        },
        "base::circular_deque<base::DelegateSimpleThread::Delegate *>::emplace_back<base::DelegateSimpleThread::Delegate * const &>": {
            "offset": "0x137770"
        },
        "base::circular_deque<base::DelegateSimpleThread::Delegate *>::~circular_deque<base::DelegateSimpleThread::Delegate *>": {
            "offset": "0x137D40"
        },
        "base::circular_deque<base::FilePath>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<base::FilePath>::SetCapacityTo": {
            "offset": "0x41610"
        },
        "base::circular_deque<base::FilePath>::back": {
            "offset": "0x41800"
        },
        "base::circular_deque<base::FilePath>::pop_back": {
            "offset": "0x41960"
        },
        "base::circular_deque<base::FilePath>::~circular_deque<base::FilePath>": {
            "offset": "0x40C80"
        },
        "base::circular_deque<base::OnceCallback<void __cdecl(void)> >::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<base::OnceCallback<void __cdecl(void)> >::SetCapacityTo": {
            "offset": "0x1C720"
        },
        "base::circular_deque<base::OnceCallback<void __cdecl(void)> >::back": {
            "offset": "0x1C900"
        },
        "base::circular_deque<base::OnceCallback<void __cdecl(void)> >::pop_back": {
            "offset": "0x1CA50"
        },
        "base::circular_deque<base::OnceCallback<void __cdecl(void)> >::~circular_deque<base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0x1B6E0"
        },
        "base::circular_deque<base::RepeatingCallback<void __cdecl(char const *,int,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >)> >::CheckValidIndex": {
            "offset": "0x679F0"
        },
        "base::circular_deque<base::RepeatingCallback<void __cdecl(char const *,int,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >)> >::SetCapacityTo": {
            "offset": "0x686D0"
        },
        "base::circular_deque<base::RepeatingCallback<void __cdecl(char const *,int,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >)> >::back": {
            "offset": "0x68D10"
        },
        "base::circular_deque<base::RepeatingCallback<void __cdecl(char const *,int,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >)> >::pop_back": {
            "offset": "0x68EA0"
        },
        "base::circular_deque<base::TimeTicks>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<base::TimeTicks>::SetCapacityTo": {
            "offset": "0x138A00"
        },
        "base::circular_deque<base::TimeTicks>::back": {
            "offset": "0x1C900"
        },
        "base::circular_deque<base::TimeTicks>::~circular_deque<base::TimeTicks>": {
            "offset": "0x137D40"
        },
        "base::circular_deque<base::internal::Task>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<base::internal::Task>::SetCapacityTo": {
            "offset": "0x113DB0"
        },
        "base::circular_deque<base::internal::Task>::emplace_back<base::internal::Task>": {
            "offset": "0x1130A0"
        },
        "base::circular_deque<base::internal::Task>::~circular_deque<base::internal::Task>": {
            "offset": "0x113300"
        },
        "base::circular_deque<base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask>::SetCapacityTo": {
            "offset": "0xEF200"
        },
        "base::circular_deque<base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask>::back": {
            "offset": "0xF00F0"
        },
        "base::circular_deque<base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask>::push_back": {
            "offset": "0xF04D0"
        },
        "base::circular_deque<base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask>::~circular_deque<base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask>": {
            "offset": "0xE7B90"
        },
        "base::circular_deque<mojo::Message>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<mojo::Message>::SetCapacityTo": {
            "offset": "0x208A00"
        },
        "base::circular_deque<mojo::Message>::emplace_back<mojo::Message>": {
            "offset": "0x205460"
        },
        "base::circular_deque<mojo::Message>::~circular_deque<mojo::Message>": {
            "offset": "0x205B60"
        },
        "base::circular_deque<mojo::core::ports::NodeName>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<mojo::core::ports::NodeName>::SetCapacityTo": {
            "offset": "0x1E31D0"
        },
        "base::circular_deque<mojo::core::ports::NodeName>::emplace_back<mojo::core::ports::NodeName const &>": {
            "offset": "0x1D8740"
        },
        "base::circular_deque<mojo::core::ports::NodeName>::~circular_deque<mojo::core::ports::NodeName>": {
            "offset": "0x1D9150"
        },
        "base::circular_deque<mojo::internal::MultiplexRouter::Task *>::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<mojo::internal::MultiplexRouter::Task *>::SetCapacityTo": {
            "offset": "0x138A00"
        },
        "base::circular_deque<mojo::internal::MultiplexRouter::Task *>::emplace_back<mojo::internal::MultiplexRouter::Task * const &>": {
            "offset": "0x137770"
        },
        "base::circular_deque<mojo::internal::MultiplexRouter::Task *>::front": {
            "offset": "0x21F830"
        },
        "base::circular_deque<mojo::internal::MultiplexRouter::Task *>::pop_front": {
            "offset": "0x21F8C0"
        },
        "base::circular_deque<mojo::internal::MultiplexRouter::Task *>::~circular_deque<mojo::internal::MultiplexRouter::Task *>": {
            "offset": "0x137D40"
        },
        "base::circular_deque<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> >::CheckValidIndex": {
            "offset": "0x16E280"
        },
        "base::circular_deque<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> >::SetCapacityTo": {
            "offset": "0x1AFE00"
        },
        "base::circular_deque<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> >::emplace_back<unsigned int &,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper>": {
            "offset": "0x1A97B0"
        },
        "base::circular_deque<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> >::~circular_deque<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> >": {
            "offset": "0x1AA220"
        },
        "base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > >::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > >::SetCapacityTo": {
            "offset": "0x1C0DC0"
        },
        "base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > >::emplace_back<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > >": {
            "offset": "0x1BF570"
        },
        "base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > >::~circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > >": {
            "offset": "0x1BFB20"
        },
        "base::circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::CheckValidIndex": {
            "offset": "0x1BB30"
        },
        "base::circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::DestructRange": {
            "offset": "0x21B1C0"
        },
        "base::circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::SetCapacityTo": {
            "offset": "0x21E9F0"
        },
        "base::circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::back": {
            "offset": "0x1C900"
        },
        "base::circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::front": {
            "offset": "0x21F830"
        },
        "base::circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::push_back": {
            "offset": "0x21F9F0"
        },
        "base::circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::~circular_deque<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >": {
            "offset": "0x218D10"
        },
        "base::debug::Activity::FillFrom": {
            "offset": "0x32420"
        },
        "base::debug::ActivityTrackerMemoryAllocator::ActivityTrackerMemoryAllocator": {
            "offset": "0x2D750"
        },
        "base::debug::ActivityTrackerMemoryAllocator::GetObjectReference": {
            "offset": "0x32770"
        },
        "base::debug::ActivityTrackerMemoryAllocator::ReleaseObjectReference": {
            "offset": "0x34860"
        },
        "base::debug::ActivityTrackerMemoryAllocator::cache_used": {
            "offset": "0xD470"
        },
        "base::debug::ActivityTrackerMemoryAllocator::~ActivityTrackerMemoryAllocator": {
            "offset": "0x2F390"
        },
        "base::debug::ActivityUserData::ActivityUserData": {
            "offset": "0x2D990"
        },
        "base::debug::ActivityUserData::CreateSnapshot": {
            "offset": "0x30DE0"
        },
        "base::debug::ActivityUserData::GetBaseAddress": {
            "offset": "0x32570"
        },
        "base::debug::ActivityUserData::GetOwningProcessId": {
            "offset": "0x32870"
        },
        "base::debug::ActivityUserData::ImportExistingData": {
            "offset": "0x32CB0"
        },
        "base::debug::ActivityUserData::Set": {
            "offset": "0x2B810"
        },
        "base::debug::ActivityUserData::SetBool": {
            "offset": "0x2B840"
        },
        "base::debug::ActivityUserData::SetChar": {
            "offset": "0x2B880"
        },
        "base::debug::ActivityUserData::SetInt": {
            "offset": "0x2B8C0"
        },
        "base::debug::ActivityUserData::SetOwningProcessIdForTesting": {
            "offset": "0x35820"
        },
        "base::debug::ActivityUserData::SetReference": {
            "offset": "0x2B920"
        },
        "base::debug::ActivityUserData::SetString": {
            "offset": "0x2B980"
        },
        "base::debug::ActivityUserData::SetStringReference": {
            "offset": "0x2BA50"
        },
        "base::debug::ActivityUserData::SetUint": {
            "offset": "0x2BA80"
        },
        "base::debug::ActivityUserData::TypedValue::Get": {
            "offset": "0x324E0"
        },
        "base::debug::ActivityUserData::TypedValue::GetBool": {
            "offset": "0x32580"
        },
        "base::debug::ActivityUserData::TypedValue::GetChar": {
            "offset": "0x325F0"
        },
        "base::debug::ActivityUserData::TypedValue::GetInt": {
            "offset": "0x32700"
        },
        "base::debug::ActivityUserData::TypedValue::GetReference": {
            "offset": "0x32930"
        },
        "base::debug::ActivityUserData::TypedValue::GetString": {
            "offset": "0x32A40"
        },
        "base::debug::ActivityUserData::TypedValue::GetStringReference": {
            "offset": "0x32AD0"
        },
        "base::debug::ActivityUserData::TypedValue::GetUint": {
            "offset": "0x32B50"
        },
        "base::debug::ActivityUserData::TypedValue::TypedValue": {
            "offset": "0x2EEB0"
        },
        "base::debug::ActivityUserData::TypedValue::type": {
            "offset": "0xD790"
        },
        "base::debug::ActivityUserData::TypedValue::~TypedValue": {
            "offset": "0x2F930"
        },
        "base::debug::ActivityUserData::id": {
            "offset": "0x2C050"
        },
        "base::debug::ActivityUserData::~ActivityUserData": {
            "offset": "0x2F3A0"
        },
        "base::debug::Alias": {
            "offset": "0x12B0"
        },
        "base::debug::AllocateCrashKeyString": {
            "offset": "0x364C0"
        },
        "base::debug::BeingDebugged": {
            "offset": "0x36630"
        },
        "base::debug::BeingProfiled": {
            "offset": "0x12C0"
        },
        "base::debug::BreakDebugger": {
            "offset": "0x36650"
        },
        "base::debug::ClearCrashKeyString": {
            "offset": "0x364E0"
        },
        "base::debug::CollectGDIUsageAndDie": {
            "offset": "0x37D40"
        },
        "base::debug::CollectStackTrace": {
            "offset": "0x38DF0"
        },
        "base::debug::DumpWithoutCrashing": {
            "offset": "0x36670"
        },
        "base::debug::EnableInProcessStackDumping": {
            "offset": "0x38E10"
        },
        "base::debug::FlushProfiling": {
            "offset": "0x12B0"
        },
        "base::debug::GdiHandleCounts::GdiHandleCounts": {
            "offset": "0x379A0"
        },
        "base::debug::GetGDIHandleCountsInCurrentProcessForTesting": {
            "offset": "0x38200"
        },
        "base::debug::GetProfilerAddDynamicSymbolFunc": {
            "offset": "0x387E0"
        },
        "base::debug::GetProfilerMoveDynamicSymbolFunc": {
            "offset": "0x38840"
        },
        "base::debug::GetProfilerReturnAddrResolutionFunc": {
            "offset": "0x388A0"
        },
        "base::debug::GlobalActivityAnalyzer::CreateWithAllocator": {
            "offset": "0x29B70"
        },
        "base::debug::GlobalActivityAnalyzer::CreateWithFile": {
            "offset": "0x29C30"
        },
        "base::debug::GlobalActivityAnalyzer::CreateWithSharedMemory": {
            "offset": "0x29DB0"
        },
        "base::debug::GlobalActivityAnalyzer::GetAnalyzerForThread": {
            "offset": "0x29EA0"
        },
        "base::debug::GlobalActivityAnalyzer::GetFirstAnalyzer": {
            "offset": "0x29FE0"
        },
        "base::debug::GlobalActivityAnalyzer::GetFirstProcess": {
            "offset": "0x2A020"
        },
        "base::debug::GlobalActivityAnalyzer::GetLogMessages": {
            "offset": "0x2A0F0"
        },
        "base::debug::GlobalActivityAnalyzer::GetModules": {
            "offset": "0x2A2E0"
        },
        "base::debug::GlobalActivityAnalyzer::GetNextAnalyzer": {
            "offset": "0x2A490"
        },
        "base::debug::GlobalActivityAnalyzer::GetNextProcess": {
            "offset": "0x2A5B0"
        },
        "base::debug::GlobalActivityAnalyzer::GetProcessDataSnapshot": {
            "offset": "0x2A680"
        },
        "base::debug::GlobalActivityAnalyzer::GetProgramLocationFromAddress": {
            "offset": "0x2A760"
        },
        "base::debug::GlobalActivityAnalyzer::GetUserDataSnapshot": {
            "offset": "0x2A7D0"
        },
        "base::debug::GlobalActivityAnalyzer::GlobalActivityAnalyzer": {
            "offset": "0x28B60"
        },
        "base::debug::GlobalActivityAnalyzer::IsDataComplete": {
            "offset": "0x2AA20"
        },
        "base::debug::GlobalActivityAnalyzer::PrepareAllAnalyzers": {
            "offset": "0x2AB60"
        },
        "base::debug::GlobalActivityAnalyzer::~GlobalActivityAnalyzer": {
            "offset": "0x296B0"
        },
        "base::debug::GlobalActivityTracker::CleanupAfterProcess": {
            "offset": "0x306B0"
        },
        "base::debug::GlobalActivityTracker::CreateTrackerForCurrentThread": {
            "offset": "0x319E0"
        },
        "base::debug::GlobalActivityTracker::CreateWithAllocator": {
            "offset": "0x31E60"
        },
        "base::debug::GlobalActivityTracker::CreateWithFile": {
            "offset": "0x31EF0"
        },
        "base::debug::GlobalActivityTracker::CreateWithLocalMemory": {
            "offset": "0x32120"
        },
        "base::debug::GlobalActivityTracker::CreateWithSharedMemory": {
            "offset": "0x321C0"
        },
        "base::debug::GlobalActivityTracker::Get": {
            "offset": "0x29E90"
        },
        "base::debug::GlobalActivityTracker::GetOrCreateTrackerForCurrentThread": {
            "offset": "0x2A640"
        },
        "base::debug::GlobalActivityTracker::GetTrackerForCurrentThread": {
            "offset": "0x2A790"
        },
        "base::debug::GlobalActivityTracker::GlobalActivityTracker": {
            "offset": "0x2DA30"
        },
        "base::debug::GlobalActivityTracker::IsEnabled": {
            "offset": "0x2AAB0"
        },
        "base::debug::GlobalActivityTracker::MarkDeleted": {
            "offset": "0x32FE0"
        },
        "base::debug::GlobalActivityTracker::ModuleInfo::ModuleInfo": {
            "offset": "0x2E1F0"
        },
        "base::debug::GlobalActivityTracker::ModuleInfo::~ModuleInfo": {
            "offset": "0x2F640"
        },
        "base::debug::GlobalActivityTracker::ModuleInfoRecord::CreateFrom": {
            "offset": "0x30BD0"
        },
        "base::debug::GlobalActivityTracker::ModuleInfoRecord::DecodeTo": {
            "offset": "0x32290"
        },
        "base::debug::GlobalActivityTracker::ModuleInfoRecord::ModuleInfoRecord": {
            "offset": "0x2E240"
        },
        "base::debug::GlobalActivityTracker::ModuleInfoRecord::UpdateFrom": {
            "offset": "0x35BB0"
        },
        "base::debug::GlobalActivityTracker::ModuleInfoRecord::~ModuleInfoRecord": {
            "offset": "0x12B0"
        },
        "base::debug::GlobalActivityTracker::RecordException": {
            "offset": "0x2B6F0"
        },
        "base::debug::GlobalActivityTracker::RecordExceptionImpl": {
            "offset": "0x33310"
        },
        "base::debug::GlobalActivityTracker::RecordFieldTrial": {
            "offset": "0x33390"
        },
        "base::debug::GlobalActivityTracker::RecordFieldTrialIfEnabled": {
            "offset": "0x2B730"
        },
        "base::debug::GlobalActivityTracker::RecordLogMessage": {
            "offset": "0x33540"
        },
        "base::debug::GlobalActivityTracker::RecordLogMessageIfEnabled": {
            "offset": "0x2B760"
        },
        "base::debug::GlobalActivityTracker::RecordModuleInfo": {
            "offset": "0x335C0"
        },
        "base::debug::GlobalActivityTracker::RecordModuleInfoIfEnabled": {
            "offset": "0x2B790"
        },
        "base::debug::GlobalActivityTracker::RecordProcessExit": {
            "offset": "0x33740"
        },
        "base::debug::GlobalActivityTracker::RecordProcessExitIfEnabled": {
            "offset": "0x2B7B0"
        },
        "base::debug::GlobalActivityTracker::RecordProcessLaunch": {
            "offset": "0x34170"
        },
        "base::debug::GlobalActivityTracker::RecordProcessLaunchIfEnabled": {
            "offset": "0x2B7F0"
        },
        "base::debug::GlobalActivityTracker::ReleaseForTesting": {
            "offset": "0x34770"
        },
        "base::debug::GlobalActivityTracker::ReleaseTrackerForCurrentThreadForTesting": {
            "offset": "0x34920"
        },
        "base::debug::GlobalActivityTracker::ReturnTrackerMemory": {
            "offset": "0x34A80"
        },
        "base::debug::GlobalActivityTracker::ScopedThreadActivity::GetOrCreateTracker": {
            "offset": "0x2A5D0"
        },
        "base::debug::GlobalActivityTracker::ScopedThreadActivity::ScopedThreadActivity": {
            "offset": "0x2E710"
        },
        "base::debug::GlobalActivityTracker::ScopedThreadActivity::user_data": {
            "offset": "0x36310"
        },
        "base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity": {
            "offset": "0x2F730"
        },
        "base::debug::GlobalActivityTracker::SetBackgroundTaskRunner": {
            "offset": "0x356C0"
        },
        "base::debug::GlobalActivityTracker::SetForTesting": {
            "offset": "0x35780"
        },
        "base::debug::GlobalActivityTracker::SetProcessExitCallback": {
            "offset": "0x35A30"
        },
        "base::debug::GlobalActivityTracker::SetProcessPhase": {
            "offset": "0x35AB0"
        },
        "base::debug::GlobalActivityTracker::SetProcessPhaseIfEnabled": {
            "offset": "0x2B900"
        },
        "base::debug::GlobalActivityTracker::ThreadSafeUserData::Set": {
            "offset": "0x35610"
        },
        "base::debug::GlobalActivityTracker::ThreadSafeUserData::~ThreadSafeUserData": {
            "offset": "0x2F900"
        },
        "base::debug::GlobalActivityTracker::allocator": {
            "offset": "0xAB80"
        },
        "base::debug::GlobalActivityTracker::process_data": {
            "offset": "0xD5D0"
        },
        "base::debug::GlobalActivityTracker::process_id": {
            "offset": "0xAAB0"
        },
        "base::debug::GlobalActivityTracker::~GlobalActivityTracker": {
            "offset": "0x2F410"
        },
        "base::debug::IsDebugUISuppressed": {
            "offset": "0x36580"
        },
        "base::debug::IsProfilingSupported": {
            "offset": "0x12C0"
        },
        "base::debug::OwningProcess::GetOwningProcessId": {
            "offset": "0x32870"
        },
        "base::debug::OwningProcess::Release_Initialize": {
            "offset": "0x349B0"
        },
        "base::debug::OwningProcess::SetOwningProcessIdForTesting": {
            "offset": "0x35830"
        },
        "base::debug::RestartProfilingAfterFork": {
            "offset": "0x12B0"
        },
        "base::debug::ScopedActivity::ChangeAction": {
            "offset": "0x30300"
        },
        "base::debug::ScopedActivity::ChangeActionAndInfo": {
            "offset": "0x303A0"
        },
        "base::debug::ScopedActivity::ChangeInfo": {
            "offset": "0x30650"
        },
        "base::debug::ScopedActivity::ScopedActivity": {
            "offset": "0x28D20"
        },
        "base::debug::ScopedActivity::~ScopedActivity": {
            "offset": "0x297D0"
        },
        "base::debug::ScopedCrashKeyString::ScopedCrashKeyString": {
            "offset": "0x36450"
        },
        "base::debug::ScopedCrashKeyString::~ScopedCrashKeyString": {
            "offset": "0x36490"
        },
        "base::debug::ScopedEventWaitActivity::ScopedEventWaitActivity": {
            "offset": "0x28D50"
        },
        "base::debug::ScopedEventWaitActivity::~ScopedEventWaitActivity": {
            "offset": "0x297D0"
        },
        "base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity": {
            "offset": "0x28D90"
        },
        "base::debug::ScopedLockAcquireActivity::~ScopedLockAcquireActivity": {
            "offset": "0x297D0"
        },
        "base::debug::ScopedProcessWaitActivity::ScopedProcessWaitActivity": {
            "offset": "0x28DD0"
        },
        "base::debug::ScopedProcessWaitActivity::~ScopedProcessWaitActivity": {
            "offset": "0x297D0"
        },
        "base::debug::ScopedTaskRunActivity::ScopedTaskRunActivity": {
            "offset": "0x28E10"
        },
        "base::debug::ScopedTaskRunActivity::~ScopedTaskRunActivity": {
            "offset": "0x297D0"
        },
        "base::debug::ScopedThreadJoinActivity::ScopedThreadJoinActivity": {
            "offset": "0x28E50"
        },
        "base::debug::ScopedThreadJoinActivity::~ScopedThreadJoinActivity": {
            "offset": "0x297D0"
        },
        "base::debug::SetCrashKeyImplementation": {
            "offset": "0x36500"
        },
        "base::debug::SetCrashKeyString": {
            "offset": "0x36540"
        },
        "base::debug::SetDumpWithoutCrashingFunction": {
            "offset": "0x36690"
        },
        "base::debug::SetSuppressDebugUI": {
            "offset": "0x36590"
        },
        "base::debug::StackTrace::Addresses": {
            "offset": "0x38B00"
        },
        "base::debug::StackTrace::InitTrace": {
            "offset": "0x38E40"
        },
        "base::debug::StackTrace::OutputToStream": {
            "offset": "0x38B20"
        },
        "base::debug::StackTrace::OutputToStreamWithPrefix": {
            "offset": "0x393D0"
        },
        "base::debug::StackTrace::Print": {
            "offset": "0x38B30"
        },
        "base::debug::StackTrace::PrintWithPrefix": {
            "offset": "0x39840"
        },
        "base::debug::StackTrace::StackTrace": {
            "offset": "0x38DD0"
        },
        "base::debug::StackTrace::ToString": {
            "offset": "0x38B40"
        },
        "base::debug::StackTrace::ToStringWithPrefix": {
            "offset": "0x38B60"
        },
        "base::debug::StartProfiling": {
            "offset": "0x12B0"
        },
        "base::debug::StopProfiling": {
            "offset": "0x12B0"
        },
        "base::debug::TaskTrace::AddressesForTesting": {
            "offset": "0x39E80"
        },
        "base::debug::TaskTrace::OutputToStream": {
            "offset": "0x39EE0"
        },
        "base::debug::TaskTrace::Print": {
            "offset": "0x39F70"
        },
        "base::debug::TaskTrace::TaskTrace": {
            "offset": "0x39CB0"
        },
        "base::debug::TaskTrace::ToString": {
            "offset": "0x39F80"
        },
        "base::debug::TaskTrace::empty": {
            "offset": "0xD760"
        },
        "base::debug::ThreadActivityAnalyzer::AddGlobalInformation": {
            "offset": "0x29A00"
        },
        "base::debug::ThreadActivityAnalyzer::GetProcessId": {
            "offset": "0x2A740"
        },
        "base::debug::ThreadActivityAnalyzer::GetThreadKey": {
            "offset": "0x2A770"
        },
        "base::debug::ThreadActivityAnalyzer::GetThreadName": {
            "offset": "0x3FB0"
        },
        "base::debug::ThreadActivityAnalyzer::IsValid": {
            "offset": "0x2AAD0"
        },
        "base::debug::ThreadActivityAnalyzer::Snapshot::Snapshot": {
            "offset": "0x28F50"
        },
        "base::debug::ThreadActivityAnalyzer::Snapshot::~Snapshot": {
            "offset": "0x297E0"
        },
        "base::debug::ThreadActivityAnalyzer::ThreadActivityAnalyzer": {
            "offset": "0x291B0"
        },
        "base::debug::ThreadActivityAnalyzer::activity_snapshot": {
            "offset": "0x3FB0"
        },
        "base::debug::ThreadActivityAnalyzer::~ThreadActivityAnalyzer": {
            "offset": "0x297E0"
        },
        "base::debug::ThreadActivityTracker::CalledOnValidThread": {
            "offset": "0x302F0"
        },
        "base::debug::ThreadActivityTracker::ChangeActivity": {
            "offset": "0x30460"
        },
        "base::debug::ThreadActivityTracker::CreateSnapshot": {
            "offset": "0x31530"
        },
        "base::debug::ThreadActivityTracker::CreateUserDataForActivity": {
            "offset": "0x31D30"
        },
        "base::debug::ThreadActivityTracker::GetBaseAddress": {
            "offset": "0xAAA0"
        },
        "base::debug::ThreadActivityTracker::GetDataVersionForTesting": {
            "offset": "0x32660"
        },
        "base::debug::ThreadActivityTracker::GetOwningProcessId": {
            "offset": "0x32870"
        },
        "base::debug::ThreadActivityTracker::GetUserData": {
            "offset": "0x32BC0"
        },
        "base::debug::ThreadActivityTracker::HasUserData": {
            "offset": "0x32C90"
        },
        "base::debug::ThreadActivityTracker::IsValid": {
            "offset": "0x32F90"
        },
        "base::debug::ThreadActivityTracker::PopActivity": {
            "offset": "0x32FF0"
        },
        "base::debug::ThreadActivityTracker::PushActivity": {
            "offset": "0x2B690"
        },
        "base::debug::ThreadActivityTracker::RecordExceptionActivity": {
            "offset": "0x33240"
        },
        "base::debug::ThreadActivityTracker::ReleaseUserData": {
            "offset": "0x34960"
        },
        "base::debug::ThreadActivityTracker::ScopedActivity::ChangeTypeAndData": {
            "offset": "0x30690"
        },
        "base::debug::ThreadActivityTracker::ScopedActivity::ScopedActivity": {
            "offset": "0x2E2A0"
        },
        "base::debug::ThreadActivityTracker::ScopedActivity::~ScopedActivity": {
            "offset": "0x2F700"
        },
        "base::debug::ThreadActivityTracker::SetOwningProcessIdForTesting": {
            "offset": "0x35A20"
        },
        "base::debug::ThreadActivityTracker::SizeForStackDepth": {
            "offset": "0x35B80"
        },
        "base::debug::ThreadActivityTracker::Snapshot::Snapshot": {
            "offset": "0x28F80"
        },
        "base::debug::ThreadActivityTracker::Snapshot::~Snapshot": {
            "offset": "0x2F840"
        },
        "base::debug::ThreadActivityTracker::ThreadActivityTracker": {
            "offset": "0x2E890"
        },
        "base::debug::ThreadActivityTracker::~ThreadActivityTracker": {
            "offset": "0x2F8F0"
        },
        "base::debug::VerifyDebugger": {
            "offset": "0x12B0"
        },
        "base::debug::WaitForDebugger": {
            "offset": "0x365A0"
        },
        "base::debug::`anonymous namespace'::FindResolutionFunctionInImports": {
            "offset": "0x386B0"
        },
        "base::debug::`anonymous namespace'::GetEmptyUserDataSnapshot": {
            "offset": "0x29F50"
        },
        "base::debug::`anonymous namespace'::InitializeSymbols": {
            "offset": "0x39090"
        },
        "base::debug::`anonymous namespace'::LogAnalyzerCreationError": {
            "offset": "0x2AAE0"
        },
        "base::debug::`anonymous namespace'::RoundUpToAlignment": {
            "offset": "0x34C20"
        },
        "base::debug::`anonymous namespace'::StackDumpExceptionFilter": {
            "offset": "0x39850"
        },
        "base::debug::`anonymous namespace'::SymbolContext::OutputTraceToStream": {
            "offset": "0x395C0"
        },
        "base::detail::const_dict_iterator::const_dict_iterator": {
            "offset": "0x2FB0"
        },
        "base::detail::const_dict_iterator::~const_dict_iterator": {
            "offset": "0x12B0"
        },
        "base::detail::const_dict_iterator_proxy::begin": {
            "offset": "0x1709B0"
        },
        "base::detail::const_dict_iterator_proxy::cbegin": {
            "offset": "0x1709B0"
        },
        "base::detail::const_dict_iterator_proxy::cend": {
            "offset": "0x1709C0"
        },
        "base::detail::const_dict_iterator_proxy::const_dict_iterator_proxy": {
            "offset": "0x2FB0"
        },
        "base::detail::const_dict_iterator_proxy::crbegin": {
            "offset": "0x1709C0"
        },
        "base::detail::const_dict_iterator_proxy::crend": {
            "offset": "0x1709B0"
        },
        "base::detail::const_dict_iterator_proxy::end": {
            "offset": "0x1709C0"
        },
        "base::detail::const_dict_iterator_proxy::rbegin": {
            "offset": "0x1709C0"
        },
        "base::detail::const_dict_iterator_proxy::rend": {
            "offset": "0x1709B0"
        },
        "base::detail::dict_iterator::dict_iterator": {
            "offset": "0x2FB0"
        },
        "base::detail::dict_iterator::~dict_iterator": {
            "offset": "0x12B0"
        },
        "base::detail::dict_iterator_proxy::begin": {
            "offset": "0x1709B0"
        },
        "base::detail::dict_iterator_proxy::cbegin": {
            "offset": "0x1709B0"
        },
        "base::detail::dict_iterator_proxy::cend": {
            "offset": "0x1709C0"
        },
        "base::detail::dict_iterator_proxy::crbegin": {
            "offset": "0x1709C0"
        },
        "base::detail::dict_iterator_proxy::crend": {
            "offset": "0x1709B0"
        },
        "base::detail::dict_iterator_proxy::dict_iterator_proxy": {
            "offset": "0x2FB0"
        },
        "base::detail::dict_iterator_proxy::end": {
            "offset": "0x1709C0"
        },
        "base::detail::dict_iterator_proxy::rbegin": {
            "offset": "0x1709C0"
        },
        "base::detail::dict_iterator_proxy::rend": {
            "offset": "0x1709B0"
        },
        "base::experimental::JobDelegate::AssertExpectedConcurrency": {
            "offset": "0xE2D90"
        },
        "base::experimental::JobDelegate::JobDelegate": {
            "offset": "0xE2950"
        },
        "base::experimental::JobDelegate::NotifyConcurrencyIncrease": {
            "offset": "0xE34D0"
        },
        "base::experimental::JobDelegate::ShouldYield": {
            "offset": "0xE39B0"
        },
        "base::experimental::JobDelegate::YieldIfNeeded": {
            "offset": "0x12B0"
        },
        "base::experimental::JobDelegate::~JobDelegate": {
            "offset": "0xE2A80"
        },
        "base::experimental::JobHandle::Cancel": {
            "offset": "0xE2ED0"
        },
        "base::experimental::JobHandle::CancelAndDetach": {
            "offset": "0xE2F00"
        },
        "base::experimental::JobHandle::Detach": {
            "offset": "0xE2FA0"
        },
        "base::experimental::JobHandle::JobHandle": {
            "offset": "0x30F0"
        },
        "base::experimental::JobHandle::Join": {
            "offset": "0xE3140"
        },
        "base::experimental::JobHandle::NotifyConcurrencyIncrease": {
            "offset": "0xE34E0"
        },
        "base::experimental::JobHandle::UpdatePriority": {
            "offset": "0xE3A80"
        },
        "base::experimental::JobHandle::~JobHandle": {
            "offset": "0xE2AB0"
        },
        "base::experimental::PostJob": {
            "offset": "0xE3500"
        },
        "base::flat_map<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch>,std::less<void> >::~flat_map<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch>,std::less<void> >": {
            "offset": "0x1F9090"
        },
        "base::flat_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<void> >::~flat_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<void> >": {
            "offset": "0x1C2970"
        },
        "base::flat_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> >,std::less<void> >::flat_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> >,std::less<void> >": {
            "offset": "0x5D6A0"
        },
        "base::flat_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> >,std::less<void> >::~flat_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> >,std::less<void> >": {
            "offset": "0x5DB90"
        },
        "base::flat_map<unsigned __int64,scoped_refptr<mojo::core::Watch>,std::less<void> >::~flat_map<unsigned __int64,scoped_refptr<mojo::core::Watch>,std::less<void> >": {
            "offset": "0x1F9090"
        },
        "base::internal::AdaptCallbackForRepeatingHelper<>::Run": {
            "offset": "0x55E50"
        },
        "base::internal::AlterEnvironment": {
            "offset": "0xAA7C0"
        },
        "base::internal::AnnotateAcquiredLockAlias::~AnnotateAcquiredLockAlias": {
            "offset": "0x10B5E0"
        },
        "base::internal::AppendToString": {
            "offset": "0xC8B90"
        },
        "base::internal::AssertBaseSyncPrimitivesAllowed": {
            "offset": "0x13E080"
        },
        "base::internal::AssertBlockingAllowed": {
            "offset": "0x13E180"
        },
        "base::internal::AssertIteratorsInOrder": {
            "offset": "0xC8C30"
        },
        "base::internal::AssertMemoryPriority": {
            "offset": "0x133910"
        },
        "base::internal::BaseTimerTaskInternal::Run": {
            "offset": "0x145340"
        },
        "base::internal::BasicAutoLock<base::Lock>::~BasicAutoLock<base::Lock>": {
            "offset": "0x3810"
        },
        "base::internal::BasicAutoLock<base::internal::CheckedLock>::~BasicAutoLock<base::internal::CheckedLock>": {
            "offset": "0xE1BF0"
        },
        "base::internal::BasicAutoLockMaybe<base::internal::CheckedLock>::~BasicAutoLockMaybe<base::internal::CheckedLock>": {
            "offset": "0xF0950"
        },
        "base::internal::BasicAutoUnlock<base::Lock>::~BasicAutoUnlock<base::Lock>": {
            "offset": "0x13F970"
        },
        "base::internal::BasicAutoUnlock<base::internal::CheckedLock>::~BasicAutoUnlock<base::internal::CheckedLock>": {
            "offset": "0x10E520"
        },
        "base::internal::BasicReleasableAutoLock<base::Lock>::Release": {
            "offset": "0x1AF700"
        },
        "base::internal::BasicReleasableAutoLock<base::Lock>::~BasicReleasableAutoLock<base::Lock>": {
            "offset": "0x1AA000"
        },
        "base::internal::BasicValueConverter<bool>::BasicValueConverter<bool>": {
            "offset": "0x62880"
        },
        "base::internal::BasicValueConverter<bool>::Convert": {
            "offset": "0x62A80"
        },
        "base::internal::BasicValueConverter<bool>::~BasicValueConverter<bool>": {
            "offset": "0x12B0"
        },
        "base::internal::BasicValueConverter<double>::BasicValueConverter<double>": {
            "offset": "0x62850"
        },
        "base::internal::BasicValueConverter<double>::Convert": {
            "offset": "0x62910"
        },
        "base::internal::BasicValueConverter<double>::~BasicValueConverter<double>": {
            "offset": "0x12B0"
        },
        "base::internal::BasicValueConverter<int>::BasicValueConverter<int>": {
            "offset": "0x62840"
        },
        "base::internal::BasicValueConverter<int>::Convert": {
            "offset": "0x628E0"
        },
        "base::internal::BasicValueConverter<int>::~BasicValueConverter<int>": {
            "offset": "0x12B0"
        },
        "base::internal::BasicValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::BasicValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x62860"
        },
        "base::internal::BasicValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Convert": {
            "offset": "0x62950"
        },
        "base::internal::BasicValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~BasicValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x12B0"
        },
        "base::internal::BasicValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::BasicValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0x62870"
        },
        "base::internal::BasicValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::Convert": {
            "offset": "0x629A0"
        },
        "base::internal::BasicValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~BasicValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0x12B0"
        },
        "base::internal::BindState<<lambda_4386c9527ced115e540eba88d682df82>,enum base::MessagePumpType>::Destroy": {
            "offset": "0x1399B0"
        },
        "base::internal::BindState<<lambda_5c29675a80b8c99bd0fac366c0782144>,tagMSG>::Destroy": {
            "offset": "0x10ECB0"
        },
        "base::internal::BindState<<lambda_5da9fdea1841ff493604d240375e5fd5> >::Destroy": {
            "offset": "0xDCA90"
        },
        "base::internal::BindState<<lambda_843c7f0c89172c62965a2671a3de116f>,std::queue<base::internal::Task,base::circular_deque<base::internal::Task> > >::Destroy": {
            "offset": "0x1138B0"
        },
        "base::internal::BindState<<lambda_8ca92c010fc9507cc41c2956991290ff>,scoped_refptr<base::internal::Sequence>,base::internal::UnretainedWrapper<base::internal::ThreadPoolImpl> >::Destroy": {
            "offset": "0x124AB0"
        },
        "base::internal::BindState<<lambda_b172b1708d967edc0cb01b7e9b6857a3>,base::internal::UnretainedWrapper<base::internal::JobTaskSource> >::Destroy": {
            "offset": "0x49780"
        },
        "base::internal::BindState<<lambda_bb59429c798e9883cca5c325e82e657c>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>::Destroy": {
            "offset": "0x1C52A0"
        },
        "base::internal::BindState<<lambda_bd5bebe1bd263f854844c00eb09c857b>,std::unique_ptr<base::ThreadTaskRunnerHandle,std::default_delete<base::ThreadTaskRunnerHandle> > >::Destroy": {
            "offset": "0x13F350"
        },
        "base::internal::BindState<<lambda_c3505d0927138e26ec4d9404e369e3b0>,base::Process>::Destroy": {
            "offset": "0xAB4F0"
        },
        "base::internal::BindState<<lambda_c6823fc23982223dfc30b7440e47d600>,base::OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>,base::WeakPtr<mojo::internal::BindingStateBase> >::Destroy": {
            "offset": "0x2042A0"
        },
        "base::internal::BindState<<lambda_decc37711c9db70cb9b46f1134c26d0d>,bool *>::Destroy": {
            "offset": "0x49780"
        },
        "base::internal::BindState<<lambda_e02ca4da93a47048e75568fb56ed6a47>,scoped_refptr<base::SingleThreadTaskRunner>,base::internal::UnretainedWrapper<base::SingleThreadTaskRunner>,std::unique_ptr<base::RunLoop::ScopedDisallowRunningForTesting,std::default_delete<base::RunLoop::ScopedDisallowRunningForTesting> > >::Destroy": {
            "offset": "0x13F3A0"
        },
        "base::internal::BindState<base::OnceCallback<void __cdecl(mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int)>,mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int>::Destroy": {
            "offset": "0x232170"
        },
        "base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message)>,mojo::Message>::Destroy": {
            "offset": "0x22E830"
        },
        "base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>,mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> > >::Destroy": {
            "offset": "0x22E870"
        },
        "base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>,mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> > >::Destroy": {
            "offset": "0x22E870"
        },
        "base::internal::BindState<base::RepeatingCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0x201910"
        },
        "base::internal::BindState<base::SysInfo::HardwareInfo (__cdecl*)(void)>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<base::internal::IgnoreResultHelper<bool (__cdecl base::internal::`anonymous namespace'::WorkerThreadDelegate::*)(scoped_refptr<base::internal::Sequence>,base::internal::Task)>,base::internal::UnretainedWrapper<base::internal::`anonymous namespace'::WorkerThreadDelegate>,scoped_refptr<base::internal::Sequence> >::Destroy": {
            "offset": "0x10EC30"
        },
        "base::internal::BindState<base::internal::IgnoreResultHelper<int (__cdecl*)(void *)>,void *>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<bool (__cdecl base::MessagePumpForUI::*)(unsigned int,unsigned __int64,__int64,__int64 *),base::internal::UnretainedWrapper<base::MessagePumpForUI> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<bool (__cdecl*)(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<bool (__cdecl*)(scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > const &,base::ScopedClosureRunner const &),scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::ScopedClosureRunner>::Destroy": {
            "offset": "0xDCA50"
        },
        "base::internal::BindState<mojo::AssociatedGroupController * (__cdecl mojo::ScopedInterfaceEndpointHandle::State::*)(void)const ,scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State> >::Destroy": {
            "offset": "0x225340"
        },
        "base::internal::BindState<unsigned __int64 (__cdecl*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,void const *,unsigned int),std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(mojo::Message),base::WeakPtr<IPC::ChannelMojo> >::Destroy": {
            "offset": "0x187D80"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >),base::WeakPtr<IPC::ChannelMojo> >::Destroy": {
            "offset": "0x187D80"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(void),base::WeakPtr<IPC::ChannelMojo> >::Destroy": {
            "offset": "0x187D80"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(IPC::Message const &),scoped_refptr<IPC::ChannelProxy::Context>,IPC::Message>::Create<void (__cdecl IPC::ChannelProxy::Context::*)(IPC::Message const &),IPC::ChannelProxy::Context *,IPC::Message const &>": {
            "offset": "0x19FAB0"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(IPC::Message const &),scoped_refptr<IPC::ChannelProxy::Context>,IPC::Message>::Destroy": {
            "offset": "0x1A23A0"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(IPC::MessageFilter *),scoped_refptr<IPC::ChannelProxy::Context>,base::internal::RetainedRefWrapper<IPC::MessageFilter> >::Destroy": {
            "offset": "0x1A23E0"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(bool),scoped_refptr<IPC::ChannelProxy::Context>,bool>::Destroy": {
            "offset": "0x1A24E0"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,mojo::ScopedInterfaceEndpointHandle),scoped_refptr<IPC::ChannelProxy::Context>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::ScopedInterfaceEndpointHandle>::Create<void (__cdecl IPC::ChannelProxy::Context::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,mojo::ScopedInterfaceEndpointHandle),IPC::ChannelProxy::Context *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,mojo::ScopedInterfaceEndpointHandle>": {
            "offset": "0x19F8D0"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,mojo::ScopedInterfaceEndpointHandle),scoped_refptr<IPC::ChannelProxy::Context>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::ScopedInterfaceEndpointHandle>::Destroy": {
            "offset": "0x1A2360"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> >),scoped_refptr<IPC::ChannelProxy::Context>,std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >::Create<void (__cdecl IPC::ChannelProxy::Context::*)(std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> >),IPC::ChannelProxy::Context *,std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >": {
            "offset": "0x19FC80"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> >),scoped_refptr<IPC::ChannelProxy::Context>,std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >::Destroy": {
            "offset": "0x1A2420"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(void),scoped_refptr<IPC::ChannelProxy::Context> >::Create<void (__cdecl IPC::ChannelProxy::Context::*)(void),IPC::ChannelProxy::Context *>": {
            "offset": "0x19FE50"
        },
        "base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(void),scoped_refptr<IPC::ChannelProxy::Context> >::Destroy": {
            "offset": "0x1A2460"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::*)(base::WaitableEvent *),base::internal::UnretainedWrapper<IPC::SyncChannel> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(IPC::SyncChannel::SyncContext *),scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue>,base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >::Create<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(IPC::SyncChannel::SyncContext *),IPC::SyncChannel::ReceivedSyncMsgQueue *,base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >": {
            "offset": "0x1B1830"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(IPC::SyncChannel::SyncContext *),scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue>,base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >::Destroy": {
            "offset": "0x1B3480"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(void),base::internal::UnretainedWrapper<IPC::SyncChannel::ReceivedSyncMsgQueue> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(void),scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue> >::Destroy": {
            "offset": "0x1B3500"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::NestedSendDoneWatcher::*)(base::WaitableEvent *),base::internal::UnretainedWrapper<IPC::SyncChannel::ReceivedSyncMsgQueue::NestedSendDoneWatcher> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::SyncContext::*)(base::RunLoop *,base::WaitableEvent *),scoped_refptr<IPC::SyncChannel::SyncContext>,base::RunLoop *>::Create<void (__cdecl IPC::SyncChannel::SyncContext::*)(base::RunLoop *,base::WaitableEvent *),IPC::SyncChannel::SyncContext * &,base::RunLoop * &>": {
            "offset": "0x1B19F0"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::SyncContext::*)(base::RunLoop *,base::WaitableEvent *),scoped_refptr<IPC::SyncChannel::SyncContext>,base::RunLoop *>::Destroy": {
            "offset": "0x1A24E0"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncChannel::SyncContext::*)(base::WaitableEvent *),base::internal::UnretainedWrapper<IPC::SyncChannel::SyncContext> >::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncMessageFilter::*)(IPC::Message *),scoped_refptr<IPC::SyncMessageFilter>,IPC::Message *>::Create<void (__cdecl IPC::SyncMessageFilter::*)(IPC::Message *),IPC::SyncMessageFilter *,IPC::Message * &>": {
            "offset": "0x1B66E0"
        },
        "base::internal::BindState<void (__cdecl IPC::SyncMessageFilter::*)(IPC::Message *),scoped_refptr<IPC::SyncMessageFilter>,IPC::Message *>::Destroy": {
            "offset": "0x1B6B60"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,base::internal::PassedWrapper<mojo::Message> >::Create<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),IPC::A0x56226f87::ChannelAssociatedGroupController *,base::internal::PassedWrapper<mojo::Message> >": {
            "offset": "0x1A8840"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,base::internal::PassedWrapper<mojo::Message> >::Destroy": {
            "offset": "0x1AD8F0"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,mojo::Message>::Create<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),IPC::A0x56226f87::ChannelAssociatedGroupController *,mojo::Message>": {
            "offset": "0x1A8670"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,mojo::Message>::Destroy": {
            "offset": "0x1AD8B0"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,IPC::A0x56226f87::ChannelAssociatedGroupController::Endpoint *),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >::Create<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,IPC::A0x56226f87::ChannelAssociatedGroupController::Endpoint *),IPC::A0x56226f87::ChannelAssociatedGroupController *,unsigned int,base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >": {
            "offset": "0x1A84A0"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,IPC::A0x56226f87::ChannelAssociatedGroupController::Endpoint *),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >::Destroy": {
            "offset": "0x1AD830"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,unsigned int),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,unsigned int>::Create<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,unsigned int),IPC::A0x56226f87::ChannelAssociatedGroupController *,unsigned int &,unsigned int &>": {
            "offset": "0x1A82D0"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,unsigned int),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,unsigned int>::Destroy": {
            "offset": "0x1AD7B0"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(void),base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController> >::Destroy": {
            "offset": "0x496B0"
        },
        "base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::*)(void),base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >::Destroy": {
            "offset": "0x496B0"
        },
        "base::internal::BindState<void (__cdecl IPC::internal::MessagePipeReader::*)(unsigned int),base::internal::UnretainedWrapper<IPC::internal::MessagePipeReader>,unsigned int>::Destroy": {
            "offset": "0xB6420"
        },
        "base::internal::BindState<void (__cdecl base::CancelableTaskTracker::*)(__int64),base::internal::UnretainedWrapper<base::CancelableTaskTracker>,__int64>::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl base::ImportantFileWriter::*)(void),base::internal::UnretainedWrapper<base::ImportantFileWriter> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::FieldTrialList::Observer>::*)(base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >,base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::FieldTrialList::Observer>::*)(base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData const &),base::ObserverListThreadSafe<base::FieldTrialList::Observer> *,base::FieldTrialList::Observer * &,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData const &>": {
            "offset": "0x6C0F0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::FieldTrialList::Observer>::*)(base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >,base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::FieldTrialList::Observer>::*)(base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData const &),base::ObserverListThreadSafe<base::FieldTrialList::Observer> *,base::FieldTrialList::Observer * const &,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>": {
            "offset": "0x6C2E0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::FieldTrialList::Observer>::*)(base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >,base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>::Destroy": {
            "offset": "0x6D9B0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::MemoryPressureListener>::*)(base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >,base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::MemoryPressureListener>::*)(base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData const &),base::ObserverListThreadSafe<base::MemoryPressureListener> *,base::MemoryPressureListener * &,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData const &>": {
            "offset": "0x6C0F0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::MemoryPressureListener>::*)(base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >,base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::MemoryPressureListener>::*)(base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData const &),base::ObserverListThreadSafe<base::MemoryPressureListener> *,base::MemoryPressureListener * const &,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>": {
            "offset": "0x6C2E0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::MemoryPressureListener>::*)(base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >,base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>::Destroy": {
            "offset": "0x6D9B0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::PowerObserver>::*)(base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::PowerObserver> >,base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::PowerObserver>::*)(base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData const &),base::ObserverListThreadSafe<base::PowerObserver> *,base::PowerObserver * &,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData const &>": {
            "offset": "0x6C0F0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::PowerObserver>::*)(base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::PowerObserver> >,base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::PowerObserver>::*)(base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData const &),base::ObserverListThreadSafe<base::PowerObserver> *,base::PowerObserver * const &,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>": {
            "offset": "0x6C2E0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::PowerObserver>::*)(base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::PowerObserver> >,base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>::Destroy": {
            "offset": "0x6D9B0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::*)(base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >,base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::*)(base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData const &),base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> *,base::SystemMonitor::DevicesChangedObserver * &,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData const &>": {
            "offset": "0x6C0F0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::*)(base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >,base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>::Create<void (__cdecl base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::*)(base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData const &),base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> *,base::SystemMonitor::DevicesChangedObserver * const &,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>": {
            "offset": "0x6C2E0"
        },
        "base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::*)(base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >,base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>::Destroy": {
            "offset": "0x6D9B0"
        },
        "base::internal::BindState<void (__cdecl base::PartitionAllocMemoryReclaimer::*)(void),base::internal::UnretainedWrapper<base::PartitionAllocMemoryReclaimer> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::RunLoop::*)(void),base::WeakPtr<base::RunLoop> >::Destroy": {
            "offset": "0xBB810"
        },
        "base::internal::BindState<void (__cdecl base::RunLoop::*)(void),base::internal::UnretainedWrapper<base::RunLoop> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::StackSamplingProfiler::SamplingThread::*)(int),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int>::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl base::StackSamplingProfiler::SamplingThread::*)(int,std::unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> >),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int,std::unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> > >::Destroy": {
            "offset": "0xB6450"
        },
        "base::internal::BindState<void (__cdecl base::StackSamplingProfiler::SamplingThread::*)(std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >::Destroy": {
            "offset": "0xB6490"
        },
        "base::internal::BindState<void (__cdecl base::Thread::*)(void),base::internal::UnretainedWrapper<base::Thread> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::WaitableEvent::*)(void),base::internal::UnretainedWrapper<base::WaitableEvent> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::BarrierInfo::*)(void),base::internal::OwnedWrapper<base::`anonymous namespace'::BarrierInfo,std::default_delete<base::`anonymous namespace'::BarrierInfo> > >::Destroy": {
            "offset": "0x1CD40"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateOrOpenHelper::*)(base::FilePath const &,int),base::internal::UnretainedWrapper<base::`anonymous namespace'::CreateOrOpenHelper>,base::FilePath,unsigned int>::Destroy": {
            "offset": "0x49600"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateOrOpenHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error)>),base::internal::OwnedWrapper<base::`anonymous namespace'::CreateOrOpenHelper,std::default_delete<base::`anonymous namespace'::CreateOrOpenHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >::Destroy": {
            "offset": "0x49640"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateTemporaryHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)>),base::internal::OwnedWrapper<base::`anonymous namespace'::CreateTemporaryHelper,std::default_delete<base::`anonymous namespace'::CreateTemporaryHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)> >::Destroy": {
            "offset": "0x496E0"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateTemporaryHelper::*)(unsigned int),base::internal::UnretainedWrapper<base::`anonymous namespace'::CreateTemporaryHelper>,unsigned int>::Destroy": {
            "offset": "0x496B0"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(__int64),base::internal::UnretainedWrapper<base::`anonymous namespace'::GenericFileHelper>,__int64>::Destroy": {
            "offset": "0x496B0"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error)>),base::internal::OwnedWrapper<base::`anonymous namespace'::GenericFileHelper,std::default_delete<base::`anonymous namespace'::GenericFileHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >::Destroy": {
            "offset": "0x49640"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(base::Time,base::Time),base::internal::UnretainedWrapper<base::`anonymous namespace'::GenericFileHelper>,base::Time,base::Time>::Destroy": {
            "offset": "0x49750"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(void),base::internal::UnretainedWrapper<base::`anonymous namespace'::GenericFileHelper> >::Destroy": {
            "offset": "0x49780"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::GetInfoHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)>),base::internal::OwnedWrapper<base::`anonymous namespace'::GetInfoHelper,std::default_delete<base::`anonymous namespace'::GetInfoHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)> >::Destroy": {
            "offset": "0x497B0"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::GetInfoHelper::*)(void),base::internal::UnretainedWrapper<base::`anonymous namespace'::GetInfoHelper> >::Destroy": {
            "offset": "0x49780"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::ReadHelper::*)(__int64),base::internal::UnretainedWrapper<base::`anonymous namespace'::ReadHelper>,__int64>::Destroy": {
            "offset": "0x496B0"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::ReadHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,char const *,int)>),base::internal::OwnedWrapper<base::`anonymous namespace'::ReadHelper,std::default_delete<base::`anonymous namespace'::ReadHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,char const *,int)> >::Destroy": {
            "offset": "0x49820"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::WriteHelper::*)(__int64),base::internal::UnretainedWrapper<base::`anonymous namespace'::WriteHelper>,__int64>::Destroy": {
            "offset": "0x496B0"
        },
        "base::internal::BindState<void (__cdecl base::`anonymous namespace'::WriteHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,int)>),base::internal::OwnedWrapper<base::`anonymous namespace'::WriteHelper,std::default_delete<base::`anonymous namespace'::WriteHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,int)> >::Destroy": {
            "offset": "0x49820"
        },
        "base::internal::BindState<void (__cdecl base::debug::GlobalActivityTracker::*)(__int64,__int64,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&),base::internal::UnretainedWrapper<base::debug::GlobalActivityTracker>,__int64,__int64,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Destroy": {
            "offset": "0x323A0"
        },
        "base::internal::BindState<void (__cdecl base::internal::AdaptCallbackForRepeatingHelper<>::*)(void),std::unique_ptr<base::internal::AdaptCallbackForRepeatingHelper<>,std::default_delete<base::internal::AdaptCallbackForRepeatingHelper<> > > >::Destroy": {
            "offset": "0x55A20"
        },
        "base::internal::BindState<void (__cdecl base::internal::BaseTimerTaskInternal::*)(void),base::internal::OwnedWrapper<base::internal::BaseTimerTaskInternal,std::default_delete<base::internal::BaseTimerTaskInternal> > >::Destroy": {
            "offset": "0x144B70"
        },
        "base::internal::BindState<void (__cdecl base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> >::*)(void),base::WeakPtr<base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> > > >::Destroy": {
            "offset": "0xBB810"
        },
        "base::internal::BindState<void (__cdecl base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::*)(void),base::WeakPtr<base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> > > >::Destroy": {
            "offset": "0xBB810"
        },
        "base::internal::BindState<void (__cdecl base::internal::DelayedTaskManager::*)(void),base::internal::UnretainedWrapper<base::internal::DelayedTaskManager> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::*)(void),base::internal::UnretainedWrapper<base::internal::LazyTaskRunner<base::SequencedTaskRunner,0> > >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::*)(void),base::internal::UnretainedWrapper<base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0> > >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::*)(void),base::internal::UnretainedWrapper<base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1> > >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::internal::ServiceThread::*)(void)const ,base::internal::UnretainedWrapper<base::internal::ServiceThread> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::internal::TaskTracker::*)(enum base::TaskPriority,base::TimeTicks,int)const ,base::internal::UnretainedWrapper<base::internal::TaskTracker const >,enum base::TaskPriority,base::TimeTicks,int>::Destroy": {
            "offset": "0x114680"
        },
        "base::internal::BindState<void (__cdecl base::internal::ThreadGroupImpl::*)(void),base::internal::UnretainedWrapper<base::internal::ThreadGroupImpl> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::internal::ThreadPoolImpl::*)(void)const ,base::internal::UnretainedWrapper<base::internal::ThreadPoolImpl> >::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl base::sequence_manager::internal::TaskQueueImpl::*)(base::sequence_manager::Task),base::internal::UnretainedWrapper<base::sequence_manager::internal::TaskQueueImpl>,base::sequence_manager::Task>::Destroy": {
            "offset": "0xF49C0"
        },
        "base::internal::BindState<void (__cdecl base::sequence_manager::internal::TaskQueueImpl::*)(void),base::internal::UnretainedWrapper<base::sequence_manager::internal::TaskQueueImpl> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::sequence_manager::internal::ThreadControllerImpl::*)(enum base::sequence_manager::internal::ThreadControllerImpl::WorkType),base::WeakPtr<base::sequence_manager::internal::ThreadControllerImpl>,enum base::sequence_manager::internal::ThreadControllerImpl::WorkType>::Destroy": {
            "offset": "0xFD460"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpManager::*)(base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState *),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager>,base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> >::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpManager::*)(std::unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> >),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager>,std::unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> > >::Destroy": {
            "offset": "0x14BA60"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpScheduler::*)(base::trace_event::MemoryDumpScheduler::Config),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler>,base::trace_event::MemoryDumpScheduler::Config>::Destroy": {
            "offset": "0x14DEB0"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpScheduler::*)(unsigned int),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler>,unsigned int>::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpScheduler::*)(void),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::TraceLog::*)(int,bool),base::internal::UnretainedWrapper<base::trace_event::TraceLog>,int,bool>::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::TraceLog::AsyncEnabledStateObserver::*)(void),base::WeakPtr<base::trace_event::TraceLog::AsyncEnabledStateObserver> >::Destroy": {
            "offset": "0xBB810"
        },
        "base::internal::BindState<void (__cdecl base::trace_event::TraceResultBuffer::SimpleOutput::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::internal::UnretainedWrapper<base::trace_event::TraceResultBuffer::SimpleOutput> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl base::win::ObjectWatcher::*)(base::win::ObjectWatcher::Delegate *),base::WeakPtr<base::win::ObjectWatcher>,base::win::ObjectWatcher::Delegate *>::Destroy": {
            "offset": "0x187D80"
        },
        "base::internal::BindState<void (__cdecl mojo::ConnectionGroup::*)(mojo::ConnectionGroup::Ref),scoped_refptr<mojo::ConnectionGroup>,mojo::ConnectionGroup::Ref>::Destroy": {
            "offset": "0x2018D0"
        },
        "base::internal::BindState<void (__cdecl mojo::DataPipeDrainer::*)(unsigned int),base::WeakPtr<mojo::DataPipeDrainer> >::Destroy": {
            "offset": "0xBB810"
        },
        "base::internal::BindState<void (__cdecl mojo::DataPipeProducer::*)(base::OnceCallback<void __cdecl(unsigned int)>,mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int),base::WeakPtr<mojo::DataPipeProducer>,base::OnceCallback<void __cdecl(unsigned int)> >::Destroy": {
            "offset": "0x20F510"
        },
        "base::internal::BindState<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> >),scoped_refptr<mojo::DataPipeProducer::SequenceState>,std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >::Create<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> >),mojo::DataPipeProducer::SequenceState *,std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >": {
            "offset": "0x2319F0"
        },
        "base::internal::BindState<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> >),scoped_refptr<mojo::DataPipeProducer::SequenceState>,std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >::Destroy": {
            "offset": "0x232120"
        },
        "base::internal::BindState<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(unsigned int,mojo::HandleSignalsState const &),scoped_refptr<mojo::DataPipeProducer::SequenceState> >::Create<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(unsigned int,mojo::HandleSignalsState const &),mojo::DataPipeProducer::SequenceState *>": {
            "offset": "0x231850"
        },
        "base::internal::BindState<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(unsigned int,mojo::HandleSignalsState const &),scoped_refptr<mojo::DataPipeProducer::SequenceState> >::Destroy": {
            "offset": "0x2320E0"
        },
        "base::internal::BindState<void (__cdecl mojo::HandleSignalTracker::*)(unsigned int,mojo::HandleSignalsState const &),base::internal::UnretainedWrapper<mojo::HandleSignalTracker> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(base::Optional<mojo::DisconnectReason> const &),base::WeakPtr<mojo::InterfaceEndpointClient>,base::Optional<mojo::DisconnectReason> >::Destroy": {
            "offset": "0x20F560"
        },
        "base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent),base::internal::UnretainedWrapper<mojo::InterfaceEndpointClient> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(void),base::WeakPtr<mojo::InterfaceEndpointClient> >::Destroy": {
            "offset": "0xBB810"
        },
        "base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(void),base::internal::UnretainedWrapper<mojo::InterfaceEndpointClient> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl mojo::ScopedInterfaceEndpointHandle::State::*)(scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent),scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State>,scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>::Create<void (__cdecl mojo::ScopedInterfaceEndpointHandle::State::*)(scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent),mojo::ScopedInterfaceEndpointHandle::State *,scoped_refptr<base::SequencedTaskRunner> &,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>": {
            "offset": "0x224440"
        },
        "base::internal::BindState<void (__cdecl mojo::ScopedInterfaceEndpointHandle::State::*)(scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent),scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State>,scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>::Destroy": {
            "offset": "0x225300"
        },
        "base::internal::BindState<void (__cdecl mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::*)(void),base::internal::UnretainedWrapper<mojo::SequenceLocalSyncEventWatcher::SequenceLocalState> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl mojo::SimpleWatcher::*)(int,unsigned int,mojo::HandleSignalsState const &),base::WeakPtr<mojo::SimpleWatcher>,int,unsigned int,mojo::HandleSignalsState>::Destroy": {
            "offset": "0xFD460"
        },
        "base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ConnectionParams,base::Optional<mojo::PlatformHandle>),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,base::Optional<mojo::PlatformHandle> >::Destroy": {
            "offset": "0x1DC840"
        },
        "base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ConnectionParams,mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Destroy": {
            "offset": "0x1DC880"
        },
        "base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ScopedProcessHandle,mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> const &),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ScopedProcessHandle,mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::Destroy": {
            "offset": "0x1DC8D0"
        },
        "base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ports::NodeName const &,mojo::core::NodeChannel *),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ports::NodeName,base::internal::RetainedRefWrapper<mojo::core::NodeChannel> >::Destroy": {
            "offset": "0x1DC7C0"
        },
        "base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(unsigned long),base::internal::UnretainedWrapper<mojo::core::NodeController>,unsigned long>::Destroy": {
            "offset": "0xB6420"
        },
        "base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(void),base::internal::UnretainedWrapper<mojo::core::NodeController> >::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(enum mojo::core::Channel::Error),scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin>,enum mojo::core::Channel::Error>::Create<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(enum mojo::core::Channel::Error),mojo::core::A0xc2f329fb::ChannelWin *,enum mojo::core::Channel::Error>": {
            "offset": "0x1BED40"
        },
        "base::internal::BindState<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(enum mojo::core::Channel::Error),scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin>,enum mojo::core::Channel::Error>::Destroy": {
            "offset": "0x1BFF60"
        },
        "base::internal::BindState<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(void),scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin> >::Create<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(void),mojo::core::A0xc2f329fb::ChannelWin *>": {
            "offset": "0x1BEF00"
        },
        "base::internal::BindState<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(void),scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin> >::Destroy": {
            "offset": "0x1BFFE0"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::AssociatedInterfacePtrStateBase::*)(base::OnceCallback<void __cdecl(unsigned int)>,unsigned int),base::internal::UnretainedWrapper<mojo::internal::AssociatedInterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >::Destroy": {
            "offset": "0xBB750"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::ControlMessageProxy::*)(void),base::internal::UnretainedWrapper<mojo::internal::ControlMessageProxy> >::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::InterfacePtrStateBase::*)(base::OnceCallback<void __cdecl(unsigned int)>,unsigned int),base::internal::UnretainedWrapper<mojo::internal::InterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >::Destroy": {
            "offset": "0xBB750"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(bool),base::internal::UnretainedWrapper<mojo::internal::MultiplexRouter>,bool>::Destroy": {
            "offset": "0xB6420"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(mojo::ConnectionGroup::Ref),scoped_refptr<mojo::internal::MultiplexRouter> >::Destroy": {
            "offset": "0x204220"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(unsigned int,mojo::HandleSignalsState const &),scoped_refptr<mojo::internal::MultiplexRouter> >::Create<void (__cdecl mojo::internal::MultiplexRouter::*)(unsigned int,mojo::HandleSignalsState const &),mojo::internal::MultiplexRouter *>": {
            "offset": "0x2180C0"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(unsigned int,mojo::HandleSignalsState const &),scoped_refptr<mojo::internal::MultiplexRouter> >::Destroy": {
            "offset": "0x204220"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(void),scoped_refptr<mojo::internal::MultiplexRouter> >::Create<void (__cdecl mojo::internal::MultiplexRouter::*)(void),mojo::internal::MultiplexRouter *>": {
            "offset": "0x2180C0"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(void),scoped_refptr<mojo::internal::MultiplexRouter> >::Destroy": {
            "offset": "0x204220"
        },
        "base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::InterfaceEndpoint::*)(void),base::internal::UnretainedWrapper<mojo::internal::MultiplexRouter::InterfaceEndpoint> >::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl*)(base::File),base::File>::Destroy": {
            "offset": "0x495C0"
        },
        "base::internal::BindState<void (__cdecl*)(base::FilePath const &,std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::FilePath,std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Destroy": {
            "offset": "0x559C0"
        },
        "base::internal::BindState<void (__cdecl*)(base::OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *),base::OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *>::Destroy": {
            "offset": "0xDA7B0"
        },
        "base::internal::BindState<void (__cdecl*)(base::OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *),base::OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>,base::internal::OwnedWrapper<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> >,std::default_delete<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > > > >::Destroy": {
            "offset": "0xDA7F0"
        },
        "base::internal::BindState<void (__cdecl*)(base::OnceCallback<void __cdecl(unsigned int)>,mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>),base::OnceCallback<void __cdecl(unsigned int)> >::Destroy": {
            "offset": "0x19A6C0"
        },
        "base::internal::BindState<void (__cdecl*)(base::OnceCallback<void __cdecl(void)>,mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>),base::OnceCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0x19A6C0"
        },
        "base::internal::BindState<void (__cdecl*)(base::RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>,enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail),base::RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>,enum base::trace_event::MemoryDumpType>::Destroy": {
            "offset": "0xDA7B0"
        },
        "base::internal::BindState<void (__cdecl*)(base::RepeatingCallback<void __cdecl(unsigned int)> const &,unsigned int,mojo::HandleSignalsState const &),base::RepeatingCallback<void __cdecl(unsigned int)> >::Destroy": {
            "offset": "0x19A6C0"
        },
        "base::internal::BindState<void (__cdecl*)(base::RunLoop *,base::OnceCallback<void __cdecl(void)>),base::internal::UnretainedWrapper<base::RunLoop>,base::RepeatingCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0xBB750"
        },
        "base::internal::BindState<void (__cdecl*)(base::StackSamplingProfiler::SamplingThread *,int,base::WaitableEvent *),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int,base::internal::UnretainedWrapper<base::WaitableEvent> >::Destroy": {
            "offset": "0xB6420"
        },
        "base::internal::BindState<void (__cdecl*)(base::WeakPtr<mojo::InterfaceEndpointClient> const &,base::OnceCallback<void __cdecl(bool)>),base::WeakPtr<mojo::InterfaceEndpointClient>,base::OnceCallback<void __cdecl(bool)> >::Destroy": {
            "offset": "0x20F510"
        },
        "base::internal::BindState<void (__cdecl*)(base::`anonymous namespace'::PostTaskAndReplyRelay),base::A0x8d52a0ae::PostTaskAndReplyRelay>::Destroy": {
            "offset": "0x134F10"
        },
        "base::internal::BindState<void (__cdecl*)(bool *),bool *>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl*)(mojo::Message,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),mojo::Message>::Destroy": {
            "offset": "0x2144A0"
        },
        "base::internal::BindState<void (__cdecl*)(mojo::core::`anonymous namespace'::ProcessDisconnectHandler *,scoped_refptr<base::SequencedTaskRunner>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::internal::OwnedWrapper<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >,scoped_refptr<base::SingleThreadTaskRunner>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64>::Destroy": {
            "offset": "0x1C51E0"
        },
        "base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > const &,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0xDCA10"
        },
        "base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > const &,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0xDC990"
        },
        "base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0xBB790"
        },
        "base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SingleThreadTaskRunner>,base::RepeatingCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0xBB790"
        },
        "base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SingleThreadTaskRunner>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SingleThreadTaskRunner>,base::OnceCallback<void __cdecl(void)> >::Destroy": {
            "offset": "0xBB790"
        },
        "base::internal::BindState<void (__cdecl*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Destroy": {
            "offset": "0xA3780"
        },
        "base::internal::BindState<void (__cdecl*)(std::unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >,base::RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)> const &,base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> const &),std::unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >,base::RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)>,base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> >::Destroy": {
            "offset": "0x166E30"
        },
        "base::internal::BindState<void (__cdecl*)(std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,mojo::Message),std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,mojo::Message>::Destroy": {
            "offset": "0x22E7D0"
        },
        "base::internal::BindState<void (__cdecl*)(std::unique_ptr<mojo::core::NodeController,std::default_delete<mojo::core::NodeController> >),std::unique_ptr<mojo::core::NodeController,std::default_delete<mojo::core::NodeController> > >::Destroy": {
            "offset": "0x1C5260"
        },
        "base::internal::BindState<void (__cdecl*)(std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> >,unsigned int,mojo::HandleSignalsState const &),base::internal::PassedWrapper<std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> > > >::Destroy": {
            "offset": "0x236230"
        },
        "base::internal::BindState<void (__cdecl*)(void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,base::FieldTrialList::Observer *),void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Destroy": {
            "offset": "0x800C0"
        },
        "base::internal::BindState<void (__cdecl*)(void (__cdecl base::MemoryPressureListener::*)(enum base::MemoryPressureListener::MemoryPressureLevel),enum base::MemoryPressureListener::MemoryPressureLevel,base::MemoryPressureListener *),void (__cdecl base::MemoryPressureListener::*)(enum base::MemoryPressureListener::MemoryPressureLevel),enum base::MemoryPressureListener::MemoryPressureLevel>::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl*)(void (__cdecl base::PowerObserver::*)(bool),bool,base::PowerObserver *),void (__cdecl base::PowerObserver::*)(bool),bool>::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl*)(void (__cdecl base::PowerObserver::*)(void),base::PowerObserver *),void (__cdecl base::PowerObserver::*)(void)>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl*)(void (__cdecl base::SystemMonitor::DevicesChangedObserver::*)(enum base::SystemMonitor::DeviceType),enum base::SystemMonitor::DeviceType,base::SystemMonitor::DevicesChangedObserver *),void (__cdecl base::SystemMonitor::DevicesChangedObserver::*)(enum base::SystemMonitor::DeviceType),enum base::SystemMonitor::DeviceType>::Destroy": {
            "offset": "0x6D980"
        },
        "base::internal::BindState<void (__cdecl*)(void *),void *>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl*)(void const *),void const *>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindState<void (__cdecl*)(void)>::Destroy": {
            "offset": "0x9C20"
        },
        "base::internal::BindStateBase::BindStateBase": {
            "offset": "0x1E670"
        },
        "base::internal::BindStateBase::IsCancelled": {
            "offset": "0xAD10"
        },
        "base::internal::BindStateBase::MaybeValid": {
            "offset": "0xB120"
        },
        "base::internal::BindStateBase::~BindStateBase": {
            "offset": "0x3860"
        },
        "base::internal::BindStateBaseRefCountTraits::Destruct": {
            "offset": "0x1E8B0"
        },
        "base::internal::BlockingObserver::BlockingObserver": {
            "offset": "0x3E570"
        },
        "base::internal::BlockingObserver::~BlockingObserver": {
            "offset": "0x12B0"
        },
        "base::internal::CallbackBase::CallbackBase": {
            "offset": "0x3100"
        },
        "base::internal::CallbackBase::EqualsInternal": {
            "offset": "0x1E8C0"
        },
        "base::internal::CallbackBase::IsCancelled": {
            "offset": "0x1E8D0"
        },
        "base::internal::CallbackBase::MaybeValid": {
            "offset": "0x1E960"
        },
        "base::internal::CallbackBase::Reset": {
            "offset": "0x1EA90"
        },
        "base::internal::CallbackBase::is_null": {
            "offset": "0xAEE0"
        },
        "base::internal::CallbackBase::polymorphic_invoke": {
            "offset": "0xD820"
        },
        "base::internal::CallbackBase::~CallbackBase": {
            "offset": "0x1E730"
        },
        "base::internal::CallbackBaseCopyable::CallbackBaseCopyable": {
            "offset": "0x3100"
        },
        "base::internal::CallbackBaseCopyable::~CallbackBaseCopyable": {
            "offset": "0x3850"
        },
        "base::internal::CanUseBackgroundPriorityForWorkerThread": {
            "offset": "0x10B320"
        },
        "base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> >::ForwardOnce<>": {
            "offset": "0xBA370"
        },
        "base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> >::MakeForwarder<>": {
            "offset": "0xBA390"
        },
        "base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> >::~CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xBAB30"
        },
        "base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::Cancel": {
            "offset": "0xFD290"
        },
        "base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::ForwardRepeating<>": {
            "offset": "0xFC5E0"
        },
        "base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::MakeForwarder<>": {
            "offset": "0xFC600"
        },
        "base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::Reset": {
            "offset": "0xFDFC0"
        },
        "base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::callback": {
            "offset": "0xFE8B0"
        },
        "base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::~CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >": {
            "offset": "0xBAB30"
        },
        "base::internal::CheckedLock::~CheckedLock": {
            "offset": "0xE1CB0"
        },
        "base::internal::CheckedLockImpl::Acquire": {
            "offset": "0xDEF80"
        },
        "base::internal::CheckedLockImpl::AssertAcquired": {
            "offset": "0xDF000"
        },
        "base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread": {
            "offset": "0xDF010"
        },
        "base::internal::CheckedLockImpl::CheckedLockImpl": {
            "offset": "0xDED80"
        },
        "base::internal::CheckedLockImpl::CreateConditionVariable": {
            "offset": "0xDF520"
        },
        "base::internal::CheckedLockImpl::Release": {
            "offset": "0xDFA00"
        },
        "base::internal::CheckedLockImpl::is_universal_predecessor": {
            "offset": "0x5B1A0"
        },
        "base::internal::CheckedLockImpl::~CheckedLockImpl": {
            "offset": "0xDEF40"
        },
        "base::internal::CheckedObserverAdapter::CheckedObserverAdapter": {
            "offset": "0xA5220"
        },
        "base::internal::CheckedObserverAdapter::IsEqual": {
            "offset": "0xAE00"
        },
        "base::internal::CheckedObserverAdapter::IsMarkedForRemoval": {
            "offset": "0xAE50"
        },
        "base::internal::CheckedObserverAdapter::MarkForRemoval": {
            "offset": "0xB000"
        },
        "base::internal::CheckedObserverAdapter::~CheckedObserverAdapter": {
            "offset": "0x48A70"
        },
        "base::internal::CheckedThreadLocalOwnedPointer<base::WorkIdProvider>::DeleteTlsPtr": {
            "offset": "0x7A420"
        },
        "base::internal::CheckedThreadLocalOwnedPointer<base::debug::StackTrace>::DeleteTlsPtr": {
            "offset": "0x13E3F0"
        },
        "base::internal::CheckedThreadLocalOwnedPointer<base::debug::StackTrace>::Set": {
            "offset": "0x13EA80"
        },
        "base::internal::CheckedThreadLocalOwnedPointer<base::debug::ThreadActivityTracker>::DeleteTlsPtr": {
            "offset": "0x32360"
        },
        "base::internal::CheckedThreadLocalOwnedPointer<base::debug::ThreadActivityTracker>::Set": {
            "offset": "0x34D00"
        },
        "base::internal::CheckedThreadLocalOwnedPointer<base::debug::ThreadActivityTracker>::~CheckedThreadLocalOwnedPointer<base::debug::ThreadActivityTracker>": {
            "offset": "0x2EEE0"
        },
        "base::internal::ClearBlockingObserverForCurrentThread": {
            "offset": "0x135D80"
        },
        "base::internal::CompleteLazyInstance": {
            "offset": "0x65230"
        },
        "base::internal::ComputeX86FamilyAndModel": {
            "offset": "0x27250"
        },
        "base::internal::CopyToString": {
            "offset": "0xC8CE0"
        },
        "base::internal::DelayedTaskManager::AddDelayedTask": {
            "offset": "0x10A2E0"
        },
        "base::internal::DelayedTaskManager::DelayedTask::~DelayedTask": {
            "offset": "0x10A170"
        },
        "base::internal::DelayedTaskManager::DelayedTaskManager": {
            "offset": "0x109E90"
        },
        "base::internal::DelayedTaskManager::GetTimeToScheduleProcessRipeTasksLockRequired": {
            "offset": "0x10A720"
        },
        "base::internal::DelayedTaskManager::NextScheduledRunTime": {
            "offset": "0x10A9B0"
        },
        "base::internal::DelayedTaskManager::ProcessRipeTasks": {
            "offset": "0x10AA40"
        },
        "base::internal::DelayedTaskManager::ScheduleProcessRipeTasksOnServiceThread": {
            "offset": "0x10AE20"
        },
        "base::internal::DelayedTaskManager::Start": {
            "offset": "0x10AFB0"
        },
        "base::internal::DelayedTaskManager::~DelayedTaskManager": {
            "offset": "0x10A1E0"
        },
        "base::internal::ExecutionEnvironment::ExecutionEnvironment": {
            "offset": "0x74AA0"
        },
        "base::internal::GetNextSequenceLocalStorageSlotNumber": {
            "offset": "0x1371C0"
        },
        "base::internal::GetTaskPriorityForCurrentThread": {
            "offset": "0xE4B00"
        },
        "base::internal::InitializeThreadPrioritiesFeature": {
            "offset": "0x1338C0"
        },
        "base::internal::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask>::~IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask>": {
            "offset": "0x109FC0"
        },
        "base::internal::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::~IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>": {
            "offset": "0x101710"
        },
        "base::internal::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>": {
            "offset": "0x105CA0"
        },
        "base::internal::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::~IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>": {
            "offset": "0x105D50"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_4386c9527ced115e540eba88d682df82>,enum base::MessagePumpType>,std::unique_ptr<base::MessagePump,std::default_delete<base::MessagePump> > __cdecl(void)>::RunOnce": {
            "offset": "0x139E90"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_5c29675a80b8c99bd0fac366c0782144>,tagMSG>,void __cdecl(void)>::RunOnce": {
            "offset": "0x110120"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_5da9fdea1841ff493604d240375e5fd5> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x12B0"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_843c7f0c89172c62965a2671a3de116f>,std::queue<base::internal::Task,base::circular_deque<base::internal::Task> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x113D50"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_8ca92c010fc9507cc41c2956991290ff>,scoped_refptr<base::internal::Sequence>,base::internal::UnretainedWrapper<base::internal::ThreadPoolImpl> >,void __cdecl(base::internal::Task)>::RunOnce": {
            "offset": "0x125C60"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_b172b1708d967edc0cb01b7e9b6857a3>,base::internal::UnretainedWrapper<base::internal::JobTaskSource> >,void __cdecl(void)>::Run": {
            "offset": "0x10BBF0"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_bb59429c798e9883cca5c325e82e657c>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1C71B0"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_bd5bebe1bd263f854844c00eb09c857b>,std::unique_ptr<base::ThreadTaskRunnerHandle,std::default_delete<base::ThreadTaskRunnerHandle> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x13F7F0"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_c3505d0927138e26ec4d9404e369e3b0>,base::Process>,void __cdecl(void)>::RunOnce": {
            "offset": "0xAB8C0"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_c6823fc23982223dfc30b7440e47d600>,base::OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>,base::WeakPtr<mojo::internal::BindingStateBase> >,void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::RunOnce": {
            "offset": "0x204870"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_decc37711c9db70cb9b46f1134c26d0d>,bool *>,void __cdecl(void)>::Run": {
            "offset": "0x22E8C0"
        },
        "base::internal::Invoker<base::internal::BindState<<lambda_e02ca4da93a47048e75568fb56ed6a47>,scoped_refptr<base::SingleThreadTaskRunner>,base::internal::UnretainedWrapper<base::SingleThreadTaskRunner>,std::unique_ptr<base::RunLoop::ScopedDisallowRunningForTesting,std::default_delete<base::RunLoop::ScopedDisallowRunningForTesting> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x13F830"
        },
        "base::internal::Invoker<base::internal::BindState<base::OnceCallback<void __cdecl(mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int)>,mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x232B30"
        },
        "base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message)>,mojo::Message>,void __cdecl(void)>::RunOnce": {
            "offset": "0x22EA10"
        },
        "base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>,mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x22EB40"
        },
        "base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>,mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x22EB40"
        },
        "base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void __cdecl(void)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x201C70"
        },
        "base::internal::Invoker<base::internal::BindState<base::SysInfo::HardwareInfo (__cdecl*)(void)>,base::SysInfo::HardwareInfo __cdecl(void)>::RunOnce": {
            "offset": "0xDABB0"
        },
        "base::internal::Invoker<base::internal::BindState<base::internal::IgnoreResultHelper<bool (__cdecl base::internal::`anonymous namespace'::WorkerThreadDelegate::*)(scoped_refptr<base::internal::Sequence>,base::internal::Task)>,base::internal::UnretainedWrapper<base::internal::`anonymous namespace'::WorkerThreadDelegate>,scoped_refptr<base::internal::Sequence> >,void __cdecl(base::internal::Task)>::RunOnce": {
            "offset": "0x1100C0"
        },
        "base::internal::Invoker<base::internal::BindState<base::internal::IgnoreResultHelper<int (__cdecl*)(void *)>,void *>,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<bool (__cdecl base::MessagePumpForUI::*)(unsigned int,unsigned __int64,__int64,__int64 *),base::internal::UnretainedWrapper<base::MessagePumpForUI> >,bool __cdecl(unsigned int,unsigned __int64,__int64,__int64 *)>::Run": {
            "offset": "0x79810"
        },
        "base::internal::Invoker<base::internal::BindState<bool (__cdecl*)(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)>,bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)>::Run": {
            "offset": "0x16A110"
        },
        "base::internal::Invoker<base::internal::BindState<bool (__cdecl*)(scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > const &,base::ScopedClosureRunner const &),scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::ScopedClosureRunner>,bool __cdecl(void)>::Run": {
            "offset": "0xDD820"
        },
        "base::internal::Invoker<base::internal::BindState<mojo::AssociatedGroupController * (__cdecl mojo::ScopedInterfaceEndpointHandle::State::*)(void)const ,scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State> >,mojo::AssociatedGroupController * __cdecl(void)>::Run": {
            "offset": "0x1B4DF0"
        },
        "base::internal::Invoker<base::internal::BindState<unsigned __int64 (__cdecl*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,void const *,unsigned int),std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,unsigned __int64 __cdecl(void const *,unsigned int)>::Run": {
            "offset": "0x233640"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(mojo::Message),base::WeakPtr<IPC::ChannelMojo> >,void __cdecl(mojo::Message)>::Run": {
            "offset": "0x19EE80"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >),base::WeakPtr<IPC::ChannelMojo> >,void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>::Run": {
            "offset": "0x19EF10"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(void),base::WeakPtr<IPC::ChannelMojo> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x19EFD0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(IPC::Message const &),scoped_refptr<IPC::ChannelProxy::Context>,IPC::Message>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A4550"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(IPC::MessageFilter *),scoped_refptr<IPC::ChannelProxy::Context>,base::internal::RetainedRefWrapper<IPC::MessageFilter> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A45A0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(bool),scoped_refptr<IPC::ChannelProxy::Context>,bool>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A4690"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,mojo::ScopedInterfaceEndpointHandle),scoped_refptr<IPC::ChannelProxy::Context>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::ScopedInterfaceEndpointHandle>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A44E0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> >),scoped_refptr<IPC::ChannelProxy::Context>,std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A45F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::ChannelProxy::Context::*)(void),scoped_refptr<IPC::ChannelProxy::Context> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A4650"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncChannel::*)(base::WaitableEvent *),base::internal::UnretainedWrapper<IPC::SyncChannel> >,void __cdecl(base::WaitableEvent *)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(IPC::SyncChannel::SyncContext *),scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue>,base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1B4DB0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(void),base::internal::UnretainedWrapper<IPC::SyncChannel::ReceivedSyncMsgQueue> >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::*)(void),scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1B4DF0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncChannel::ReceivedSyncMsgQueue::NestedSendDoneWatcher::*)(base::WaitableEvent *),base::internal::UnretainedWrapper<IPC::SyncChannel::ReceivedSyncMsgQueue::NestedSendDoneWatcher> >,void __cdecl(base::WaitableEvent *)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncChannel::SyncContext::*)(base::RunLoop *,base::WaitableEvent *),scoped_refptr<IPC::SyncChannel::SyncContext>,base::RunLoop *>,void __cdecl(base::WaitableEvent *)>::RunOnce": {
            "offset": "0x1B4E20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncChannel::SyncContext::*)(base::WaitableEvent *),base::internal::UnretainedWrapper<IPC::SyncChannel::SyncContext> >,void __cdecl(base::WaitableEvent *)>::RunOnce": {
            "offset": "0x1B4ED0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::SyncMessageFilter::*)(IPC::Message *),scoped_refptr<IPC::SyncMessageFilter>,IPC::Message *>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1B7190"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,base::internal::PassedWrapper<mojo::Message> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1AF8D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(mojo::Message),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,mojo::Message>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1AF860"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,IPC::A0x56226f87::ChannelAssociatedGroupController::Endpoint *),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1AF800"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(unsigned int,unsigned int),scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,unsigned int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1AF7B0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::*)(void),base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController> >,void __cdecl(void)>::Run": {
            "offset": "0x125C40"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint::*)(void),base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >,void __cdecl(void)>::Run": {
            "offset": "0x125C40"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl IPC::internal::MessagePipeReader::*)(unsigned int),base::internal::UnretainedWrapper<IPC::internal::MessagePipeReader>,unsigned int>,void __cdecl(void)>::Run": {
            "offset": "0x1A7D90"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::CancelableTaskTracker::*)(__int64),base::internal::UnretainedWrapper<base::CancelableTaskTracker>,__int64>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A950"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::ImportantFileWriter::*)(void),base::internal::UnretainedWrapper<base::ImportantFileWriter> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::FieldTrialList::Observer>::*)(base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >,base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>,void __cdecl(void)>::RunOnce": {
            "offset": "0x6E9F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::MemoryPressureListener>::*)(base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >,base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>,void __cdecl(void)>::RunOnce": {
            "offset": "0x6E9F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::PowerObserver>::*)(base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::PowerObserver> >,base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>,void __cdecl(void)>::RunOnce": {
            "offset": "0x6E9F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::*)(base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData const &),scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >,base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>,void __cdecl(void)>::RunOnce": {
            "offset": "0x6E9F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::PartitionAllocMemoryReclaimer::*)(void),base::internal::UnretainedWrapper<base::PartitionAllocMemoryReclaimer> >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::PartitionAllocMemoryReclaimer::*)(void),base::internal::UnretainedWrapper<base::PartitionAllocMemoryReclaimer> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::RunLoop::*)(void),base::WeakPtr<base::RunLoop> >,void __cdecl(void)>::Run": {
            "offset": "0xBC5D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::RunLoop::*)(void),base::internal::UnretainedWrapper<base::RunLoop> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::StackSamplingProfiler::SamplingThread::*)(int),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A920"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::StackSamplingProfiler::SamplingThread::*)(int,std::unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> >),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int,std::unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xB7370"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::StackSamplingProfiler::SamplingThread::*)(std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xB73A0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::Thread::*)(void),base::internal::UnretainedWrapper<base::Thread> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::WaitableEvent::*)(void),base::internal::UnretainedWrapper<base::WaitableEvent> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::BarrierInfo::*)(void),base::internal::OwnedWrapper<base::`anonymous namespace'::BarrierInfo,std::default_delete<base::`anonymous namespace'::BarrierInfo> > >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateOrOpenHelper::*)(base::FilePath const &,int),base::internal::UnretainedWrapper<base::`anonymous namespace'::CreateOrOpenHelper>,base::FilePath,unsigned int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateOrOpenHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error)>),base::internal::OwnedWrapper<base::`anonymous namespace'::CreateOrOpenHelper,std::default_delete<base::`anonymous namespace'::CreateOrOpenHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateTemporaryHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)>),base::internal::OwnedWrapper<base::`anonymous namespace'::CreateTemporaryHelper,std::default_delete<base::`anonymous namespace'::CreateTemporaryHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::CreateTemporaryHelper::*)(unsigned int),base::internal::UnretainedWrapper<base::`anonymous namespace'::CreateTemporaryHelper>,unsigned int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A920"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(__int64),base::internal::UnretainedWrapper<base::`anonymous namespace'::GenericFileHelper>,__int64>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A950"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error)>),base::internal::OwnedWrapper<base::`anonymous namespace'::GenericFileHelper,std::default_delete<base::`anonymous namespace'::GenericFileHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(base::Time,base::Time),base::internal::UnretainedWrapper<base::`anonymous namespace'::GenericFileHelper>,base::Time,base::Time>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A930"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::GenericFileHelper::*)(void),base::internal::UnretainedWrapper<base::`anonymous namespace'::GenericFileHelper> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::GetInfoHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)>),base::internal::OwnedWrapper<base::`anonymous namespace'::GetInfoHelper,std::default_delete<base::`anonymous namespace'::GetInfoHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::GetInfoHelper::*)(void),base::internal::UnretainedWrapper<base::`anonymous namespace'::GetInfoHelper> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::ReadHelper::*)(__int64),base::internal::UnretainedWrapper<base::`anonymous namespace'::ReadHelper>,__int64>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A950"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::ReadHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,char const *,int)>),base::internal::OwnedWrapper<base::`anonymous namespace'::ReadHelper,std::default_delete<base::`anonymous namespace'::ReadHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,char const *,int)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::WriteHelper::*)(__int64),base::internal::UnretainedWrapper<base::`anonymous namespace'::WriteHelper>,__int64>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A950"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::`anonymous namespace'::WriteHelper::*)(base::OnceCallback<void __cdecl(enum base::File::Error,int)>),base::internal::OwnedWrapper<base::`anonymous namespace'::WriteHelper,std::default_delete<base::`anonymous namespace'::WriteHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,int)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8F0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::debug::GlobalActivityTracker::*)(__int64,__int64,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&),base::internal::UnretainedWrapper<base::debug::GlobalActivityTracker>,__int64,__int64,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x34CD0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::AdaptCallbackForRepeatingHelper<>::*)(void),std::unique_ptr<base::internal::AdaptCallbackForRepeatingHelper<>,std::default_delete<base::internal::AdaptCallbackForRepeatingHelper<> > > >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::BaseTimerTaskInternal::*)(void),base::internal::OwnedWrapper<base::internal::BaseTimerTaskInternal,std::default_delete<base::internal::BaseTimerTaskInternal> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> >::*)(void),base::WeakPtr<base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> > > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBC5D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::*)(void),base::WeakPtr<base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> > > >,void __cdecl(void)>::Run": {
            "offset": "0xBC5D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::DelayedTaskManager::*)(void),base::internal::UnretainedWrapper<base::internal::DelayedTaskManager> >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::*)(void),base::internal::UnretainedWrapper<base::internal::LazyTaskRunner<base::SequencedTaskRunner,0> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::*)(void),base::internal::UnretainedWrapper<base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::*)(void),base::internal::UnretainedWrapper<base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::ServiceThread::*)(void)const ,base::internal::UnretainedWrapper<base::internal::ServiceThread> >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::TaskTracker::*)(enum base::TaskPriority,base::TimeTicks,int)const ,base::internal::UnretainedWrapper<base::internal::TaskTracker const >,enum base::TaskPriority,base::TimeTicks,int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x114AD0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::ThreadGroupImpl::*)(void),base::internal::UnretainedWrapper<base::internal::ThreadGroupImpl> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::internal::ThreadPoolImpl::*)(void)const ,base::internal::UnretainedWrapper<base::internal::ThreadPoolImpl> >,void __cdecl(void)>::Run": {
            "offset": "0x125C40"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::sequence_manager::internal::TaskQueueImpl::*)(base::sequence_manager::Task),base::internal::UnretainedWrapper<base::sequence_manager::internal::TaskQueueImpl>,base::sequence_manager::Task>,void __cdecl(void)>::RunOnce": {
            "offset": "0xF7D60"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::sequence_manager::internal::TaskQueueImpl::*)(void),base::internal::UnretainedWrapper<base::sequence_manager::internal::TaskQueueImpl> >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::sequence_manager::internal::ThreadControllerImpl::*)(enum base::sequence_manager::internal::ThreadControllerImpl::WorkType),base::WeakPtr<base::sequence_manager::internal::ThreadControllerImpl>,enum base::sequence_manager::internal::ThreadControllerImpl::WorkType>,void __cdecl(void)>::Run": {
            "offset": "0xFE0B0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpManager::*)(base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState *),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager>,base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A950"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpManager::*)(std::unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> >),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager>,std::unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xB73A0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpScheduler::*)(base::trace_event::MemoryDumpScheduler::Config),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler>,base::trace_event::MemoryDumpScheduler::Config>,void __cdecl(void)>::RunOnce": {
            "offset": "0x14DF90"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpScheduler::*)(unsigned int),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler>,unsigned int>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A920"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::MemoryDumpScheduler::*)(void),base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::TraceLog::*)(int,bool),base::internal::UnretainedWrapper<base::trace_event::TraceLog>,int,bool>,void __cdecl(void)>::RunOnce": {
            "offset": "0x16A160"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::TraceLog::AsyncEnabledStateObserver::*)(void),base::WeakPtr<base::trace_event::TraceLog::AsyncEnabledStateObserver> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBC5D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::trace_event::TraceResultBuffer::SimpleOutput::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::internal::UnretainedWrapper<base::trace_event::TraceResultBuffer::SimpleOutput> >,void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl base::win::ObjectWatcher::*)(base::win::ObjectWatcher::Delegate *),base::WeakPtr<base::win::ObjectWatcher>,base::win::ObjectWatcher::Delegate *>,void __cdecl(void)>::Run": {
            "offset": "0x187FB0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::ConnectionGroup::*)(mojo::ConnectionGroup::Ref),scoped_refptr<mojo::ConnectionGroup>,mojo::ConnectionGroup::Ref>,void __cdecl(void)>::RunOnce": {
            "offset": "0x201BB0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::DataPipeDrainer::*)(unsigned int),base::WeakPtr<mojo::DataPipeDrainer> >,void __cdecl(unsigned int)>::Run": {
            "offset": "0x231760"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::DataPipeProducer::*)(base::OnceCallback<void __cdecl(unsigned int)>,mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int),base::WeakPtr<mojo::DataPipeProducer>,base::OnceCallback<void __cdecl(unsigned int)> >,void __cdecl(mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int)>::RunOnce": {
            "offset": "0x2329E0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> >),scoped_refptr<mojo::DataPipeProducer::SequenceState>,std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x232AF0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::DataPipeProducer::SequenceState::*)(unsigned int,mojo::HandleSignalsState const &),scoped_refptr<mojo::DataPipeProducer::SequenceState> >,void __cdecl(unsigned int,mojo::HandleSignalsState const &)>::Run": {
            "offset": "0x2329A0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::HandleSignalTracker::*)(unsigned int,mojo::HandleSignalsState const &),base::internal::UnretainedWrapper<mojo::HandleSignalTracker> >,void __cdecl(unsigned int,mojo::HandleSignalsState const &)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(base::Optional<mojo::DisconnectReason> const &),base::WeakPtr<mojo::InterfaceEndpointClient>,base::Optional<mojo::DisconnectReason> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x210AE0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent),base::internal::UnretainedWrapper<mojo::InterfaceEndpointClient> >,void __cdecl(enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(void),base::WeakPtr<mojo::InterfaceEndpointClient> >,void __cdecl(void)>::Run": {
            "offset": "0x2089C0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(void),base::WeakPtr<mojo::InterfaceEndpointClient> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x2089C0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(void),base::internal::UnretainedWrapper<mojo::InterfaceEndpointClient> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::ScopedInterfaceEndpointHandle::State::*)(scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent),scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State>,scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>,void __cdecl(void)>::RunOnce": {
            "offset": "0x225ED0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::*)(void),base::internal::UnretainedWrapper<mojo::SequenceLocalSyncEventWatcher::SequenceLocalState> >,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::SimpleWatcher::*)(int,unsigned int,mojo::HandleSignalsState const &),base::WeakPtr<mojo::SimpleWatcher>,int,unsigned int,mojo::HandleSignalsState>,void __cdecl(void)>::RunOnce": {
            "offset": "0x2380A0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ConnectionParams,base::Optional<mojo::PlatformHandle>),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,base::Optional<mojo::PlatformHandle> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1E1E40"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ConnectionParams,mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1E1ED0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ScopedProcessHandle,mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> const &),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ScopedProcessHandle,mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1E1F60"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(mojo::core::ports::NodeName const &,mojo::core::NodeChannel *),base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ports::NodeName,base::internal::RetainedRefWrapper<mojo::core::NodeChannel> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1E1E20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(unsigned long),base::internal::UnretainedWrapper<mojo::core::NodeController>,unsigned long>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A7D90"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::NodeController::*)(void),base::internal::UnretainedWrapper<mojo::core::NodeController> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x125C40"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(enum mojo::core::Channel::Error),scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin>,enum mojo::core::Channel::Error>,void __cdecl(void)>::RunOnce": {
            "offset": "0x1C0D30"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::core::`anonymous namespace'::ChannelWin::*)(void),scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1C0D80"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::AssociatedInterfacePtrStateBase::*)(base::OnceCallback<void __cdecl(unsigned int)>,unsigned int),base::internal::UnretainedWrapper<mojo::internal::AssociatedInterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >,void __cdecl(unsigned int)>::RunOnce": {
            "offset": "0x203B80"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::ControlMessageProxy::*)(void),base::internal::UnretainedWrapper<mojo::internal::ControlMessageProxy> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::InterfacePtrStateBase::*)(base::OnceCallback<void __cdecl(unsigned int)>,unsigned int),base::internal::UnretainedWrapper<mojo::internal::InterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >,void __cdecl(unsigned int)>::RunOnce": {
            "offset": "0x203B80"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(bool),base::internal::UnretainedWrapper<mojo::internal::MultiplexRouter>,bool>,void __cdecl(void)>::RunOnce": {
            "offset": "0x21E910"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(mojo::ConnectionGroup::Ref),scoped_refptr<mojo::internal::MultiplexRouter> >,void __cdecl(mojo::ConnectionGroup::Ref)>::RunOnce": {
            "offset": "0x2047B0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(unsigned int,mojo::HandleSignalsState const &),scoped_refptr<mojo::internal::MultiplexRouter> >,void __cdecl(unsigned int,mojo::HandleSignalsState const &)>::Run": {
            "offset": "0x21E8B0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::*)(void),scoped_refptr<mojo::internal::MultiplexRouter> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1A4650"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl mojo::internal::MultiplexRouter::InterfaceEndpoint::*)(void),base::internal::UnretainedWrapper<mojo::internal::MultiplexRouter::InterfaceEndpoint> >,void __cdecl(void)>::Run": {
            "offset": "0x125C40"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::File),base::File>,void __cdecl(void)>::RunOnce": {
            "offset": "0x4A8A0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::FilePath const &,std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::FilePath,std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x55EF0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *),base::OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *>,void __cdecl(void)>::RunOnce": {
            "offset": "0xDABD0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *),base::OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>,base::internal::OwnedWrapper<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> >,std::default_delete<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > > > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xDAC00"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::OnceCallback<void __cdecl(unsigned int)>,mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>),base::OnceCallback<void __cdecl(unsigned int)> >,void __cdecl(mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>)>::RunOnce": {
            "offset": "0x20BCF0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::OnceCallback<void __cdecl(void)>,mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>),base::OnceCallback<void __cdecl(void)> >,void __cdecl(mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>)>::RunOnce": {
            "offset": "0x20BCF0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>,enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail),base::RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>,enum base::trace_event::MemoryDumpType>,void __cdecl(enum base::trace_event::MemoryDumpLevelOfDetail)>::Run": {
            "offset": "0x14CE20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::RepeatingCallback<void __cdecl(unsigned int)> const &,unsigned int,mojo::HandleSignalsState const &),base::RepeatingCallback<void __cdecl(unsigned int)> >,void __cdecl(unsigned int,mojo::HandleSignalsState const &)>::Run": {
            "offset": "0xA41E0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::RunLoop *,base::OnceCallback<void __cdecl(void)>),base::internal::UnretainedWrapper<base::RunLoop>,base::RepeatingCallback<void __cdecl(void)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xBCA70"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::StackSamplingProfiler::SamplingThread *,int,base::WaitableEvent *),base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int,base::internal::UnretainedWrapper<base::WaitableEvent> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xB7350"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::WeakPtr<mojo::InterfaceEndpointClient> const &,base::OnceCallback<void __cdecl(bool)>),base::WeakPtr<mojo::InterfaceEndpointClient>,base::OnceCallback<void __cdecl(bool)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x210AB0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(base::`anonymous namespace'::PostTaskAndReplyRelay),base::A0x8d52a0ae::PostTaskAndReplyRelay>,void __cdecl(void)>::RunOnce": {
            "offset": "0x135400"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(bool *),bool *>,void __cdecl(void)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(mojo::Message,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),mojo::Message>,void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::RunOnce": {
            "offset": "0x214C80"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(mojo::core::`anonymous namespace'::ProcessDisconnectHandler *,scoped_refptr<base::SequencedTaskRunner>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),base::internal::OwnedWrapper<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >,scoped_refptr<base::SingleThreadTaskRunner>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64>,void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::Run": {
            "offset": "0x1C7070"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > const &,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xDD900"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner> const &,scoped_refptr<base::RefCountedData<base::AtomicFlag> > const &,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xDD8C0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xDD930"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SingleThreadTaskRunner>,base::RepeatingCallback<void __cdecl(void)> >,void __cdecl(void)>::Run": {
            "offset": "0xBC540"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(scoped_refptr<base::SingleThreadTaskRunner>,base::OnceCallback<void __cdecl(void)>),scoped_refptr<base::SingleThreadTaskRunner>,base::OnceCallback<void __cdecl(void)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0xDD930"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0xA41E0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(std::unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >,base::RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)> const &,base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> const &),std::unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >,base::RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)>,base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> >,void __cdecl(void)>::RunOnce": {
            "offset": "0x16A130"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,mojo::Message),std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,mojo::Message>,void __cdecl(void)>::RunOnce": {
            "offset": "0x22E9B0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(std::unique_ptr<mojo::core::NodeController,std::default_delete<mojo::core::NodeController> >),std::unique_ptr<mojo::core::NodeController,std::default_delete<mojo::core::NodeController> > >,void __cdecl(void)>::RunOnce": {
            "offset": "0x1C7180"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> >,unsigned int,mojo::HandleSignalsState const &),base::internal::PassedWrapper<std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> > > >,void __cdecl(unsigned int,mojo::HandleSignalsState const &)>::Run": {
            "offset": "0x2363A0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,base::FieldTrialList::Observer *),void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void __cdecl(base::FieldTrialList::Observer *)>::Run": {
            "offset": "0x83650"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void (__cdecl base::MemoryPressureListener::*)(enum base::MemoryPressureListener::MemoryPressureLevel),enum base::MemoryPressureListener::MemoryPressureLevel,base::MemoryPressureListener *),void (__cdecl base::MemoryPressureListener::*)(enum base::MemoryPressureListener::MemoryPressureLevel),enum base::MemoryPressureListener::MemoryPressureLevel>,void __cdecl(base::MemoryPressureListener *)>::Run": {
            "offset": "0x6E9D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void (__cdecl base::PowerObserver::*)(bool),bool,base::PowerObserver *),void (__cdecl base::PowerObserver::*)(bool),bool>,void __cdecl(base::PowerObserver *)>::Run": {
            "offset": "0xA9F50"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void (__cdecl base::PowerObserver::*)(void),base::PowerObserver *),void (__cdecl base::PowerObserver::*)(void)>,void __cdecl(base::PowerObserver *)>::Run": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void (__cdecl base::SystemMonitor::DevicesChangedObserver::*)(enum base::SystemMonitor::DeviceType),enum base::SystemMonitor::DeviceType,base::SystemMonitor::DevicesChangedObserver *),void (__cdecl base::SystemMonitor::DevicesChangedObserver::*)(enum base::SystemMonitor::DeviceType),enum base::SystemMonitor::DeviceType>,void __cdecl(base::SystemMonitor::DevicesChangedObserver *)>::Run": {
            "offset": "0x6E9D0"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void *),void *>,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void const *),void const *>,void __cdecl(void)>::RunOnce": {
            "offset": "0xBA20"
        },
        "base::internal::Invoker<base::internal::BindState<void (__cdecl*)(void)>,void __cdecl(void)>::Run": {
            "offset": "0xBC5C0"
        },
        "base::internal::JSONParser::ConsumeChar": {
            "offset": "0x5DF70"
        },
        "base::internal::JSONParser::ConsumeChars": {
            "offset": "0x5DFD0"
        },
        "base::internal::JSONParser::ConsumeDictionary": {
            "offset": "0x5E020"
        },
        "base::internal::JSONParser::ConsumeIfMatch": {
            "offset": "0x5EB30"
        },
        "base::internal::JSONParser::ConsumeList": {
            "offset": "0x5EBB0"
        },
        "base::internal::JSONParser::ConsumeLiteral": {
            "offset": "0x5F0E0"
        },
        "base::internal::JSONParser::ConsumeNumber": {
            "offset": "0x5F2E0"
        },
        "base::internal::JSONParser::ConsumeString": {
            "offset": "0x5F8A0"
        },
        "base::internal::JSONParser::ConsumeStringRaw": {
            "offset": "0x5FB00"
        },
        "base::internal::JSONParser::DecodeUTF16": {
            "offset": "0x603D0"
        },
        "base::internal::JSONParser::EatComment": {
            "offset": "0x60650"
        },
        "base::internal::JSONParser::EatWhitespaceAndComments": {
            "offset": "0x60960"
        },
        "base::internal::JSONParser::FormatErrorMessage": {
            "offset": "0x60AE0"
        },
        "base::internal::JSONParser::GetErrorMessage": {
            "offset": "0x60BA0"
        },
        "base::internal::JSONParser::GetNextToken": {
            "offset": "0x60C80"
        },
        "base::internal::JSONParser::JSONParser": {
            "offset": "0x5D830"
        },
        "base::internal::JSONParser::Parse": {
            "offset": "0x60EE0"
        },
        "base::internal::JSONParser::ParseNextToken": {
            "offset": "0x61060"
        },
        "base::internal::JSONParser::ParseToken": {
            "offset": "0x610A0"
        },
        "base::internal::JSONParser::PeekChar": {
            "offset": "0x61170"
        },
        "base::internal::JSONParser::PeekChars": {
            "offset": "0x611D0"
        },
        "base::internal::JSONParser::ReadInt": {
            "offset": "0x61220"
        },
        "base::internal::JSONParser::ReportError": {
            "offset": "0x613D0"
        },
        "base::internal::JSONParser::StringBuilder::Append": {
            "offset": "0x5DC30"
        },
        "base::internal::JSONParser::StringBuilder::Convert": {
            "offset": "0x60300"
        },
        "base::internal::JSONParser::StringBuilder::~StringBuilder": {
            "offset": "0x5DBB0"
        },
        "base::internal::JSONParser::error_code": {
            "offset": "0x61510"
        },
        "base::internal::JSONParser::error_column": {
            "offset": "0x61520"
        },
        "base::internal::JSONParser::error_line": {
            "offset": "0x61530"
        },
        "base::internal::JSONParser::pos": {
            "offset": "0x61540"
        },
        "base::internal::JSONParser::~JSONParser": {
            "offset": "0x12B0"
        },
        "base::internal::JobTaskSource::Cancel": {
            "offset": "0x10B790"
        },
        "base::internal::JobTaskSource::Clear": {
            "offset": "0x10B7A0"
        },
        "base::internal::JobTaskSource::CreateJobHandle": {
            "offset": "0xE2F30"
        },
        "base::internal::JobTaskSource::DidProcessTask": {
            "offset": "0x10B830"
        },
        "base::internal::JobTaskSource::GetConcurrencyIncreaseVersion": {
            "offset": "0x10B9D0"
        },
        "base::internal::JobTaskSource::GetExecutionEnvironment": {
            "offset": "0x10BA40"
        },
        "base::internal::JobTaskSource::GetMaxConcurrency": {
            "offset": "0x10BA70"
        },
        "base::internal::JobTaskSource::GetRemainingConcurrency": {
            "offset": "0x10BA90"
        },
        "base::internal::JobTaskSource::GetSortKey": {
            "offset": "0x10BAE0"
        },
        "base::internal::JobTaskSource::JobTaskSource": {
            "offset": "0x10B410"
        },
        "base::internal::JobTaskSource::NotifyConcurrencyIncrease": {
            "offset": "0x10BB10"
        },
        "base::internal::JobTaskSource::RunJoinTask": {
            "offset": "0x10BC50"
        },
        "base::internal::JobTaskSource::ShouldYield": {
            "offset": "0x10BCF0"
        },
        "base::internal::JobTaskSource::TakeTask": {
            "offset": "0x10BD20"
        },
        "base::internal::JobTaskSource::WaitForConcurrencyIncreaseUpdate": {
            "offset": "0x10BE70"
        },
        "base::internal::JobTaskSource::WaitForParticipationOpportunity": {
            "offset": "0x10BFC0"
        },
        "base::internal::JobTaskSource::WillJoin": {
            "offset": "0x10C220"
        },
        "base::internal::JobTaskSource::WillRunTask": {
            "offset": "0x10C370"
        },
        "base::internal::JobTaskSource::delegate": {
            "offset": "0xE3BA0"
        },
        "base::internal::JobTaskSource::~JobTaskSource": {
            "offset": "0x10B600"
        },
        "base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::Create": {
            "offset": "0xE1E60"
        },
        "base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::CreateInternal": {
            "offset": "0xE1AA0"
        },
        "base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::CreateRaw": {
            "offset": "0xE20A0"
        },
        "base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::Get": {
            "offset": "0xE24E0"
        },
        "base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::LazyTaskRunner<base::SequencedTaskRunner,0>": {
            "offset": "0xE1AF0"
        },
        "base::internal::LazyTaskRunner<base::SequencedTaskRunner,0>::Reset": {
            "offset": "0xE26C0"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::Create": {
            "offset": "0xE2070"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::CreateInternal": {
            "offset": "0xE1AA0"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::CreateRaw": {
            "offset": "0xE2370"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::Get": {
            "offset": "0xE2680"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::LazyTaskRunner<base::SingleThreadTaskRunner,0>": {
            "offset": "0xE1AF0"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,0>::Reset": {
            "offset": "0xE26C0"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::Create": {
            "offset": "0xE2040"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::CreateInternal": {
            "offset": "0xE1AA0"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::CreateRaw": {
            "offset": "0xE2200"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::Get": {
            "offset": "0xE2640"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::LazyTaskRunner<base::SingleThreadTaskRunner,1>": {
            "offset": "0xE1AF0"
        },
        "base::internal::LazyTaskRunner<base::SingleThreadTaskRunner,1>::Reset": {
            "offset": "0xE26C0"
        },
        "base::internal::LockImpl::Lock": {
            "offset": "0xD8490"
        },
        "base::internal::LockImpl::LockImpl": {
            "offset": "0x30F0"
        },
        "base::internal::LockImpl::Try": {
            "offset": "0xD84E0"
        },
        "base::internal::LockImpl::Unlock": {
            "offset": "0xC190"
        },
        "base::internal::LockImpl::native_handle": {
            "offset": "0x3FB0"
        },
        "base::internal::LockImpl::~LockImpl": {
            "offset": "0x12B0"
        },
        "base::internal::MoveUnsafe": {
            "offset": "0x51F80"
        },
        "base::internal::NeedsLazyInstance": {
            "offset": "0x65250"
        },
        "base::internal::ObserverListThreadSafeBase::Dispatcher<base::FieldTrialList::Observer,void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::Run": {
            "offset": "0x83640"
        },
        "base::internal::ObserverListThreadSafeBase::Dispatcher<base::MemoryPressureListener,void (__cdecl base::MemoryPressureListener::*)(enum base::MemoryPressureListener::MemoryPressureLevel)>::Run": {
            "offset": "0x6E9C0"
        },
        "base::internal::ObserverListThreadSafeBase::Dispatcher<base::PowerObserver,void (__cdecl base::PowerObserver::*)(bool)>::Run": {
            "offset": "0x6E9C0"
        },
        "base::internal::ObserverListThreadSafeBase::Dispatcher<base::PowerObserver,void (__cdecl base::PowerObserver::*)(void)>::Run": {
            "offset": "0xA9F40"
        },
        "base::internal::ObserverListThreadSafeBase::Dispatcher<base::SystemMonitor::DevicesChangedObserver,void (__cdecl base::SystemMonitor::DevicesChangedObserver::*)(enum base::SystemMonitor::DeviceType)>::Run": {
            "offset": "0x6E9C0"
        },
        "base::internal::ObserverListThreadSafeBase::ObserverListThreadSafeBase": {
            "offset": "0x2E260"
        },
        "base::internal::ObserverListThreadSafeBase::~ObserverListThreadSafeBase": {
            "offset": "0x2F6F0"
        },
        "base::internal::OperationsController::DecrementBy": {
            "offset": "0xDFDB0"
        },
        "base::internal::OperationsController::ExtractCount": {
            "offset": "0x754E0"
        },
        "base::internal::OperationsController::ExtractState": {
            "offset": "0xDFFB0"
        },
        "base::internal::OperationsController::OperationToken::~OperationToken": {
            "offset": "0xF33F0"
        },
        "base::internal::OperationsController::OperationsController": {
            "offset": "0xDFCE0"
        },
        "base::internal::OperationsController::ShutdownAndWaitForZeroOperations": {
            "offset": "0xDFFD0"
        },
        "base::internal::OperationsController::StartAcceptingOperations": {
            "offset": "0xE0090"
        },
        "base::internal::OperationsController::TryBeginOperation": {
            "offset": "0xE02A0"
        },
        "base::internal::OperationsController::~OperationsController": {
            "offset": "0xDFD10"
        },
        "base::internal::OptionalBase<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::FreeIfNeeded": {
            "offset": "0x60B30"
        },
        "base::internal::OptionalBase<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::CopyAssign<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xC32D0"
        },
        "base::internal::OptionalStorageBase<mojo::DisconnectReason,0>::Init<mojo::DisconnectReason const &>": {
            "offset": "0x1A8C00"
        },
        "base::internal::OptionalStorageBase<mojo::DisconnectReason,0>::~OptionalStorageBase<mojo::DisconnectReason,0>": {
            "offset": "0x1AA050"
        },
        "base::internal::OptionalStorageBase<mojo::PlatformHandle,0>::~OptionalStorageBase<mojo::PlatformHandle,0>": {
            "offset": "0x1D8EE0"
        },
        "base::internal::OptionalStorageBase<mojo_base::internal::BigBufferSharedMemoryRegion,0>::Init<mojo_base::internal::BigBufferSharedMemoryRegion>": {
            "offset": "0x1FC9C0"
        },
        "base::internal::OptionalStorageBase<mojo_base::internal::BigBufferSharedMemoryRegion,0>::~OptionalStorageBase<mojo_base::internal::BigBufferSharedMemoryRegion,0>": {
            "offset": "0x1FD2E0"
        },
        "base::internal::OptionalStorageBase<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>::Init<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x202230"
        },
        "base::internal::OptionalStorageBase<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>::~OptionalStorageBase<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>": {
            "offset": "0x5D8D0"
        },
        "base::internal::OptionalStorageBase<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,0>::Init<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0xC3590"
        },
        "base::internal::OptionalStorageBase<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,0>::Init<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>": {
            "offset": "0xC3460"
        },
        "base::internal::OptionalStorageBase<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,0>::~OptionalStorageBase<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,0>": {
            "offset": "0xC3820"
        },
        "base::internal::OwnedWrapper<base::`anonymous namespace'::BarrierInfo,std::default_delete<base::`anonymous namespace'::BarrierInfo> >::~OwnedWrapper<base::`anonymous namespace'::BarrierInfo,std::default_delete<base::`anonymous namespace'::BarrierInfo> >": {
            "offset": "0x1CB90"
        },
        "base::internal::OwnedWrapper<base::`anonymous namespace'::CreateOrOpenHelper,std::default_delete<base::`anonymous namespace'::CreateOrOpenHelper> >::~OwnedWrapper<base::`anonymous namespace'::CreateOrOpenHelper,std::default_delete<base::`anonymous namespace'::CreateOrOpenHelper> >": {
            "offset": "0x48970"
        },
        "base::internal::OwnedWrapper<base::`anonymous namespace'::CreateTemporaryHelper,std::default_delete<base::`anonymous namespace'::CreateTemporaryHelper> >::~OwnedWrapper<base::`anonymous namespace'::CreateTemporaryHelper,std::default_delete<base::`anonymous namespace'::CreateTemporaryHelper> >": {
            "offset": "0x489A0"
        },
        "base::internal::OwnedWrapper<base::`anonymous namespace'::GenericFileHelper,std::default_delete<base::`anonymous namespace'::GenericFileHelper> >::~OwnedWrapper<base::`anonymous namespace'::GenericFileHelper,std::default_delete<base::`anonymous namespace'::GenericFileHelper> >": {
            "offset": "0x48970"
        },
        "base::internal::OwnedWrapper<base::`anonymous namespace'::GetInfoHelper,std::default_delete<base::`anonymous namespace'::GetInfoHelper> >::~OwnedWrapper<base::`anonymous namespace'::GetInfoHelper,std::default_delete<base::`anonymous namespace'::GetInfoHelper> >": {
            "offset": "0x489E0"
        },
        "base::internal::OwnedWrapper<base::`anonymous namespace'::ReadHelper,std::default_delete<base::`anonymous namespace'::ReadHelper> >::~OwnedWrapper<base::`anonymous namespace'::ReadHelper,std::default_delete<base::`anonymous namespace'::ReadHelper> >": {
            "offset": "0x48A20"
        },
        "base::internal::OwnedWrapper<base::`anonymous namespace'::WriteHelper,std::default_delete<base::`anonymous namespace'::WriteHelper> >::~OwnedWrapper<base::`anonymous namespace'::WriteHelper,std::default_delete<base::`anonymous namespace'::WriteHelper> >": {
            "offset": "0x48A20"
        },
        "base::internal::OwnedWrapper<base::internal::BaseTimerTaskInternal,std::default_delete<base::internal::BaseTimerTaskInternal> >::~OwnedWrapper<base::internal::BaseTimerTaskInternal,std::default_delete<base::internal::BaseTimerTaskInternal> >": {
            "offset": "0x1446F0"
        },
        "base::internal::OwnedWrapper<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >::~OwnedWrapper<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >": {
            "offset": "0x1C2870"
        },
        "base::internal::OwnedWrapper<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> >,std::default_delete<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > > >::~OwnedWrapper<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> >,std::default_delete<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > > >": {
            "offset": "0xDA560"
        },
        "base::internal::PartitionBucket::Init": {
            "offset": "0x16370"
        },
        "base::internal::PartitionBucket::OnFull": {
            "offset": "0x163B0"
        },
        "base::internal::PartitionBucket::SetNewActivePage": {
            "offset": "0x163C0"
        },
        "base::internal::PartitionBucket::SlowPathAlloc": {
            "offset": "0x16A50"
        },
        "base::internal::PartitionBucket::get_sentinel_bucket": {
            "offset": "0x18F40"
        },
        "base::internal::PartitionBucket::get_system_pages_per_slot_span": {
            "offset": "0x18F50"
        },
        "base::internal::PartitionExcessiveAllocationSize": {
            "offset": "0x163B0"
        },
        "base::internal::PartitionPage::Decommit": {
            "offset": "0x19180"
        },
        "base::internal::PartitionPage::DecommitIfPossible": {
            "offset": "0x196F0"
        },
        "base::internal::PartitionPage::FreeSlowPath": {
            "offset": "0x19900"
        },
        "base::internal::PartitionPage::get_sentinel_page": {
            "offset": "0x1A400"
        },
        "base::internal::PartitionRootBase::AllocFromBucket": {
            "offset": "0x8F40"
        },
        "base::internal::PartitionRootBase::DecommitEmptyPages": {
            "offset": "0x1A410"
        },
        "base::internal::PartitionRootBase::DecommitSystemPages": {
            "offset": "0x9AF0"
        },
        "base::internal::PartitionRootBase::DecreaseCommittedPages": {
            "offset": "0x9BA0"
        },
        "base::internal::PartitionRootBase::FromPage": {
            "offset": "0xA850"
        },
        "base::internal::PartitionRootBase::IncreaseCommittedPages": {
            "offset": "0xAB90"
        },
        "base::internal::PartitionRootBase::IsValidPage": {
            "offset": "0xAFB0"
        },
        "base::internal::PartitionRootBase::OutOfMemory": {
            "offset": "0x1A470"
        },
        "base::internal::PartitionRootBase::PartitionRootBase": {
            "offset": "0x32B0"
        },
        "base::internal::PartitionRootBase::RecommitSystemPages": {
            "offset": "0xB3B0"
        },
        "base::internal::PartitionRootBase::~PartitionRootBase": {
            "offset": "0xF650"
        },
        "base::internal::PassedWrapper<mojo::Message>::~PassedWrapper<mojo::Message>": {
            "offset": "0x1AA0C0"
        },
        "base::internal::PassedWrapper<std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> > >::~PassedWrapper<std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> > >": {
            "offset": "0x3C10"
        },
        "base::internal::PlatformThreadLocalStorage::AllocTLS": {
            "offset": "0x13D3F0"
        },
        "base::internal::PlatformThreadLocalStorage::FreeTLS": {
            "offset": "0x13D420"
        },
        "base::internal::PlatformThreadLocalStorage::GetTLSValue": {
            "offset": "0xAA90"
        },
        "base::internal::PlatformThreadLocalStorage::OnThreadExit": {
            "offset": "0x13CF40"
        },
        "base::internal::PlatformThreadLocalStorage::SetTLSValue": {
            "offset": "0x13D4A0"
        },
        "base::internal::PooledParallelTaskRunner::PooledParallelTaskRunner": {
            "offset": "0x10C3F0"
        },
        "base::internal::PooledParallelTaskRunner::PostDelayedTask": {
            "offset": "0x10C5B0"
        },
        "base::internal::PooledParallelTaskRunner::UnregisterSequence": {
            "offset": "0x10C790"
        },
        "base::internal::PooledParallelTaskRunner::~PooledParallelTaskRunner": {
            "offset": "0x10C4A0"
        },
        "base::internal::PooledSequencedTaskRunner::PooledSequencedTaskRunner": {
            "offset": "0x10C8D0"
        },
        "base::internal::PooledSequencedTaskRunner::PostDelayedTask": {
            "offset": "0x10CA70"
        },
        "base::internal::PooledSequencedTaskRunner::PostNonNestableDelayedTask": {
            "offset": "0x10CB50"
        },
        "base::internal::PooledSequencedTaskRunner::RunsTasksInCurrentSequence": {
            "offset": "0x10CBB0"
        },
        "base::internal::PooledSequencedTaskRunner::UpdatePriority": {
            "offset": "0x10CC50"
        },
        "base::internal::PooledSequencedTaskRunner::~PooledSequencedTaskRunner": {
            "offset": "0x10C960"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::CreateAndRegisterWorkerThread<base::internal::`anonymous namespace'::WorkerThreadCOMDelegate>": {
            "offset": "0x10CCB0"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::CreateAndRegisterWorkerThread<base::internal::`anonymous namespace'::WorkerThreadDelegate>": {
            "offset": "0x10CEC0"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::CreateCOMSTATaskRunner": {
            "offset": "0x10EB30"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::CreateSingleThreadTaskRunner": {
            "offset": "0x10EBB0"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::CreateTaskRunnerImpl<base::internal::`anonymous namespace'::WorkerThreadCOMDelegate>": {
            "offset": "0x10D0D0"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::CreateTaskRunnerImpl<base::internal::`anonymous namespace'::WorkerThreadDelegate>": {
            "offset": "0x10D410"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::DidUpdateCanRunPolicy": {
            "offset": "0x10ED40"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::JoinForTesting": {
            "offset": "0x10F750"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::PooledSingleThreadTaskRunner::PostDelayedTask": {
            "offset": "0x10FB10"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::PooledSingleThreadTaskRunner::PostNonNestableDelayedTask": {
            "offset": "0x10CB50"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::PooledSingleThreadTaskRunner::RunsTasksInCurrentSequence": {
            "offset": "0x110160"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::PooledSingleThreadTaskRunnerManager": {
            "offset": "0x10DE10"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::ReleaseSharedWorkerThreads": {
            "offset": "0x10FF90"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::Start": {
            "offset": "0x1101C0"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::TraitsToContinueOnShutdown": {
            "offset": "0x110400"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::UnregisterWorkerThread": {
            "offset": "0x110410"
        },
        "base::internal::PooledSingleThreadTaskRunnerManager::~PooledSingleThreadTaskRunnerManager": {
            "offset": "0x10E700"
        },
        "base::internal::PooledTaskRunnerDelegate::Exists": {
            "offset": "0x110970"
        },
        "base::internal::PooledTaskRunnerDelegate::PooledTaskRunnerDelegate": {
            "offset": "0xE2A00"
        },
        "base::internal::PooledTaskRunnerDelegate::~PooledTaskRunnerDelegate": {
            "offset": "0x1108F0"
        },
        "base::internal::PostTaskAndReplyImpl::PostTaskAndReply": {
            "offset": "0x134F80"
        },
        "base::internal::PostTaskAndReplyImpl::PostTaskAndReplyImpl": {
            "offset": "0xE3E20"
        },
        "base::internal::PostTaskAndReplyImpl::~PostTaskAndReplyImpl": {
            "offset": "0x12B0"
        },
        "base::internal::PreReadFileSlow": {
            "offset": "0x4C870"
        },
        "base::internal::PriorityQueue::DecrementNumTaskSourcesForPriority": {
            "offset": "0x111850"
        },
        "base::internal::PriorityQueue::EnableFlushTaskSourcesOnDestroyForTesting": {
            "offset": "0x111A20"
        },
        "base::internal::PriorityQueue::GetNumTaskSourcesWithPriority": {
            "offset": "0xE3070"
        },
        "base::internal::PriorityQueue::IncrementNumTaskSourcesForPriority": {
            "offset": "0x111AB0"
        },
        "base::internal::PriorityQueue::IsEmpty": {
            "offset": "0xD550"
        },
        "base::internal::PriorityQueue::PeekSortKey": {
            "offset": "0x111FA0"
        },
        "base::internal::PriorityQueue::PeekTaskSource": {
            "offset": "0x112030"
        },
        "base::internal::PriorityQueue::PopTaskSource": {
            "offset": "0x1120C0"
        },
        "base::internal::PriorityQueue::PriorityQueue": {
            "offset": "0x111510"
        },
        "base::internal::PriorityQueue::Push": {
            "offset": "0x112190"
        },
        "base::internal::PriorityQueue::RemoveTaskSource": {
            "offset": "0x112310"
        },
        "base::internal::PriorityQueue::Size": {
            "offset": "0xAA60"
        },
        "base::internal::PriorityQueue::TaskSourceAndSortKey::take_task_source": {
            "offset": "0x112D60"
        },
        "base::internal::PriorityQueue::TaskSourceAndSortKey::~TaskSourceAndSortKey": {
            "offset": "0x1116C0"
        },
        "base::internal::PriorityQueue::UpdateSortKey": {
            "offset": "0x112690"
        },
        "base::internal::PriorityQueue::~PriorityQueue": {
            "offset": "0x111590"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<base::OnceCallback<void __cdecl(mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int)>,mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int> >": {
            "offset": "0x201150"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message)>,mojo::Message> >": {
            "offset": "0x201150"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>,mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> > > >": {
            "offset": "0x201150"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<base::RepeatingCallback<void __cdecl(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >)>,mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> > > >": {
            "offset": "0x201150"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<base::RepeatingCallback<void __cdecl(void)> > >": {
            "offset": "0x201150"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(mojo::Message),base::WeakPtr<IPC::ChannelMojo> > >": {
            "offset": "0x19C700"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(mojo::Message,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >),base::WeakPtr<IPC::ChannelMojo> > >": {
            "offset": "0x19C700"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl IPC::ChannelMojo::*)(void),base::WeakPtr<IPC::ChannelMojo> > >": {
            "offset": "0x19C700"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl base::RunLoop::*)(void),base::WeakPtr<base::RunLoop> > >": {
            "offset": "0xBA5A0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> >::*)(void),base::WeakPtr<base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> > > > >": {
            "offset": "0xBA5A0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> >::*)(void),base::WeakPtr<base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> > > > >": {
            "offset": "0xBA5A0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl base::sequence_manager::internal::ThreadControllerImpl::*)(enum base::sequence_manager::internal::ThreadControllerImpl::WorkType),base::WeakPtr<base::sequence_manager::internal::ThreadControllerImpl>,enum base::sequence_manager::internal::ThreadControllerImpl::WorkType> >": {
            "offset": "0xFC810"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl base::trace_event::TraceLog::AsyncEnabledStateObserver::*)(void),base::WeakPtr<base::trace_event::TraceLog::AsyncEnabledStateObserver> > >": {
            "offset": "0xBA5A0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl base::win::ObjectWatcher::*)(base::win::ObjectWatcher::Delegate *),base::WeakPtr<base::win::ObjectWatcher>,base::win::ObjectWatcher::Delegate *> >": {
            "offset": "0x187BF0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl mojo::DataPipeDrainer::*)(unsigned int),base::WeakPtr<mojo::DataPipeDrainer> > >": {
            "offset": "0xBA5A0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl mojo::DataPipeProducer::*)(base::OnceCallback<void __cdecl(unsigned int)>,mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int),base::WeakPtr<mojo::DataPipeProducer>,base::OnceCallback<void __cdecl(unsigned int)> > >": {
            "offset": "0x187BF0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(base::Optional<mojo::DisconnectReason> const &),base::WeakPtr<mojo::InterfaceEndpointClient>,base::Optional<mojo::DisconnectReason> > >": {
            "offset": "0x20E500"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl mojo::InterfaceEndpointClient::*)(void),base::WeakPtr<mojo::InterfaceEndpointClient> > >": {
            "offset": "0xBA5A0"
        },
        "base::internal::QueryCancellationTraits<base::internal::BindState<void (__cdecl mojo::SimpleWatcher::*)(int,unsigned int,mojo::HandleSignalsState const &),base::WeakPtr<mojo::SimpleWatcher>,int,unsigned int,mojo::HandleSignalsState> >": {
            "offset": "0xFC810"
        },
        "base::internal::RegisteredTaskSource::Clear": {
            "offset": "0x1154E0"
        },
        "base::internal::RegisteredTaskSource::CreateForTesting": {
            "offset": "0x1155B0"
        },
        "base::internal::RegisteredTaskSource::DidProcessTask": {
            "offset": "0x115630"
        },
        "base::internal::RegisteredTaskSource::RegisteredTaskSource": {
            "offset": "0x114CB0"
        },
        "base::internal::RegisteredTaskSource::TakeTask": {
            "offset": "0x115A50"
        },
        "base::internal::RegisteredTaskSource::Unregister": {
            "offset": "0x115B60"
        },
        "base::internal::RegisteredTaskSource::WillRunTask": {
            "offset": "0x115C50"
        },
        "base::internal::RegisteredTaskSource::get": {
            "offset": "0xAAA0"
        },
        "base::internal::RegisteredTaskSource::~RegisteredTaskSource": {
            "offset": "0x115230"
        },
        "base::internal::ReleaseAddressSpaceReservation": {
            "offset": "0xAE360"
        },
        "base::internal::ReplyAdapter<base::SysInfo::HardwareInfo,base::SysInfo::HardwareInfo>": {
            "offset": "0xDA290"
        },
        "base::internal::ResetThreadRestrictionsForTesting": {
            "offset": "0x13E920"
        },
        "base::internal::RetainedRefWrapper<IPC::MessageFilter>::~RetainedRefWrapper<IPC::MessageFilter>": {
            "offset": "0x1A0B60"
        },
        "base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext>::~RetainedRefWrapper<IPC::SyncChannel::SyncContext>": {
            "offset": "0x1A0D40"
        },
        "base::internal::RetainedRefWrapper<mojo::core::NodeChannel>::~RetainedRefWrapper<mojo::core::NodeChannel>": {
            "offset": "0x1D8EF0"
        },
        "base::internal::ReturnAsParamAdapter<base::SysInfo::HardwareInfo>": {
            "offset": "0xDA460"
        },
        "base::internal::RunPartitionAllocOomCallback": {
            "offset": "0xDDD0"
        },
        "base::internal::ScopedBlockingCallWithBaseSyncPrimitives::ScopedBlockingCallWithBaseSyncPrimitives": {
            "offset": "0x135740"
        },
        "base::internal::ScopedBlockingCallWithBaseSyncPrimitives::~ScopedBlockingCallWithBaseSyncPrimitives": {
            "offset": "0x135A10"
        },
        "base::internal::ScopedClearBlockingObserverForTesting::ScopedClearBlockingObserverForTesting": {
            "offset": "0x135860"
        },
        "base::internal::ScopedClearBlockingObserverForTesting::~ScopedClearBlockingObserverForTesting": {
            "offset": "0x135AC0"
        },
        "base::internal::ScopedClearLastError::ScopedClearLastError": {
            "offset": "0xC2180"
        },
        "base::internal::ScopedClearLastError::~ScopedClearLastError": {
            "offset": "0xC21C0"
        },
        "base::internal::ScopedClearLastErrorBase::ScopedClearLastErrorBase": {
            "offset": "0x1050"
        },
        "base::internal::ScopedClearLastErrorBase::~ScopedClearLastErrorBase": {
            "offset": "0x11D0"
        },
        "base::internal::ScopedHStringTraits::Free": {
            "offset": "0x18E1F0"
        },
        "base::internal::ScopedHStringTraits::InvalidValue": {
            "offset": "0x12A0"
        },
        "base::internal::ScopedLazyTaskRunnerListForTesting::AddCallback": {
            "offset": "0xE1DE0"
        },
        "base::internal::ScopedLazyTaskRunnerListForTesting::ScopedLazyTaskRunnerListForTesting": {
            "offset": "0xE1B40"
        },
        "base::internal::ScopedLazyTaskRunnerListForTesting::~ScopedLazyTaskRunnerListForTesting": {
            "offset": "0xE1CC0"
        },
        "base::internal::ScopedMayLoadLibraryAtBackgroundPriority::OnScopeFirstEntered": {
            "offset": "0x1363C0"
        },
        "base::internal::ScopedMayLoadLibraryAtBackgroundPriority::ScopedMayLoadLibraryAtBackgroundPriority": {
            "offset": "0x1361F0"
        },
        "base::internal::ScopedMayLoadLibraryAtBackgroundPriority::~ScopedMayLoadLibraryAtBackgroundPriority": {
            "offset": "0x136240"
        },
        "base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread::ScopedSetSequenceLocalStorageMapForCurrentThread": {
            "offset": "0x136AC0"
        },
        "base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread::~ScopedSetSequenceLocalStorageMapForCurrentThread": {
            "offset": "0x136CD0"
        },
        "base::internal::ScopedSetTaskPriorityForCurrentThread::ScopedSetTaskPriorityForCurrentThread": {
            "offset": "0xE4870"
        },
        "base::internal::ScopedSetTaskPriorityForCurrentThread::~ScopedSetTaskPriorityForCurrentThread": {
            "offset": "0xE4920"
        },
        "base::internal::Sequence::BeginTransaction": {
            "offset": "0x113730"
        },
        "base::internal::Sequence::Clear": {
            "offset": "0x113750"
        },
        "base::internal::Sequence::DidProcessTask": {
            "offset": "0x1138F0"
        },
        "base::internal::Sequence::GetExecutionEnvironment": {
            "offset": "0x113A10"
        },
        "base::internal::Sequence::GetRemainingConcurrency": {
            "offset": "0x8BA40"
        },
        "base::internal::Sequence::GetSortKey": {
            "offset": "0x113A30"
        },
        "base::internal::Sequence::ReleaseTaskRunner": {
            "offset": "0x113CF0"
        },
        "base::internal::Sequence::Sequence": {
            "offset": "0x113250"
        },
        "base::internal::Sequence::TakeTask": {
            "offset": "0x113F90"
        },
        "base::internal::Sequence::Transaction::PushTask": {
            "offset": "0x113B40"
        },
        "base::internal::Sequence::Transaction::Transaction": {
            "offset": "0x1132E0"
        },
        "base::internal::Sequence::Transaction::WillPushTask": {
            "offset": "0x114140"
        },
        "base::internal::Sequence::Transaction::sequence": {
            "offset": "0xAB80"
        },
        "base::internal::Sequence::Transaction::~Transaction": {
            "offset": "0x113400"
        },
        "base::internal::Sequence::WillRunTask": {
            "offset": "0x114160"
        },
        "base::internal::Sequence::sequence_local_storage": {
            "offset": "0xE3C90"
        },
        "base::internal::Sequence::token": {
            "offset": "0xD7F0"
        },
        "base::internal::Sequence::~Sequence": {
            "offset": "0x1133C0"
        },
        "base::internal::SequenceLocalStorageMap::Get": {
            "offset": "0x136D90"
        },
        "base::internal::SequenceLocalStorageMap::GetForCurrentThread": {
            "offset": "0x136DD0"
        },
        "base::internal::SequenceLocalStorageMap::SequenceLocalStorageMap": {
            "offset": "0x2E280"
        },
        "base::internal::SequenceLocalStorageMap::Set": {
            "offset": "0x137060"
        },
        "base::internal::SequenceLocalStorageMap::~SequenceLocalStorageMap": {
            "offset": "0x136D00"
        },
        "base::internal::SequenceSortKey::SequenceSortKey": {
            "offset": "0xE2A10"
        },
        "base::internal::SequenceSortKey::next_task_sequenced_time": {
            "offset": "0xD3D0"
        },
        "base::internal::SequenceSortKey::priority": {
            "offset": "0xD790"
        },
        "base::internal::ServiceThread::Init": {
            "offset": "0x1146B0"
        },
        "base::internal::ServiceThread::PerformHeartbeatLatencyReport": {
            "offset": "0x1147B0"
        },
        "base::internal::ServiceThread::ReportHeartbeatMetrics": {
            "offset": "0x114A70"
        },
        "base::internal::ServiceThread::Run": {
            "offset": "0x114AB0"
        },
        "base::internal::ServiceThread::ServiceThread": {
            "offset": "0x114410"
        },
        "base::internal::ServiceThread::SetHeartbeatIntervalForTesting": {
            "offset": "0x114AF0"
        },
        "base::internal::ServiceThread::~ServiceThread": {
            "offset": "0x114580"
        },
        "base::internal::SetBlockingObserverForCurrentThread": {
            "offset": "0x136140"
        },
        "base::internal::SetNoPriorityInheritanceFromThreadPool": {
            "offset": "0x109370"
        },
        "base::internal::StackMarker::~StackMarker": {
            "offset": "0x5DBA0"
        },
        "base::internal::Task::Task": {
            "offset": "0x114BC0"
        },
        "base::internal::Task::~Task": {
            "offset": "0x114BE0"
        },
        "base::internal::TaskSource::BeginTransaction": {
            "offset": "0x1154C0"
        },
        "base::internal::TaskSource::ClearHeapHandle": {
            "offset": "0x1155A0"
        },
        "base::internal::TaskSource::GetHeapHandle": {
            "offset": "0xE3060"
        },
        "base::internal::TaskSource::SetHeapHandle": {
            "offset": "0x115A40"
        },
        "base::internal::TaskSource::TaskSource": {
            "offset": "0x114CC0"
        },
        "base::internal::TaskSource::Transaction::GetSortKey": {
            "offset": "0x115A20"
        },
        "base::internal::TaskSource::Transaction::Transaction": {
            "offset": "0x3100"
        },
        "base::internal::TaskSource::Transaction::UpdatePriority": {
            "offset": "0x115C10"
        },
        "base::internal::TaskSource::Transaction::task_source": {
            "offset": "0xAB80"
        },
        "base::internal::TaskSource::Transaction::traits": {
            "offset": "0xE3CC0"
        },
        "base::internal::TaskSource::Transaction::~Transaction": {
            "offset": "0x115300"
        },
        "base::internal::TaskSource::execution_mode": {
            "offset": "0x8E340"
        },
        "base::internal::TaskSource::heap_handle": {
            "offset": "0xE3060"
        },
        "base::internal::TaskSource::priority_racy": {
            "offset": "0x27730"
        },
        "base::internal::TaskSource::shutdown_behavior": {
            "offset": "0xE3CA0"
        },
        "base::internal::TaskSource::task_runner": {
            "offset": "0xD470"
        },
        "base::internal::TaskSource::thread_policy": {
            "offset": "0xE3CB0"
        },
        "base::internal::TaskSource::~TaskSource": {
            "offset": "0x1152D0"
        },
        "base::internal::TaskTracker::AfterRunTask": {
            "offset": "0x1166F0"
        },
        "base::internal::TaskTracker::BeforeQueueTaskSource": {
            "offset": "0x1168E0"
        },
        "base::internal::TaskTracker::BeforeRunTask": {
            "offset": "0x116A20"
        },
        "base::internal::TaskTracker::CallFlushCallbackForTesting": {
            "offset": "0x116C60"
        },
        "base::internal::TaskTracker::CanRunPriority": {
            "offset": "0x116D20"
        },
        "base::internal::TaskTracker::CompleteShutdown": {
            "offset": "0x116FF0"
        },
        "base::internal::TaskTracker::DecrementNumIncompleteTaskSources": {
            "offset": "0x117160"
        },
        "base::internal::TaskTracker::DecrementNumItemsBlockingShutdown": {
            "offset": "0x117240"
        },
        "base::internal::TaskTracker::FlushAsyncForTesting": {
            "offset": "0x117380"
        },
        "base::internal::TaskTracker::FlushForTesting": {
            "offset": "0x1174C0"
        },
        "base::internal::TaskTracker::GetNumTasksRun": {
            "offset": "0x1179F0"
        },
        "base::internal::TaskTracker::GetTrackedRef": {
            "offset": "0xE3080"
        },
        "base::internal::TaskTracker::HasIncompleteTaskSourcesForTesting": {
            "offset": "0x75570"
        },
        "base::internal::TaskTracker::HasShutdownStarted": {
            "offset": "0x117A00"
        },
        "base::internal::TaskTracker::IncrementNumTasksRun": {
            "offset": "0x117AA0"
        },
        "base::internal::TaskTracker::IsShutdownComplete": {
            "offset": "0x117AB0"
        },
        "base::internal::TaskTracker::RecordHeartbeatLatencyAndTasksRunWhileQueuingHistograms": {
            "offset": "0x117BA0"
        },
        "base::internal::TaskTracker::RecordLatencyHistogram": {
            "offset": "0x117C20"
        },
        "base::internal::TaskTracker::RegisterTaskSource": {
            "offset": "0x117C80"
        },
        "base::internal::TaskTracker::RunAndPopNextTask": {
            "offset": "0x117D90"
        },
        "base::internal::TaskTracker::RunBlockShutdown": {
            "offset": "0x118070"
        },
        "base::internal::TaskTracker::RunContinueOnShutdown": {
            "offset": "0x1180A0"
        },
        "base::internal::TaskTracker::RunSkipOnShutdown": {
            "offset": "0x1180D0"
        },
        "base::internal::TaskTracker::RunTask": {
            "offset": "0x118100"
        },
        "base::internal::TaskTracker::RunTaskWithShutdownBehavior": {
            "offset": "0x118870"
        },
        "base::internal::TaskTracker::SetCanRunPolicy": {
            "offset": "0x1188A0"
        },
        "base::internal::TaskTracker::StartShutdown": {
            "offset": "0x1188B0"
        },
        "base::internal::TaskTracker::State::IncrementNumItemsBlockingShutdown": {
            "offset": "0x117A10"
        },
        "base::internal::TaskTracker::TaskTracker": {
            "offset": "0x115CF0"
        },
        "base::internal::TaskTracker::UnregisterTaskSource": {
            "offset": "0x118AD0"
        },
        "base::internal::TaskTracker::WillPostTask": {
            "offset": "0x118BA0"
        },
        "base::internal::TaskTracker::WillPostTaskNow": {
            "offset": "0x118DC0"
        },
        "base::internal::TaskTracker::~TaskTracker": {
            "offset": "0x1164D0"
        },
        "base::internal::ThreadGroup::BaseScopedCommandsExecutor::BaseScopedCommandsExecutor": {
            "offset": "0x2E280"
        },
        "base::internal::ThreadGroup::BaseScopedCommandsExecutor::~BaseScopedCommandsExecutor": {
            "offset": "0x1195C0"
        },
        "base::internal::ThreadGroup::BindToCurrentThread": {
            "offset": "0x1197D0"
        },
        "base::internal::ThreadGroup::Delegate::Delegate": {
            "offset": "0xE2930"
        },
        "base::internal::ThreadGroup::Delegate::~Delegate": {
            "offset": "0x12B0"
        },
        "base::internal::ThreadGroup::GetNumAdditionalWorkersForBestEffortTaskSourcesLockRequired": {
            "offset": "0x119880"
        },
        "base::internal::ThreadGroup::GetNumAdditionalWorkersForForegroundTaskSourcesLockRequired": {
            "offset": "0x119900"
        },
        "base::internal::ThreadGroup::GetScopedWindowsThreadEnvironment": {
            "offset": "0x119990"
        },
        "base::internal::ThreadGroup::InvalidateAndHandoffAllTaskSourcesToOtherThreadGroup": {
            "offset": "0x119AE0"
        },
        "base::internal::ThreadGroup::IsBoundToCurrentThread": {
            "offset": "0x119B70"
        },
        "base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl": {
            "offset": "0x119BA0"
        },
        "base::internal::ThreadGroup::ReEnqueueTaskSourceLockRequired": {
            "offset": "0x119F50"
        },
        "base::internal::ThreadGroup::RemoveTaskSource": {
            "offset": "0x11A0F0"
        },
        "base::internal::ThreadGroup::ScopedReenqueueExecutor::SchedulePushTaskSourceAndWakeUpWorkers": {
            "offset": "0x11A170"
        },
        "base::internal::ThreadGroup::ScopedReenqueueExecutor::ScopedReenqueueExecutor": {
            "offset": "0x119220"
        },
        "base::internal::ThreadGroup::ScopedReenqueueExecutor::~ScopedReenqueueExecutor": {
            "offset": "0x1195F0"
        },
        "base::internal::ThreadGroup::ShouldYield": {
            "offset": "0x11A310"
        },
        "base::internal::ThreadGroup::TakeRegisteredTaskSource": {
            "offset": "0x11A360"
        },
        "base::internal::ThreadGroup::ThreadGroup": {
            "offset": "0x119240"
        },
        "base::internal::ThreadGroup::UnbindFromCurrentThread": {
            "offset": "0x11A510"
        },
        "base::internal::ThreadGroup::UpdateSortKeyImpl": {
            "offset": "0x11A5B0"
        },
        "base::internal::ThreadGroup::~ThreadGroup": {
            "offset": "0x1196D0"
        },
        "base::internal::ThreadGroupImpl::AdjustMaxTasks": {
            "offset": "0x11B9C0"
        },
        "base::internal::ThreadGroupImpl::CreateAndRegisterWorkerLockRequired": {
            "offset": "0x11CC60"
        },
        "base::internal::ThreadGroupImpl::DecrementMaxTasksLockRequired": {
            "offset": "0x11D170"
        },
        "base::internal::ThreadGroupImpl::DecrementTasksRunningLockRequired": {
            "offset": "0x11D2A0"
        },
        "base::internal::ThreadGroupImpl::DidUpdateCanRunPolicy": {
            "offset": "0x11D810"
        },
        "base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired": {
            "offset": "0x11DB30"
        },
        "base::internal::ThreadGroupImpl::GetDesiredNumAwakeWorkersLockRequired": {
            "offset": "0x11E050"
        },
        "base::internal::ThreadGroupImpl::GetMaxConcurrentNonBlockedTasksDeprecated": {
            "offset": "0x11E110"
        },
        "base::internal::ThreadGroupImpl::GetMaxTasksForTesting": {
            "offset": "0x11E200"
        },
        "base::internal::ThreadGroupImpl::GetNumAwakeWorkersLockRequired": {
            "offset": "0x11E250"
        },
        "base::internal::ThreadGroupImpl::IncrementMaxTasksLockRequired": {
            "offset": "0x11F230"
        },
        "base::internal::ThreadGroupImpl::IncrementTasksRunningLockRequired": {
            "offset": "0x11F310"
        },
        "base::internal::ThreadGroupImpl::InitializedInStart::~InitializedInStart": {
            "offset": "0x11B410"
        },
        "base::internal::ThreadGroupImpl::JoinForTesting": {
            "offset": "0x11F500"
        },
        "base::internal::ThreadGroupImpl::MaintainAtLeastOneIdleWorkerLockRequired": {
            "offset": "0x11F7E0"
        },
        "base::internal::ThreadGroupImpl::MaybeScheduleAdjustMaxTasksLockRequired": {
            "offset": "0x11FF30"
        },
        "base::internal::ThreadGroupImpl::NumberOfIdleWorkersForTesting": {
            "offset": "0x11FFE0"
        },
        "base::internal::ThreadGroupImpl::NumberOfWorkersForTesting": {
            "offset": "0x120040"
        },
        "base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers": {
            "offset": "0x120680"
        },
        "base::internal::ThreadGroupImpl::ReportHeartbeatMetrics": {
            "offset": "0x1209B0"
        },
        "base::internal::ThreadGroupImpl::ScheduleAdjustMaxTasks": {
            "offset": "0x120A60"
        },
        "base::internal::ThreadGroupImpl::ScopedCommandsExecutor::FlushImpl": {
            "offset": "0x11DD40"
        },
        "base::internal::ThreadGroupImpl::ScopedCommandsExecutor::WorkerContainer::AddWorker": {
            "offset": "0x11B910"
        },
        "base::internal::ThreadGroupImpl::ScopedCommandsExecutor::WorkerContainer::~WorkerContainer": {
            "offset": "0x11B720"
        },
        "base::internal::ThreadGroupImpl::ScopedCommandsExecutor::~ScopedCommandsExecutor": {
            "offset": "0x11B460"
        },
        "base::internal::ThreadGroupImpl::ShouldPeriodicallyAdjustMaxTasksLockRequired": {
            "offset": "0x120BD0"
        },
        "base::internal::ThreadGroupImpl::Start": {
            "offset": "0x120C50"
        },
        "base::internal::ThreadGroupImpl::ThreadGroupImpl": {
            "offset": "0x11A970"
        },
        "base::internal::ThreadGroupImpl::UpdateMinAllowedPriorityLockRequired": {
            "offset": "0x1212C0"
        },
        "base::internal::ThreadGroupImpl::UpdateSortKey": {
            "offset": "0x121320"
        },
        "base::internal::ThreadGroupImpl::WaitForAllWorkersIdleForTesting": {
            "offset": "0x121630"
        },
        "base::internal::ThreadGroupImpl::WaitForWorkersCleanedUpForTesting": {
            "offset": "0x121690"
        },
        "base::internal::ThreadGroupImpl::WaitForWorkersIdleForTesting": {
            "offset": "0x121780"
        },
        "base::internal::ThreadGroupImpl::WaitForWorkersIdleLockRequiredForTesting": {
            "offset": "0x121850"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::BlockingEnded": {
            "offset": "0x11BFA0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::BlockingStarted": {
            "offset": "0x11C250"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::BlockingTypeUpgraded": {
            "offset": "0x11C3D0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::CanGetWorkLockRequired": {
            "offset": "0x11C5C0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::CleanupLockRequired": {
            "offset": "0x11C900"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::DidProcessTask": {
            "offset": "0x11D3E0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetSleepTimeout": {
            "offset": "0x11E370"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetThreadLabel": {
            "offset": "0x12A0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetWork": {
            "offset": "0x11E4F0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::MayBlockEntered": {
            "offset": "0x11F980"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnMainEntry": {
            "offset": "0x1200A0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnMainExit": {
            "offset": "0x1202F0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnWorkerBecomesIdleLockRequired": {
            "offset": "0x1204E0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::WillBlockEntered": {
            "offset": "0x1218F0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::WorkerOnly::~WorkerOnly": {
            "offset": "0x11B780"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::WorkerThreadDelegateImpl": {
            "offset": "0x11B1D0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::read_worker": {
            "offset": "0x1220D0"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::worker_only": {
            "offset": "0x122160"
        },
        "base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::write_worker": {
            "offset": "0x1220D0"
        },
        "base::internal::ThreadGroupImpl::after_start": {
            "offset": "0xE3AF0"
        },
        "base::internal::ThreadGroupImpl::blocked_workers_poll_period_for_testing": {
            "offset": "0xE3B80"
        },
        "base::internal::ThreadGroupImpl::in_start": {
            "offset": "0xE3BC0"
        },
        "base::internal::ThreadGroupImpl::may_block_threshold_for_testing": {
            "offset": "0xE3C50"
        },
        "base::internal::ThreadGroupImpl::num_tasks_before_detach_histogram": {
            "offset": "0xE3C70"
        },
        "base::internal::ThreadGroupImpl::num_workers_histogram": {
            "offset": "0xE3C80"
        },
        "base::internal::ThreadGroupImpl::~ThreadGroupImpl": {
            "offset": "0x11B520"
        },
        "base::internal::ThreadGroupNative::DidUpdateCanRunPolicy": {
            "offset": "0x1225A0"
        },
        "base::internal::ThreadGroupNative::EnsureEnoughWorkersLockRequired": {
            "offset": "0x122640"
        },
        "base::internal::ThreadGroupNative::GetMaxConcurrentNonBlockedTasksDeprecated": {
            "offset": "0x122740"
        },
        "base::internal::ThreadGroupNative::GetWork": {
            "offset": "0x122760"
        },
        "base::internal::ThreadGroupNative::JoinForTesting": {
            "offset": "0x122980"
        },
        "base::internal::ThreadGroupNative::PushTaskSourceAndWakeUpWorkers": {
            "offset": "0x122A50"
        },
        "base::internal::ThreadGroupNative::ReportHeartbeatMetrics": {
            "offset": "0x12B0"
        },
        "base::internal::ThreadGroupNative::RunNextTaskSourceImpl": {
            "offset": "0x122B20"
        },
        "base::internal::ThreadGroupNative::ScopedCommandsExecutor::~ScopedCommandsExecutor": {
            "offset": "0x122430"
        },
        "base::internal::ThreadGroupNative::Start": {
            "offset": "0x122CA0"
        },
        "base::internal::ThreadGroupNative::ThreadGroupNative": {
            "offset": "0x1221F0"
        },
        "base::internal::ThreadGroupNative::UpdateMinAllowedPriorityLockRequired": {
            "offset": "0x122DC0"
        },
        "base::internal::ThreadGroupNative::UpdateSortKey": {
            "offset": "0x122E10"
        },
        "base::internal::ThreadGroupNative::~ThreadGroupNative": {
            "offset": "0x122480"
        },
        "base::internal::ThreadGroupNativeWin::JoinImpl": {
            "offset": "0x1232B0"
        },
        "base::internal::ThreadGroupNativeWin::RunNextTaskSource": {
            "offset": "0x1232D0"
        },
        "base::internal::ThreadGroupNativeWin::ScopedCallbackMayRunLongObserver::BlockingEnded": {
            "offset": "0x12B0"
        },
        "base::internal::ThreadGroupNativeWin::ScopedCallbackMayRunLongObserver::BlockingStarted": {
            "offset": "0x123290"
        },
        "base::internal::ThreadGroupNativeWin::ScopedCallbackMayRunLongObserver::BlockingTypeUpgraded": {
            "offset": "0x12B0"
        },
        "base::internal::ThreadGroupNativeWin::ScopedCallbackMayRunLongObserver::~ScopedCallbackMayRunLongObserver": {
            "offset": "0x123110"
        },
        "base::internal::ThreadGroupNativeWin::StartImpl": {
            "offset": "0x123360"
        },
        "base::internal::ThreadGroupNativeWin::SubmitWork": {
            "offset": "0x123520"
        },
        "base::internal::ThreadGroupNativeWin::ThreadGroupNativeWin": {
            "offset": "0x122EB0"
        },
        "base::internal::ThreadGroupNativeWin::~ThreadGroupNativeWin": {
            "offset": "0x123140"
        },
        "base::internal::ThreadPoolImpl::BeginBestEffortFence": {
            "offset": "0x1244D0"
        },
        "base::internal::ThreadPoolImpl::BeginFence": {
            "offset": "0x124570"
        },
        "base::internal::ThreadPoolImpl::CreateCOMSTATaskRunner": {
            "offset": "0x124610"
        },
        "base::internal::ThreadPoolImpl::CreateSequencedTaskRunner": {
            "offset": "0x1246D0"
        },
        "base::internal::ThreadPoolImpl::CreateSingleThreadTaskRunner": {
            "offset": "0x1247E0"
        },
        "base::internal::ThreadPoolImpl::CreateTaskRunner": {
            "offset": "0x1248A0"
        },
        "base::internal::ThreadPoolImpl::CreateUpdateableSequencedTaskRunner": {
            "offset": "0x1249B0"
        },
        "base::internal::ThreadPoolImpl::EndBestEffortFence": {
            "offset": "0x124B30"
        },
        "base::internal::ThreadPoolImpl::EndFence": {
            "offset": "0x124C30"
        },
        "base::internal::ThreadPoolImpl::EnqueueJobTaskSource": {
            "offset": "0x124D30"
        },
        "base::internal::ThreadPoolImpl::FlushAsyncForTesting": {
            "offset": "0x124ED0"
        },
        "base::internal::ThreadPoolImpl::FlushForTesting": {
            "offset": "0x124F20"
        },
        "base::internal::ThreadPoolImpl::GetMaxConcurrentNonBlockedTasksWithTraitsDeprecated": {
            "offset": "0x124F30"
        },
        "base::internal::ThreadPoolImpl::GetThreadGroupForTraits": {
            "offset": "0x125130"
        },
        "base::internal::ThreadPoolImpl::JoinForTesting": {
            "offset": "0x125200"
        },
        "base::internal::ThreadPoolImpl::NextScheduledRunTimeForTesting": {
            "offset": "0x1252E0"
        },
        "base::internal::ThreadPoolImpl::PostDelayedTask": {
            "offset": "0x125340"
        },
        "base::internal::ThreadPoolImpl::PostTaskWithSequence": {
            "offset": "0x1254C0"
        },
        "base::internal::ThreadPoolImpl::PostTaskWithSequenceNow": {
            "offset": "0x125780"
        },
        "base::internal::ThreadPoolImpl::ProcessRipeDelayedTasksForTesting": {
            "offset": "0x125A10"
        },
        "base::internal::ThreadPoolImpl::RemoveJobTaskSource": {
            "offset": "0x125A20"
        },
        "base::internal::ThreadPoolImpl::ReportHeartbeatMetrics": {
            "offset": "0x125C00"
        },
        "base::internal::ThreadPoolImpl::SetUserBlockingPriorityIfNeeded": {
            "offset": "0x125D30"
        },
        "base::internal::ThreadPoolImpl::ShouldYield": {
            "offset": "0x125D90"
        },
        "base::internal::ThreadPoolImpl::Shutdown": {
            "offset": "0x125E50"
        },
        "base::internal::ThreadPoolImpl::Start": {
            "offset": "0x125F00"
        },
        "base::internal::ThreadPoolImpl::ThreadPoolImpl": {
            "offset": "0x123710"
        },
        "base::internal::ThreadPoolImpl::UpdateCanRunPolicy": {
            "offset": "0x126380"
        },
        "base::internal::ThreadPoolImpl::UpdatePriority": {
            "offset": "0x126500"
        },
        "base::internal::ThreadPoolImpl::~ThreadPoolImpl": {
            "offset": "0x124270"
        },
        "base::internal::TimerBase::AbandonAndStop": {
            "offset": "0x5110"
        },
        "base::internal::TimerBase::AbandonScheduledTask": {
            "offset": "0x144B50"
        },
        "base::internal::TimerBase::GetCurrentDelay": {
            "offset": "0x144D40"
        },
        "base::internal::TimerBase::GetTaskRunner": {
            "offset": "0x144DE0"
        },
        "base::internal::TimerBase::IsRunning": {
            "offset": "0x144E30"
        },
        "base::internal::TimerBase::Now": {
            "offset": "0x144EC0"
        },
        "base::internal::TimerBase::PostNewScheduledTask": {
            "offset": "0x144F20"
        },
        "base::internal::TimerBase::Reset": {
            "offset": "0x145220"
        },
        "base::internal::TimerBase::RunScheduledTask": {
            "offset": "0x145360"
        },
        "base::internal::TimerBase::SetTaskRunner": {
            "offset": "0x1456F0"
        },
        "base::internal::TimerBase::StartInternal": {
            "offset": "0x1458E0"
        },
        "base::internal::TimerBase::Stop": {
            "offset": "0x1459A0"
        },
        "base::internal::TimerBase::TimerBase": {
            "offset": "0x1446C0"
        },
        "base::internal::TimerBase::desired_run_time": {
            "offset": "0xD530"
        },
        "base::internal::TimerBase::posted_from": {
            "offset": "0xD5E0"
        },
        "base::internal::TimerBase::set_desired_run_time": {
            "offset": "0xD9D0"
        },
        "base::internal::TimerBase::set_is_running": {
            "offset": "0xD9E0"
        },
        "base::internal::TimerBase::~TimerBase": {
            "offset": "0x1447D0"
        },
        "base::internal::TrackedRef<base::internal::TaskTracker>::~TrackedRef<base::internal::TaskTracker>": {
            "offset": "0x10E540"
        },
        "base::internal::TrackedRef<base::internal::ThreadGroup::Delegate>::~TrackedRef<base::internal::ThreadGroup::Delegate>": {
            "offset": "0x10E540"
        },
        "base::internal::TrackedRef<base::internal::ThreadGroupImpl>::~TrackedRef<base::internal::ThreadGroupImpl>": {
            "offset": "0x10E540"
        },
        "base::internal::TransactionWithRegisteredTaskSource::FromTaskSource": {
            "offset": "0x115740"
        },
        "base::internal::TransactionWithRegisteredTaskSource::TransactionWithRegisteredTaskSource": {
            "offset": "0xE2A40"
        },
        "base::internal::TransactionWithRegisteredTaskSource::~TransactionWithRegisteredTaskSource": {
            "offset": "0xE2B70"
        },
        "base::internal::UncheckedObserverAdapter::IsEqual": {
            "offset": "0x4960"
        },
        "base::internal::UncheckedObserverAdapter::IsMarkedForRemoval": {
            "offset": "0xAEE0"
        },
        "base::internal::UncheckedObserverAdapter::MarkForRemoval": {
            "offset": "0xB0F0"
        },
        "base::internal::UncheckedObserverAdapter::UncheckedObserverAdapter": {
            "offset": "0x2FB0"
        },
        "base::internal::UncheckedScopedBlockingCall::UncheckedScopedBlockingCall": {
            "offset": "0x1358A0"
        },
        "base::internal::UncheckedScopedBlockingCall::~UncheckedScopedBlockingCall": {
            "offset": "0x135B70"
        },
        "base::internal::ValueConverter<bool>::ValueConverter<bool>": {
            "offset": "0x628D0"
        },
        "base::internal::ValueConverter<bool>::~ValueConverter<bool>": {
            "offset": "0x12B0"
        },
        "base::internal::ValueConverter<double>::ValueConverter<double>": {
            "offset": "0x628A0"
        },
        "base::internal::ValueConverter<double>::~ValueConverter<double>": {
            "offset": "0x12B0"
        },
        "base::internal::ValueConverter<int>::ValueConverter<int>": {
            "offset": "0x62890"
        },
        "base::internal::ValueConverter<int>::~ValueConverter<int>": {
            "offset": "0x12B0"
        },
        "base::internal::ValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::ValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x628B0"
        },
        "base::internal::ValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~ValueConverter<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x12B0"
        },
        "base::internal::ValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::ValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0x628C0"
        },
        "base::internal::ValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~ValueConverter<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0x12B0"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter> >::get": {
            "offset": "0x6F080"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter> >::~WeakLinkNode<base::ObserverList<base::MemoryPressureListener,0,1,base::internal::UncheckedObserverAdapter> >": {
            "offset": "0x6D0A0"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter> >::get": {
            "offset": "0x6F080"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter> >::~WeakLinkNode<base::ObserverList<base::MessageLoopCurrent::DestructionObserver,0,1,base::internal::UncheckedObserverAdapter> >": {
            "offset": "0x6D0A0"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter> >::get": {
            "offset": "0x6F080"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter> >::~WeakLinkNode<base::ObserverList<base::MessagePumpForUI::Observer,0,1,base::internal::UncheckedObserverAdapter> >": {
            "offset": "0x6D0A0"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter> >::get": {
            "offset": "0x6F080"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter> >::~WeakLinkNode<base::ObserverList<base::RunLoop::NestingObserver,0,1,base::internal::UncheckedObserverAdapter> >": {
            "offset": "0x6D0A0"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter> >::get": {
            "offset": "0x6F080"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter> >::~WeakLinkNode<base::ObserverList<base::TaskObserver,0,1,base::internal::UncheckedObserverAdapter> >": {
            "offset": "0x6D0A0"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter> >::get": {
            "offset": "0x6F080"
        },
        "base::internal::WeakLinkNode<base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter> >::~WeakLinkNode<base::ObserverList<base::sequence_manager::TaskTimeObserver,0,1,base::internal::UncheckedObserverAdapter> >": {
            "offset": "0x6D0A0"
        },
        "base::internal::WeakPtrBase::WeakPtrBase": {
            "offset": "0x3770"
        },
        "base::internal::WeakPtrBase::reset": {
            "offset": "0xD920"
        },
        "base::internal::WeakPtrBase::~WeakPtrBase": {
            "offset": "0x73DD0"
        },
        "base::internal::WeakReference::Flag::DetachFromSequence": {
            "offset": "0x73F20"
        },
        "base::internal::WeakReference::Flag::Flag": {
            "offset": "0x73B60"
        },
        "base::internal::WeakReference::Flag::Invalidate": {
            "offset": "0x73F80"
        },
        "base::internal::WeakReference::Flag::IsValid": {
            "offset": "0x740A0"
        },
        "base::internal::WeakReference::Flag::MaybeValid": {
            "offset": "0x74160"
        },
        "base::internal::WeakReference::Flag::~Flag": {
            "offset": "0x73DA0"
        },
        "base::internal::WeakReference::IsValid": {
            "offset": "0x74130"
        },
        "base::internal::WeakReference::MaybeValid": {
            "offset": "0x74170"
        },
        "base::internal::WeakReference::WeakReference": {
            "offset": "0x30F0"
        },
        "base::internal::WeakReference::~WeakReference": {
            "offset": "0x73DD0"
        },
        "base::internal::WeakReferenceOwner::GetRef": {
            "offset": "0x73F30"
        },
        "base::internal::WeakReferenceOwner::HasRefs": {
            "offset": "0xAAF0"
        },
        "base::internal::WeakReferenceOwner::Invalidate": {
            "offset": "0x74030"
        },
        "base::internal::WeakReferenceOwner::WeakReferenceOwner": {
            "offset": "0x37E0"
        },
        "base::internal::WeakReferenceOwner::~WeakReferenceOwner": {
            "offset": "0x73E40"
        },
        "base::internal::WorkerThread::BeginUnusedPeriod": {
            "offset": "0x127200"
        },
        "base::internal::WorkerThread::Cleanup": {
            "offset": "0x1272C0"
        },
        "base::internal::WorkerThread::Delegate::Delegate": {
            "offset": "0xE2940"
        },
        "base::internal::WorkerThread::Delegate::OnMainExit": {
            "offset": "0x12B0"
        },
        "base::internal::WorkerThread::Delegate::WaitForWork": {
            "offset": "0x128180"
        },
        "base::internal::WorkerThread::Delegate::~Delegate": {
            "offset": "0x12B0"
        },
        "base::internal::WorkerThread::EndUnusedPeriod": {
            "offset": "0x127370"
        },
        "base::internal::WorkerThread::GetDesiredThreadPriority": {
            "offset": "0x127430"
        },
        "base::internal::WorkerThread::GetLastUsedTime": {
            "offset": "0x127460"
        },
        "base::internal::WorkerThread::JoinForTesting": {
            "offset": "0x1274C0"
        },
        "base::internal::WorkerThread::RunBackgroundDedicatedCOMWorker": {
            "offset": "0x1275C0"
        },
        "base::internal::WorkerThread::RunBackgroundDedicatedWorker": {
            "offset": "0x1275E0"
        },
        "base::internal::WorkerThread::RunBackgroundPooledWorker": {
            "offset": "0x127600"
        },
        "base::internal::WorkerThread::RunBackgroundSharedCOMWorker": {
            "offset": "0x127620"
        },
        "base::internal::WorkerThread::RunBackgroundSharedWorker": {
            "offset": "0x127640"
        },
        "base::internal::WorkerThread::RunDedicatedCOMWorker": {
            "offset": "0x127660"
        },
        "base::internal::WorkerThread::RunDedicatedWorker": {
            "offset": "0x127680"
        },
        "base::internal::WorkerThread::RunPooledWorker": {
            "offset": "0x1276A0"
        },
        "base::internal::WorkerThread::RunSharedCOMWorker": {
            "offset": "0x1276C0"
        },
        "base::internal::WorkerThread::RunSharedWorker": {
            "offset": "0x1276E0"
        },
        "base::internal::WorkerThread::RunWorker": {
            "offset": "0x127700"
        },
        "base::internal::WorkerThread::ShouldExit": {
            "offset": "0x127E20"
        },
        "base::internal::WorkerThread::Start": {
            "offset": "0x127E60"
        },
        "base::internal::WorkerThread::ThreadAliveForTesting": {
            "offset": "0x128020"
        },
        "base::internal::WorkerThread::ThreadMain": {
            "offset": "0x128070"
        },
        "base::internal::WorkerThread::UpdateThreadPriority": {
            "offset": "0x128150"
        },
        "base::internal::WorkerThread::WakeUp": {
            "offset": "0x128250"
        },
        "base::internal::WorkerThread::WorkerThread": {
            "offset": "0x126CC0"
        },
        "base::internal::WorkerThread::delegate": {
            "offset": "0xE3BB0"
        },
        "base::internal::WorkerThread::~WorkerThread": {
            "offset": "0x126FB0"
        },
        "base::internal::WorkerThreadStack::Contains": {
            "offset": "0x128360"
        },
        "base::internal::WorkerThreadStack::IsEmpty": {
            "offset": "0xE3130"
        },
        "base::internal::WorkerThreadStack::Peek": {
            "offset": "0x128390"
        },
        "base::internal::WorkerThreadStack::Pop": {
            "offset": "0x1283B0"
        },
        "base::internal::WorkerThreadStack::Push": {
            "offset": "0x128400"
        },
        "base::internal::WorkerThreadStack::Remove": {
            "offset": "0x1284F0"
        },
        "base::internal::WorkerThreadStack::Size": {
            "offset": "0xBD820"
        },
        "base::internal::WorkerThreadStack::WorkerThreadStack": {
            "offset": "0x2E280"
        },
        "base::internal::WorkerThreadStack::~WorkerThreadStack": {
            "offset": "0x29650"
        },
        "base::internal::`anonymous namespace'::EphemeralTaskExecutor::CheckTraitsCompatibleWithSequenceTraits": {
            "offset": "0x116D40"
        },
        "base::internal::`anonymous namespace'::EphemeralTaskExecutor::CreateCOMSTATaskRunner": {
            "offset": "0x1170E0"
        },
        "base::internal::`anonymous namespace'::EphemeralTaskExecutor::CreateSequencedTaskRunner": {
            "offset": "0x117120"
        },
        "base::internal::`anonymous namespace'::EphemeralTaskExecutor::CreateSingleThreadTaskRunner": {
            "offset": "0x1170E0"
        },
        "base::internal::`anonymous namespace'::EphemeralTaskExecutor::CreateTaskRunner": {
            "offset": "0x117120"
        },
        "base::internal::`anonymous namespace'::EphemeralTaskExecutor::PostDelayedTask": {
            "offset": "0x117B20"
        },
        "base::internal::`anonymous namespace'::GetCountHistogram": {
            "offset": "0x117580"
        },
        "base::internal::`anonymous namespace'::GetLatencyHistogram": {
            "offset": "0x1177B0"
        },
        "base::internal::`anonymous namespace'::QueryCancellationTraitsForNonCancellables": {
            "offset": "0x1EA00"
        },
        "base::internal::`anonymous namespace'::SafeAcquisitionTracker::AssertSafeAcquire": {
            "offset": "0xDF0A0"
        },
        "base::internal::`anonymous namespace'::SafeAcquisitionTracker::AssertSafePredecessor": {
            "offset": "0xDF2C0"
        },
        "base::internal::`anonymous namespace'::SafeAcquisitionTracker::GetAcquiredLocksOnCurrentThread": {
            "offset": "0xDF700"
        },
        "base::internal::`anonymous namespace'::SafeAcquisitionTracker::UnregisterLock": {
            "offset": "0xDFB80"
        },
        "base::internal::`anonymous namespace'::TaskTracingInfo::AppendAsTraceFormat": {
            "offset": "0x116710"
        },
        "base::internal::`anonymous namespace'::UnprefixedHexStringToInt": {
            "offset": "0x613F0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadCOMDelegate::GetWork": {
            "offset": "0x10F070"
        },
        "base::internal::`anonymous namespace'::WorkerThreadCOMDelegate::GetWorkFromWindowsMessageQueue": {
            "offset": "0x10F4F0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadCOMDelegate::OnMainEntry": {
            "offset": "0x10F9F0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadCOMDelegate::OnMainExit": {
            "offset": "0x10FAE0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadCOMDelegate::WaitForWork": {
            "offset": "0x110640"
        },
        "base::internal::`anonymous namespace'::WorkerThreadCOMDelegate::WorkerThreadCOMDelegate": {
            "offset": "0x10E0B0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::DidProcessTask": {
            "offset": "0x10ECE0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::EnqueueTaskSource": {
            "offset": "0x10EF50"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::GetSleepTimeout": {
            "offset": "0x10F050"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::GetThreadLabel": {
            "offset": "0x75C80"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::GetWork": {
            "offset": "0x10F320"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::OnMainEntry": {
            "offset": "0x10FAA0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::OnMainExit": {
            "offset": "0x12B0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::PostTaskNow": {
            "offset": "0x10FD60"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::WorkerThreadDelegate": {
            "offset": "0x10E3A0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::set_worker": {
            "offset": "0x1107C0"
        },
        "base::internal::`anonymous namespace'::WorkerThreadDelegate::~WorkerThreadDelegate": {
            "offset": "0x10E790"
        },
        "base::internal::circular_deque_const_iterator<IPC::PendingSyncMsg>::CheckComparable": {
            "offset": "0x1B3030"
        },
        "base::internal::circular_deque_const_iterator<IPC::PendingSyncMsg>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<`base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat'::`2'::State>::CheckUnstableUsage": {
            "offset": "0x16E1A0"
        },
        "base::internal::circular_deque_const_iterator<base::DelegateSimpleThread::Delegate *>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<base::FilePath>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<base::OnceCallback<void __cdecl(void)> >::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<base::RepeatingCallback<void __cdecl(char const *,int,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >)> >::CheckUnstableUsage": {
            "offset": "0x678D0"
        },
        "base::internal::circular_deque_const_iterator<base::TimeTicks>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<base::internal::Task>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<mojo::Message>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<mojo::core::ports::NodeName>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<mojo::internal::MultiplexRouter::Task *>::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> >::CheckUnstableUsage": {
            "offset": "0x16E1A0"
        },
        "base::internal::circular_deque_const_iterator<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > >::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::circular_deque_const_iterator<std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> > >::CheckUnstableUsage": {
            "offset": "0x1BA50"
        },
        "base::internal::cityhash_v111::CityHash64": {
            "offset": "0x128C30"
        },
        "base::internal::cityhash_v111::HashLen0to16": {
            "offset": "0x129070"
        },
        "base::internal::copy": {
            "offset": "0xC8E70"
        },
        "base::internal::find": {
            "offset": "0xC90D0"
        },
        "base::internal::find_first_not_of": {
            "offset": "0xC9350"
        },
        "base::internal::find_first_of": {
            "offset": "0xC9460"
        },
        "base::internal::find_last_not_of": {
            "offset": "0xC96D0"
        },
        "base::internal::find_last_of": {
            "offset": "0xC9840"
        },
        "base::internal::flat_tree<int,int,base::internal::GetKeyFromValueIdentity<int>,std::less<void> >::~flat_tree<int,int,base::internal::GetKeyFromValueIdentity<int>,std::less<void> >": {
            "offset": "0x7A7E0"
        },
        "base::internal::flat_tree<mojo::SequenceLocalSyncEventWatcher const *,mojo::SequenceLocalSyncEventWatcher const *,base::internal::GetKeyFromValueIdentity<mojo::SequenceLocalSyncEventWatcher const *>,std::less<void> >::erase<mojo::SequenceLocalSyncEventWatcher const *>": {
            "offset": "0x226680"
        },
        "base::internal::flat_tree<mojo::SequenceLocalSyncEventWatcher const *,mojo::SequenceLocalSyncEventWatcher const *,base::internal::GetKeyFromValueIdentity<mojo::SequenceLocalSyncEventWatcher const *>,std::less<void> >::~flat_tree<mojo::SequenceLocalSyncEventWatcher const *,mojo::SequenceLocalSyncEventWatcher const *,base::internal::GetKeyFromValueIdentity<mojo::SequenceLocalSyncEventWatcher const *>,std::less<void> >": {
            "offset": "0x29650"
        },
        "base::internal::flat_tree<mojo::core::Dispatcher *,std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> >,base::internal::GetKeyFromValuePairFirst<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> >,std::less<void> >::emplace_key_args<mojo::core::Dispatcher *,std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> > >": {
            "offset": "0x1F8B60"
        },
        "base::internal::flat_tree<mojo::core::Dispatcher *,std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> >,base::internal::GetKeyFromValuePairFirst<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> >,std::less<void> >::erase": {
            "offset": "0x1FA830"
        },
        "base::internal::flat_tree<mojo::core::ports::PortName,std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef>,base::internal::GetKeyFromValuePairFirst<mojo::core::ports::PortName,mojo::core::ports::PortRef>,std::less<void> >::emplace_key_args<mojo::core::ports::PortName,std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> >": {
            "offset": "0x1E8AD0"
        },
        "base::internal::flat_tree<mojo::core::ports::PortName,std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef>,base::internal::GetKeyFromValuePairFirst<mojo::core::ports::PortName,mojo::core::ports::PortRef>,std::less<void> >::erase<mojo::core::ports::PortName>": {
            "offset": "0x1E8CA0"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef>,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef>,std::less<void> >::emplace_key_args<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> >": {
            "offset": "0x1D1BF0"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef>,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef>,std::less<void> >::lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1D1DB0"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::Impl::~Impl": {
            "offset": "0x5DB90"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::emplace_key_args<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >": {
            "offset": "0x172CE0"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::find<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x172E90"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::lower_bound<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x173120"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x173220"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::sort_and_unique": {
            "offset": "0x615B0"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::unsafe_emplace<std::piecewise_construct_t const &,std::tuple<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>,std::tuple<std::unique_ptr<base::Value,std::default_delete<base::Value> > &&> >": {
            "offset": "0x1736E0"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::unsafe_emplace<std::piecewise_construct_t const &,std::tuple<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>,std::tuple<std::unique_ptr<base::Value,std::default_delete<base::Value> > &&> >": {
            "offset": "0x1736E0"
        },
        "base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::unsafe_emplace<std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<std::unique_ptr<base::Value,std::default_delete<base::Value> > &&> >": {
            "offset": "0x173800"
        },
        "base::internal::flat_tree<unsigned __int64,std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> >,base::internal::GetKeyFromValuePairFirst<unsigned __int64,scoped_refptr<mojo::core::Watch> >,std::less<void> >::emplace_key_args<unsigned __int64,std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> > >": {
            "offset": "0x1F8B60"
        },
        "base::internal::flat_tree<unsigned __int64,std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> >,base::internal::GetKeyFromValuePairFirst<unsigned __int64,scoped_refptr<mojo::core::Watch> >,std::less<void> >::erase<unsigned __int64>": {
            "offset": "0x1F8D30"
        },
        "base::internal::rfind": {
            "offset": "0xC9A90"
        },
        "base::internal::substr": {
            "offset": "0xC9B10"
        },
        "base::intrusive_heap::CheckInvalidOrEqualTo": {
            "offset": "0x26830"
        },
        "base::intrusive_heap::LeftIndex": {
            "offset": "0x26A60"
        },
        "base::intrusive_heap::ParentIndex": {
            "offset": "0x26A70"
        },
        "base::sequence_manager::CreateSequenceManagerOnCurrentThread": {
            "offset": "0xEA0F0"
        },
        "base::sequence_manager::CreateSequenceManagerOnCurrentThreadWithPump": {
            "offset": "0xEA150"
        },
        "base::sequence_manager::CreateUnboundSequenceManager": {
            "offset": "0xEA6B0"
        },
        "base::sequence_manager::LazyNow::LazyNow": {
            "offset": "0xE6010"
        },
        "base::sequence_manager::LazyNow::Now": {
            "offset": "0xE6030"
        },
        "base::sequence_manager::LazyNow::has_value": {
            "offset": "0x75AC0"
        },
        "base::sequence_manager::NativeWorkHandle::~NativeWorkHandle": {
            "offset": "0xE6560"
        },
        "base::sequence_manager::SequenceManager::MetricRecordingSettings::MetricRecordingSettings": {
            "offset": "0xE6420"
        },
        "base::sequence_manager::SequenceManager::SequenceManager": {
            "offset": "0x74A90"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::Build": {
            "offset": "0xE65A0"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::Builder": {
            "offset": "0xE6400"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetAddQueueTimeToTasks": {
            "offset": "0xE6630"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetLogPostTask": {
            "offset": "0xE6640"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetLogRunloopQuitAndQuitWhenIdle": {
            "offset": "0xE6650"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetLogTaskDelayExpiry": {
            "offset": "0xE6660"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetMessagePumpType": {
            "offset": "0x2FE0"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetPerPriorityCrossThreadTaskDelay": {
            "offset": "0xE6670"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetPerPrioritySameThreadTaskDelay": {
            "offset": "0xE66A0"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetRandomTaskSelectionSeed": {
            "offset": "0xE66D0"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetRandomisedSamplingEnabled": {
            "offset": "0xE66E0"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetTaskLogging": {
            "offset": "0xE66F0"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::SetTickClock": {
            "offset": "0xE6700"
        },
        "base::sequence_manager::SequenceManager::Settings::Builder::~Builder": {
            "offset": "0x12B0"
        },
        "base::sequence_manager::SequenceManager::Settings::Settings": {
            "offset": "0xE64F0"
        },
        "base::sequence_manager::SequenceManager::~SequenceManager": {
            "offset": "0x12B0"
        },
        "base::sequence_manager::Task::Task": {
            "offset": "0xFC3A0"
        },
        "base::sequence_manager::Task::delayed_wake_up": {
            "offset": "0x75850"
        },
        "base::sequence_manager::Task::enqueue_order": {
            "offset": "0x759E0"
        },
        "base::sequence_manager::Task::enqueue_order_set": {
            "offset": "0x75A80"
        },
        "base::sequence_manager::Task::set_enqueue_order": {
            "offset": "0x75D20"
        },
        "base::sequence_manager::Task::~Task": {
            "offset": "0xFC4E0"
        },
        "base::sequence_manager::TaskQueue::AddQueueEnabledVoter": {
            "offset": "0xF0B90"
        },
        "base::sequence_manager::TaskQueue::AddTaskObserver": {
            "offset": "0xF0C40"
        },
        "base::sequence_manager::TaskQueue::AreAllQueueEnabledVotersEnabled": {
            "offset": "0xF0CF0"
        },
        "base::sequence_manager::TaskQueue::BlockedByFence": {
            "offset": "0xF0D00"
        },
        "base::sequence_manager::TaskQueue::CreateQueueEnabledVoter": {
            "offset": "0xF0E30"
        },
        "base::sequence_manager::TaskQueue::CreateTaskRunner": {
            "offset": "0xF0F20"
        },
        "base::sequence_manager::TaskQueue::GetEnqueueOrderAtWhichWeBecameUnblocked": {
            "offset": "0xF0FE0"
        },
        "base::sequence_manager::TaskQueue::GetName": {
            "offset": "0xF10A0"
        },
        "base::sequence_manager::TaskQueue::GetNextScheduledWakeUp": {
            "offset": "0xF10B0"
        },
        "base::sequence_manager::TaskQueue::GetNumberOfPendingTasks": {
            "offset": "0xF1170"
        },
        "base::sequence_manager::TaskQueue::GetQueuePriority": {
            "offset": "0xF1220"
        },
        "base::sequence_manager::TaskQueue::GetTaskQueueImpl": {
            "offset": "0x32570"
        },
        "base::sequence_manager::TaskQueue::GetTimeDomain": {
            "offset": "0xF12D0"
        },
        "base::sequence_manager::TaskQueue::HasActiveFence": {
            "offset": "0xF1380"
        },
        "base::sequence_manager::TaskQueue::HasTaskToRunImmediately": {
            "offset": "0xF1430"
        },
        "base::sequence_manager::TaskQueue::InsertFence": {
            "offset": "0xF14E0"
        },
        "base::sequence_manager::TaskQueue::InsertFenceAt": {
            "offset": "0xF1590"
        },
        "base::sequence_manager::TaskQueue::IsEmpty": {
            "offset": "0xF15A0"
        },
        "base::sequence_manager::TaskQueue::IsOnMainThread": {
            "offset": "0xF1650"
        },
        "base::sequence_manager::TaskQueue::IsQueueEnabled": {
            "offset": "0xF1680"
        },
        "base::sequence_manager::TaskQueue::OnQueueEnabledVoteChanged": {
            "offset": "0xF1730"
        },
        "base::sequence_manager::TaskQueue::PriorityToString": {
            "offset": "0xF71E0"
        },
        "base::sequence_manager::TaskQueue::QueueEnabledVoter::IsVotingToEnable": {
            "offset": "0xD630"
        },
        "base::sequence_manager::TaskQueue::QueueEnabledVoter::QueueEnabledVoter": {
            "offset": "0xF05D0"
        },
        "base::sequence_manager::TaskQueue::QueueEnabledVoter::SetVoteToEnable": {
            "offset": "0xF2160"
        },
        "base::sequence_manager::TaskQueue::QueueEnabledVoter::~QueueEnabledVoter": {
            "offset": "0xF0980"
        },
        "base::sequence_manager::TaskQueue::RemoveFence": {
            "offset": "0xF1B90"
        },
        "base::sequence_manager::TaskQueue::RemoveQueueEnabledVoter": {
            "offset": "0xF1C30"
        },
        "base::sequence_manager::TaskQueue::RemoveTaskObserver": {
            "offset": "0xF1DD0"
        },
        "base::sequence_manager::TaskQueue::SetBlameContext": {
            "offset": "0xF1E90"
        },
        "base::sequence_manager::TaskQueue::SetObserver": {
            "offset": "0xF1F40"
        },
        "base::sequence_manager::TaskQueue::SetQueuePriority": {
            "offset": "0xF1FF0"
        },
        "base::sequence_manager::TaskQueue::SetShouldReportPostedTasksWhenDisabled": {
            "offset": "0xF20A0"
        },
        "base::sequence_manager::TaskQueue::SetTimeDomain": {
            "offset": "0xF20B0"
        },
        "base::sequence_manager::TaskQueue::ShutdownTaskQueue": {
            "offset": "0xF2190"
        },
        "base::sequence_manager::TaskQueue::ShutdownTaskQueueGracefully": {
            "offset": "0xF2370"
        },
        "base::sequence_manager::TaskQueue::TakeTaskQueueImpl": {
            "offset": "0xF2450"
        },
        "base::sequence_manager::TaskQueue::TaskQueue": {
            "offset": "0xF0660"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::RecordTaskEnd": {
            "offset": "0xF18C0"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::RecordTaskStart": {
            "offset": "0xF1990"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::TaskTiming": {
            "offset": "0xF0930"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::end_thread_time": {
            "offset": "0x758A0"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::end_time": {
            "offset": "0x75940"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::has_thread_time": {
            "offset": "0x75AB0"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::has_wall_time": {
            "offset": "0x75AD0"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::start_thread_time": {
            "offset": "0x75DE0"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::start_time": {
            "offset": "0x75E80"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::state": {
            "offset": "0x1480"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::thread_duration": {
            "offset": "0x75F70"
        },
        "base::sequence_manager::TaskQueue::TaskTiming::wall_duration": {
            "offset": "0x76010"
        },
        "base::sequence_manager::TaskQueue::task_runner": {
            "offset": "0x75F40"
        },
        "base::sequence_manager::TaskQueue::~TaskQueue": {
            "offset": "0xF09E0"
        },
        "base::sequence_manager::TimeDomain::AsValueInto": {
            "offset": "0x101A30"
        },
        "base::sequence_manager::TimeDomain::AsValueIntoInternal": {
            "offset": "0x12B0"
        },
        "base::sequence_manager::TimeDomain::Empty": {
            "offset": "0x101C40"
        },
        "base::sequence_manager::TimeDomain::HasPendingHighResolutionTasks": {
            "offset": "0x101C50"
        },
        "base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues": {
            "offset": "0x102070"
        },
        "base::sequence_manager::TimeDomain::NextScheduledRunTime": {
            "offset": "0x102150"
        },
        "base::sequence_manager::TimeDomain::NumberOfScheduledWakeUps": {
            "offset": "0xE63C0"
        },
        "base::sequence_manager::TimeDomain::OnRegisterWithSequenceManager": {
            "offset": "0x102210"
        },
        "base::sequence_manager::TimeDomain::RequestDoWork": {
            "offset": "0x102330"
        },
        "base::sequence_manager::TimeDomain::SetNextDelayedDoWork": {
            "offset": "0x102410"
        },
        "base::sequence_manager::TimeDomain::SetNextWakeUpForQueue": {
            "offset": "0x102420"
        },
        "base::sequence_manager::TimeDomain::TimeDomain": {
            "offset": "0x101670"
        },
        "base::sequence_manager::TimeDomain::UnregisterQueue": {
            "offset": "0x102AD0"
        },
        "base::sequence_manager::TimeDomain::sequence_manager": {
            "offset": "0x102D30"
        },
        "base::sequence_manager::TimeDomain::~TimeDomain": {
            "offset": "0x1017F0"
        },
        "base::sequence_manager::`anonymous namespace'::CreateNullTaskRunner": {
            "offset": "0xF0DB0"
        },
        "base::sequence_manager::`anonymous namespace'::GetTLSSequenceManagerImpl": {
            "offset": "0xEB260"
        },
        "base::sequence_manager::`anonymous namespace'::NullTaskRunner::PostDelayedTask": {
            "offset": "0xF18A0"
        },
        "base::sequence_manager::`anonymous namespace'::NullTaskRunner::PostNonNestableDelayedTask": {
            "offset": "0xF18A0"
        },
        "base::sequence_manager::`anonymous namespace'::NullTaskRunner::RunsTasksInCurrentSequence": {
            "offset": "0xF1E80"
        },
        "base::sequence_manager::internal::AssociatedThreadId::AssociatedThreadId": {
            "offset": "0xE4B30"
        },
        "base::sequence_manager::internal::AssociatedThreadId::BindToCurrentThread": {
            "offset": "0xE4BB0"
        },
        "base::sequence_manager::internal::AssociatedThreadId::CreateBound": {
            "offset": "0x75220"
        },
        "base::sequence_manager::internal::AssociatedThreadId::CreateUnbound": {
            "offset": "0x75390"
        },
        "base::sequence_manager::internal::AssociatedThreadId::GetBoundThreadId": {
            "offset": "0x75510"
        },
        "base::sequence_manager::internal::AssociatedThreadId::IsBound": {
            "offset": "0x75570"
        },
        "base::sequence_manager::internal::AssociatedThreadId::IsBoundToCurrentThread": {
            "offset": "0x75580"
        },
        "base::sequence_manager::internal::AssociatedThreadId::~AssociatedThreadId": {
            "offset": "0xE4B80"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AddFlag": {
            "offset": "0xE50C0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AddToAllocList": {
            "offset": "0xE52B0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AddToPartiallyFreeList": {
            "offset": "0xE53F0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AtomicFlag::AtomicFlag": {
            "offset": "0x2E280"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AtomicFlag::ReleaseAtomicFlag": {
            "offset": "0xE58E0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AtomicFlag::SetActive": {
            "offset": "0xE5E90"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AtomicFlag::~AtomicFlag": {
            "offset": "0xE4E50"
        },
        "base::sequence_manager::internal::AtomicFlagSet::AtomicFlagSet": {
            "offset": "0xE4D40"
        },
        "base::sequence_manager::internal::AtomicFlagSet::GetAllocListForTesting": {
            "offset": "0xAAA0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::GetPartiallyFreeListForTesting": {
            "offset": "0xAAB0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::Group::FindFirstUnallocatedFlag": {
            "offset": "0xE56F0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::Group::Group": {
            "offset": "0xE4DB0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::Group::IndexOfFirstFlagSet": {
            "offset": "0xE5840"
        },
        "base::sequence_manager::internal::AtomicFlagSet::Group::IsEmpty": {
            "offset": "0xE58C0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::Group::IsFull": {
            "offset": "0xE58D0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::Group::~Group": {
            "offset": "0xE4F80"
        },
        "base::sequence_manager::internal::AtomicFlagSet::RemoveFromAllocList": {
            "offset": "0xE5AF0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::RemoveFromPartiallyFreeList": {
            "offset": "0xE5BF0"
        },
        "base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks": {
            "offset": "0xE5D90"
        },
        "base::sequence_manager::internal::AtomicFlagSet::~AtomicFlagSet": {
            "offset": "0xE4E70"
        },
        "base::sequence_manager::internal::EnqueueOrderGenerator::EnqueueOrderGenerator": {
            "offset": "0xE5F40"
        },
        "base::sequence_manager::internal::EnqueueOrderGenerator::GenerateNext": {
            "offset": "0x754F0"
        },
        "base::sequence_manager::internal::EnqueueOrderGenerator::~EnqueueOrderGenerator": {
            "offset": "0x12B0"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::MaybeShrinkQueue": {
            "offset": "0xF59A0"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring::CircularIncrement": {
            "offset": "0xF43E0"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring::Ring": {
            "offset": "0xF2CC0"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring::back": {
            "offset": "0x104F80"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring::front": {
            "offset": "0xFA310"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring::pop_front": {
            "offset": "0xFA870"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring::push_back": {
            "offset": "0xFAC10"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::SetCapacity": {
            "offset": "0xF7F20"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::back": {
            "offset": "0xFA140"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::clear": {
            "offset": "0x105010"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::front": {
            "offset": "0xFA280"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::pop_front": {
            "offset": "0xFA560"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::push_back": {
            "offset": "0xFAA40"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::push_front": {
            "offset": "0x105110"
        },
        "base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::~LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>": {
            "offset": "0xF31F0"
        },
        "base::sequence_manager::internal::PostedTask::PostedTask": {
            "offset": "0xFC2A0"
        },
        "base::sequence_manager::internal::PostedTask::~PostedTask": {
            "offset": "0xFC480"
        },
        "base::sequence_manager::internal::RealTimeDomain::CreateLazyNow": {
            "offset": "0xE6240"
        },
        "base::sequence_manager::internal::RealTimeDomain::DelayTillNextTask": {
            "offset": "0xE6260"
        },
        "base::sequence_manager::internal::RealTimeDomain::GetName": {
            "offset": "0xE6390"
        },
        "base::sequence_manager::internal::RealTimeDomain::MaybeFastForwardToNextTask": {
            "offset": "0x12C0"
        },
        "base::sequence_manager::internal::RealTimeDomain::Now": {
            "offset": "0xE63A0"
        },
        "base::sequence_manager::internal::RealTimeDomain::OnRegisterWithSequenceManager": {
            "offset": "0xE63D0"
        },
        "base::sequence_manager::internal::RealTimeDomain::RealTimeDomain": {
            "offset": "0xE6160"
        },
        "base::sequence_manager::internal::RealTimeDomain::~RealTimeDomain": {
            "offset": "0xE6190"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::AddDestructionObserver": {
            "offset": "0xE8FE0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::AddTaskObserver": {
            "offset": "0xE9120"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::AddTaskTimeObserver": {
            "offset": "0xE92D0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::BindToCurrentThread": {
            "offset": "0xE9AA0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::BindToMessagePump": {
            "offset": "0xE9AD0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::CleanUpQueues": {
            "offset": "0xE9B40"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::CompleteInitializationOnBoundThread": {
            "offset": "0xE9F10"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::CreateOnCurrentThread": {
            "offset": "0xE9FF0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::CreateTaskQueue": {
            "offset": "0xEA280"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::CreateTaskQueueImpl": {
            "offset": "0xEA310"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::CreateThreadControllerImplForCurrentThread": {
            "offset": "0xEA5A0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::CreateUnbound": {
            "offset": "0xEA5E0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::DelayTillNextTask": {
            "offset": "0xEA790"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::DeletePendingTasks": {
            "offset": "0xEA920"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::DescribeAllPendingTasks": {
            "offset": "0xEAB40"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::DidRunTask": {
            "offset": "0xEABB0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::EnableCrashKeys": {
            "offset": "0xEAD70"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetAddQueueTimeToTasks": {
            "offset": "0xEAE20"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetAndClearSystemIsQuiescentBit": {
            "offset": "0xEAE30"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetCurrent": {
            "offset": "0xEAE70"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetDelayTillNextDelayedTask": {
            "offset": "0xEAE90"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetFlagToRequestReloadForEmptyQueue": {
            "offset": "0xEB0A0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetMessagePump": {
            "offset": "0xEB160"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetMetricRecordingSettings": {
            "offset": "0xEB170"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetNextSequenceNumber": {
            "offset": "0xEB180"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetPendingTaskCountForTesting": {
            "offset": "0xEB1A0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetRealTimeDomain": {
            "offset": "0xEB240"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetTaskRunner": {
            "offset": "0xEB2E0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetTaskRunnerForCurrentTask": {
            "offset": "0xEB300"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetTickClock": {
            "offset": "0xEB3F0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetType": {
            "offset": "0x61510"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::GetWeakPtr": {
            "offset": "0xEB400"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::HasPendingHighResolutionTasks": {
            "offset": "0xEB460"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::HasTasks": {
            "offset": "0xEB500"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::InitializeTaskTiming": {
            "offset": "0xEB730"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::IsBoundToCurrentThread": {
            "offset": "0xEB7B0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::IsIdleForTesting": {
            "offset": "0xEB7E0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::IsTaskExecutionAllowed": {
            "offset": "0xEB830"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::IsType": {
            "offset": "0xEB840"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::LogTaskDebugInfo": {
            "offset": "0xEB850"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly::MainThreadOnly": {
            "offset": "0xE7270"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly::~MainThreadOnly": {
            "offset": "0xE7D70"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::MaybeReclaimMemory": {
            "offset": "0xEBF40"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues": {
            "offset": "0xEC090"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::NativeWorkHandleImpl::NativeWorkHandleImpl": {
            "offset": "0xE7780"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::NativeWorkHandleImpl::~NativeWorkHandleImpl": {
            "offset": "0xE7F40"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask": {
            "offset": "0xEC2D0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::NotifyWillProcessTask": {
            "offset": "0xECC80"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::NowTicks": {
            "offset": "0xED6A0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::OnBeginNestedRunLoop": {
            "offset": "0xED6D0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::OnExitNestedRunLoop": {
            "offset": "0xED720"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::OnNativeWorkPending": {
            "offset": "0xEDC10"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::OnSystemIdle": {
            "offset": "0xEDC80"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::OnTaskQueueEnabled": {
            "offset": "0xEDD90"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::ReclaimMemory": {
            "offset": "0xEDEB0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::RecordCrashKeys": {
            "offset": "0xEE220"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::RegisterTimeDomain": {
            "offset": "0xEE4C0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::ReloadEmptyWorkQueues": {
            "offset": "0xEE5D0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::RemoveAllCanceledTasksFromFrontOfWorkQueues": {
            "offset": "0xEE5E0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::RemoveDestructionObserver": {
            "offset": "0xEE6A0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::RemoveTaskObserver": {
            "offset": "0xEE7F0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::RemoveTaskTimeObserver": {
            "offset": "0xEE9A0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::ScheduleWork": {
            "offset": "0xEEC70"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SelectNextTask": {
            "offset": "0xEEC80"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SelectNextTaskImpl": {
            "offset": "0xEED80"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SequenceManagerImpl": {
            "offset": "0xE7900"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetAddQueueTimeToTasks": {
            "offset": "0xEF1F0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetDefaultTaskRunner": {
            "offset": "0xEF3F0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetNextDelayedDoWork": {
            "offset": "0xEF480"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetObserver": {
            "offset": "0xEF490"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetTaskExecutionAllowed": {
            "offset": "0xEF4B0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetTaskRunner": {
            "offset": "0xEF3F0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetTimerSlack": {
            "offset": "0xEF4C0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::SetWorkBatchSize": {
            "offset": "0xEF570"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::ShouldRecordCPUTimeForTask": {
            "offset": "0xEF680"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::ShouldRecordTaskTiming": {
            "offset": "0xEF780"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::ShouldRunTaskOfPriority": {
            "offset": "0xEF7E0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::ShutdownTaskQueueGracefully": {
            "offset": "0xEF810"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::UnregisterTaskQueueImpl": {
            "offset": "0xEF8B0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::UnregisterTimeDomain": {
            "offset": "0xEFAA0"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::Validate": {
            "offset": "0xEFB50"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::WillQueueTask": {
            "offset": "0xEFB60"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::associated_thread": {
            "offset": "0xD460"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::currently_executing_task_queue": {
            "offset": "0xF0250"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::main_thread_only": {
            "offset": "0x75B40"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::settings": {
            "offset": "0x75890"
        },
        "base::sequence_manager::internal::SequenceManagerImpl::~SequenceManagerImpl": {
            "offset": "0xE82C0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::ActivateDelayedFenceIfNeeded": {
            "offset": "0xF3750"
        },
        "base::sequence_manager::internal::TaskQueueImpl::AddTaskObserver": {
            "offset": "0xF3820"
        },
        "base::sequence_manager::internal::TaskQueueImpl::AnyThread::~AnyThread": {
            "offset": "0xF3330"
        },
        "base::sequence_manager::internal::TaskQueueImpl::AsValueInto": {
            "offset": "0xF3B70"
        },
        "base::sequence_manager::internal::TaskQueueImpl::BlockedByFence": {
            "offset": "0xF4250"
        },
        "base::sequence_manager::internal::TaskQueueImpl::CouldTaskRun": {
            "offset": "0xF4470"
        },
        "base::sequence_manager::internal::TaskQueueImpl::CreateTaskRunner": {
            "offset": "0xF44E0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask::~DeferredNonNestableTask": {
            "offset": "0xE7D60"
        },
        "base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::AsValueInto": {
            "offset": "0xF3960"
        },
        "base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::SweepCancelledTasks": {
            "offset": "0xF9110"
        },
        "base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::pop": {
            "offset": "0xFA3B0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::push": {
            "offset": "0xFA920"
        },
        "base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::~DelayedIncomingQueue": {
            "offset": "0xF3350"
        },
        "base::sequence_manager::internal::TaskQueueImpl::DeletePendingTasks": {
            "offset": "0xF4650"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetEnqueueOrderAtWhichWeBecameUnblocked": {
            "offset": "0xF4A00"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetName": {
            "offset": "0xAB80"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetNextScheduledWakeUp": {
            "offset": "0xF4A30"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetNextScheduledWakeUpImpl": {
            "offset": "0xF4AA0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetNumberOfPendingTasks": {
            "offset": "0xF4B20"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetQueuePriority": {
            "offset": "0xF4BC0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetQuiescenceMonitored": {
            "offset": "0x75530"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetSequenceManagerWeakPtr": {
            "offset": "0xF4C70"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetShouldNotifyObservers": {
            "offset": "0x75540"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GetTimeDomain": {
            "offset": "0xF4C90"
        },
        "base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask": {
            "offset": "0xF7060"
        },
        "base::sequence_manager::internal::TaskQueueImpl::HasActiveFence": {
            "offset": "0xF4D50"
        },
        "base::sequence_manager::internal::TaskQueueImpl::HasPendingImmediateWork": {
            "offset": "0xF4E40"
        },
        "base::sequence_manager::internal::TaskQueueImpl::HasPendingImmediateWorkLocked": {
            "offset": "0xF4EC0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::HasTaskToRunImmediately": {
            "offset": "0xF4F10"
        },
        "base::sequence_manager::internal::TaskQueueImpl::HasTasks": {
            "offset": "0xF4FE0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::InsertFence": {
            "offset": "0xF5070"
        },
        "base::sequence_manager::internal::TaskQueueImpl::InsertFenceAt": {
            "offset": "0xF5250"
        },
        "base::sequence_manager::internal::TaskQueueImpl::IsEmpty": {
            "offset": "0xF5340"
        },
        "base::sequence_manager::internal::TaskQueueImpl::IsQueueEnabled": {
            "offset": "0xF53D0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::IsUnregistered": {
            "offset": "0xF53F0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly::MainThreadOnly": {
            "offset": "0xF2B60"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly::~MainThreadOnly": {
            "offset": "0xF3360"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MaybeAdjustTaskDelay": {
            "offset": "0xF5440"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MaybeLogPostTask": {
            "offset": "0xF54F0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MaybeReportIpcTaskQueuedFromAnyThreadLocked": {
            "offset": "0xF5680"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MaybeReportIpcTaskQueuedFromAnyThreadUnlocked": {
            "offset": "0xF5790"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MaybeReportIpcTaskQueuedFromMainThread": {
            "offset": "0xF58D0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue": {
            "offset": "0xF5AB0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::NotifyDidProcessTask": {
            "offset": "0xF6060"
        },
        "base::sequence_manager::internal::TaskQueueImpl::NotifyWillProcessTask": {
            "offset": "0xF6360"
        },
        "base::sequence_manager::internal::TaskQueueImpl::OnQueueUnblocked": {
            "offset": "0xF6670"
        },
        "base::sequence_manager::internal::TaskQueueImpl::OnTaskCompleted": {
            "offset": "0xF67A0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::OnTaskStarted": {
            "offset": "0xF6810"
        },
        "base::sequence_manager::internal::TaskQueueImpl::PostDelayedTaskImpl": {
            "offset": "0xF6950"
        },
        "base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl": {
            "offset": "0xF6D50"
        },
        "base::sequence_manager::internal::TaskQueueImpl::PostTask": {
            "offset": "0xF7130"
        },
        "base::sequence_manager::internal::TaskQueueImpl::PushImmediateIncomingTaskForTest": {
            "offset": "0xF72F0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::PushOntoDelayedIncomingQueue": {
            "offset": "0xF7370"
        },
        "base::sequence_manager::internal::TaskQueueImpl::PushOntoDelayedIncomingQueueFromMainThread": {
            "offset": "0xF7540"
        },
        "base::sequence_manager::internal::TaskQueueImpl::QueueAsValueInto": {
            "offset": "0xF7660"
        },
        "base::sequence_manager::internal::TaskQueueImpl::ReclaimMemory": {
            "offset": "0xF7700"
        },
        "base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue": {
            "offset": "0xF7840"
        },
        "base::sequence_manager::internal::TaskQueueImpl::RemoveFence": {
            "offset": "0xF7910"
        },
        "base::sequence_manager::internal::TaskQueueImpl::RemoveTaskObserver": {
            "offset": "0xF7A20"
        },
        "base::sequence_manager::internal::TaskQueueImpl::ReportIpcTaskQueued": {
            "offset": "0xF7B60"
        },
        "base::sequence_manager::internal::TaskQueueImpl::RequeueDeferredNonNestableTask": {
            "offset": "0xF7BE0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::RequiresTaskTiming": {
            "offset": "0xF7D20"
        },
        "base::sequence_manager::internal::TaskQueueImpl::ScheduleDelayedWorkTask": {
            "offset": "0xF7DD0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetBlameContext": {
            "offset": "0xF7F00"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetDelayedWakeUpForTesting": {
            "offset": "0xF83A0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetObserver": {
            "offset": "0xF8400"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetOnTaskCompletedHandler": {
            "offset": "0xF84D0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetOnTaskReadyHandler": {
            "offset": "0xF8590"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetOnTaskStartedHandler": {
            "offset": "0xF8830"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetQueueEnabled": {
            "offset": "0xF88F0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetQueuePriority": {
            "offset": "0xF8BA0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetShouldReportPostedTasksWhenDisabled": {
            "offset": "0xF8E00"
        },
        "base::sequence_manager::internal::TaskQueueImpl::SetTimeDomain": {
            "offset": "0xF8EA0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::ShouldReportIpcTaskQueuedFromAnyThreadLocked": {
            "offset": "0xF9090"
        },
        "base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks": {
            "offset": "0xF9340"
        },
        "base::sequence_manager::internal::TaskQueueImpl::TaskAsValueInto": {
            "offset": "0xF9760"
        },
        "base::sequence_manager::internal::TaskQueueImpl::TaskQueueImpl": {
            "offset": "0xF2EB0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask": {
            "offset": "0xF6870"
        },
        "base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostNonNestableDelayedTask": {
            "offset": "0xF6F80"
        },
        "base::sequence_manager::internal::TaskQueueImpl::TaskRunner::RunsTasksInCurrentSequence": {
            "offset": "0xF7DA0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::TraceQueueSize": {
            "offset": "0xF9920"
        },
        "base::sequence_manager::internal::TaskQueueImpl::UnregisterTaskQueue": {
            "offset": "0xF99F0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::UpdateCrossThreadQueueStateLocked": {
            "offset": "0xF9DE0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::UpdateDelayedWakeUp": {
            "offset": "0xF9E70"
        },
        "base::sequence_manager::internal::TaskQueueImpl::UpdateDelayedWakeUpImpl": {
            "offset": "0xF9F10"
        },
        "base::sequence_manager::internal::TaskQueueImpl::WasBlockedOrLowPriority": {
            "offset": "0xFA060"
        },
        "base::sequence_manager::internal::TaskQueueImpl::delayed_work_queue": {
            "offset": "0x75870"
        },
        "base::sequence_manager::internal::TaskQueueImpl::has_pending_high_resolution_tasks": {
            "offset": "0x75A90"
        },
        "base::sequence_manager::internal::TaskQueueImpl::heap_handle": {
            "offset": "0x75AE0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::immediate_work_queue": {
            "offset": "0x75B20"
        },
        "base::sequence_manager::internal::TaskQueueImpl::main_thread_only": {
            "offset": "0x75BE0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::sequence_manager": {
            "offset": "0xAAA0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::set_heap_handle": {
            "offset": "0x75DC0"
        },
        "base::sequence_manager::internal::TaskQueueImpl::~TaskQueueImpl": {
            "offset": "0xF3420"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::AddNestingObserver": {
            "offset": "0xFD140"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::BindToCurrentThread": {
            "offset": "0xFD200"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::Create": {
            "offset": "0xFD330"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::DoWork": {
            "offset": "0xFD4A0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::GetAssociatedThread": {
            "offset": "0x36300"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::GetBoundMessagePump": {
            "offset": "0x12A0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::GetClock": {
            "offset": "0xD7D0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::GetDefaultTaskRunner": {
            "offset": "0x75F20"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::IsTaskExecutionAllowed": {
            "offset": "0xAAC0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::OnBeginNestedRunLoop": {
            "offset": "0xFDC90"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::OnExitNestedRunLoop": {
            "offset": "0xFDD40"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::RemoveNestingObserver": {
            "offset": "0xFDD70"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::RestoreDefaultTaskRunner": {
            "offset": "0xFE070"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::RunsTasksInCurrentSequence": {
            "offset": "0xFE1A0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::ScheduleWork": {
            "offset": "0xFE1C0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::SetDefaultTaskRunner": {
            "offset": "0xFE340"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::SetNextDelayedDoWork": {
            "offset": "0xFE3D0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::SetSequencedTaskSource": {
            "offset": "0xFE6A0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::SetTaskExecutionAllowed": {
            "offset": "0xFE7E0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::SetTimerSlack": {
            "offset": "0xFE850"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::SetWorkBatchSize": {
            "offset": "0xFE870"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::ShouldQuitRunLoopWhenIdle": {
            "offset": "0x12C0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::ThreadControllerImpl": {
            "offset": "0xFC8E0"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::WillQueueTask": {
            "offset": "0xFE890"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::main_sequence_only": {
            "offset": "0xF0390"
        },
        "base::sequence_manager::internal::ThreadControllerImpl::~ThreadControllerImpl": {
            "offset": "0xFCF80"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::AddNestingObserver": {
            "offset": "0xFEDF0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::BeforeDoInternalWork": {
            "offset": "0xFEF00"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::BindToCurrentThread": {
            "offset": "0xFEF10"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::CreateUnbound": {
            "offset": "0xFF070"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoDelayedWork": {
            "offset": "0xFF0D0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork": {
            "offset": "0xFF240"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork": {
            "offset": "0xFF410"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork": {
            "offset": "0xFF5A0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl": {
            "offset": "0xFF620"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::EnsureWorkScheduled": {
            "offset": "0xFFFA0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::GetAssociatedThread": {
            "offset": "0xD8E0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::GetBoundMessagePump": {
            "offset": "0xFFFE0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::GetClock": {
            "offset": "0xFFFF0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::GetDefaultTaskRunner": {
            "offset": "0x100000"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::InitializeThreadTaskRunnerHandle": {
            "offset": "0x100090"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::IsTaskExecutionAllowed": {
            "offset": "0x100190"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::MainThreadOnly::~MainThreadOnly": {
            "offset": "0xFEBA0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::OnBeginNestedRunLoop": {
            "offset": "0x1001B0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::OnExitNestedRunLoop": {
            "offset": "0x1001F0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Quit": {
            "offset": "0x100230"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::RemoveNestingObserver": {
            "offset": "0x1002E0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::RestoreDefaultTaskRunner": {
            "offset": "0x1004F0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run": {
            "offset": "0x100530"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::RunsTasksInCurrentSequence": {
            "offset": "0x1007B0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::ScheduleWork": {
            "offset": "0x1007E0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::SetDefaultTaskRunner": {
            "offset": "0x100820"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::SetNextDelayedDoWork": {
            "offset": "0x100980"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::SetSequencedTaskSource": {
            "offset": "0x100AA0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::SetTaskExecutionAllowed": {
            "offset": "0x100B90"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::SetTimerSlack": {
            "offset": "0x100BE0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::SetWorkBatchSize": {
            "offset": "0x100C80"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::ShouldQuitRunLoopWhenIdle": {
            "offset": "0x100D10"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::ThreadControllerWithMessagePumpImpl": {
            "offset": "0xFEAC0"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::WillQueueTask": {
            "offset": "0x100D40"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only": {
            "offset": "0xF0430"
        },
        "base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::~ThreadControllerWithMessagePumpImpl": {
            "offset": "0xFEBD0"
        },
        "base::sequence_manager::internal::WorkDeduplicator::BindToCurrentThread": {
            "offset": "0x103010"
        },
        "base::sequence_manager::internal::WorkDeduplicator::DidCheckForMoreWork": {
            "offset": "0x103140"
        },
        "base::sequence_manager::internal::WorkDeduplicator::OnDelayedWorkEnded": {
            "offset": "0x103280"
        },
        "base::sequence_manager::internal::WorkDeduplicator::OnDelayedWorkRequested": {
            "offset": "0x103340"
        },
        "base::sequence_manager::internal::WorkDeduplicator::OnDelayedWorkStarted": {
            "offset": "0x1033F0"
        },
        "base::sequence_manager::internal::WorkDeduplicator::OnWorkRequested": {
            "offset": "0x103490"
        },
        "base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted": {
            "offset": "0x1034B0"
        },
        "base::sequence_manager::internal::WorkDeduplicator::WillCheckForMoreWork": {
            "offset": "0x1035B0"
        },
        "base::sequence_manager::internal::WorkDeduplicator::WorkDeduplicator": {
            "offset": "0x102F60"
        },
        "base::sequence_manager::internal::WorkDeduplicator::~WorkDeduplicator": {
            "offset": "0x102FD0"
        },
        "base::sequence_manager::internal::WorkQueue::AsValueInto": {
            "offset": "0xF7660"
        },
        "base::sequence_manager::internal::WorkQueue::AssignSetIndex": {
            "offset": "0x1038A0"
        },
        "base::sequence_manager::internal::WorkQueue::AssignToWorkQueueSets": {
            "offset": "0x1038B0"
        },
        "base::sequence_manager::internal::WorkQueue::BlockedByFence": {
            "offset": "0x1038C0"
        },
        "base::sequence_manager::internal::WorkQueue::Capacity": {
            "offset": "0x75200"
        },
        "base::sequence_manager::internal::WorkQueue::CollectTasksOlderThan": {
            "offset": "0x103910"
        },
        "base::sequence_manager::internal::WorkQueue::CreateTaskPusher": {
            "offset": "0x103A60"
        },
        "base::sequence_manager::internal::WorkQueue::DeletePendingTasks": {
            "offset": "0x103A80"
        },
        "base::sequence_manager::internal::WorkQueue::Empty": {
            "offset": "0xD560"
        },
        "base::sequence_manager::internal::WorkQueue::GetBackTask": {
            "offset": "0x103B20"
        },
        "base::sequence_manager::internal::WorkQueue::GetFrontTask": {
            "offset": "0x103B30"
        },
        "base::sequence_manager::internal::WorkQueue::GetFrontTaskEnqueueOrder": {
            "offset": "0x103B40"
        },
        "base::sequence_manager::internal::WorkQueue::InsertFence": {
            "offset": "0x103DB0"
        },
        "base::sequence_manager::internal::WorkQueue::InsertFenceImpl": {
            "offset": "0x103E60"
        },
        "base::sequence_manager::internal::WorkQueue::InsertFenceSilently": {
            "offset": "0x1040D0"
        },
        "base::sequence_manager::internal::WorkQueue::MaybeShrinkQueue": {
            "offset": "0x104170"
        },
        "base::sequence_manager::internal::WorkQueue::PopTaskForTesting": {
            "offset": "0x104180"
        },
        "base::sequence_manager::internal::WorkQueue::Push": {
            "offset": "0x1043C0"
        },
        "base::sequence_manager::internal::WorkQueue::PushNonNestableTaskToFront": {
            "offset": "0x104590"
        },
        "base::sequence_manager::internal::WorkQueue::RemoveAllCanceledTasksFromFront": {
            "offset": "0x1048A0"
        },
        "base::sequence_manager::internal::WorkQueue::RemoveFence": {
            "offset": "0x104A20"
        },
        "base::sequence_manager::internal::WorkQueue::ShouldRunBefore": {
            "offset": "0x104AB0"
        },
        "base::sequence_manager::internal::WorkQueue::Size": {
            "offset": "0xAAB0"
        },
        "base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks": {
            "offset": "0x104C80"
        },
        "base::sequence_manager::internal::WorkQueue::TakeTaskFromWorkQueue": {
            "offset": "0x104D50"
        },
        "base::sequence_manager::internal::WorkQueue::TaskPusher::Push": {
            "offset": "0x104190"
        },
        "base::sequence_manager::internal::WorkQueue::TaskPusher::TaskPusher": {
            "offset": "0x1036D0"
        },
        "base::sequence_manager::internal::WorkQueue::TaskPusher::~TaskPusher": {
            "offset": "0x103730"
        },
        "base::sequence_manager::internal::WorkQueue::WorkQueue": {
            "offset": "0x1036F0"
        },
        "base::sequence_manager::internal::WorkQueue::heap_handle": {
            "offset": "0x75B10"
        },
        "base::sequence_manager::internal::WorkQueue::name": {
            "offset": "0xD7D0"
        },
        "base::sequence_manager::internal::WorkQueue::queue_type": {
            "offset": "0x75C80"
        },
        "base::sequence_manager::internal::WorkQueue::set_heap_handle": {
            "offset": "0x737A0"
        },
        "base::sequence_manager::internal::WorkQueue::task_queue": {
            "offset": "0xD9B0"
        },
        "base::sequence_manager::internal::WorkQueue::work_queue_set_index": {
            "offset": "0xD670"
        },
        "base::sequence_manager::internal::WorkQueue::work_queue_sets": {
            "offset": "0x32570"
        },
        "base::sequence_manager::internal::WorkQueue::~WorkQueue": {
            "offset": "0x1037B0"
        },
        "base::sequence_manager::internal::WorkQueueSets::AddQueue": {
            "offset": "0x105E60"
        },
        "base::sequence_manager::internal::WorkQueueSets::ChangeSetIndex": {
            "offset": "0x106030"
        },
        "base::sequence_manager::internal::WorkQueueSets::CollectSkippedOverLowerPriorityTasks": {
            "offset": "0x1064C0"
        },
        "base::sequence_manager::internal::WorkQueueSets::ContainsWorkQueueForTest": {
            "offset": "0x1065D0"
        },
        "base::sequence_manager::internal::WorkQueueSets::GetName": {
            "offset": "0xAB80"
        },
        "base::sequence_manager::internal::WorkQueueSets::GetOldestQueueAndEnqueueOrderInSet": {
            "offset": "0x106A40"
        },
        "base::sequence_manager::internal::WorkQueueSets::GetOldestQueueInSet": {
            "offset": "0x106BD0"
        },
        "base::sequence_manager::internal::WorkQueueSets::GetRandomQueueAndEnqueueOrderInSet": {
            "offset": "0x106D30"
        },
        "base::sequence_manager::internal::WorkQueueSets::GetRandomQueueInSet": {
            "offset": "0x106EC0"
        },
        "base::sequence_manager::internal::WorkQueueSets::IsSetEmpty": {
            "offset": "0x107080"
        },
        "base::sequence_manager::internal::WorkQueueSets::MurmurHash3": {
            "offset": "0x755D0"
        },
        "base::sequence_manager::internal::WorkQueueSets::Observer::~Observer": {
            "offset": "0xFAE00"
        },
        "base::sequence_manager::internal::WorkQueueSets::OnPopMinQueueInSet": {
            "offset": "0x107530"
        },
        "base::sequence_manager::internal::WorkQueueSets::OnQueueBlocked": {
            "offset": "0x1079D0"
        },
        "base::sequence_manager::internal::WorkQueueSets::OnQueuesFrontTaskChanged": {
            "offset": "0x107B10"
        },
        "base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue": {
            "offset": "0x107E30"
        },
        "base::sequence_manager::internal::WorkQueueSets::Random": {
            "offset": "0x75610"
        },
        "base::sequence_manager::internal::WorkQueueSets::RemoveQueue": {
            "offset": "0x108060"
        },
        "base::sequence_manager::internal::WorkQueueSets::WorkQueueSets": {
            "offset": "0x105CE0"
        },
        "base::sequence_manager::internal::WorkQueueSets::~WorkQueueSets": {
            "offset": "0x105E30"
        },
        "base::sequence_manager::internal::`anonymous namespace'::ReclaimMemoryFromQueue": {
            "offset": "0xEE060"
        },
        "base::sequence_manager::internal::`anonymous namespace'::RunTaskTraceNameForPriority": {
            "offset": "0xEEB50"
        },
        "base::size<unsigned __int64,1>": {
            "offset": "0x8BA40"
        },
        "base::small_map<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,4,base::internal::select_equal_key<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,0>::equal_key,base::internal::small_map_default_init<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::ConvertToRealMap": {
            "offset": "0xDC7A0"
        },
        "base::small_map<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,4,base::internal::select_equal_key<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,0>::equal_key,base::internal::small_map_default_init<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::end": {
            "offset": "0xDE570"
        },
        "base::small_map<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,4,base::internal::select_equal_key<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,0>::equal_key,base::internal::small_map_default_init<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::erase": {
            "offset": "0xDE5D0"
        },
        "base::small_map<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,4,base::internal::select_equal_key<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,0>::equal_key,base::internal::small_map_default_init<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::~small_map<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,4,base::internal::select_equal_key<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >,0>::equal_key,base::internal::small_map_default_init<std::map<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >": {
            "offset": "0xDC340"
        },
        "base::small_map<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,1,base::internal::select_equal_key<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,0>::equal_key,base::internal::small_map_default_init<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > > > >::ConvertToRealMap": {
            "offset": "0x21AEE0"
        },
        "base::small_map<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,1,base::internal::select_equal_key<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,0>::equal_key,base::internal::small_map_default_init<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > > > >::end": {
            "offset": "0xDE570"
        },
        "base::small_map<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,1,base::internal::select_equal_key<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,0>::equal_key,base::internal::small_map_default_init<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > > > >::erase": {
            "offset": "0x21F630"
        },
        "base::small_map<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,1,base::internal::select_equal_key<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,0>::equal_key,base::internal::small_map_default_init<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > > > >::~small_map<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,1,base::internal::select_equal_key<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >,0>::equal_key,base::internal::small_map_default_init<std::map<unsigned int,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > > > >": {
            "offset": "0x218D70"
        },
        "base::snprintf": {
            "offset": "0xD2260"
        },
        "base::span<base::Value,-1>::begin": {
            "offset": "0x17E4A0"
        },
        "base::strings::SafeSNPrintf": {
            "offset": "0xC4AD0"
        },
        "base::strings::`anonymous namespace'::Buffer::IToASCII": {
            "offset": "0xC4140"
        },
        "base::strings::`anonymous namespace'::Buffer::Pad": {
            "offset": "0xC4470"
        },
        "base::strings::internal::SafeSNPrintf": {
            "offset": "0xC4550"
        },
        "base::strlcpy": {
            "offset": "0xD2300"
        },
        "base::subtle::GetOrCreateLazyPointer<base::SingleThreadTaskRunner>": {
            "offset": "0xE16B0"
        },
        "base::subtle::PlatformSharedMemoryRegion::CheckPlatformHandlePermissionsCorrespondToMode": {
            "offset": "0x6FAD0"
        },
        "base::subtle::PlatformSharedMemoryRegion::ConvertToReadOnly": {
            "offset": "0x6FC70"
        },
        "base::subtle::PlatformSharedMemoryRegion::ConvertToUnsafe": {
            "offset": "0x6FEF0"
        },
        "base::subtle::PlatformSharedMemoryRegion::Create": {
            "offset": "0x6FFA0"
        },
        "base::subtle::PlatformSharedMemoryRegion::CreateUnsafe": {
            "offset": "0x6F790"
        },
        "base::subtle::PlatformSharedMemoryRegion::CreateWritable": {
            "offset": "0x6F7B0"
        },
        "base::subtle::PlatformSharedMemoryRegion::Duplicate": {
            "offset": "0x707E0"
        },
        "base::subtle::PlatformSharedMemoryRegion::GetGUID": {
            "offset": "0xDDC0"
        },
        "base::subtle::PlatformSharedMemoryRegion::GetMode": {
            "offset": "0xD9A0"
        },
        "base::subtle::PlatformSharedMemoryRegion::GetPlatformHandle": {
            "offset": "0xAB80"
        },
        "base::subtle::PlatformSharedMemoryRegion::GetSize": {
            "offset": "0xAAB0"
        },
        "base::subtle::PlatformSharedMemoryRegion::IsValid": {
            "offset": "0x53D10"
        },
        "base::subtle::PlatformSharedMemoryRegion::MapAt": {
            "offset": "0x6F7D0"
        },
        "base::subtle::PlatformSharedMemoryRegion::MapAtInternal": {
            "offset": "0x70A60"
        },
        "base::subtle::PlatformSharedMemoryRegion::PassPlatformHandle": {
            "offset": "0x6FA10"
        },
        "base::subtle::PlatformSharedMemoryRegion::PlatformSharedMemoryRegion": {
            "offset": "0x6F460"
        },
        "base::subtle::PlatformSharedMemoryRegion::Take": {
            "offset": "0x70BB0"
        },
        "base::subtle::PlatformSharedMemoryRegion::~PlatformSharedMemoryRegion": {
            "offset": "0x6F480"
        },
        "base::subtle::RefCountedBase::AddRef": {
            "offset": "0x5420"
        },
        "base::subtle::RefCountedBase::AddRefImpl": {
            "offset": "0x71440"
        },
        "base::subtle::RefCountedBase::Adopted": {
            "offset": "0x5810"
        },
        "base::subtle::RefCountedBase::CalledOnValidSequence": {
            "offset": "0x71490"
        },
        "base::subtle::RefCountedBase::HasAtLeastOneRef": {
            "offset": "0xAAD0"
        },
        "base::subtle::RefCountedBase::HasOneRef": {
            "offset": "0xAAE0"
        },
        "base::subtle::RefCountedBase::IsOnValidSequence": {
            "offset": "0xAEF0"
        },
        "base::subtle::RefCountedBase::RefCountedBase": {
            "offset": "0x3420"
        },
        "base::subtle::RefCountedBase::Release": {
            "offset": "0xB780"
        },
        "base::subtle::RefCountedBase::ReleaseImpl": {
            "offset": "0x714E0"
        },
        "base::subtle::RefCountedBase::~RefCountedBase": {
            "offset": "0x3B10"
        },
        "base::subtle::RefCountedThreadSafeBase::AddRef": {
            "offset": "0x5580"
        },
        "base::subtle::RefCountedThreadSafeBase::AddRefImpl": {
            "offset": "0x5580"
        },
        "base::subtle::RefCountedThreadSafeBase::AddRefWithCheck": {
            "offset": "0x5690"
        },
        "base::subtle::RefCountedThreadSafeBase::AddRefWithCheckImpl": {
            "offset": "0x5690"
        },
        "base::subtle::RefCountedThreadSafeBase::Adopted": {
            "offset": "0x58A0"
        },
        "base::subtle::RefCountedThreadSafeBase::HasAtLeastOneRef": {
            "offset": "0x714C0"
        },
        "base::subtle::RefCountedThreadSafeBase::HasOneRef": {
            "offset": "0x714D0"
        },
        "base::subtle::RefCountedThreadSafeBase::RefCountedThreadSafeBase": {
            "offset": "0x2FA0"
        },
        "base::subtle::RefCountedThreadSafeBase::Release": {
            "offset": "0xB880"
        },
        "base::subtle::RefCountedThreadSafeBase::ReleaseImpl": {
            "offset": "0xB880"
        },
        "base::subtle::RefCountedThreadSafeBase::~RefCountedThreadSafeBase": {
            "offset": "0x713B0"
        },
        "base::subtle::ScopedTimeClockOverrides::ScopedTimeClockOverrides": {
            "offset": "0x1413E0"
        },
        "base::subtle::ScopedTimeClockOverrides::overrides_active": {
            "offset": "0xD7E0"
        },
        "base::subtle::ScopedTimeClockOverrides::~ScopedTimeClockOverrides": {
            "offset": "0x1414C0"
        },
        "base::subtle::SpinLock::LockSlow": {
            "offset": "0x1A5D0"
        },
        "base::subtle::SpinLock::SpinLock": {
            "offset": "0x1BD0"
        },
        "base::subtle::SpinLock::lock": {
            "offset": "0x1FE0"
        },
        "base::subtle::SpinLock::unlock": {
            "offset": "0x2660"
        },
        "base::subtle::ThreadTicksNowIgnoringOverride": {
            "offset": "0x142B90"
        },
        "base::subtle::TimeNowFromSystemTimeIgnoringOverride": {
            "offset": "0x142BC0"
        },
        "base::subtle::TimeNowIgnoringOverride": {
            "offset": "0x142C30"
        },
        "base::subtle::TimeTicksNowIgnoringOverride": {
            "offset": "0x142D00"
        },
        "base::subtle::`anonymous namespace'::LogError": {
            "offset": "0x709B0"
        },
        "base::time_internal::SaturatedAdd": {
            "offset": "0xBA30"
        },
        "base::time_internal::SaturatedSub": {
            "offset": "0xBB60"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::Max": {
            "offset": "0xB100"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::Min": {
            "offset": "0xB130"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::TimeBase<base::ThreadTicks>": {
            "offset": "0x2FB0"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::ToInternalValue": {
            "offset": "0xAB80"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::is_max": {
            "offset": "0xD720"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::is_min": {
            "offset": "0xD740"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::is_null": {
            "offset": "0xAEE0"
        },
        "base::time_internal::TimeBase<base::ThreadTicks>::since_origin": {
            "offset": "0x9A20"
        },
        "base::time_internal::TimeBase<base::Time>::Max": {
            "offset": "0xB100"
        },
        "base::time_internal::TimeBase<base::Time>::Min": {
            "offset": "0xB130"
        },
        "base::time_internal::TimeBase<base::Time>::TimeBase<base::Time>": {
            "offset": "0x2FB0"
        },
        "base::time_internal::TimeBase<base::Time>::ToInternalValue": {
            "offset": "0xAB80"
        },
        "base::time_internal::TimeBase<base::Time>::is_max": {
            "offset": "0xD720"
        },
        "base::time_internal::TimeBase<base::Time>::is_min": {
            "offset": "0xD740"
        },
        "base::time_internal::TimeBase<base::Time>::is_null": {
            "offset": "0xAEE0"
        },
        "base::time_internal::TimeBase<base::Time>::since_origin": {
            "offset": "0x9A20"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::Max": {
            "offset": "0xB100"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::Min": {
            "offset": "0xB130"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::TimeBase<base::TimeTicks>": {
            "offset": "0x2FB0"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::ToInternalValue": {
            "offset": "0xAB80"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::is_max": {
            "offset": "0xD720"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::is_min": {
            "offset": "0xD740"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::is_null": {
            "offset": "0xAEE0"
        },
        "base::time_internal::TimeBase<base::TimeTicks>::since_origin": {
            "offset": "0x9A20"
        },
        "base::trace_event::AllocationContext::AllocationContext": {
            "offset": "0x147080"
        },
        "base::trace_event::AllocationContextTracker::AllocationContextTracker": {
            "offset": "0x147390"
        },
        "base::trace_event::AllocationContextTracker::GetContextSnapshot": {
            "offset": "0x1475B0"
        },
        "base::trace_event::AllocationContextTracker::GetInstanceForCurrentThread": {
            "offset": "0x147810"
        },
        "base::trace_event::AllocationContextTracker::PopCurrentTaskContext": {
            "offset": "0x1478A0"
        },
        "base::trace_event::AllocationContextTracker::PopNativeStackFrame": {
            "offset": "0x147AB0"
        },
        "base::trace_event::AllocationContextTracker::PopPseudoStackFrame": {
            "offset": "0x147CA0"
        },
        "base::trace_event::AllocationContextTracker::PushCurrentTaskContext": {
            "offset": "0x147CC0"
        },
        "base::trace_event::AllocationContextTracker::PushNativeStackFrame": {
            "offset": "0x147DD0"
        },
        "base::trace_event::AllocationContextTracker::PushPseudoStackFrame": {
            "offset": "0x147E90"
        },
        "base::trace_event::AllocationContextTracker::SetCaptureMode": {
            "offset": "0x147F50"
        },
        "base::trace_event::AllocationContextTracker::SetCurrentThreadName": {
            "offset": "0x147F60"
        },
        "base::trace_event::AllocationContextTracker::TaskContext": {
            "offset": "0xC100"
        },
        "base::trace_event::AllocationContextTracker::begin_ignore_scope": {
            "offset": "0xD400"
        },
        "base::trace_event::AllocationContextTracker::capture_mode": {
            "offset": "0xD440"
        },
        "base::trace_event::AllocationContextTracker::end_ignore_scope": {
            "offset": "0xD5C0"
        },
        "base::trace_event::AllocationContextTracker::~AllocationContextTracker": {
            "offset": "0x147450"
        },
        "base::trace_event::Backtrace::Backtrace": {
            "offset": "0x1470A0"
        },
        "base::trace_event::BlameContext::AsValueInto": {
            "offset": "0x145E00"
        },
        "base::trace_event::BlameContext::BlameContext": {
            "offset": "0x145B00"
        },
        "base::trace_event::BlameContext::Enter": {
            "offset": "0x145FB0"
        },
        "base::trace_event::BlameContext::Initialize": {
            "offset": "0x146060"
        },
        "base::trace_event::BlameContext::Leave": {
            "offset": "0x1461A0"
        },
        "base::trace_event::BlameContext::OnTraceLogDisabled": {
            "offset": "0x12B0"
        },
        "base::trace_event::BlameContext::OnTraceLogEnabled": {
            "offset": "0x146250"
        },
        "base::trace_event::BlameContext::TakeSnapshot": {
            "offset": "0x1462E0"
        },
        "base::trace_event::BlameContext::WasInitialized": {
            "offset": "0x146420"
        },
        "base::trace_event::BlameContext::category": {
            "offset": "0xAAA0"
        },
        "base::trace_event::BlameContext::id": {
            "offset": "0x32570"
        },
        "base::trace_event::BlameContext::name": {
            "offset": "0xAAB0"
        },
        "base::trace_event::BlameContext::scope": {
            "offset": "0x695C0"
        },
        "base::trace_event::BlameContext::type": {
            "offset": "0xD8F0"
        },
        "base::trace_event::BlameContext::~BlameContext": {
            "offset": "0x145C40"
        },
        "base::trace_event::BuiltinCategories::At": {
            "offset": "0x9A10"
        },
        "base::trace_event::BuiltinCategories::IsAllowedCategory": {
            "offset": "0xAAC0"
        },
        "base::trace_event::BuiltinCategories::IsBuiltinCategory": {
            "offset": "0xACC0"
        },
        "base::trace_event::BuiltinCategories::IsCategoryForTesting": {
            "offset": "0xAD20"
        },
        "base::trace_event::BuiltinCategories::IsCommaSeparatedCategoryGroup": {
            "offset": "0xAD70"
        },
        "base::trace_event::BuiltinCategories::IsStringInArray": {
            "offset": "0xAF30"
        },
        "base::trace_event::BuiltinCategories::Size": {
            "offset": "0xBD10"
        },
        "base::trace_event::CategoryRegistry::GetAllCategories": {
            "offset": "0x146430"
        },
        "base::trace_event::CategoryRegistry::GetBuiltinCategoryByName": {
            "offset": "0x12A0"
        },
        "base::trace_event::CategoryRegistry::GetCategoryByName": {
            "offset": "0x146620"
        },
        "base::trace_event::CategoryRegistry::GetCategoryByStatePtr": {
            "offset": "0x146780"
        },
        "base::trace_event::CategoryRegistry::GetOrCreateCategoryLocked": {
            "offset": "0x146820"
        },
        "base::trace_event::CategoryRegistry::Initialize": {
            "offset": "0x146A00"
        },
        "base::trace_event::CategoryRegistry::IsMetaCategory": {
            "offset": "0x146AC0"
        },
        "base::trace_event::CategoryRegistry::IsValidCategoryPtr": {
            "offset": "0x146B70"
        },
        "base::trace_event::CategoryRegistry::ResetForTesting": {
            "offset": "0x146BA0"
        },
        "base::trace_event::ConvertableToTraceFormat::AppendToProto": {
            "offset": "0x12C0"
        },
        "base::trace_event::ConvertableToTraceFormat::ConvertableToTraceFormat": {
            "offset": "0x3160"
        },
        "base::trace_event::ConvertableToTraceFormat::EstimateTraceMemoryOverhead": {
            "offset": "0x166F20"
        },
        "base::trace_event::ConvertableToTraceFormat::ProtoAppender::ProtoAppender": {
            "offset": "0x33B0"
        },
        "base::trace_event::ConvertableToTraceFormat::ProtoAppender::~ProtoAppender": {
            "offset": "0x12B0"
        },
        "base::trace_event::ConvertableToTraceFormat::~ConvertableToTraceFormat": {
            "offset": "0x12B0"
        },
        "base::trace_event::EstimateMemoryUsage<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x14ECB0"
        },
        "base::trace_event::EstimateMemoryUsage<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x14ECE0"
        },
        "base::trace_event::EventNameFilter::EventNameFilter": {
            "offset": "0x146BD0"
        },
        "base::trace_event::EventNameFilter::FilterTraceEvent": {
            "offset": "0x146E80"
        },
        "base::trace_event::EventNameFilter::~EventNameFilter": {
            "offset": "0x146C50"
        },
        "base::trace_event::HeapProfilerEventFilter::EndEvent": {
            "offset": "0x148070"
        },
        "base::trace_event::HeapProfilerEventFilter::FilterTraceEvent": {
            "offset": "0x1480E0"
        },
        "base::trace_event::HeapProfilerEventFilter::HeapProfilerEventFilter": {
            "offset": "0x147F90"
        },
        "base::trace_event::HeapProfilerEventFilter::~HeapProfilerEventFilter": {
            "offset": "0x147FC0"
        },
        "base::trace_event::IsMemoryAllocatorDumpNameWhitelisted": {
            "offset": "0x14E850"
        },
        "base::trace_event::IsMemoryDumpProviderWhitelisted": {
            "offset": "0x14EC30"
        },
        "base::trace_event::LogMessage::AppendAsTraceFormat": {
            "offset": "0x148360"
        },
        "base::trace_event::LogMessage::AppendToProto": {
            "offset": "0x148620"
        },
        "base::trace_event::LogMessage::EstimateTraceMemoryOverhead": {
            "offset": "0x148690"
        },
        "base::trace_event::LogMessage::LogMessage": {
            "offset": "0x148220"
        },
        "base::trace_event::LogMessage::file": {
            "offset": "0xAAA0"
        },
        "base::trace_event::LogMessage::line_number": {
            "offset": "0xD7A0"
        },
        "base::trace_event::LogMessage::message": {
            "offset": "0x15B0"
        },
        "base::trace_event::LogMessage::~LogMessage": {
            "offset": "0x148260"
        },
        "base::trace_event::MallocDumpProvider::DisableMetrics": {
            "offset": "0x1487C0"
        },
        "base::trace_event::MallocDumpProvider::EnableMetrics": {
            "offset": "0x148820"
        },
        "base::trace_event::MallocDumpProvider::GetInstance": {
            "offset": "0x148880"
        },
        "base::trace_event::MallocDumpProvider::MallocDumpProvider": {
            "offset": "0x1486D0"
        },
        "base::trace_event::MallocDumpProvider::OnMemoryDump": {
            "offset": "0x148990"
        },
        "base::trace_event::MallocDumpProvider::~MallocDumpProvider": {
            "offset": "0x148700"
        },
        "base::trace_event::MemoryAllocatorDump::AddScalar": {
            "offset": "0x149B70"
        },
        "base::trace_event::MemoryAllocatorDump::AddString": {
            "offset": "0x149BC0"
        },
        "base::trace_event::MemoryAllocatorDump::AsValueInto": {
            "offset": "0x149C80"
        },
        "base::trace_event::MemoryAllocatorDump::Entry::Entry": {
            "offset": "0x149720"
        },
        "base::trace_event::MemoryAllocatorDump::Entry::~Entry": {
            "offset": "0x6A190"
        },
        "base::trace_event::MemoryAllocatorDump::GetSizeInternal": {
            "offset": "0x14A000"
        },
        "base::trace_event::MemoryAllocatorDump::MemoryAllocatorDump": {
            "offset": "0x149770"
        },
        "base::trace_event::MemoryAllocatorDump::absolute_name": {
            "offset": "0x3FB0"
        },
        "base::trace_event::MemoryAllocatorDump::clear_flags": {
            "offset": "0x6BEB0"
        },
        "base::trace_event::MemoryAllocatorDump::entries": {
            "offset": "0x1E180"
        },
        "base::trace_event::MemoryAllocatorDump::flags": {
            "offset": "0x1D1B0"
        },
        "base::trace_event::MemoryAllocatorDump::guid": {
            "offset": "0xD460"
        },
        "base::trace_event::MemoryAllocatorDump::level_of_detail": {
            "offset": "0x695A0"
        },
        "base::trace_event::MemoryAllocatorDump::mutable_entries_for_serialization": {
            "offset": "0x6BF10"
        },
        "base::trace_event::MemoryAllocatorDump::set_flags": {
            "offset": "0x6BF30"
        },
        "base::trace_event::MemoryAllocatorDump::~MemoryAllocatorDump": {
            "offset": "0x149960"
        },
        "base::trace_event::MemoryAllocatorDumpGuid::MemoryAllocatorDumpGuid": {
            "offset": "0x2FB0"
        },
        "base::trace_event::MemoryAllocatorDumpGuid::ToString": {
            "offset": "0x14A4C0"
        },
        "base::trace_event::MemoryAllocatorDumpGuid::ToUint64": {
            "offset": "0xAB80"
        },
        "base::trace_event::MemoryAllocatorDumpGuid::empty": {
            "offset": "0xAEE0"
        },
        "base::trace_event::MemoryDumpLevelOfDetailToString": {
            "offset": "0x14D8E0"
        },
        "base::trace_event::MemoryDumpManager::ContinueAsyncProcessDump": {
            "offset": "0x14B160"
        },
        "base::trace_event::MemoryDumpManager::CreateInstanceForTesting": {
            "offset": "0x14B680"
        },
        "base::trace_event::MemoryDumpManager::CreateProcessDump": {
            "offset": "0x14B740"
        },
        "base::trace_event::MemoryDumpManager::FinishAsyncProcessDump": {
            "offset": "0x14BAF0"
        },
        "base::trace_event::MemoryDumpManager::GetInstance": {
            "offset": "0x14BF70"
        },
        "base::trace_event::MemoryDumpManager::GetOrCreateBgTaskRunnerLocked": {
            "offset": "0x14C080"
        },
        "base::trace_event::MemoryDumpManager::GetTracingProcessId": {
            "offset": "0xD470"
        },
        "base::trace_event::MemoryDumpManager::Initialize": {
            "offset": "0x14C2C0"
        },
        "base::trace_event::MemoryDumpManager::InvokeOnMemoryDump": {
            "offset": "0x14C4A0"
        },
        "base::trace_event::MemoryDumpManager::IsDumpProviderRegisteredForTesting": {
            "offset": "0x14C800"
        },
        "base::trace_event::MemoryDumpManager::MemoryDumpManager": {
            "offset": "0x14AA20"
        },
        "base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState::ProcessMemoryDumpAsyncState": {
            "offset": "0x14AAB0"
        },
        "base::trace_event::MemoryDumpManager::RegisterDumpProvider": {
            "offset": "0x14C9E0"
        },
        "base::trace_event::MemoryDumpManager::RegisterDumpProviderInternal": {
            "offset": "0x14CA60"
        },
        "base::trace_event::MemoryDumpManager::RegisterDumpProviderWithSequencedTaskRunner": {
            "offset": "0x14CD20"
        },
        "base::trace_event::MemoryDumpManager::SetupForTracing": {
            "offset": "0x14CE70"
        },
        "base::trace_event::MemoryDumpManager::TeardownForTracing": {
            "offset": "0x14D1D0"
        },
        "base::trace_event::MemoryDumpManager::UnregisterAndDeleteDumpProviderSoon": {
            "offset": "0x14D240"
        },
        "base::trace_event::MemoryDumpManager::UnregisterDumpProvider": {
            "offset": "0x14D290"
        },
        "base::trace_event::MemoryDumpManager::UnregisterDumpProviderInternal": {
            "offset": "0x14D2A0"
        },
        "base::trace_event::MemoryDumpManager::can_request_global_dumps": {
            "offset": "0x73780"
        },
        "base::trace_event::MemoryDumpManager::set_dumper_registrations_ignored_for_testing": {
            "offset": "0x73790"
        },
        "base::trace_event::MemoryDumpManager::set_tracing_process_id": {
            "offset": "0x737A0"
        },
        "base::trace_event::MemoryDumpManager::system_allocator_pool_name": {
            "offset": "0x737B0"
        },
        "base::trace_event::MemoryDumpManager::~MemoryDumpManager": {
            "offset": "0x14ADE0"
        },
        "base::trace_event::MemoryDumpProvider::MemoryDumpProvider": {
            "offset": "0x31F0"
        },
        "base::trace_event::MemoryDumpProvider::~MemoryDumpProvider": {
            "offset": "0x12B0"
        },
        "base::trace_event::MemoryDumpProviderInfo::MemoryDumpProviderInfo": {
            "offset": "0x14D720"
        },
        "base::trace_event::MemoryDumpProviderInfo::~MemoryDumpProviderInfo": {
            "offset": "0x14D7C0"
        },
        "base::trace_event::MemoryDumpScheduler::Config::Config": {
            "offset": "0x14DD30"
        },
        "base::trace_event::MemoryDumpScheduler::Config::~Config": {
            "offset": "0x14DD80"
        },
        "base::trace_event::MemoryDumpScheduler::GetInstance": {
            "offset": "0x14DEF0"
        },
        "base::trace_event::MemoryDumpScheduler::MemoryDumpScheduler": {
            "offset": "0x14DD50"
        },
        "base::trace_event::MemoryDumpScheduler::Start": {
            "offset": "0x14DFD0"
        },
        "base::trace_event::MemoryDumpScheduler::StartInternal": {
            "offset": "0x14E1E0"
        },
        "base::trace_event::MemoryDumpScheduler::Stop": {
            "offset": "0x14E5F0"
        },
        "base::trace_event::MemoryDumpScheduler::StopInternal": {
            "offset": "0x14E700"
        },
        "base::trace_event::MemoryDumpScheduler::Tick": {
            "offset": "0x14E720"
        },
        "base::trace_event::MemoryDumpScheduler::is_enabled_for_testing": {
            "offset": "0x4AB0"
        },
        "base::trace_event::MemoryDumpScheduler::~MemoryDumpScheduler": {
            "offset": "0x14DDF0"
        },
        "base::trace_event::MemoryDumpTypeToString": {
            "offset": "0x14D990"
        },
        "base::trace_event::PrintTo": {
            "offset": "0x14A110"
        },
        "base::trace_event::ProcessMemoryDump::AddAllocatorDumpInternal": {
            "offset": "0x14F740"
        },
        "base::trace_event::ProcessMemoryDump::AddOverridableOwnershipEdge": {
            "offset": "0x14FA10"
        },
        "base::trace_event::ProcessMemoryDump::AddOwnershipEdge": {
            "offset": "0x14FB20"
        },
        "base::trace_event::ProcessMemoryDump::AddSuballocation": {
            "offset": "0x14FDB0"
        },
        "base::trace_event::ProcessMemoryDump::Clear": {
            "offset": "0x150080"
        },
        "base::trace_event::ProcessMemoryDump::CountResidentBytes": {
            "offset": "0x1500E0"
        },
        "base::trace_event::ProcessMemoryDump::CountResidentBytesInSharedMemory": {
            "offset": "0x150510"
        },
        "base::trace_event::ProcessMemoryDump::CreateAllocatorDump": {
            "offset": "0x1505C0"
        },
        "base::trace_event::ProcessMemoryDump::CreateSharedGlobalAllocatorDump": {
            "offset": "0x150640"
        },
        "base::trace_event::ProcessMemoryDump::CreateSharedMemoryOwnershipEdge": {
            "offset": "0x150700"
        },
        "base::trace_event::ProcessMemoryDump::CreateSharedMemoryOwnershipEdgeInternal": {
            "offset": "0x150720"
        },
        "base::trace_event::ProcessMemoryDump::CreateWeakSharedGlobalAllocatorDump": {
            "offset": "0x150870"
        },
        "base::trace_event::ProcessMemoryDump::CreateWeakSharedMemoryOwnershipEdge": {
            "offset": "0x150940"
        },
        "base::trace_event::ProcessMemoryDump::DumpHeapUsage": {
            "offset": "0x150960"
        },
        "base::trace_event::ProcessMemoryDump::GetAllEdgesForSerialization": {
            "offset": "0x150A20"
        },
        "base::trace_event::ProcessMemoryDump::GetAllocatorDump": {
            "offset": "0x150B30"
        },
        "base::trace_event::ProcessMemoryDump::GetBlackHoleMad": {
            "offset": "0x150BA0"
        },
        "base::trace_event::ProcessMemoryDump::GetDumpId": {
            "offset": "0x150D60"
        },
        "base::trace_event::ProcessMemoryDump::GetOrCreateAllocatorDump": {
            "offset": "0x150E90"
        },
        "base::trace_event::ProcessMemoryDump::GetSharedGlobalAllocatorDump": {
            "offset": "0x150EC0"
        },
        "base::trace_event::ProcessMemoryDump::GetSystemPageSize": {
            "offset": "0x151100"
        },
        "base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge::MemoryAllocatorDumpEdge": {
            "offset": "0x69E20"
        },
        "base::trace_event::ProcessMemoryDump::ProcessMemoryDump": {
            "offset": "0x14F110"
        },
        "base::trace_event::ProcessMemoryDump::SerializeAllocatorDumpsInto": {
            "offset": "0x151110"
        },
        "base::trace_event::ProcessMemoryDump::SetAllEdgesForSerialization": {
            "offset": "0x151420"
        },
        "base::trace_event::ProcessMemoryDump::SetAllocatorDumpsForSerialization": {
            "offset": "0x151600"
        },
        "base::trace_event::ProcessMemoryDump::TakeAllDumpsFrom": {
            "offset": "0x151750"
        },
        "base::trace_event::ProcessMemoryDump::allocator_dumps": {
            "offset": "0x15B0"
        },
        "base::trace_event::ProcessMemoryDump::allocator_dumps_edges": {
            "offset": "0xD460"
        },
        "base::trace_event::ProcessMemoryDump::dump_args": {
            "offset": "0xD5E0"
        },
        "base::trace_event::ProcessMemoryDump::mutable_allocator_dumps_for_serialization": {
            "offset": "0x15B0"
        },
        "base::trace_event::ProcessMemoryDump::process_token": {
            "offset": "0x3FB0"
        },
        "base::trace_event::ProcessMemoryDump::set_process_token_for_testing": {
            "offset": "0x6BF40"
        },
        "base::trace_event::ProcessMemoryDump::~ProcessMemoryDump": {
            "offset": "0x14F3C0"
        },
        "base::trace_event::SetAllocatorDumpNameWhitelistForTesting": {
            "offset": "0x14EC90"
        },
        "base::trace_event::SetDumpProviderWhitelistForTesting": {
            "offset": "0x14ECA0"
        },
        "base::trace_event::StackFrame::FromProgramCounter": {
            "offset": "0xA940"
        },
        "base::trace_event::StackFrame::FromThreadName": {
            "offset": "0xAA20"
        },
        "base::trace_event::StackFrame::FromTraceEventName": {
            "offset": "0xAA30"
        },
        "base::trace_event::StringStorage::Contains": {
            "offset": "0x9AB0"
        },
        "base::trace_event::StringStorage::EstimateTraceMemoryOverhead": {
            "offset": "0x9C70"
        },
        "base::trace_event::StringStorage::Reset": {
            "offset": "0x153050"
        },
        "base::trace_event::StringStorage::StringStorage": {
            "offset": "0x3540"
        },
        "base::trace_event::StringStorage::begin": {
            "offset": "0xD3E0"
        },
        "base::trace_event::StringStorage::data": {
            "offset": "0xD3E0"
        },
        "base::trace_event::StringStorage::empty": {
            "offset": "0xD570"
        },
        "base::trace_event::StringStorage::end": {
            "offset": "0xD5A0"
        },
        "base::trace_event::StringStorage::size": {
            "offset": "0xDD20"
        },
        "base::trace_event::StringStorage::~StringStorage": {
            "offset": "0x3C00"
        },
        "base::trace_event::StringToMemoryDumpLevelOfDetail": {
            "offset": "0x14DA40"
        },
        "base::trace_event::StringToMemoryDumpType": {
            "offset": "0x14DB60"
        },
        "base::trace_event::ThreadInstructionCount::IsSupported": {
            "offset": "0x12C0"
        },
        "base::trace_event::ThreadInstructionCount::Now": {
            "offset": "0x151AC0"
        },
        "base::trace_event::ThreadInstructionCount::ThreadInstructionCount": {
            "offset": "0x2FB0"
        },
        "base::trace_event::ThreadInstructionCount::ToInternalValue": {
            "offset": "0xAB80"
        },
        "base::trace_event::ThreadInstructionCount::is_null": {
            "offset": "0xD770"
        },
        "base::trace_event::ThreadInstructionDelta::ThreadInstructionDelta": {
            "offset": "0x2FB0"
        },
        "base::trace_event::ThreadInstructionDelta::ToInternalValue": {
            "offset": "0xAB80"
        },
        "base::trace_event::TraceArguments::AppendDebugString": {
            "offset": "0x151E70"
        },
        "base::trace_event::TraceArguments::CopyStringsTo": {
            "offset": "0x1527B0"
        },
        "base::trace_event::TraceArguments::Reset": {
            "offset": "0x1530B0"
        },
        "base::trace_event::TraceArguments::TraceArguments": {
            "offset": "0x35A0"
        },
        "base::trace_event::TraceArguments::names": {
            "offset": "0x15A0"
        },
        "base::trace_event::TraceArguments::size": {
            "offset": "0xD790"
        },
        "base::trace_event::TraceArguments::types": {
            "offset": "0xDD90"
        },
        "base::trace_event::TraceArguments::values": {
            "offset": "0xDDC0"
        },
        "base::trace_event::TraceArguments::~TraceArguments": {
            "offset": "0x3C30"
        },
        "base::trace_event::TraceBuffer::CreateTraceBufferRingBuffer": {
            "offset": "0x153960"
        },
        "base::trace_event::TraceBuffer::TraceBuffer": {
            "offset": "0x153450"
        },
        "base::trace_event::TraceBuffer::~TraceBuffer": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceBufferChunk::AddTraceEvent": {
            "offset": "0x153870"
        },
        "base::trace_event::TraceBufferChunk::EstimateTraceMemoryOverhead": {
            "offset": "0x153B00"
        },
        "base::trace_event::TraceBufferChunk::GetEventAt": {
            "offset": "0x1544B0"
        },
        "base::trace_event::TraceBufferChunk::IsFull": {
            "offset": "0x1545F0"
        },
        "base::trace_event::TraceBufferChunk::Reset": {
            "offset": "0x154760"
        },
        "base::trace_event::TraceBufferChunk::TraceBufferChunk": {
            "offset": "0x153460"
        },
        "base::trace_event::TraceBufferChunk::capacity": {
            "offset": "0x154F60"
        },
        "base::trace_event::TraceBufferChunk::seq": {
            "offset": "0x154FE0"
        },
        "base::trace_event::TraceBufferChunk::size": {
            "offset": "0xAB80"
        },
        "base::trace_event::TraceBufferChunk::~TraceBufferChunk": {
            "offset": "0x153630"
        },
        "base::trace_event::TraceCategory::name": {
            "offset": "0x16C5E0"
        },
        "base::trace_event::TraceConfig::AsConvertableToTraceFormat": {
            "offset": "0x1584E0"
        },
        "base::trace_event::TraceConfig::Clear": {
            "offset": "0x158590"
        },
        "base::trace_event::TraceConfig::EnableArgumentFilter": {
            "offset": "0x9C50"
        },
        "base::trace_event::TraceConfig::EnableHistogram": {
            "offset": "0x158650"
        },
        "base::trace_event::TraceConfig::EnableSystrace": {
            "offset": "0x9C60"
        },
        "base::trace_event::TraceConfig::EnableSystraceEvent": {
            "offset": "0x158670"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::EventFilterConfig": {
            "offset": "0x157430"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::GetArgAsSet": {
            "offset": "0x158690"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::InitializeFromConfigDict": {
            "offset": "0x158A80"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::IsCategoryGroupEnabled": {
            "offset": "0x159B00"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::SetCategoryFilter": {
            "offset": "0x159F80"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::ToDict": {
            "offset": "0x15B210"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::category_filter": {
            "offset": "0xD460"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::filter_args": {
            "offset": "0xD5F0"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::predicate_name": {
            "offset": "0x3FB0"
        },
        "base::trace_event::TraceConfig::EventFilterConfig::~EventFilterConfig": {
            "offset": "0x157FF0"
        },
        "base::trace_event::TraceConfig::GetTraceBufferSizeInEvents": {
            "offset": "0xAAA0"
        },
        "base::trace_event::TraceConfig::GetTraceBufferSizeInKb": {
            "offset": "0xAAB0"
        },
        "base::trace_event::TraceConfig::GetTraceRecordMode": {
            "offset": "0x1480"
        },
        "base::trace_event::TraceConfig::InitializeDefault": {
            "offset": "0x158A60"
        },
        "base::trace_event::TraceConfig::InitializeFromConfigDict": {
            "offset": "0x158DA0"
        },
        "base::trace_event::TraceConfig::InitializeFromConfigString": {
            "offset": "0x1593B0"
        },
        "base::trace_event::TraceConfig::InitializeFromStrings": {
            "offset": "0x159440"
        },
        "base::trace_event::TraceConfig::IsArgumentFilterEnabled": {
            "offset": "0xACA0"
        },
        "base::trace_event::TraceConfig::IsCategoryGroupEnabled": {
            "offset": "0x159B00"
        },
        "base::trace_event::TraceConfig::IsSystraceEnabled": {
            "offset": "0xAFA0"
        },
        "base::trace_event::TraceConfig::MemoryDumpConfig::Clear": {
            "offset": "0x158550"
        },
        "base::trace_event::TraceConfig::MemoryDumpConfig::MemoryDumpConfig": {
            "offset": "0x1575A0"
        },
        "base::trace_event::TraceConfig::MemoryDumpConfig::Merge": {
            "offset": "0x159BA0"
        },
        "base::trace_event::TraceConfig::MemoryDumpConfig::~MemoryDumpConfig": {
            "offset": "0x158070"
        },
        "base::trace_event::TraceConfig::Merge": {
            "offset": "0x159D70"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::Clear": {
            "offset": "0x158580"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::InitializeFromConfigDict": {
            "offset": "0x158B00"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::IsEnabled": {
            "offset": "0x159B10"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::Merge": {
            "offset": "0x159D60"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::ProcessFilterConfig": {
            "offset": "0x157620"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::ToDict": {
            "offset": "0x15B2F0"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::empty": {
            "offset": "0xD560"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::included_process_ids": {
            "offset": "0x3FB0"
        },
        "base::trace_event::TraceConfig::ProcessFilterConfig::~ProcessFilterConfig": {
            "offset": "0x9FAE0"
        },
        "base::trace_event::TraceConfig::ResetMemoryDumpConfig": {
            "offset": "0x159F30"
        },
        "base::trace_event::TraceConfig::SetDefaultMemoryDumpConfig": {
            "offset": "0x159F90"
        },
        "base::trace_event::TraceConfig::SetEventFilters": {
            "offset": "0xBC90"
        },
        "base::trace_event::TraceConfig::SetEventFiltersFromConfigList": {
            "offset": "0x15A020"
        },
        "base::trace_event::TraceConfig::SetHistogramNamesFromConfigList": {
            "offset": "0x15A4E0"
        },
        "base::trace_event::TraceConfig::SetMemoryDumpConfigFromConfigDict": {
            "offset": "0x15A740"
        },
        "base::trace_event::TraceConfig::SetProcessFilterConfig": {
            "offset": "0x15B1E0"
        },
        "base::trace_event::TraceConfig::SetTraceBufferSizeInEvents": {
            "offset": "0xBCE0"
        },
        "base::trace_event::TraceConfig::SetTraceBufferSizeInKb": {
            "offset": "0xBCF0"
        },
        "base::trace_event::TraceConfig::SetTraceRecordMode": {
            "offset": "0xBD00"
        },
        "base::trace_event::TraceConfig::ToCategoryFilterString": {
            "offset": "0x15B1F0"
        },
        "base::trace_event::TraceConfig::ToString": {
            "offset": "0x15B540"
        },
        "base::trace_event::TraceConfig::ToTraceOptionsString": {
            "offset": "0x15B5C0"
        },
        "base::trace_event::TraceConfig::ToValue": {
            "offset": "0x15BC10"
        },
        "base::trace_event::TraceConfig::TraceConfig": {
            "offset": "0x157CB0"
        },
        "base::trace_event::TraceConfig::TraceRecordModeToStr": {
            "offset": "0x15C400"
        },
        "base::trace_event::TraceConfig::category_filter": {
            "offset": "0xD460"
        },
        "base::trace_event::TraceConfig::event_filters": {
            "offset": "0xD5D0"
        },
        "base::trace_event::TraceConfig::histogram_names": {
            "offset": "0xD430"
        },
        "base::trace_event::TraceConfig::memory_dump_config": {
            "offset": "0xD5F0"
        },
        "base::trace_event::TraceConfig::process_filter_config": {
            "offset": "0xD8B0"
        },
        "base::trace_event::TraceConfig::systrace_events": {
            "offset": "0xDD40"
        },
        "base::trace_event::TraceConfig::~TraceConfig": {
            "offset": "0x1580A0"
        },
        "base::trace_event::TraceConfigCategoryFilter::AddCategoriesToDict": {
            "offset": "0x15DE70"
        },
        "base::trace_event::TraceConfigCategoryFilter::Clear": {
            "offset": "0x15DFF0"
        },
        "base::trace_event::TraceConfigCategoryFilter::InitializeFromConfigDict": {
            "offset": "0x15E2A0"
        },
        "base::trace_event::TraceConfigCategoryFilter::InitializeFromString": {
            "offset": "0x15E350"
        },
        "base::trace_event::TraceConfigCategoryFilter::IsCategoryEnabled": {
            "offset": "0x15E850"
        },
        "base::trace_event::TraceConfigCategoryFilter::IsCategoryGroupEnabled": {
            "offset": "0x15E990"
        },
        "base::trace_event::TraceConfigCategoryFilter::IsCategoryNameAllowed": {
            "offset": "0x15F120"
        },
        "base::trace_event::TraceConfigCategoryFilter::Merge": {
            "offset": "0x15F1C0"
        },
        "base::trace_event::TraceConfigCategoryFilter::SetCategoriesFromExcludedList": {
            "offset": "0x15F250"
        },
        "base::trace_event::TraceConfigCategoryFilter::SetCategoriesFromIncludedList": {
            "offset": "0x15F4D0"
        },
        "base::trace_event::TraceConfigCategoryFilter::ToDict": {
            "offset": "0x15F7C0"
        },
        "base::trace_event::TraceConfigCategoryFilter::ToFilterString": {
            "offset": "0x15F8A0"
        },
        "base::trace_event::TraceConfigCategoryFilter::TraceConfigCategoryFilter": {
            "offset": "0x15DCC0"
        },
        "base::trace_event::TraceConfigCategoryFilter::WriteCategoryFilterString": {
            "offset": "0x15FA20"
        },
        "base::trace_event::TraceConfigCategoryFilter::excluded_categories": {
            "offset": "0xD5E0"
        },
        "base::trace_event::TraceConfigCategoryFilter::included_categories": {
            "offset": "0x3FB0"
        },
        "base::trace_event::TraceConfigCategoryFilter::~TraceConfigCategoryFilter": {
            "offset": "0x15DDC0"
        },
        "base::trace_event::TraceEvent::AppendAsJSON": {
            "offset": "0x1602E0"
        },
        "base::trace_event::TraceEvent::AppendPrettyPrinted": {
            "offset": "0x160A90"
        },
        "base::trace_event::TraceEvent::AppendValueAsJSON": {
            "offset": "0x99E0"
        },
        "base::trace_event::TraceEvent::EstimateTraceMemoryOverhead": {
            "offset": "0x160C40"
        },
        "base::trace_event::TraceEvent::InitArgs": {
            "offset": "0x160CC0"
        },
        "base::trace_event::TraceEvent::Reset": {
            "offset": "0x160E20"
        },
        "base::trace_event::TraceEvent::TraceEvent": {
            "offset": "0x160100"
        },
        "base::trace_event::TraceEvent::UpdateDuration": {
            "offset": "0x160E60"
        },
        "base::trace_event::TraceEvent::arg_convertible_value": {
            "offset": "0xD380"
        },
        "base::trace_event::TraceEvent::arg_name": {
            "offset": "0xD390"
        },
        "base::trace_event::TraceEvent::arg_size": {
            "offset": "0xD3A0"
        },
        "base::trace_event::TraceEvent::arg_type": {
            "offset": "0xD3B0"
        },
        "base::trace_event::TraceEvent::arg_value": {
            "offset": "0xD3C0"
        },
        "base::trace_event::TraceEvent::bind_id": {
            "offset": "0xD410"
        },
        "base::trace_event::TraceEvent::category_group_enabled": {
            "offset": "0xD470"
        },
        "base::trace_event::TraceEvent::duration": {
            "offset": "0xD540"
        },
        "base::trace_event::TraceEvent::flags": {
            "offset": "0xD610"
        },
        "base::trace_event::TraceEvent::id": {
            "offset": "0xD670"
        },
        "base::trace_event::TraceEvent::name": {
            "offset": "0xD7D0"
        },
        "base::trace_event::TraceEvent::parameter_copy_storage": {
            "offset": "0xD7F0"
        },
        "base::trace_event::TraceEvent::phase": {
            "offset": "0xD810"
        },
        "base::trace_event::TraceEvent::process_id": {
            "offset": "0xD8C0"
        },
        "base::trace_event::TraceEvent::scope": {
            "offset": "0xD9B0"
        },
        "base::trace_event::TraceEvent::thread_duration": {
            "offset": "0xDD50"
        },
        "base::trace_event::TraceEvent::thread_id": {
            "offset": "0xD8C0"
        },
        "base::trace_event::TraceEvent::thread_instruction_count": {
            "offset": "0xDD60"
        },
        "base::trace_event::TraceEvent::thread_instruction_delta": {
            "offset": "0xDD70"
        },
        "base::trace_event::TraceEvent::thread_timestamp": {
            "offset": "0xD3D0"
        },
        "base::trace_event::TraceEvent::timestamp": {
            "offset": "0x9A20"
        },
        "base::trace_event::TraceEvent::~TraceEvent": {
            "offset": "0x160160"
        },
        "base::trace_event::TraceEventETWExport::AddCompleteEndEvent": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceEventETWExport::AddEvent": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceEventETWExport::EnableETWExport": {
            "offset": "0x15FCE0"
        },
        "base::trace_event::TraceEventETWExport::GetInstance": {
            "offset": "0x15FCE0"
        },
        "base::trace_event::TraceEventETWExport::GetInstanceIfExists": {
            "offset": "0x15FCF0"
        },
        "base::trace_event::TraceEventETWExport::IsCategoryEnabled": {
            "offset": "0x12C0"
        },
        "base::trace_event::TraceEventETWExport::IsCategoryGroupEnabled": {
            "offset": "0x12C0"
        },
        "base::trace_event::TraceEventETWExport::OnETWEnableUpdate": {
            "offset": "0x15FD10"
        },
        "base::trace_event::TraceEventETWExport::TraceEventETWExport": {
            "offset": "0x15FC30"
        },
        "base::trace_event::TraceEventETWExport::UpdateEnabledCategories": {
            "offset": "0xAAC0"
        },
        "base::trace_event::TraceEventETWExport::~TraceEventETWExport": {
            "offset": "0x15FC80"
        },
        "base::trace_event::TraceEventFilter::EndEvent": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceEventFilter::TraceEventFilter": {
            "offset": "0x15FE70"
        },
        "base::trace_event::TraceEventFilter::~TraceEventFilter": {
            "offset": "0x15FE80"
        },
        "base::trace_event::TraceEventMemoryOverhead::Add": {
            "offset": "0x1610C0"
        },
        "base::trace_event::TraceEventMemoryOverhead::AddInternal": {
            "offset": "0x1610E0"
        },
        "base::trace_event::TraceEventMemoryOverhead::AddRefCountedString": {
            "offset": "0x161100"
        },
        "base::trace_event::TraceEventMemoryOverhead::AddSelf": {
            "offset": "0x161140"
        },
        "base::trace_event::TraceEventMemoryOverhead::AddString": {
            "offset": "0x161160"
        },
        "base::trace_event::TraceEventMemoryOverhead::AddValue": {
            "offset": "0x161190"
        },
        "base::trace_event::TraceEventMemoryOverhead::DumpInto": {
            "offset": "0x161480"
        },
        "base::trace_event::TraceEventMemoryOverhead::GetCount": {
            "offset": "0x161760"
        },
        "base::trace_event::TraceEventMemoryOverhead::TraceEventMemoryOverhead": {
            "offset": "0x161080"
        },
        "base::trace_event::TraceEventMemoryOverhead::Update": {
            "offset": "0x1617D0"
        },
        "base::trace_event::TraceEventMemoryOverhead::~TraceEventMemoryOverhead": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceLog::AddAsyncEnabledStateObserver": {
            "offset": "0x1646E0"
        },
        "base::trace_event::TraceLog::AddEnabledStateObserver": {
            "offset": "0x1648F0"
        },
        "base::trace_event::TraceLog::AddEventToThreadSharedChunkWhileLocked": {
            "offset": "0x164980"
        },
        "base::trace_event::TraceLog::AddMetadataEvent": {
            "offset": "0x164AB0"
        },
        "base::trace_event::TraceLog::AddMetadataEventsWhileLocked": {
            "offset": "0x164CF0"
        },
        "base::trace_event::TraceLog::AddOwnedEnabledStateObserver": {
            "offset": "0x165220"
        },
        "base::trace_event::TraceLog::AddTraceEvent": {
            "offset": "0x1654C0"
        },
        "base::trace_event::TraceLog::AddTraceEventWithBindId": {
            "offset": "0x165640"
        },
        "base::trace_event::TraceLog::AddTraceEventWithProcessId": {
            "offset": "0x1657E0"
        },
        "base::trace_event::TraceLog::AddTraceEventWithThreadIdAndTimestamp": {
            "offset": "0x166120"
        },
        "base::trace_event::TraceLog::AsyncEnabledStateObserver::AsyncEnabledStateObserver": {
            "offset": "0x2FD0"
        },
        "base::trace_event::TraceLog::AsyncEnabledStateObserver::~AsyncEnabledStateObserver": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceLog::BufferIsFull": {
            "offset": "0x166300"
        },
        "base::trace_event::TraceLog::CancelTracing": {
            "offset": "0x166380"
        },
        "base::trace_event::TraceLog::CheckGeneration": {
            "offset": "0x9A40"
        },
        "base::trace_event::TraceLog::CheckIfBufferIsFullWhileLocked": {
            "offset": "0x1663B0"
        },
        "base::trace_event::TraceLog::ConvertTraceEventsToTraceFormat": {
            "offset": "0x1664A0"
        },
        "base::trace_event::TraceLog::CreateFiltersForTraceConfig": {
            "offset": "0x1669E0"
        },
        "base::trace_event::TraceLog::CreateTraceBuffer": {
            "offset": "0x166D60"
        },
        "base::trace_event::TraceLog::EnabledStateObserver::EnabledStateObserver": {
            "offset": "0x31B0"
        },
        "base::trace_event::TraceLog::EnabledStateObserver::~EnabledStateObserver": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceLog::EndFilteredEvent": {
            "offset": "0x166E90"
        },
        "base::trace_event::TraceLog::EventToConsoleMessage": {
            "offset": "0x166F40"
        },
        "base::trace_event::TraceLog::FinishFlush": {
            "offset": "0x1677C0"
        },
        "base::trace_event::TraceLog::Flush": {
            "offset": "0x168370"
        },
        "base::trace_event::TraceLog::FlushCurrentThread": {
            "offset": "0x168380"
        },
        "base::trace_event::TraceLog::FlushInternal": {
            "offset": "0x168610"
        },
        "base::trace_event::TraceLog::GetArgumentFilterPredicate": {
            "offset": "0x168D90"
        },
        "base::trace_event::TraceLog::GetBuiltinCategoryEnabled": {
            "offset": "0x12A0"
        },
        "base::trace_event::TraceLog::GetCategoryGroupEnabled": {
            "offset": "0x168E20"
        },
        "base::trace_event::TraceLog::GetCategoryGroupName": {
            "offset": "0x169040"
        },
        "base::trace_event::TraceLog::GetCurrentTraceConfig": {
            "offset": "0x169060"
        },
        "base::trace_event::TraceLog::GetEventByHandle": {
            "offset": "0x1690F0"
        },
        "base::trace_event::TraceLog::GetEventByHandleInternal": {
            "offset": "0x169100"
        },
        "base::trace_event::TraceLog::GetInstance": {
            "offset": "0x169210"
        },
        "base::trace_event::TraceLog::GetInternalOptionsFromTraceConfig": {
            "offset": "0x169290"
        },
        "base::trace_event::TraceLog::GetMetadataFilterPredicate": {
            "offset": "0x169370"
        },
        "base::trace_event::TraceLog::GetNumTracesRecorded": {
            "offset": "0x169400"
        },
        "base::trace_event::TraceLog::GetObserverCountForTest": {
            "offset": "0x169490"
        },
        "base::trace_event::TraceLog::GetStatus": {
            "offset": "0x1694A0"
        },
        "base::trace_event::TraceLog::HasAsyncEnabledStateObserver": {
            "offset": "0x169540"
        },
        "base::trace_event::TraceLog::HasEnabledStateObserver": {
            "offset": "0x169600"
        },
        "base::trace_event::TraceLog::InitializeThreadLocalEventBufferIfSupported": {
            "offset": "0x169690"
        },
        "base::trace_event::TraceLog::IsEnabled": {
            "offset": "0xAD90"
        },
        "base::trace_event::TraceLog::IsProcessNameEmpty": {
            "offset": "0xAF10"
        },
        "base::trace_event::TraceLog::MangleEventId": {
            "offset": "0x169940"
        },
        "base::trace_event::TraceLog::OffsetNow": {
            "offset": "0xB150"
        },
        "base::trace_event::TraceLog::OffsetTimestamp": {
            "offset": "0xB190"
        },
        "base::trace_event::TraceLog::OnFlushTimeout": {
            "offset": "0x169950"
        },
        "base::trace_event::TraceLog::OnMemoryDump": {
            "offset": "0x169C30"
        },
        "base::trace_event::TraceLog::OptionalAutoLock::~OptionalAutoLock": {
            "offset": "0x164010"
        },
        "base::trace_event::TraceLog::RegisteredAsyncObserver::~RegisteredAsyncObserver": {
            "offset": "0x164050"
        },
        "base::trace_event::TraceLog::RemoveAsyncEnabledStateObserver": {
            "offset": "0x169D50"
        },
        "base::trace_event::TraceLog::RemoveEnabledStateObserver": {
            "offset": "0x169E60"
        },
        "base::trace_event::TraceLog::RemoveProcessLabel": {
            "offset": "0x169F30"
        },
        "base::trace_event::TraceLog::ResetForTesting": {
            "offset": "0x16A080"
        },
        "base::trace_event::TraceLog::SetAddTraceEventOverrides": {
            "offset": "0x16A180"
        },
        "base::trace_event::TraceLog::SetArgumentFilterPredicate": {
            "offset": "0x16A1A0"
        },
        "base::trace_event::TraceLog::SetCurrentThreadBlocksMessageLoop": {
            "offset": "0x16A280"
        },
        "base::trace_event::TraceLog::SetDisabled": {
            "offset": "0x16A350"
        },
        "base::trace_event::TraceLog::SetDisabledWhileLocked": {
            "offset": "0x16A3C0"
        },
        "base::trace_event::TraceLog::SetEnabled": {
            "offset": "0x16A7D0"
        },
        "base::trace_event::TraceLog::SetMetadataFilterPredicate": {
            "offset": "0x16AE10"
        },
        "base::trace_event::TraceLog::SetProcessID": {
            "offset": "0x16AEF0"
        },
        "base::trace_event::TraceLog::SetProcessSortIndex": {
            "offset": "0x16AF20"
        },
        "base::trace_event::TraceLog::SetThreadSortIndex": {
            "offset": "0x16AF90"
        },
        "base::trace_event::TraceLog::SetTimeOffset": {
            "offset": "0xFC0E0"
        },
        "base::trace_event::TraceLog::SetTraceBufferForTesting": {
            "offset": "0x16B020"
        },
        "base::trace_event::TraceLog::ShouldAddAfterUpdatingState": {
            "offset": "0x16B0D0"
        },
        "base::trace_event::TraceLog::ThreadLocalEventBuffer::AddTraceEvent": {
            "offset": "0x165300"
        },
        "base::trace_event::TraceLog::ThreadLocalEventBuffer::CheckThisIsCurrentBuffer": {
            "offset": "0x166410"
        },
        "base::trace_event::TraceLog::ThreadLocalEventBuffer::FlushWhileLocked": {
            "offset": "0x168D30"
        },
        "base::trace_event::TraceLog::ThreadLocalEventBuffer::OnMemoryDump": {
            "offset": "0x169B30"
        },
        "base::trace_event::TraceLog::ThreadLocalEventBuffer::ThreadLocalEventBuffer": {
            "offset": "0x1634D0"
        },
        "base::trace_event::TraceLog::ThreadLocalEventBuffer::WillDestroyCurrentMessageLoop": {
            "offset": "0x128A40"
        },
        "base::trace_event::TraceLog::ThreadLocalEventBuffer::~ThreadLocalEventBuffer": {
            "offset": "0x164100"
        },
        "base::trace_event::TraceLog::TraceLog": {
            "offset": "0x163650"
        },
        "base::trace_event::TraceLog::UpdateCategoryRegistry": {
            "offset": "0x16B520"
        },
        "base::trace_event::TraceLog::UpdateCategoryState": {
            "offset": "0x16B590"
        },
        "base::trace_event::TraceLog::UpdateETWCategoryGroupEnabledFlags": {
            "offset": "0x16B940"
        },
        "base::trace_event::TraceLog::UpdateProcessLabel": {
            "offset": "0x16BA50"
        },
        "base::trace_event::TraceLog::UpdateTraceEventDuration": {
            "offset": "0x16BB10"
        },
        "base::trace_event::TraceLog::UpdateTraceEventDurationExplicit": {
            "offset": "0x16BC30"
        },
        "base::trace_event::TraceLog::UseNextTraceBuffer": {
            "offset": "0x16C0C0"
        },
        "base::trace_event::TraceLog::enabled_modes": {
            "offset": "0xD590"
        },
        "base::trace_event::TraceLog::generation": {
            "offset": "0xD620"
        },
        "base::trace_event::TraceLog::process_id": {
            "offset": "0xD8D0"
        },
        "base::trace_event::TraceLog::process_name": {
            "offset": "0xD8E0"
        },
        "base::trace_event::TraceLog::set_process_name": {
            "offset": "0xDA00"
        },
        "base::trace_event::TraceLog::trace_buffer": {
            "offset": "0xD9B0"
        },
        "base::trace_event::TraceLog::trace_options": {
            "offset": "0xDD80"
        },
        "base::trace_event::TraceLog::~TraceLog": {
            "offset": "0x164350"
        },
        "base::trace_event::TraceLogStatus::TraceLogStatus": {
            "offset": "0x163A50"
        },
        "base::trace_event::TraceLogStatus::~TraceLogStatus": {
            "offset": "0x12B0"
        },
        "base::trace_event::TraceResultBuffer::AddFragment": {
            "offset": "0x1537A0"
        },
        "base::trace_event::TraceResultBuffer::Finish": {
            "offset": "0x153F20"
        },
        "base::trace_event::TraceResultBuffer::SetOutputCallback": {
            "offset": "0x1E610"
        },
        "base::trace_event::TraceResultBuffer::SimpleOutput::Append": {
            "offset": "0x153920"
        },
        "base::trace_event::TraceResultBuffer::SimpleOutput::GetCallback": {
            "offset": "0x153FD0"
        },
        "base::trace_event::TraceResultBuffer::SimpleOutput::SimpleOutput": {
            "offset": "0x153430"
        },
        "base::trace_event::TraceResultBuffer::SimpleOutput::~SimpleOutput": {
            "offset": "0x1170"
        },
        "base::trace_event::TraceResultBuffer::Start": {
            "offset": "0x154D80"
        },
        "base::trace_event::TraceResultBuffer::TraceResultBuffer": {
            "offset": "0x1534F0"
        },
        "base::trace_event::TraceResultBuffer::~TraceResultBuffer": {
            "offset": "0x3850"
        },
        "base::trace_event::TraceValue::Append": {
            "offset": "0x151C50"
        },
        "base::trace_event::TraceValue::AppendAsJSON": {
            "offset": "0x151E50"
        },
        "base::trace_event::TraceValue::AppendAsString": {
            "offset": "0x151E60"
        },
        "base::trace_event::TracedValue::AppendAsTraceFormat": {
            "offset": "0x16DD90"
        },
        "base::trace_event::TracedValue::AppendBoolean": {
            "offset": "0x16DDF0"
        },
        "base::trace_event::TracedValue::AppendDouble": {
            "offset": "0x16DE50"
        },
        "base::trace_event::TracedValue::AppendInteger": {
            "offset": "0x16DEB0"
        },
        "base::trace_event::TracedValue::AppendString": {
            "offset": "0x16DF00"
        },
        "base::trace_event::TracedValue::AppendToProto": {
            "offset": "0x16DF30"
        },
        "base::trace_event::TracedValue::BeginArray": {
            "offset": "0x16DFD0"
        },
        "base::trace_event::TracedValue::BeginArrayWithCopiedName": {
            "offset": "0x16E040"
        },
        "base::trace_event::TracedValue::BeginDictionary": {
            "offset": "0x16E100"
        },
        "base::trace_event::TracedValue::BeginDictionaryWithCopiedName": {
            "offset": "0x16E170"
        },
        "base::trace_event::TracedValue::EndArray": {
            "offset": "0x16E380"
        },
        "base::trace_event::TracedValue::EndDictionary": {
            "offset": "0x16E3B0"
        },
        "base::trace_event::TracedValue::EstimateTraceMemoryOverhead": {
            "offset": "0x16E400"
        },
        "base::trace_event::TracedValue::SetBoolean": {
            "offset": "0x16E5C0"
        },
        "base::trace_event::TracedValue::SetBooleanWithCopiedName": {
            "offset": "0x16E650"
        },
        "base::trace_event::TracedValue::SetDouble": {
            "offset": "0x16E8D0"
        },
        "base::trace_event::TracedValue::SetDoubleWithCopiedName": {
            "offset": "0x16E960"
        },
        "base::trace_event::TracedValue::SetInteger": {
            "offset": "0x16EA00"
        },
        "base::trace_event::TracedValue::SetIntegerWithCopiedName": {
            "offset": "0x16EA90"
        },
        "base::trace_event::TracedValue::SetString": {
            "offset": "0x16EB20"
        },
        "base::trace_event::TracedValue::SetStringWithCopiedName": {
            "offset": "0x16EBD0"
        },
        "base::trace_event::TracedValue::SetValue": {
            "offset": "0x16ED20"
        },
        "base::trace_event::TracedValue::SetValueWithCopiedName": {
            "offset": "0x16EE50"
        },
        "base::trace_event::TracedValue::ToBaseValue": {
            "offset": "0x16FBC0"
        },
        "base::trace_event::TracedValue::TracedValue": {
            "offset": "0x16CCE0"
        },
        "base::trace_event::TracedValue::Writer::AppendToProto": {
            "offset": "0x12C0"
        },
        "base::trace_event::TracedValue::Writer::Writer": {
            "offset": "0x6A0F0"
        },
        "base::trace_event::TracedValue::Writer::~Writer": {
            "offset": "0x12B0"
        },
        "base::trace_event::TracedValue::~TracedValue": {
            "offset": "0x16CDC0"
        },
        "base::trace_event::TracedValueJSON::ToFormattedJSON": {
            "offset": "0x16FC70"
        },
        "base::trace_event::TracedValueJSON::ToJSON": {
            "offset": "0x16FD90"
        },
        "base::trace_event::TracedValueJSON::TracedValueJSON": {
            "offset": "0x6A0C0"
        },
        "base::trace_event::TracedValueJSON::~TracedValueJSON": {
            "offset": "0x6A290"
        },
        "base::trace_event::TracingAgent::RecordClockSyncMarker": {
            "offset": "0x170140"
        },
        "base::trace_event::TracingAgent::SupportsExplicitClockSync": {
            "offset": "0x12C0"
        },
        "base::trace_event::TracingAgent::TracingAgent": {
            "offset": "0x170080"
        },
        "base::trace_event::TracingAgent::~TracingAgent": {
            "offset": "0x170090"
        },
        "base::trace_event::`anonymous namespace'::AllocationContextTrackerTLS": {
            "offset": "0x147500"
        },
        "base::trace_event::`anonymous namespace'::AppendDouble": {
            "offset": "0x151FE0"
        },
        "base::trace_event::`anonymous namespace'::AppendValueDebugString": {
            "offset": "0x1524B0"
        },
        "base::trace_event::`anonymous namespace'::AutoThreadLocalBoolean::AutoThreadLocalBoolean": {
            "offset": "0x1632B0"
        },
        "base::trace_event::`anonymous namespace'::AutoThreadLocalBoolean::~AutoThreadLocalBoolean": {
            "offset": "0x163FF0"
        },
        "base::trace_event::`anonymous namespace'::ConvertableTraceConfigToTraceFormat::AppendAsTraceFormat": {
            "offset": "0x1583E0"
        },
        "base::trace_event::`anonymous namespace'::CopyTraceEventParameter": {
            "offset": "0x152E50"
        },
        "base::trace_event::`anonymous namespace'::DefaultIsTraceEventArgsWhitelisted": {
            "offset": "0x12C0"
        },
        "base::trace_event::`anonymous namespace'::DestructAllocationContextTracker": {
            "offset": "0x147580"
        },
        "base::trace_event::`anonymous namespace'::DoGlobalDumpWithoutCallback": {
            "offset": "0x14BAA0"
        },
        "base::trace_event::`anonymous namespace'::GetCategoryGroupFilters": {
            "offset": "0x168FA0"
        },
        "base::trace_event::`anonymous namespace'::GetDefaultAllowedMemoryDumpModes": {
            "offset": "0x158930"
        },
        "base::trace_event::`anonymous namespace'::GetSharedGlobalAllocatorDumpName": {
            "offset": "0x150F50"
        },
        "base::trace_event::`anonymous namespace'::MakeHandle": {
            "offset": "0x169790"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::AppendAsTraceFormat": {
            "offset": "0x16D220"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::AppendBoolean": {
            "offset": "0x16DDA0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::AppendDouble": {
            "offset": "0x16DE00"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::AppendInteger": {
            "offset": "0x16DE60"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::AppendString": {
            "offset": "0x16DEC0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::BeginArray": {
            "offset": "0x16DFA0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::BeginArrayWithCopiedName": {
            "offset": "0x16DFE0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::BeginDictionary": {
            "offset": "0x16E0D0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::BeginDictionaryWithCopiedName": {
            "offset": "0x16E110"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::EndArray": {
            "offset": "0x16E360"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::EndDictionary": {
            "offset": "0x16E390"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::EstimateTraceMemoryOverhead": {
            "offset": "0x16E3C0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::IsPickleWriter": {
            "offset": "0xAAC0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::IsProtoWriter": {
            "offset": "0x12C0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetBoolean": {
            "offset": "0x16E540"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetBooleanWithCopiedName": {
            "offset": "0x16E5D0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetDouble": {
            "offset": "0x16E850"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetDoubleWithCopiedName": {
            "offset": "0x16E8E0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetInteger": {
            "offset": "0x16E980"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetIntegerWithCopiedName": {
            "offset": "0x16EA10"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetString": {
            "offset": "0x16EAB0"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetStringWithCopiedName": {
            "offset": "0x16EB50"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetValue": {
            "offset": "0x16EC00"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::SetValueWithCopiedName": {
            "offset": "0x16ED30"
        },
        "base::trace_event::`anonymous namespace'::PickleWriter::ToBaseValue": {
            "offset": "0x16EE90"
        },
        "base::trace_event::`anonymous namespace'::ReadKeyName": {
            "offset": "0x16E410"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::Capacity": {
            "offset": "0x153940"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::EstimateTraceMemoryOverhead": {
            "offset": "0x153C80"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::GetChunk": {
            "offset": "0x154070"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::GetEventByHandle": {
            "offset": "0x154550"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::IsFull": {
            "offset": "0x12C0"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::NextChunk": {
            "offset": "0x154620"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::ReturnChunk": {
            "offset": "0x1547F0"
        },
        "base::trace_event::`anonymous namespace'::TraceBufferRingBuffer::Size": {
            "offset": "0x154D40"
        },
        "base::vswprintf": {
            "offset": "0xD2CA0"
        },
        "base::wcslcpy": {
            "offset": "0xD2350"
        },
        "base::win::AddCommandToAutoRun": {
            "offset": "0x193C60"
        },
        "base::win::AssertComApartmentType": {
            "offset": "0x1808C0"
        },
        "base::win::AssertComInitialized": {
            "offset": "0x180AC0"
        },
        "base::win::CallExceptionFilter": {
            "offset": "0x198E60"
        },
        "base::win::CanPinShortcutToTaskbar": {
            "offset": "0x190A10"
        },
        "base::win::ComInitCheckHook::ComInitCheckHook": {
            "offset": "0x3FB0"
        },
        "base::win::ComInitCheckHook::DisableCOMChecksForProcess": {
            "offset": "0x12B0"
        },
        "base::win::ComInitCheckHook::~ComInitCheckHook": {
            "offset": "0x12B0"
        },
        "base::win::CreateIBufferFromData": {
            "offset": "0x198060"
        },
        "base::win::CreateLocalWmiConnection": {
            "offset": "0x198390"
        },
        "base::win::CreateOrUpdateShortcutLink": {
            "offset": "0x190A30"
        },
        "base::win::CreateWmiClassMethodObject": {
            "offset": "0x1985E0"
        },
        "base::win::DisableFlicks": {
            "offset": "0x193CE0"
        },
        "base::win::DisableHandleVerifier": {
            "offset": "0x18CD60"
        },
        "base::win::EnableFlicks": {
            "offset": "0x193D00"
        },
        "base::win::EnableHighDPISupport": {
            "offset": "0x193D10"
        },
        "base::win::EnumVariant::Clone": {
            "offset": "0x1842A0"
        },
        "base::win::EnumVariant::EnumVariant": {
            "offset": "0x183E80"
        },
        "base::win::EnumVariant::ItemAt": {
            "offset": "0x1843F0"
        },
        "base::win::EnumVariant::Next": {
            "offset": "0x1844A0"
        },
        "base::win::EnumVariant::Reset": {
            "offset": "0x184730"
        },
        "base::win::EnumVariant::Skip": {
            "offset": "0x184740"
        },
        "base::win::EnumVariant::~EnumVariant": {
            "offset": "0x1840B0"
        },
        "base::win::EtwTraceController::DisableProvider": {
            "offset": "0x184830"
        },
        "base::win::EtwTraceController::EnableProvider": {
            "offset": "0x184860"
        },
        "base::win::EtwTraceController::EtwTraceController": {
            "offset": "0x1847A0"
        },
        "base::win::EtwTraceController::Flush": {
            "offset": "0x184940"
        },
        "base::win::EtwTraceController::Query": {
            "offset": "0x184A10"
        },
        "base::win::EtwTraceController::Start": {
            "offset": "0x184D70"
        },
        "base::win::EtwTraceController::StartFileSession": {
            "offset": "0x184E20"
        },
        "base::win::EtwTraceController::StartRealtimeSession": {
            "offset": "0x184FA0"
        },
        "base::win::EtwTraceController::Stop": {
            "offset": "0x185180"
        },
        "base::win::EtwTraceController::Update": {
            "offset": "0x185230"
        },
        "base::win::EtwTraceController::session": {
            "offset": "0x695C0"
        },
        "base::win::EtwTraceController::session_name": {
            "offset": "0x1852E0"
        },
        "base::win::EtwTraceController::~EtwTraceController": {
            "offset": "0x184800"
        },
        "base::win::EtwTraceProperties::EtwTraceProperties": {
            "offset": "0x1847C0"
        },
        "base::win::EtwTraceProperties::GetLoggerFileName": {
            "offset": "0x1849F0"
        },
        "base::win::EtwTraceProperties::GetLoggerName": {
            "offset": "0x184A00"
        },
        "base::win::EtwTraceProperties::SetLoggerFileName": {
            "offset": "0x184A40"
        },
        "base::win::EtwTraceProperties::SetLoggerName": {
            "offset": "0x184A90"
        },
        "base::win::EtwTraceProperties::get": {
            "offset": "0x3FB0"
        },
        "base::win::EtwTraceProvider::Callback": {
            "offset": "0x185450"
        },
        "base::win::EtwTraceProvider::ControlCallback": {
            "offset": "0x1854E0"
        },
        "base::win::EtwTraceProvider::DisableEvents": {
            "offset": "0x1854F0"
        },
        "base::win::EtwTraceProvider::EnableEvents": {
            "offset": "0x185520"
        },
        "base::win::EtwTraceProvider::EtwTraceProvider": {
            "offset": "0x185320"
        },
        "base::win::EtwTraceProvider::Log": {
            "offset": "0x185720"
        },
        "base::win::EtwTraceProvider::OnEventsDisabled": {
            "offset": "0x12B0"
        },
        "base::win::EtwTraceProvider::OnEventsEnabled": {
            "offset": "0x12B0"
        },
        "base::win::EtwTraceProvider::PostEventsDisabled": {
            "offset": "0x12B0"
        },
        "base::win::EtwTraceProvider::Register": {
            "offset": "0x185740"
        },
        "base::win::EtwTraceProvider::ShouldLog": {
            "offset": "0x69560"
        },
        "base::win::EtwTraceProvider::Unregister": {
            "offset": "0x1857B0"
        },
        "base::win::EtwTraceProvider::enable_flags": {
            "offset": "0x695A0"
        },
        "base::win::EtwTraceProvider::enable_level": {
            "offset": "0x695B0"
        },
        "base::win::EtwTraceProvider::provider_name": {
            "offset": "0x15A0"
        },
        "base::win::EtwTraceProvider::registration_handle": {
            "offset": "0xD8F0"
        },
        "base::win::EtwTraceProvider::session_handle": {
            "offset": "0x695C0"
        },
        "base::win::EtwTraceProvider::set_provider_name": {
            "offset": "0x695D0"
        },
        "base::win::EtwTraceProvider::~EtwTraceProvider": {
            "offset": "0x185350"
        },
        "base::win::GenericScopedHandle<base::`anonymous namespace'::ModuleHandleTraits,base::win::DummyVerifierTraits>::GenericScopedHandle<base::`anonymous namespace'::ModuleHandleTraits,base::win::DummyVerifierTraits>": {
            "offset": "0xBDF80"
        },
        "base::win::GenericScopedHandle<base::`anonymous namespace'::ModuleHandleTraits,base::win::DummyVerifierTraits>::~GenericScopedHandle<base::`anonymous namespace'::ModuleHandleTraits,base::win::DummyVerifierTraits>": {
            "offset": "0xBE000"
        },
        "base::win::GenericScopedHandle<base::win::HandleTraits,base::win::VerifierTraits>::GenericScopedHandle<base::win::HandleTraits,base::win::VerifierTraits>": {
            "offset": "0x3F4E0"
        },
        "base::win::GenericScopedHandle<base::win::HandleTraits,base::win::VerifierTraits>::Set": {
            "offset": "0x545C0"
        },
        "base::win::GenericScopedHandle<base::win::HandleTraits,base::win::VerifierTraits>::~GenericScopedHandle<base::win::HandleTraits,base::win::VerifierTraits>": {
            "offset": "0x3FAF0"
        },
        "base::win::GetDataResourceFromModule": {
            "offset": "0x18C490"
        },
        "base::win::GetLoadedModulesSnapshot": {
            "offset": "0x193F80"
        },
        "base::win::GetPointerToBufferData": {
            "offset": "0x1982E0"
        },
        "base::win::GetResourceFromModule": {
            "offset": "0x18C4B0"
        },
        "base::win::GetUser32FunctionPointer": {
            "offset": "0x1946E0"
        },
        "base::win::GetUserSidString": {
            "offset": "0x194740"
        },
        "base::win::GetVersion": {
            "offset": "0x197650"
        },
        "base::win::GetWindowObjectName": {
            "offset": "0x194A30"
        },
        "base::win::HStringCompare": {
            "offset": "0x1858A0"
        },
        "base::win::HStringReference::Get": {
            "offset": "0xAB80"
        },
        "base::win::HStringReference::HStringReference": {
            "offset": "0x1859A0"
        },
        "base::win::HStringReference::ResolveCoreWinRTStringDelayload": {
            "offset": "0x185D20"
        },
        "base::win::HandleTraits::CloseHandle": {
            "offset": "0x18CD30"
        },
        "base::win::IATPatchFunction::IATPatchFunction": {
            "offset": "0x14DD30"
        },
        "base::win::IATPatchFunction::Patch": {
            "offset": "0x1868E0"
        },
        "base::win::IATPatchFunction::PatchFromModule": {
            "offset": "0x1869C0"
        },
        "base::win::IATPatchFunction::Unpatch": {
            "offset": "0x186F80"
        },
        "base::win::IATPatchFunction::is_patched": {
            "offset": "0x2AAC0"
        },
        "base::win::IATPatchFunction::original_function": {
            "offset": "0x187130"
        },
        "base::win::IATPatchFunction::~IATPatchFunction": {
            "offset": "0x1866C0"
        },
        "base::win::InitializeWindowClass": {
            "offset": "0x198E70"
        },
        "base::win::IsCurrentSessionRemote": {
            "offset": "0x194C00"
        },
        "base::win::IsDeviceRegisteredWithManagement": {
            "offset": "0x194CB0"
        },
        "base::win::IsDeviceUsedAsATablet": {
            "offset": "0x194CD0"
        },
        "base::win::IsEnrolledToDomain": {
            "offset": "0x195090"
        },
        "base::win::IsKeyboardPresentOnSlate": {
            "offset": "0x1950B0"
        },
        "base::win::IsProcessPerMonitorDpiAware": {
            "offset": "0x195770"
        },
        "base::win::IsRunningUnderDesktopName": {
            "offset": "0x1957F0"
        },
        "base::win::IsTabletDevice": {
            "offset": "0x1958F0"
        },
        "base::win::IsUser32AndGdi32Available": {
            "offset": "0x195960"
        },
        "base::win::IsWindows10TabletMode": {
            "offset": "0x195A40"
        },
        "base::win::MessageWindow::Create": {
            "offset": "0x187320"
        },
        "base::win::MessageWindow::CreateNamed": {
            "offset": "0x187370"
        },
        "base::win::MessageWindow::DoCreate": {
            "offset": "0x1873D0"
        },
        "base::win::MessageWindow::FindWindowW": {
            "offset": "0x187710"
        },
        "base::win::MessageWindow::MessageWindow": {
            "offset": "0x1871F0"
        },
        "base::win::MessageWindow::WindowProc": {
            "offset": "0x187A90"
        },
        "base::win::MessageWindow::hwnd": {
            "offset": "0xAAA0"
        },
        "base::win::MessageWindow::~MessageWindow": {
            "offset": "0x187230"
        },
        "base::win::OSInfo::GetArchitecture": {
            "offset": "0x1974B0"
        },
        "base::win::OSInfo::GetInstance": {
            "offset": "0x197500"
        },
        "base::win::OSInfo::GetInstanceStorage": {
            "offset": "0x197520"
        },
        "base::win::OSInfo::GetWOW64StatusForProcess": {
            "offset": "0x197840"
        },
        "base::win::OSInfo::Kernel32BaseVersion": {
            "offset": "0x197880"
        },
        "base::win::OSInfo::Kernel32Version": {
            "offset": "0x197920"
        },
        "base::win::OSInfo::MajorMinorBuildToVersion": {
            "offset": "0x197A10"
        },
        "base::win::OSInfo::OSInfo": {
            "offset": "0x1969D0"
        },
        "base::win::OSInfo::UcrtVersion": {
            "offset": "0x197C10"
        },
        "base::win::OSInfo::allocation_granularity": {
            "offset": "0xD5F0"
        },
        "base::win::OSInfo::processor_model_name": {
            "offset": "0x197E50"
        },
        "base::win::OSInfo::processors": {
            "offset": "0xD530"
        },
        "base::win::OSInfo::release_id": {
            "offset": "0xD460"
        },
        "base::win::OSInfo::service_pack": {
            "offset": "0xDDC0"
        },
        "base::win::OSInfo::service_pack_str": {
            "offset": "0x1E180"
        },
        "base::win::OSInfo::version": {
            "offset": "0x3FB0"
        },
        "base::win::OSInfo::version_number": {
            "offset": "0x1E190"
        },
        "base::win::OSInfo::version_type": {
            "offset": "0x1E1A0"
        },
        "base::win::OSInfo::wow64_status": {
            "offset": "0x1E1B0"
        },
        "base::win::OSInfo::~OSInfo": {
            "offset": "0x196D90"
        },
        "base::win::ObjectWatcher::Delegate::Delegate": {
            "offset": "0x475C0"
        },
        "base::win::ObjectWatcher::Delegate::~Delegate": {
            "offset": "0x12B0"
        },
        "base::win::ObjectWatcher::DoneWaiting": {
            "offset": "0x187DC0"
        },
        "base::win::ObjectWatcher::GetWatchedObject": {
            "offset": "0x32570"
        },
        "base::win::ObjectWatcher::IsWatching": {
            "offset": "0x187EA0"
        },
        "base::win::ObjectWatcher::ObjectWatcher": {
            "offset": "0x187CC0"
        },
        "base::win::ObjectWatcher::Reset": {
            "offset": "0x187EB0"
        },
        "base::win::ObjectWatcher::Signal": {
            "offset": "0x188090"
        },
        "base::win::ObjectWatcher::StartWatchingInternal": {
            "offset": "0x1880D0"
        },
        "base::win::ObjectWatcher::StartWatchingMultipleTimes": {
            "offset": "0x188500"
        },
        "base::win::ObjectWatcher::StartWatchingOnce": {
            "offset": "0x188520"
        },
        "base::win::ObjectWatcher::StopWatching": {
            "offset": "0x188540"
        },
        "base::win::ObjectWatcher::~ObjectWatcher": {
            "offset": "0x187D10"
        },
        "base::win::OnHandleBeingClosed": {
            "offset": "0x18CD80"
        },
        "base::win::PEImage::EnumAllDelayImports": {
            "offset": "0x188A50"
        },
        "base::win::PEImage::EnumAllImports": {
            "offset": "0x188A80"
        },
        "base::win::PEImage::EnumDelayImportChunks": {
            "offset": "0x188C50"
        },
        "base::win::PEImage::EnumImportChunks": {
            "offset": "0x188E80"
        },
        "base::win::PEImage::GetDebugId": {
            "offset": "0x188FC0"
        },
        "base::win::PEImage::GetNTHeaders": {
            "offset": "0x189130"
        },
        "base::win::PEImage::RVAToAddr": {
            "offset": "0x189220"
        },
        "base::win::PEImage::VerifyMagic": {
            "offset": "0x189230"
        },
        "base::win::PinShortcutToTaskbar": {
            "offset": "0x191030"
        },
        "base::win::PinUser32": {
            "offset": "0x195C20"
        },
        "base::win::ProcessDelayImportChunk": {
            "offset": "0x189140"
        },
        "base::win::ReadCommandFromAutoRun": {
            "offset": "0x195D10"
        },
        "base::win::RegKey::Close": {
            "offset": "0x189C90"
        },
        "base::win::RegKey::Create": {
            "offset": "0x189CC0"
        },
        "base::win::RegKey::CreateKey": {
            "offset": "0x189DE0"
        },
        "base::win::RegKey::CreateWithDisposition": {
            "offset": "0x189F40"
        },
        "base::win::RegKey::DeleteEmptyKey": {
            "offset": "0x18A060"
        },
        "base::win::RegKey::DeleteKey": {
            "offset": "0x18A200"
        },
        "base::win::RegKey::DeleteValue": {
            "offset": "0x18A330"
        },
        "base::win::RegKey::GetValueCount": {
            "offset": "0x18A3D0"
        },
        "base::win::RegKey::GetValueNameAt": {
            "offset": "0x18A430"
        },
        "base::win::RegKey::Handle": {
            "offset": "0xAB80"
        },
        "base::win::RegKey::HasValue": {
            "offset": "0x18A4C0"
        },
        "base::win::RegKey::Open": {
            "offset": "0x18AC20"
        },
        "base::win::RegKey::OpenKey": {
            "offset": "0x18AD10"
        },
        "base::win::RegKey::ReadInt64": {
            "offset": "0x18B280"
        },
        "base::win::RegKey::ReadValue": {
            "offset": "0x18B530"
        },
        "base::win::RegKey::ReadValueDW": {
            "offset": "0x18B560"
        },
        "base::win::RegKey::ReadValues": {
            "offset": "0x18B670"
        },
        "base::win::RegKey::RegDelRecurse": {
            "offset": "0x18B920"
        },
        "base::win::RegKey::RegKey": {
            "offset": "0x189840"
        },
        "base::win::RegKey::Set": {
            "offset": "0x18BD90"
        },
        "base::win::RegKey::StartWatching": {
            "offset": "0x18BDD0"
        },
        "base::win::RegKey::Take": {
            "offset": "0x18C170"
        },
        "base::win::RegKey::Valid": {
            "offset": "0x4AB0"
        },
        "base::win::RegKey::Watcher::OnObjectSignaled": {
            "offset": "0x18AB00"
        },
        "base::win::RegKey::Watcher::StartWatching": {
            "offset": "0x18BED0"
        },
        "base::win::RegKey::WriteValue": {
            "offset": "0x18C390"
        },
        "base::win::RegKey::~RegKey": {
            "offset": "0x189A80"
        },
        "base::win::RegisterInvalidParamHandler": {
            "offset": "0x1892B0"
        },
        "base::win::RegistryKeyIterator::Index": {
            "offset": "0xD9A0"
        },
        "base::win::RegistryKeyIterator::Initialize": {
            "offset": "0x18A4F0"
        },
        "base::win::RegistryKeyIterator::Name": {
            "offset": "0x18AAE0"
        },
        "base::win::RegistryKeyIterator::Read": {
            "offset": "0x18AE60"
        },
        "base::win::RegistryKeyIterator::RegistryKeyIterator": {
            "offset": "0x189870"
        },
        "base::win::RegistryKeyIterator::SubkeyCount": {
            "offset": "0x18C110"
        },
        "base::win::RegistryKeyIterator::Valid": {
            "offset": "0x18C200"
        },
        "base::win::RegistryKeyIterator::~RegistryKeyIterator": {
            "offset": "0x189AC0"
        },
        "base::win::RegistryValueIterator::Index": {
            "offset": "0xD9A0"
        },
        "base::win::RegistryValueIterator::Initialize": {
            "offset": "0x18A670"
        },
        "base::win::RegistryValueIterator::Name": {
            "offset": "0x18AAF0"
        },
        "base::win::RegistryValueIterator::Read": {
            "offset": "0x18AEE0"
        },
        "base::win::RegistryValueIterator::RegistryValueIterator": {
            "offset": "0x189980"
        },
        "base::win::RegistryValueIterator::Type": {
            "offset": "0x18C1F0"
        },
        "base::win::RegistryValueIterator::Valid": {
            "offset": "0x18C200"
        },
        "base::win::RegistryValueIterator::Value": {
            "offset": "0xD9B0"
        },
        "base::win::RegistryValueIterator::ValueCount": {
            "offset": "0x18C220"
        },
        "base::win::RegistryValueIterator::ValueSize": {
            "offset": "0x8E340"
        },
        "base::win::RegistryValueIterator::~RegistryValueIterator": {
            "offset": "0x189AD0"
        },
        "base::win::RemoveCommandFromAutoRun": {
            "offset": "0x195D80"
        },
        "base::win::ResolveCoreWinRTDelayload": {
            "offset": "0x181130"
        },
        "base::win::ResolveShortcut": {
            "offset": "0x191300"
        },
        "base::win::ResolveShortcutProperties": {
            "offset": "0x191460"
        },
        "base::win::RoActivateInstance": {
            "offset": "0x181170"
        },
        "base::win::RoInitialize": {
            "offset": "0x181210"
        },
        "base::win::RoUninitialize": {
            "offset": "0x181240"
        },
        "base::win::ScopedBstr::Allocate": {
            "offset": "0x18C620"
        },
        "base::win::ScopedBstr::AllocateBytes": {
            "offset": "0x18C6A0"
        },
        "base::win::ScopedBstr::ByteLength": {
            "offset": "0x18C710"
        },
        "base::win::ScopedBstr::Length": {
            "offset": "0x18C730"
        },
        "base::win::ScopedBstr::Receive": {
            "offset": "0x18C750"
        },
        "base::win::ScopedBstr::Release": {
            "offset": "0x18C7E0"
        },
        "base::win::ScopedBstr::Reset": {
            "offset": "0x18C7F0"
        },
        "base::win::ScopedBstr::ScopedBstr": {
            "offset": "0x30F0"
        },
        "base::win::ScopedBstr::SetByteLen": {
            "offset": "0x18C820"
        },
        "base::win::ScopedBstr::Swap": {
            "offset": "0x18C8D0"
        },
        "base::win::ScopedBstr::~ScopedBstr": {
            "offset": "0x18C610"
        },
        "base::win::ScopedCOMInitializer::Initialize": {
            "offset": "0x18CAD0"
        },
        "base::win::ScopedCOMInitializer::ScopedCOMInitializer": {
            "offset": "0x18C930"
        },
        "base::win::ScopedCOMInitializer::Succeeded": {
            "offset": "0x18CD20"
        },
        "base::win::ScopedCOMInitializer::~ScopedCOMInitializer": {
            "offset": "0x18C980"
        },
        "base::win::ScopedCoMem<wchar_t>::~ScopedCoMem<wchar_t>": {
            "offset": "0x1D390"
        },
        "base::win::ScopedDeviceRegisteredWithManagementForTesting::ScopedDeviceRegisteredWithManagementForTesting": {
            "offset": "0x193A10"
        },
        "base::win::ScopedDeviceRegisteredWithManagementForTesting::~ScopedDeviceRegisteredWithManagementForTesting": {
            "offset": "0x193A90"
        },
        "base::win::ScopedDomainStateForTesting::ScopedDomainStateForTesting": {
            "offset": "0x193A50"
        },
        "base::win::ScopedDomainStateForTesting::~ScopedDomainStateForTesting": {
            "offset": "0x193AB0"
        },
        "base::win::ScopedHString::Create": {
            "offset": "0x18DFD0"
        },
        "base::win::ScopedHString::Get": {
            "offset": "0x18E220"
        },
        "base::win::ScopedHString::GetAsUTF8": {
            "offset": "0x18E280"
        },
        "base::win::ScopedHString::ResolveCoreWinRTStringDelayload": {
            "offset": "0x18E500"
        },
        "base::win::ScopedHString::ScopedHString": {
            "offset": "0x180C10"
        },
        "base::win::ScopedHString::~ScopedHString": {
            "offset": "0x180CD0"
        },
        "base::win::ScopedProcessInformation::Close": {
            "offset": "0x18E8A0"
        },
        "base::win::ScopedProcessInformation::DuplicateFrom": {
            "offset": "0x18E930"
        },
        "base::win::ScopedProcessInformation::IsValid": {
            "offset": "0x18EAA0"
        },
        "base::win::ScopedProcessInformation::ScopedProcessInformation": {
            "offset": "0x2E280"
        },
        "base::win::ScopedProcessInformation::Set": {
            "offset": "0x18EAC0"
        },
        "base::win::ScopedProcessInformation::Take": {
            "offset": "0x18EB50"
        },
        "base::win::ScopedProcessInformation::TakeProcessHandle": {
            "offset": "0x18EC10"
        },
        "base::win::ScopedProcessInformation::TakeThreadHandle": {
            "offset": "0x18EC60"
        },
        "base::win::ScopedProcessInformation::process_handle": {
            "offset": "0xAB80"
        },
        "base::win::ScopedProcessInformation::process_id": {
            "offset": "0xD600"
        },
        "base::win::ScopedProcessInformation::thread_handle": {
            "offset": "0xAAA0"
        },
        "base::win::ScopedProcessInformation::thread_id": {
            "offset": "0x276B0"
        },
        "base::win::ScopedProcessInformation::~ScopedProcessInformation": {
            "offset": "0x18E6F0"
        },
        "base::win::ScopedPropVariant::Receive": {
            "offset": "0x191130"
        },
        "base::win::ScopedPropVariant::~ScopedPropVariant": {
            "offset": "0x190710"
        },
        "base::win::ScopedVariant::AsInput": {
            "offset": "0x3FB0"
        },
        "base::win::ScopedVariant::Compare": {
            "offset": "0x18EF50"
        },
        "base::win::ScopedVariant::Copy": {
            "offset": "0x18F050"
        },
        "base::win::ScopedVariant::IsLeakableVarType": {
            "offset": "0x18F090"
        },
        "base::win::ScopedVariant::Receive": {
            "offset": "0x18F130"
        },
        "base::win::ScopedVariant::Release": {
            "offset": "0x18F1E0"
        },
        "base::win::ScopedVariant::Reset": {
            "offset": "0x18F200"
        },
        "base::win::ScopedVariant::ScopedVariant": {
            "offset": "0x183F40"
        },
        "base::win::ScopedVariant::Set": {
            "offset": "0x18FE90"
        },
        "base::win::ScopedVariant::SetDate": {
            "offset": "0x18FF60"
        },
        "base::win::ScopedVariant::Swap": {
            "offset": "0x190020"
        },
        "base::win::ScopedVariant::ptr": {
            "offset": "0x3FB0"
        },
        "base::win::ScopedVariant::type": {
            "offset": "0x184790"
        },
        "base::win::ScopedVariant::~ScopedVariant": {
            "offset": "0x18EEA0"
        },
        "base::win::ScopedWinrtInitializer::ScopedWinrtInitializer": {
            "offset": "0x190050"
        },
        "base::win::ScopedWinrtInitializer::Succeeded": {
            "offset": "0x18CD20"
        },
        "base::win::ScopedWinrtInitializer::~ScopedWinrtInitializer": {
            "offset": "0x190450"
        },
        "base::win::SetAbortBehaviorForCrashReporting": {
            "offset": "0x195DE0"
        },
        "base::win::SetAppIdForPropertyStore": {
            "offset": "0x195E10"
        },
        "base::win::SetBooleanValueForPropertyStore": {
            "offset": "0x196070"
        },
        "base::win::SetClsidForPropertyStore": {
            "offset": "0x196100"
        },
        "base::win::SetShouldCrashOnProcessDetach": {
            "offset": "0x1965C0"
        },
        "base::win::SetStringValueForPropertyStore": {
            "offset": "0x1965D0"
        },
        "base::win::SetWinProcExceptionFilter": {
            "offset": "0x198FC0"
        },
        "base::win::SetupCRT": {
            "offset": "0x1892E0"
        },
        "base::win::ShortcutProperties::ShortcutProperties": {
            "offset": "0x190660"
        },
        "base::win::ShortcutProperties::set_app_id": {
            "offset": "0x1920F0"
        },
        "base::win::ShortcutProperties::set_arguments": {
            "offset": "0x192120"
        },
        "base::win::ShortcutProperties::set_description": {
            "offset": "0x1921C0"
        },
        "base::win::ShortcutProperties::set_dual_mode": {
            "offset": "0x192260"
        },
        "base::win::ShortcutProperties::set_icon": {
            "offset": "0x192270"
        },
        "base::win::ShortcutProperties::set_target": {
            "offset": "0x1922B0"
        },
        "base::win::ShortcutProperties::set_toast_activator_clsid": {
            "offset": "0x1922D0"
        },
        "base::win::ShortcutProperties::set_working_dir": {
            "offset": "0x1922F0"
        },
        "base::win::ShortcutProperties::~ShortcutProperties": {
            "offset": "0x1908D0"
        },
        "base::win::ShouldCrashOnProcessDetach": {
            "offset": "0x1966D0"
        },
        "base::win::StartupInformation::InitializeProcThreadAttributeList": {
            "offset": "0x192380"
        },
        "base::win::StartupInformation::StartupInformation": {
            "offset": "0x192310"
        },
        "base::win::StartupInformation::UpdateProcThreadAttribute": {
            "offset": "0x192470"
        },
        "base::win::StartupInformation::has_extended_startup_info": {
            "offset": "0xAE350"
        },
        "base::win::StartupInformation::startup_info": {
            "offset": "0x15A0"
        },
        "base::win::StartupInformation::~StartupInformation": {
            "offset": "0x192350"
        },
        "base::win::String16FromGUID": {
            "offset": "0x1966E0"
        },
        "base::win::UnpinShortcutFromTaskbar": {
            "offset": "0x192070"
        },
        "base::win::UserAccountControlIsEnabled": {
            "offset": "0x196950"
        },
        "base::win::VerifierTraits::StartTracking": {
            "offset": "0x18CDA0"
        },
        "base::win::VerifierTraits::StopTracking": {
            "offset": "0x18CE00"
        },
        "base::win::WmiComputerSystemInfo::Get": {
            "offset": "0x198710"
        },
        "base::win::WmiComputerSystemInfo::PopulateModelAndManufacturer": {
            "offset": "0x1987D0"
        },
        "base::win::WmiComputerSystemInfo::PopulateSerialNumber": {
            "offset": "0x1989F0"
        },
        "base::win::WmiComputerSystemInfo::WmiComputerSystemInfo": {
            "offset": "0xDAD40"
        },
        "base::win::WmiComputerSystemInfo::manufacturer": {
            "offset": "0x3FB0"
        },
        "base::win::WmiComputerSystemInfo::model": {
            "offset": "0xD460"
        },
        "base::win::WmiComputerSystemInfo::serial_number": {
            "offset": "0x1E180"
        },
        "base::win::WmiComputerSystemInfo::~WmiComputerSystemInfo": {
            "offset": "0xDAD90"
        },
        "base::win::WmiLaunchProcess": {
            "offset": "0x198BA0"
        },
        "base::win::WrappedWindowProc<&base::PowerMonitorDeviceSource::PowerMessageWindow::WndProcThunk>": {
            "offset": "0xAA1B0"
        },
        "base::win::WrappedWindowProc<&base::win::MessageWindow::WindowProc>": {
            "offset": "0x1871C0"
        },
        "base::win::`anonymous namespace'::CheckAndDuplicateHandle": {
            "offset": "0x18E790"
        },
        "base::win::`anonymous namespace'::ForceCrashOnSigAbort": {
            "offset": "0x193F00"
        },
        "base::win::`anonymous namespace'::GetDomainEnrollmentStateStorage": {
            "offset": "0x193F10"
        },
        "base::win::`anonymous namespace'::GetRegisteredWithManagementStateStorage": {
            "offset": "0x194660"
        },
        "base::win::`anonymous namespace'::GetSystemInfoStorage": {
            "offset": "0x1975A0"
        },
        "base::win::`anonymous namespace'::GetVersionData": {
            "offset": "0x197670"
        },
        "base::win::`anonymous namespace'::InitializeShortcutInterfaces": {
            "offset": "0x190F50"
        },
        "base::win::`anonymous namespace'::InterceptEnumCallback": {
            "offset": "0x186750"
        },
        "base::win::`anonymous namespace'::PinUser32Internal": {
            "offset": "0x195C40"
        },
        "base::win::`anonymous namespace'::SetProcessDpiAwarenessWrapper": {
            "offset": "0x196180"
        },
        "base::win::`anonymous namespace'::SetPropVariantValueForPropertyStore": {
            "offset": "0x1963C0"
        },
        "base::win::i18n::GetThreadPreferredUILanguageList": {
            "offset": "0x186400"
        },
        "base::win::i18n::GetUserPreferredUILanguageList": {
            "offset": "0x186490"
        },
        "base::win::i18n::`anonymous namespace'::DetermineAvailableAliases": {
            "offset": "0x181EA0"
        },
        "base::win::i18n::`anonymous namespace'::GetAliasedLanguageOffset": {
            "offset": "0x182410"
        },
        "base::win::i18n::`anonymous namespace'::GetCompatibleNeutralLanguageOffset": {
            "offset": "0x1828D0"
        },
        "base::win::i18n::`anonymous namespace'::GetExactLanguageOffset": {
            "offset": "0x182A90"
        },
        "base::win::i18n::`anonymous namespace'::SelectIf": {
            "offset": "0x182CB0"
        },
        "base::win::i18n::`anonymous namespace'::SelectLanguageMatchingCandidate": {
            "offset": "0x183310"
        },
        "base::win::internal::GetHandleVerifierModuleForTesting": {
            "offset": "0x18D370"
        },
        "base::win::internal::ModifyCode": {
            "offset": "0x188670"
        },
        "base::win::internal::ScopedHandleVerifier::CloseHandle": {
            "offset": "0x18D260"
        },
        "base::win::internal::ScopedHandleVerifier::Disable": {
            "offset": "0x18D330"
        },
        "base::win::internal::ScopedHandleVerifier::Get": {
            "offset": "0x18D340"
        },
        "base::win::internal::ScopedHandleVerifier::GetModule": {
            "offset": "0x18D410"
        },
        "base::win::internal::ScopedHandleVerifier::InstallVerifier": {
            "offset": "0x18D420"
        },
        "base::win::internal::ScopedHandleVerifier::OnHandleBeingClosed": {
            "offset": "0x18D5F0"
        },
        "base::win::internal::ScopedHandleVerifier::StartTracking": {
            "offset": "0x18D770"
        },
        "base::win::internal::ScopedHandleVerifier::StopTracking": {
            "offset": "0x18D8F0"
        },
        "base::win::internal::ThreadSafeAssignOrCreateScopedHandleVerifier": {
            "offset": "0x18DB50"
        },
        "base_icu::utf8_nextCharSafeBody": {
            "offset": "0x131890"
        },
        "capture_current_context": {
            "offset": "0x2462D0"
        },
        "capture_previous_context": {
            "offset": "0x246340"
        },
        "crypto::RandBytes": {
            "offset": "0x2447D0"
        },
        "dllmain_crt_dispatch": {
            "offset": "0x2464C0"
        },
        "dllmain_crt_process_attach": {
            "offset": "0x246510"
        },
        "dllmain_crt_process_detach": {
            "offset": "0x246628"
        },
        "dllmain_dispatch": {
            "offset": "0x2466AC"
        },
        "double_conversion::Advance<char *>": {
            "offset": "0x12D250"
        },
        "double_conversion::Advance<char const *>": {
            "offset": "0x12D250"
        },
        "double_conversion::Advance<unsigned short const *>": {
            "offset": "0x12D310"
        },
        "double_conversion::AdvanceToNonspace<char const *>": {
            "offset": "0x12D3D0"
        },
        "double_conversion::AdvanceToNonspace<unsigned short const *>": {
            "offset": "0x12D410"
        },
        "double_conversion::Bignum::AddBignum": {
            "offset": "0x129A40"
        },
        "double_conversion::Bignum::AddUInt64": {
            "offset": "0x129BD0"
        },
        "double_conversion::Bignum::Align": {
            "offset": "0x129C40"
        },
        "double_conversion::Bignum::AssignBignum": {
            "offset": "0x129CD0"
        },
        "double_conversion::Bignum::AssignDecimalString": {
            "offset": "0x129D20"
        },
        "double_conversion::Bignum::AssignPowerUInt16": {
            "offset": "0x12A0A0"
        },
        "double_conversion::Bignum::AssignUInt16": {
            "offset": "0x12A220"
        },
        "double_conversion::Bignum::AssignUInt64": {
            "offset": "0x12A240"
        },
        "double_conversion::Bignum::Compare": {
            "offset": "0x12A270"
        },
        "double_conversion::Bignum::DivideModuloIntBignum": {
            "offset": "0x12A340"
        },
        "double_conversion::Bignum::LessEqual": {
            "offset": "0x12A4B0"
        },
        "double_conversion::Bignum::MultiplyByPowerOfTen": {
            "offset": "0x12A5A0"
        },
        "double_conversion::Bignum::MultiplyByUInt32": {
            "offset": "0x12A780"
        },
        "double_conversion::Bignum::MultiplyByUInt64": {
            "offset": "0x12A830"
        },
        "double_conversion::Bignum::PlusCompare": {
            "offset": "0x12A910"
        },
        "double_conversion::Bignum::ShiftLeft": {
            "offset": "0x12AAD0"
        },
        "double_conversion::Bignum::Square": {
            "offset": "0x12AB80"
        },
        "double_conversion::Bignum::SubtractBignum": {
            "offset": "0x12AD50"
        },
        "double_conversion::Bignum::SubtractTimes": {
            "offset": "0x12AEB0"
        },
        "double_conversion::BignumDtoa": {
            "offset": "0x129190"
        },
        "double_conversion::CompareBufferWithDiyFp": {
            "offset": "0x130920"
        },
        "double_conversion::DigitGenCounted": {
            "offset": "0x12B850"
        },
        "double_conversion::DiyFpStrtod": {
            "offset": "0x130A00"
        },
        "double_conversion::DoubleStrtod": {
            "offset": "0x130DD0"
        },
        "double_conversion::DoubleToStringConverter::CreateDecimalRepresentation": {
            "offset": "0x12B0F0"
        },
        "double_conversion::DoubleToStringConverter::CreateExponentialRepresentation": {
            "offset": "0x12B2F0"
        },
        "double_conversion::DoubleToStringConverter::DoubleToAscii": {
            "offset": "0x12B440"
        },
        "double_conversion::DoubleToStringConverter::HandleSpecialValues": {
            "offset": "0x12B620"
        },
        "double_conversion::DoubleToStringConverter::ToShortestIeeeNumber": {
            "offset": "0x12B720"
        },
        "double_conversion::FastDtoa": {
            "offset": "0x12BAE0"
        },
        "double_conversion::FastFixedDtoa": {
            "offset": "0x12C310"
        },
        "double_conversion::FillDigits64": {
            "offset": "0x12C6B0"
        },
        "double_conversion::FillDigits64FixedLength": {
            "offset": "0x12CC10"
        },
        "double_conversion::FillFractionals": {
            "offset": "0x12CF50"
        },
        "double_conversion::Grisu3": {
            "offset": "0x12BCF0"
        },
        "double_conversion::InitialScaledStartValues": {
            "offset": "0x129830"
        },
        "double_conversion::IsDecimalDigitForRadix": {
            "offset": "0x1307D0"
        },
        "double_conversion::IsHexFloatString<char const *>": {
            "offset": "0x12D6F0"
        },
        "double_conversion::IsHexFloatString<unsigned short const *>": {
            "offset": "0x12DA50"
        },
        "double_conversion::PowersOfTenCache::GetCachedPowerForBinaryExponentRange": {
            "offset": "0x12B020"
        },
        "double_conversion::PowersOfTenCache::GetCachedPowerForDecimalExponent": {
            "offset": "0x12B0A0"
        },
        "double_conversion::RadixStringToIeee<3,char *>": {
            "offset": "0x12DE40"
        },
        "double_conversion::RadixStringToIeee<4,char const *>": {
            "offset": "0x12E4A0"
        },
        "double_conversion::RadixStringToIeee<4,unsigned short const *>": {
            "offset": "0x12EB30"
        },
        "double_conversion::RoundWeed": {
            "offset": "0x12C230"
        },
        "double_conversion::StringBuilder::~StringBuilder": {
            "offset": "0xC6A40"
        },
        "double_conversion::StringToDoubleConverter::StringToDouble": {
            "offset": "0x130830"
        },
        "double_conversion::StringToDoubleConverter::StringToIeee<char const *>": {
            "offset": "0x12F2D0"
        },
        "double_conversion::StringToDoubleConverter::StringToIeee<unsigned short const *>": {
            "offset": "0x12FCD0"
        },
        "double_conversion::Strtod": {
            "offset": "0x131010"
        },
        "double_conversion::StrtodTrimmed": {
            "offset": "0x1310A0"
        },
        "double_conversion::Strtof": {
            "offset": "0x131300"
        },
        "double_conversion::TrimAndCut": {
            "offset": "0x1316D0"
        },
        "double_conversion::`anonymous namespace'::ConsumeSubString<char const *>": {
            "offset": "0x12D4B0"
        },
        "double_conversion::`anonymous namespace'::ConsumeSubString<unsigned short const *>": {
            "offset": "0x12D5D0"
        },
        "double_conversion::`anonymous namespace'::ToLower": {
            "offset": "0x130850"
        },
        "double_conversion::isDigit": {
            "offset": "0x1308E0"
        },
        "logging::BaseInitLoggingImpl_built_with_NDEBUG": {
            "offset": "0x67550"
        },
        "logging::CheckEQImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x8E3A0"
        },
        "logging::CheckEQImpl<base::RunLoop *,base::RunLoop *>": {
            "offset": "0xBA1C0"
        },
        "logging::CheckEQImpl<base::RunLoop::Delegate *,base::RunLoop::Delegate *>": {
            "offset": "0xBA1C0"
        },
        "logging::CheckEQImpl<base::SingleThreadTaskRunner *,base::SingleThreadTaskRunner *>": {
            "offset": "0xBA1C0"
        },
        "logging::CheckEQImpl<base::WaitableEvent *,base::WaitableEvent *>": {
            "offset": "0xBA1C0"
        },
        "logging::CheckEQImpl<base::sequence_manager::TimeDomain *,base::sequence_manager::TimeDomain *>": {
            "offset": "0xBA1C0"
        },
        "logging::CheckEQImpl<base::sequence_manager::internal::WorkQueueSets *,base::sequence_manager::internal::WorkQueueSets *>": {
            "offset": "0xBA1C0"
        },
        "logging::CheckEQImpl<enum base::debug::ActivityUserData::ValueType,enum base::debug::ActivityUserData::ValueType>": {
            "offset": "0x2C5A0"
        },
        "logging::CheckEQImpl<enum base::internal::RegisteredTaskSource::State,enum base::internal::RegisteredTaskSource::State>": {
            "offset": "0x102DC0"
        },
        "logging::CheckEQImpl<enum base::win::Version,enum base::win::Version>": {
            "offset": "0x102DC0"
        },
        "logging::CheckEQImpl<enum mojo::PlatformHandle::Type,enum mojo::PlatformHandle::Type>": {
            "offset": "0x102DC0"
        },
        "logging::CheckEQImpl<enum mojo::core::ports::Port::State,enum mojo::core::ports::Port::State>": {
            "offset": "0x102DC0"
        },
        "logging::CheckEQImpl<enum mojo_base::BigBuffer::StorageType,enum mojo_base::BigBuffer::StorageType>": {
            "offset": "0x102DC0"
        },
        "logging::CheckEQImpl<int,enum base::sequence_manager::internal::WorkDeduplicator::Flags>": {
            "offset": "0x102DC0"
        },
        "logging::CheckEQImpl<mojo::ScopedHandleBase<mojo::Handle> const *,mojo::ScopedHandleBase<mojo::Handle> const *>": {
            "offset": "0xBA1C0"
        },
        "logging::CheckEQImpl<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x1ECC0"
        },
        "logging::CheckEQImpl<std::nullptr_t,void *>": {
            "offset": "0x186520"
        },
        "logging::CheckEQImpl<unsigned __int64,unsigned __int64>": {
            "offset": "0xCB770"
        },
        "logging::CheckEQImpl<unsigned __int64,unsigned int>": {
            "offset": "0xA3210"
        },
        "logging::CheckEQImpl<unsigned int,unsigned __int64>": {
            "offset": "0x2C400"
        },
        "logging::CheckEQImpl<unsigned int,unsigned int>": {
            "offset": "0x1B1320"
        },
        "logging::CheckEQImpl<unsigned long,unsigned __int64>": {
            "offset": "0xDE70"
        },
        "logging::CheckGEImpl<unsigned __int64,unsigned __int64>": {
            "offset": "0x1415D0"
        },
        "logging::CheckGEImpl<unsigned __int64,unsigned int>": {
            "offset": "0x170E40"
        },
        "logging::CheckGTImpl<char const *,char const *>": {
            "offset": "0x20AD10"
        },
        "logging::CheckGTImpl<unsigned __int64,unsigned int>": {
            "offset": "0xB9760"
        },
        "logging::CheckLEImpl<__int64,__int64>": {
            "offset": "0xB1690"
        },
        "logging::CheckLEImpl<base::Value *,base::Value const *>": {
            "offset": "0x170FE0"
        },
        "logging::CheckLEImpl<base::Value const *,base::Value *>": {
            "offset": "0x170FE0"
        },
        "logging::CheckLEImpl<base::sequence_manager::EnqueueOrder,base::sequence_manager::EnqueueOrder>": {
            "offset": "0x366A0"
        },
        "logging::CheckLEImpl<unsigned __int64,unsigned __int64>": {
            "offset": "0x366A0"
        },
        "logging::CheckLEImpl<unsigned __int64,unsigned int>": {
            "offset": "0xA77D0"
        },
        "logging::CheckLTImpl<enum base::win::Version,enum base::win::Version>": {
            "offset": "0x1936A0"
        },
        "logging::CheckLTImpl<unsigned __int64,unsigned __int64>": {
            "offset": "0x773B0"
        },
        "logging::CheckLTImpl<unsigned __int64,unsigned int>": {
            "offset": "0x227510"
        },
        "logging::CheckLTImpl<unsigned int,unsigned __int64>": {
            "offset": "0x227370"
        },
        "logging::CheckNEImpl<base::LockFreeAddressHashSet::Node *,std::nullptr_t>": {
            "offset": "0xBCBF0"
        },
        "logging::CheckNEImpl<enum base::MemoryPressureListener::MemoryPressureLevel,enum base::MemoryPressureListener::MemoryPressureLevel>": {
            "offset": "0x6BF50"
        },
        "logging::CheckNEImpl<enum base::internal::TaskSource::RunStatus,enum base::internal::TaskSource::RunStatus>": {
            "offset": "0x6BF50"
        },
        "logging::CheckNEImpl<long,long>": {
            "offset": "0x4E410"
        },
        "logging::CheckNEImpl<unsigned __int64,unsigned int>": {
            "offset": "0x217250"
        },
        "logging::CheckNEImpl<unsigned int,unsigned int>": {
            "offset": "0x141780"
        },
        "logging::CheckNEImpl<unsigned long,unsigned __int64>": {
            "offset": "0x15D260"
        },
        "logging::CheckNEImpl<void *,std::nullptr_t>": {
            "offset": "0xBCBF0"
        },
        "logging::CheckNEImpl<void *,void *>": {
            "offset": "0xB0220"
        },
        "logging::CloseLogFile": {
            "offset": "0x67B50"
        },
        "logging::EventLogMessage::EventLogMessage": {
            "offset": "0xD9750"
        },
        "logging::EventLogMessage::stream": {
            "offset": "0x15A0"
        },
        "logging::EventLogMessage::~EventLogMessage": {
            "offset": "0xD9770"
        },
        "logging::GetLastSystemErrorCode": {
            "offset": "0x67B90"
        },
        "logging::GetLogFileFullPath": {
            "offset": "0x67BA0"
        },
        "logging::GetLogMessageHandler": {
            "offset": "0x67BF0"
        },
        "logging::GetMinLogLevel": {
            "offset": "0x67C00"
        },
        "logging::GetVlogLevelHelper": {
            "offset": "0x67C10"
        },
        "logging::GetVlogVerbosity": {
            "offset": "0x67E10"
        },
        "logging::IsLoggingToFileEnabled": {
            "offset": "0x68550"
        },
        "logging::LogErrorNotReached": {
            "offset": "0x68560"
        },
        "logging::LogEventProvider::GetInstance": {
            "offset": "0x690E0"
        },
        "logging::LogEventProvider::Initialize": {
            "offset": "0x691F0"
        },
        "logging::LogEventProvider::LogEventProvider": {
            "offset": "0x69010"
        },
        "logging::LogEventProvider::LogMessage": {
            "offset": "0x69220"
        },
        "logging::LogEventProvider::OnEventsDisabled": {
            "offset": "0x694A0"
        },
        "logging::LogEventProvider::OnEventsEnabled": {
            "offset": "0x694B0"
        },
        "logging::LogEventProvider::Uninitialize": {
            "offset": "0x69580"
        },
        "logging::LogEventProvider::~LogEventProvider": {
            "offset": "0x69040"
        },
        "logging::LogMessage::Init": {
            "offset": "0x67E30"
        },
        "logging::LogMessage::LogMessage": {
            "offset": "0x66870"
        },
        "logging::LogMessage::severity": {
            "offset": "0x1480"
        },
        "logging::LogMessage::str": {
            "offset": "0x1490"
        },
        "logging::LogMessage::stream": {
            "offset": "0x15A0"
        },
        "logging::LogMessage::~LogMessage": {
            "offset": "0x66AD0"
        },
        "logging::LoggingSettings::LoggingSettings": {
            "offset": "0x1030"
        },
        "logging::MakeCheckOpString<__int64,__int64>": {
            "offset": "0x2810"
        },
        "logging::MakeCheckOpString<__int64,int>": {
            "offset": "0x4B610"
        },
        "logging::MakeCheckOpString<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const *,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const *,base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<base::TaskExecutor *,std::nullptr_t>": {
            "offset": "0x108CE0"
        },
        "logging::MakeCheckOpString<base::TimeTicks,base::TimeTicks>": {
            "offset": "0x76D80"
        },
        "logging::MakeCheckOpString<base::Value *,base::Value const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<base::Value const *,base::Value const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<base::`anonymous namespace'::CFIDataRow const *,base::A0xa7c0c87f::CFIDataRow const *>": {
            "offset": "0xB1840"
        },
        "logging::MakeCheckOpString<base::internal::CheckedLockImpl const *,base::internal::CheckedLockImpl const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<bool,bool>": {
            "offset": "0x7ADB0"
        },
        "logging::MakeCheckOpString<double,double>": {
            "offset": "0xB9900"
        },
        "logging::MakeCheckOpString<enum base::sequence_manager::TaskQueue::QueuePriority,enum base::sequence_manager::TaskQueue::QueuePriority>": {
            "offset": "0xE2790"
        },
        "logging::MakeCheckOpString<enum base::subtle::PlatformSharedMemoryRegion::Mode,enum base::subtle::PlatformSharedMemoryRegion::Mode>": {
            "offset": "0x65A60"
        },
        "logging::MakeCheckOpString<int const *,int const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<int,__int64>": {
            "offset": "0x2C740"
        },
        "logging::MakeCheckOpString<int,enum base::BasePathKey>": {
            "offset": "0x65A60"
        },
        "logging::MakeCheckOpString<int,int>": {
            "offset": "0x65A60"
        },
        "logging::MakeCheckOpString<mojo::ScopedHandleBase<mojo::Handle> *,mojo::ScopedHandleBase<mojo::Handle> const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<mojo::core::ports::NodeName,mojo::core::ports::NodeName>": {
            "offset": "0x1E7990"
        },
        "logging::MakeCheckOpString<std::atomic<unsigned int>,unsigned int>": {
            "offset": "0x200FB0"
        },
        "logging::MakeCheckOpString<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x660E0"
        },
        "logging::MakeCheckOpString<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const *,std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<std::pair<unsigned int,mojo::internal::GenericValidationInfo> const *,std::pair<unsigned int,mojo::internal::GenericValidationInfo> const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<unsigned __int64,unsigned __int64>": {
            "offset": "0x1A30"
        },
        "logging::MakeCheckOpString<unsigned __int64,unsigned int>": {
            "offset": "0x66290"
        },
        "logging::MakeCheckOpString<unsigned char const *,unsigned char const *>": {
            "offset": "0x171330"
        },
        "logging::MakeCheckOpString<unsigned char,enum base::TaskTraitsExtensionStorage::ExtensionId>": {
            "offset": "0xE2790"
        },
        "logging::MakeCheckOpString<unsigned int const *,unsigned int const *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpString<unsigned int,unsigned __int64>": {
            "offset": "0x2670"
        },
        "logging::MakeCheckOpString<unsigned int,unsigned int>": {
            "offset": "0x1A660"
        },
        "logging::MakeCheckOpString<unsigned int,unsigned long>": {
            "offset": "0x65C00"
        },
        "logging::MakeCheckOpString<unsigned long,unsigned __int64>": {
            "offset": "0xE010"
        },
        "logging::MakeCheckOpString<unsigned long,unsigned int>": {
            "offset": "0x65DA0"
        },
        "logging::MakeCheckOpString<unsigned long,unsigned long>": {
            "offset": "0x65F40"
        },
        "logging::MakeCheckOpString<void *,void *>": {
            "offset": "0x1A800"
        },
        "logging::MakeCheckOpValueString": {
            "offset": "0x68600"
        },
        "logging::MatchVlogPattern": {
            "offset": "0x1804C0"
        },
        "logging::RawLog": {
            "offset": "0x68610"
        },
        "logging::ResetEventSourceForTesting": {
            "offset": "0xD9B10"
        },
        "logging::ScopedLogAssertHandler::ScopedLogAssertHandler": {
            "offset": "0x66980"
        },
        "logging::ScopedLogAssertHandler::~ScopedLogAssertHandler": {
            "offset": "0x67110"
        },
        "logging::SetEventSource": {
            "offset": "0xD9BC0"
        },
        "logging::SetLogItems": {
            "offset": "0x688B0"
        },
        "logging::SetLogMessageHandler": {
            "offset": "0x688D0"
        },
        "logging::SetLogPrefix": {
            "offset": "0x688E0"
        },
        "logging::SetMinLogLevel": {
            "offset": "0x68A10"
        },
        "logging::SetShowErrorDialogs": {
            "offset": "0x68A30"
        },
        "logging::ShouldCreateLogMessage": {
            "offset": "0x68A40"
        },
        "logging::SystemErrorCodeToString": {
            "offset": "0x68A70"
        },
        "logging::VlogInfo::GetMaxVlogLevel": {
            "offset": "0x180290"
        },
        "logging::VlogInfo::GetVlogLevel": {
            "offset": "0x1802A0"
        },
        "logging::VlogInfo::SetMaxVlogLevel": {
            "offset": "0x1808B0"
        },
        "logging::VlogInfo::VlogInfo": {
            "offset": "0x17FAB0"
        },
        "logging::VlogInfo::VmodulePattern::~VmodulePattern": {
            "offset": "0x1170"
        },
        "logging::VlogInfo::~VlogInfo": {
            "offset": "0x180280"
        },
        "logging::Win32ErrorLogMessage::Win32ErrorLogMessage": {
            "offset": "0x66AA0"
        },
        "logging::Win32ErrorLogMessage::stream": {
            "offset": "0x15B0"
        },
        "logging::Win32ErrorLogMessage::~Win32ErrorLogMessage": {
            "offset": "0x67130"
        },
        "logging::`anonymous namespace'::InitializeLogFileHandle": {
            "offset": "0x682C0"
        },
        "mojo::AssociateWithDisconnectedPipe": {
            "offset": "0x2034D0"
        },
        "mojo::AssociatedBinding<IPC::mojom::Channel,mojo::RawPtrImplRefTraits<IPC::mojom::Channel> >::~AssociatedBinding<IPC::mojom::Channel,mojo::RawPtrImplRefTraits<IPC::mojom::Channel> >": {
            "offset": "0x1A7290"
        },
        "mojo::AssociatedBindingBase::AssociatedBindingBase": {
            "offset": "0x202A90"
        },
        "mojo::AssociatedBindingBase::BindImpl": {
            "offset": "0x202B80"
        },
        "mojo::AssociatedBindingBase::Close": {
            "offset": "0x202D30"
        },
        "mojo::AssociatedBindingBase::CloseWithReason": {
            "offset": "0x202D50"
        },
        "mojo::AssociatedBindingBase::FlushForTesting": {
            "offset": "0x202D90"
        },
        "mojo::AssociatedBindingBase::SetFilter": {
            "offset": "0x202DA0"
        },
        "mojo::AssociatedBindingBase::is_bound": {
            "offset": "0x2AAC0"
        },
        "mojo::AssociatedBindingBase::set_connection_error_handler": {
            "offset": "0x202E70"
        },
        "mojo::AssociatedBindingBase::set_connection_error_with_reason_handler": {
            "offset": "0x202F30"
        },
        "mojo::AssociatedBindingBase::~AssociatedBindingBase": {
            "offset": "0x202AB0"
        },
        "mojo::AssociatedGroup::AssociatedGroup": {
            "offset": "0x291F0"
        },
        "mojo::AssociatedGroup::GetController": {
            "offset": "0x203180"
        },
        "mojo::AssociatedGroup::~AssociatedGroup": {
            "offset": "0x2030A0"
        },
        "mojo::AssociatedGroupController::AssociatedGroupController": {
            "offset": "0x199920"
        },
        "mojo::AssociatedGroupController::CreateScopedInterfaceEndpointHandle": {
            "offset": "0x2031D0"
        },
        "mojo::AssociatedGroupController::NotifyAssociation": {
            "offset": "0x203220"
        },
        "mojo::AssociatedGroupController::~AssociatedGroupController": {
            "offset": "0x2031B0"
        },
        "mojo::AssociatedInterfacePtrInfo<IPC::mojom::Channel>::~AssociatedInterfacePtrInfo<IPC::mojom::Channel>": {
            "offset": "0x19CE50"
        },
        "mojo::AssociatedInterfaceRequest<IPC::mojom::Channel>::~AssociatedInterfaceRequest<IPC::mojom::Channel>": {
            "offset": "0x19CE50"
        },
        "mojo::AssociatedReceiver<IPC::mojom::Channel,mojo::RawPtrImplRefTraits<IPC::mojom::Channel> >::Bind": {
            "offset": "0x1A7610"
        },
        "mojo::AssociatedReceiver<IPC::mojom::Channel,mojo::RawPtrImplRefTraits<IPC::mojom::Channel> >::~AssociatedReceiver<IPC::mojom::Channel,mojo::RawPtrImplRefTraits<IPC::mojom::Channel> >": {
            "offset": "0x1A7290"
        },
        "mojo::AssociatedRemote<IPC::mojom::Channel>::Bind": {
            "offset": "0x1AC930"
        },
        "mojo::AssociatedRemote<IPC::mojom::Channel>::~AssociatedRemote<IPC::mojom::Channel>": {
            "offset": "0x19CE10"
        },
        "mojo::AsyncFlusher::AsyncFlusher": {
            "offset": "0x1BD0"
        },
        "mojo::AsyncFlusher::PassPipe": {
            "offset": "0x2005F0"
        },
        "mojo::AsyncFlusher::SetPipe": {
            "offset": "0x200610"
        },
        "mojo::AsyncFlusher::~AsyncFlusher": {
            "offset": "0x200580"
        },
        "mojo::BinderMap::AddGenericBinder": {
            "offset": "0x200B40"
        },
        "mojo::BinderMap::Bind": {
            "offset": "0x200D60"
        },
        "mojo::BinderMap::BinderMap": {
            "offset": "0x2009C0"
        },
        "mojo::BinderMap::CanBind": {
            "offset": "0x200EB0"
        },
        "mojo::BinderMap::~BinderMap": {
            "offset": "0x200A40"
        },
        "mojo::BlockingCopyFromString": {
            "offset": "0x233100"
        },
        "mojo::BlockingCopyToString": {
            "offset": "0x2334E0"
        },
        "mojo::ConnectionGroup::AddGroupRef": {
            "offset": "0x2017E0"
        },
        "mojo::ConnectionGroup::ConnectionGroup": {
            "offset": "0x2011F0"
        },
        "mojo::ConnectionGroup::Create": {
            "offset": "0x2017F0"
        },
        "mojo::ConnectionGroup::GetNumRefsForTesting": {
            "offset": "0x19A820"
        },
        "mojo::ConnectionGroup::Ref::GetGroupForTesting": {
            "offset": "0x108720"
        },
        "mojo::ConnectionGroup::Ref::HasZeroRefs": {
            "offset": "0x201950"
        },
        "mojo::ConnectionGroup::Ref::Ref": {
            "offset": "0x2013F0"
        },
        "mojo::ConnectionGroup::Ref::SetParentGroup": {
            "offset": "0x201ED0"
        },
        "mojo::ConnectionGroup::Ref::WeakCopy": {
            "offset": "0x2020E0"
        },
        "mojo::ConnectionGroup::Ref::reset": {
            "offset": "0x2021A0"
        },
        "mojo::ConnectionGroup::Ref::~Ref": {
            "offset": "0x201600"
        },
        "mojo::ConnectionGroup::ReleaseGroupRef": {
            "offset": "0x201A00"
        },
        "mojo::ConnectionGroup::SetParentGroup": {
            "offset": "0x201D80"
        },
        "mojo::ConnectionGroup::~ConnectionGroup": {
            "offset": "0x2014F0"
        },
        "mojo::CoreLibraryInitializer::CoreLibraryInitializer": {
            "offset": "0x1FB7A0"
        },
        "mojo::CreateReadOnlySharedMemoryRegion": {
            "offset": "0x1FF260"
        },
        "mojo::CreateTrap": {
            "offset": "0x238850"
        },
        "mojo::CreateUnsafeSharedMemoryRegion": {
            "offset": "0x1FF310"
        },
        "mojo::CreateWritableSharedMemoryRegion": {
            "offset": "0x1FF380"
        },
        "mojo::DataPipe::DataPipe": {
            "offset": "0x231110"
        },
        "mojo::DataPipe::~DataPipe": {
            "offset": "0x203490"
        },
        "mojo::DataPipeDrainer::DataPipeDrainer": {
            "offset": "0x231330"
        },
        "mojo::DataPipeDrainer::ReadData": {
            "offset": "0x231630"
        },
        "mojo::DataPipeDrainer::WaitComplete": {
            "offset": "0x231840"
        },
        "mojo::DataPipeDrainer::~DataPipeDrainer": {
            "offset": "0x231570"
        },
        "mojo::DataPipeProducer::DataPipeProducer": {
            "offset": "0x231BB0"
        },
        "mojo::DataPipeProducer::DataSource::Abort": {
            "offset": "0x12B0"
        },
        "mojo::DataPipeProducer::DataSource::~DataSource": {
            "offset": "0x233710"
        },
        "mojo::DataPipeProducer::InitializeNewRequest": {
            "offset": "0x232350"
        },
        "mojo::DataPipeProducer::OnWriteComplete": {
            "offset": "0x232820"
        },
        "mojo::DataPipeProducer::SequenceState::Finish": {
            "offset": "0x2321D0"
        },
        "mojo::DataPipeProducer::SequenceState::OnHandleReady": {
            "offset": "0x232770"
        },
        "mojo::DataPipeProducer::SequenceState::SequenceState": {
            "offset": "0x231C10"
        },
        "mojo::DataPipeProducer::SequenceState::StartOnSequence": {
            "offset": "0x232C80"
        },
        "mojo::DataPipeProducer::SequenceState::TransferSomeBytes": {
            "offset": "0x232E20"
        },
        "mojo::DataPipeProducer::Write": {
            "offset": "0x232FE0"
        },
        "mojo::DataPipeProducer::~DataPipeProducer": {
            "offset": "0x231F20"
        },
        "mojo::DisconnectReason::~DisconnectReason": {
            "offset": "0x2F130"
        },
        "mojo::FileDataSource::ConvertFileErrorToMojoResult": {
            "offset": "0x233830"
        },
        "mojo::FileDataSource::FileDataSource": {
            "offset": "0x233650"
        },
        "mojo::FileDataSource::GetLength": {
            "offset": "0x2338B0"
        },
        "mojo::FileDataSource::Read": {
            "offset": "0x2338C0"
        },
        "mojo::FileDataSource::SetRange": {
            "offset": "0x2339C0"
        },
        "mojo::FileDataSource::~FileDataSource": {
            "offset": "0x233720"
        },
        "mojo::FilteredDataSource::Abort": {
            "offset": "0x233BE0"
        },
        "mojo::FilteredDataSource::FilteredDataSource": {
            "offset": "0x2339F0"
        },
        "mojo::FilteredDataSource::GetLength": {
            "offset": "0x16DFC0"
        },
        "mojo::FilteredDataSource::Read": {
            "offset": "0x233C20"
        },
        "mojo::FilteredDataSource::~FilteredDataSource": {
            "offset": "0x233AD0"
        },
        "mojo::GenericPendingReceiver::GenericPendingReceiver": {
            "offset": "0x202450"
        },
        "mojo::GenericPendingReceiver::PassPipe": {
            "offset": "0x202520"
        },
        "mojo::GenericPendingReceiver::PassPipeIfNameIs": {
            "offset": "0x2025D0"
        },
        "mojo::GenericPendingReceiver::interface_name": {
            "offset": "0x3FB0"
        },
        "mojo::GenericPendingReceiver::is_valid": {
            "offset": "0x1FED70"
        },
        "mojo::GenericPendingReceiver::pipe": {
            "offset": "0x1FF070"
        },
        "mojo::GenericPendingReceiver::reset": {
            "offset": "0x2026E0"
        },
        "mojo::GenericPendingReceiver::~GenericPendingReceiver": {
            "offset": "0x202470"
        },
        "mojo::GetBadMessageCallback": {
            "offset": "0x2148D0"
        },
        "mojo::Handle::Close": {
            "offset": "0x19A360"
        },
        "mojo::HandleSignalTracker::Arm": {
            "offset": "0x234000"
        },
        "mojo::HandleSignalTracker::HandleSignalTracker": {
            "offset": "0x233C90"
        },
        "mojo::HandleSignalTracker::OnNotify": {
            "offset": "0x234230"
        },
        "mojo::HandleSignalTracker::last_known_state": {
            "offset": "0x15A0"
        },
        "mojo::HandleSignalTracker::set_notification_callback": {
            "offset": "0x1E610"
        },
        "mojo::HandleSignalTracker::~HandleSignalTracker": {
            "offset": "0x233FD0"
        },
        "mojo::HandleSignalsState::HandleSignalsState": {
            "offset": "0x163A50"
        },
        "mojo::HandleSignalsState::can_satisfy_any": {
            "offset": "0x1992E0"
        },
        "mojo::HandleSignalsState::equals": {
            "offset": "0x1991D0"
        },
        "mojo::HandleSignalsState::never_peer_closed": {
            "offset": "0x1992F0"
        },
        "mojo::HandleSignalsState::never_peer_remote": {
            "offset": "0x199300"
        },
        "mojo::HandleSignalsState::never_readable": {
            "offset": "0x199310"
        },
        "mojo::HandleSignalsState::never_writable": {
            "offset": "0x199320"
        },
        "mojo::HandleSignalsState::peer_closed": {
            "offset": "0x199330"
        },
        "mojo::HandleSignalsState::peer_remote": {
            "offset": "0x41100"
        },
        "mojo::HandleSignalsState::quota_exceeded": {
            "offset": "0x199340"
        },
        "mojo::HandleSignalsState::readable": {
            "offset": "0x199350"
        },
        "mojo::HandleSignalsState::satisfies_all": {
            "offset": "0x199360"
        },
        "mojo::HandleSignalsState::satisfies_any": {
            "offset": "0x199370"
        },
        "mojo::HandleSignalsState::writable": {
            "offset": "0x199390"
        },
        "mojo::IncomingInvitation::Accept": {
            "offset": "0x234350"
        },
        "mojo::IncomingInvitation::AcceptAsync": {
            "offset": "0x234480"
        },
        "mojo::IncomingInvitation::AcceptIsolated": {
            "offset": "0x2345B0"
        },
        "mojo::IncomingInvitation::ExtractMessagePipe": {
            "offset": "0x234A80"
        },
        "mojo::IncomingInvitation::IncomingInvitation": {
            "offset": "0x1BD0"
        },
        "mojo::IncomingInvitation::~IncomingInvitation": {
            "offset": "0x200580"
        },
        "mojo::InlinedStructPtr<mojo::interface_control::RequireVersion>::~InlinedStructPtr<mojo::interface_control::RequireVersion>": {
            "offset": "0xC1610"
        },
        "mojo::InlinedStructPtr<mojo::pipe_control::DisconnectReason>::Take": {
            "offset": "0x244140"
        },
        "mojo::InlinedStructPtr<mojo::pipe_control::DisconnectReason>::~InlinedStructPtr<mojo::pipe_control::DisconnectReason>": {
            "offset": "0x1C2A00"
        },
        "mojo::InterfaceEndpointClient::Accept": {
            "offset": "0x20EFB0"
        },
        "mojo::InterfaceEndpointClient::AcceptEnableIdleTracking": {
            "offset": "0x20F0F0"
        },
        "mojo::InterfaceEndpointClient::AcceptMessageAck": {
            "offset": "0x20F380"
        },
        "mojo::InterfaceEndpointClient::AcceptNotifyIdle": {
            "offset": "0x20F3A0"
        },
        "mojo::InterfaceEndpointClient::AcceptWithResponder": {
            "offset": "0x20F3E0"
        },
        "mojo::InterfaceEndpointClient::CloseWithReason": {
            "offset": "0x20F440"
        },
        "mojo::InterfaceEndpointClient::FlushAsyncForTesting": {
            "offset": "0x20F6A0"
        },
        "mojo::InterfaceEndpointClient::FlushForTesting": {
            "offset": "0x20F6F0"
        },
        "mojo::InterfaceEndpointClient::GetNumUnackedMessagesForTesting": {
            "offset": "0x19A830"
        },
        "mojo::InterfaceEndpointClient::HandleIncomingMessage": {
            "offset": "0x20F700"
        },
        "mojo::InterfaceEndpointClient::HandleIncomingMessageThunk::Accept": {
            "offset": "0x20EFA0"
        },
        "mojo::InterfaceEndpointClient::HandleIncomingMessageThunk::~HandleIncomingMessageThunk": {
            "offset": "0x199B80"
        },
        "mojo::InterfaceEndpointClient::HandleValidatedMessage": {
            "offset": "0x20F7B0"
        },
        "mojo::InterfaceEndpointClient::InitControllerIfNecessary": {
            "offset": "0x20FD00"
        },
        "mojo::InterfaceEndpointClient::InterfaceEndpointClient": {
            "offset": "0x20E670"
        },
        "mojo::InterfaceEndpointClient::MaybeSendNotifyIdle": {
            "offset": "0x210020"
        },
        "mojo::InterfaceEndpointClient::MaybeStartIdleTimer": {
            "offset": "0x210060"
        },
        "mojo::InterfaceEndpointClient::NotifyError": {
            "offset": "0x210260"
        },
        "mojo::InterfaceEndpointClient::OnAssociationEvent": {
            "offset": "0x210500"
        },
        "mojo::InterfaceEndpointClient::PassHandle": {
            "offset": "0x2106F0"
        },
        "mojo::InterfaceEndpointClient::PrefersSerializedMessages": {
            "offset": "0x210860"
        },
        "mojo::InterfaceEndpointClient::QueryVersion": {
            "offset": "0x2108E0"
        },
        "mojo::InterfaceEndpointClient::RaiseError": {
            "offset": "0x210930"
        },
        "mojo::InterfaceEndpointClient::RequireVersion": {
            "offset": "0x2109E0"
        },
        "mojo::InterfaceEndpointClient::SendControlMessage": {
            "offset": "0x210B30"
        },
        "mojo::InterfaceEndpointClient::SendControlMessageWithResponder": {
            "offset": "0x210B40"
        },
        "mojo::InterfaceEndpointClient::SendMessageW": {
            "offset": "0x210BA0"
        },
        "mojo::InterfaceEndpointClient::SendMessageWithResponder": {
            "offset": "0x210D60"
        },
        "mojo::InterfaceEndpointClient::SetFilter": {
            "offset": "0x211580"
        },
        "mojo::InterfaceEndpointClient::SetIdleHandler": {
            "offset": "0x2115E0"
        },
        "mojo::InterfaceEndpointClient::SetIdleTrackingEnabledCallback": {
            "offset": "0x211630"
        },
        "mojo::InterfaceEndpointClient::SetNextCallLocation": {
            "offset": "0x19ABD0"
        },
        "mojo::InterfaceEndpointClient::associated_group": {
            "offset": "0x211650"
        },
        "mojo::InterfaceEndpointClient::encountered_error": {
            "offset": "0x19B1A0"
        },
        "mojo::InterfaceEndpointClient::force_outgoing_messages_async": {
            "offset": "0x19B2E0"
        },
        "mojo::InterfaceEndpointClient::has_pending_responders": {
            "offset": "0x19B650"
        },
        "mojo::InterfaceEndpointClient::interface_name": {
            "offset": "0x19B990"
        },
        "mojo::InterfaceEndpointClient::set_connection_error_handler": {
            "offset": "0x19BDB0"
        },
        "mojo::InterfaceEndpointClient::set_connection_error_with_reason_handler": {
            "offset": "0x19BFF0"
        },
        "mojo::InterfaceEndpointClient::~InterfaceEndpointClient": {
            "offset": "0x20EAC0"
        },
        "mojo::IsolatedConnection::Connect": {
            "offset": "0x2355F0"
        },
        "mojo::IsolatedConnection::IsolatedConnection": {
            "offset": "0x2353B0"
        },
        "mojo::IsolatedConnection::~IsolatedConnection": {
            "offset": "0x2353D0"
        },
        "mojo::Message::AttachHandlesFromSerializationContext": {
            "offset": "0x2136D0"
        },
        "mojo::Message::CreateFromMessageHandle": {
            "offset": "0x213850"
        },
        "mojo::Message::DeserializeAssociatedEndpointHandles": {
            "offset": "0x214310"
        },
        "mojo::Message::IsNull": {
            "offset": "0xAEE0"
        },
        "mojo::Message::Message": {
            "offset": "0x212DC0"
        },
        "mojo::Message::NotifyBadMessage": {
            "offset": "0x214970"
        },
        "mojo::Message::Reset": {
            "offset": "0x214BD0"
        },
        "mojo::Message::SerializeAssociatedEndpointHandles": {
            "offset": "0x214CC0"
        },
        "mojo::Message::SerializeIfNecessary": {
            "offset": "0x2151B0"
        },
        "mojo::Message::TakeMojoMessage": {
            "offset": "0x2155C0"
        },
        "mojo::Message::TakeUnserializedContext": {
            "offset": "0x2156E0"
        },
        "mojo::Message::associated_endpoint_handles": {
            "offset": "0x19AE80"
        },
        "mojo::Message::data": {
            "offset": "0x19AFB0"
        },
        "mojo::Message::data_num_bytes": {
            "offset": "0x19B060"
        },
        "mojo::Message::handles": {
            "offset": "0xD5E0"
        },
        "mojo::Message::has_flag": {
            "offset": "0x19B5D0"
        },
        "mojo::Message::header": {
            "offset": "0x19B710"
        },
        "mojo::Message::header_v1": {
            "offset": "0x19B7B0"
        },
        "mojo::Message::header_v2": {
            "offset": "0x19B8D0"
        },
        "mojo::Message::heap_profiler_tag": {
            "offset": "0x19B960"
        },
        "mojo::Message::interface_id": {
            "offset": "0x19B970"
        },
        "mojo::Message::is_serialized": {
            "offset": "0x19B9C0"
        },
        "mojo::Message::mutable_associated_endpoint_handles": {
            "offset": "0x19AE80"
        },
        "mojo::Message::mutable_data": {
            "offset": "0x19B710"
        },
        "mojo::Message::mutable_handles": {
            "offset": "0xD5E0"
        },
        "mojo::Message::mutable_payload": {
            "offset": "0x19BB10"
        },
        "mojo::Message::name": {
            "offset": "0x19BB20"
        },
        "mojo::Message::payload": {
            "offset": "0x215FF0"
        },
        "mojo::Message::payload_buffer": {
            "offset": "0x15A0"
        },
        "mojo::Message::payload_interface_ids": {
            "offset": "0x2160D0"
        },
        "mojo::Message::payload_num_bytes": {
            "offset": "0x216130"
        },
        "mojo::Message::payload_num_interface_ids": {
            "offset": "0x216370"
        },
        "mojo::Message::receiver_connection_group": {
            "offset": "0xE3BB0"
        },
        "mojo::Message::request_id": {
            "offset": "0x19BB60"
        },
        "mojo::Message::set_heap_profiler_tag": {
            "offset": "0x19C160"
        },
        "mojo::Message::set_interface_id": {
            "offset": "0x19C220"
        },
        "mojo::Message::set_receiver_connection_group": {
            "offset": "0x19C260"
        },
        "mojo::Message::set_request_id": {
            "offset": "0x19C270"
        },
        "mojo::Message::version": {
            "offset": "0x19C430"
        },
        "mojo::Message::~Message": {
            "offset": "0x213020"
        },
        "mojo::MessageDispatcher::Accept": {
            "offset": "0x216640"
        },
        "mojo::MessageDispatcher::MessageDispatcher": {
            "offset": "0x216420"
        },
        "mojo::MessageDispatcher::SetFilter": {
            "offset": "0x216790"
        },
        "mojo::MessageDispatcher::SetSink": {
            "offset": "0x216860"
        },
        "mojo::MessageDispatcher::SetValidator": {
            "offset": "0x2168F0"
        },
        "mojo::MessageDispatcher::~MessageDispatcher": {
            "offset": "0x216470"
        },
        "mojo::MessageFilter::MessageFilter": {
            "offset": "0x1999B0"
        },
        "mojo::MessageFilter::~MessageFilter": {
            "offset": "0x199B00"
        },
        "mojo::MessageHeaderValidator::Accept": {
            "offset": "0x216B90"
        },
        "mojo::MessageHeaderValidator::MessageHeaderValidator": {
            "offset": "0x199A00"
        },
        "mojo::MessageHeaderValidator::SetDescription": {
            "offset": "0x216EB0"
        },
        "mojo::MessageHeaderValidator::~MessageHeaderValidator": {
            "offset": "0x199B10"
        },
        "mojo::MessagePipe::MessagePipe": {
            "offset": "0x203260"
        },
        "mojo::MessagePipe::~MessagePipe": {
            "offset": "0x203490"
        },
        "mojo::MessageReceiver::MessageReceiver": {
            "offset": "0x199A40"
        },
        "mojo::MessageReceiver::PrefersSerializedMessages": {
            "offset": "0x12C0"
        },
        "mojo::MessageReceiver::~MessageReceiver": {
            "offset": "0x199B80"
        },
        "mojo::MessageReceiverWithResponder::~MessageReceiverWithResponder": {
            "offset": "0x199B80"
        },
        "mojo::MessageReceiverWithResponderStatus::~MessageReceiverWithResponderStatus": {
            "offset": "0x199B80"
        },
        "mojo::MessageReceiverWithStatus::~MessageReceiverWithStatus": {
            "offset": "0x199B80"
        },
        "mojo::NamedPlatformChannel::ConnectToServer": {
            "offset": "0x22EDE0"
        },
        "mojo::NamedPlatformChannel::CreateClientEndpoint": {
            "offset": "0x22F0E0"
        },
        "mojo::NamedPlatformChannel::CreateServerEndpoint": {
            "offset": "0x22F3B0"
        },
        "mojo::NamedPlatformChannel::GetServerName": {
            "offset": "0x3FB0"
        },
        "mojo::NamedPlatformChannel::NamedPlatformChannel": {
            "offset": "0x22EC70"
        },
        "mojo::NamedPlatformChannel::Options::Options": {
            "offset": "0x1BBA60"
        },
        "mojo::NamedPlatformChannel::Options::~Options": {
            "offset": "0x181E80"
        },
        "mojo::NamedPlatformChannel::PassServerNameOnCommandLine": {
            "offset": "0x22EF90"
        },
        "mojo::NamedPlatformChannel::ServerNameFromUTF8": {
            "offset": "0x22F080"
        },
        "mojo::NamedPlatformChannel::TakeServerEndpoint": {
            "offset": "0x1BC170"
        },
        "mojo::NamedPlatformChannel::server_endpoint": {
            "offset": "0xD460"
        },
        "mojo::NamedPlatformChannel::~NamedPlatformChannel": {
            "offset": "0x22ECF0"
        },
        "mojo::OutgoingInvitation::AttachMessagePipe": {
            "offset": "0x234880"
        },
        "mojo::OutgoingInvitation::ExtractMessagePipe": {
            "offset": "0x234C30"
        },
        "mojo::OutgoingInvitation::OutgoingInvitation": {
            "offset": "0x2342A0"
        },
        "mojo::OutgoingInvitation::Send": {
            "offset": "0x234E80"
        },
        "mojo::OutgoingInvitation::SendAsync": {
            "offset": "0x234F40"
        },
        "mojo::OutgoingInvitation::SendIsolated": {
            "offset": "0x2352C0"
        },
        "mojo::OutgoingInvitation::~OutgoingInvitation": {
            "offset": "0x200580"
        },
        "mojo::PassThroughFilter::Accept": {
            "offset": "0xAAC0"
        },
        "mojo::PassThroughFilter::PassThroughFilter": {
            "offset": "0x212ED0"
        },
        "mojo::PassThroughFilter::~PassThroughFilter": {
            "offset": "0x199B80"
        },
        "mojo::PendingAssociatedReceiver<IPC::mojom::Channel>::~PendingAssociatedReceiver<IPC::mojom::Channel>": {
            "offset": "0x19CE50"
        },
        "mojo::PendingAssociatedReceiver<IPC::mojom::GenericInterface>::~PendingAssociatedReceiver<IPC::mojom::GenericInterface>": {
            "offset": "0x19CE50"
        },
        "mojo::PendingAssociatedRemote<IPC::mojom::Channel>::~PendingAssociatedRemote<IPC::mojom::Channel>": {
            "offset": "0x19CE50"
        },
        "mojo::PendingFlush::PassPipe": {
            "offset": "0x22C8B0"
        },
        "mojo::PendingFlush::PendingFlush": {
            "offset": "0x22C830"
        },
        "mojo::PendingFlush::~PendingFlush": {
            "offset": "0x200580"
        },
        "mojo::PipeControlMessageHandler::Accept": {
            "offset": "0x2219E0"
        },
        "mojo::PipeControlMessageHandler::IsPipeControlMessage": {
            "offset": "0x221A90"
        },
        "mojo::PipeControlMessageHandler::PipeControlMessageHandler": {
            "offset": "0x2217D0"
        },
        "mojo::PipeControlMessageHandler::RunOrClosePipe": {
            "offset": "0x221AB0"
        },
        "mojo::PipeControlMessageHandler::SetDescription": {
            "offset": "0x216EB0"
        },
        "mojo::PipeControlMessageHandler::Validate": {
            "offset": "0x2221E0"
        },
        "mojo::PipeControlMessageHandler::~PipeControlMessageHandler": {
            "offset": "0x221830"
        },
        "mojo::PipeControlMessageHandlerDelegate::~PipeControlMessageHandlerDelegate": {
            "offset": "0x1AAF20"
        },
        "mojo::PipeControlMessageProxy::ConstructPeerEndpointClosedMessage": {
            "offset": "0x222320"
        },
        "mojo::PipeControlMessageProxy::FlushAsync": {
            "offset": "0x222900"
        },
        "mojo::PipeControlMessageProxy::NotifyPeerEndpointClosed": {
            "offset": "0x222A80"
        },
        "mojo::PipeControlMessageProxy::PausePeerUntilFlushCompletes": {
            "offset": "0x222AE0"
        },
        "mojo::PipeControlMessageProxy::PipeControlMessageProxy": {
            "offset": "0x2FB0"
        },
        "mojo::PlatformChannel::PlatformChannel": {
            "offset": "0x22F960"
        },
        "mojo::PlatformChannel::PrepareToPassRemoteEndpoint": {
            "offset": "0x230110"
        },
        "mojo::PlatformChannel::RecoverPassedEndpointFromCommandLine": {
            "offset": "0x230280"
        },
        "mojo::PlatformChannel::RecoverPassedEndpointFromString": {
            "offset": "0x230370"
        },
        "mojo::PlatformChannel::RemoteProcessLaunchAttempted": {
            "offset": "0x230500"
        },
        "mojo::PlatformChannel::TakeLocalEndpoint": {
            "offset": "0x1E35D0"
        },
        "mojo::PlatformChannel::TakeRemoteEndpoint": {
            "offset": "0x1BBB50"
        },
        "mojo::PlatformChannel::local_endpoint": {
            "offset": "0x3FB0"
        },
        "mojo::PlatformChannel::remote_endpoint": {
            "offset": "0x15B0"
        },
        "mojo::PlatformChannel::~PlatformChannel": {
            "offset": "0x22FA50"
        },
        "mojo::PlatformChannelEndpoint::Clone": {
            "offset": "0x2305C0"
        },
        "mojo::PlatformChannelEndpoint::PlatformChannelEndpoint": {
            "offset": "0x230570"
        },
        "mojo::PlatformChannelEndpoint::TakePlatformHandle": {
            "offset": "0x1BB370"
        },
        "mojo::PlatformChannelEndpoint::is_valid": {
            "offset": "0x19F7C0"
        },
        "mojo::PlatformChannelEndpoint::platform_handle": {
            "offset": "0x3FB0"
        },
        "mojo::PlatformChannelEndpoint::reset": {
            "offset": "0x230610"
        },
        "mojo::PlatformChannelEndpoint::~PlatformChannelEndpoint": {
            "offset": "0x230590"
        },
        "mojo::PlatformChannelServerEndpoint::Clone": {
            "offset": "0x2305C0"
        },
        "mojo::PlatformChannelServerEndpoint::PlatformChannelServerEndpoint": {
            "offset": "0x230570"
        },
        "mojo::PlatformChannelServerEndpoint::TakePlatformHandle": {
            "offset": "0x1BB370"
        },
        "mojo::PlatformChannelServerEndpoint::is_valid": {
            "offset": "0x19F7C0"
        },
        "mojo::PlatformChannelServerEndpoint::platform_handle": {
            "offset": "0x3FB0"
        },
        "mojo::PlatformChannelServerEndpoint::reset": {
            "offset": "0x230610"
        },
        "mojo::PlatformChannelServerEndpoint::~PlatformChannelServerEndpoint": {
            "offset": "0x230590"
        },
        "mojo::PlatformHandle::Clone": {
            "offset": "0x230750"
        },
        "mojo::PlatformHandle::FromMojoPlatformHandle": {
            "offset": "0x230A80"
        },
        "mojo::PlatformHandle::GetHandle": {
            "offset": "0x15A0"
        },
        "mojo::PlatformHandle::PlatformHandle": {
            "offset": "0x2013F0"
        },
        "mojo::PlatformHandle::ReleaseHandle": {
            "offset": "0x19EDE0"
        },
        "mojo::PlatformHandle::TakeHandle": {
            "offset": "0x19F170"
        },
        "mojo::PlatformHandle::ToMojoPlatformHandle": {
            "offset": "0x230B70"
        },
        "mojo::PlatformHandle::is_handle": {
            "offset": "0xAAE0"
        },
        "mojo::PlatformHandle::is_valid": {
            "offset": "0x19F7C0"
        },
        "mojo::PlatformHandle::is_valid_handle": {
            "offset": "0x19F7C0"
        },
        "mojo::PlatformHandle::release": {
            "offset": "0x230E60"
        },
        "mojo::PlatformHandle::reset": {
            "offset": "0x230EB0"
        },
        "mojo::PlatformHandle::type": {
            "offset": "0x1480"
        },
        "mojo::PlatformHandle::~PlatformHandle": {
            "offset": "0x2306D0"
        },
        "mojo::ReadMessageRaw": {
            "offset": "0x2358A0"
        },
        "mojo::ReportBadMessage": {
            "offset": "0x214B10"
        },
        "mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>::~ScopedHandleBase<mojo::DataPipeConsumerHandle>": {
            "offset": "0x19CE60"
        },
        "mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>::~ScopedHandleBase<mojo::DataPipeProducerHandle>": {
            "offset": "0x19CE60"
        },
        "mojo::ScopedHandleBase<mojo::Handle>::From<mojo::Handle>": {
            "offset": "0x1B14C0"
        },
        "mojo::ScopedHandleBase<mojo::Handle>::From<mojo::MessagePipeHandle>": {
            "offset": "0x1B14C0"
        },
        "mojo::ScopedHandleBase<mojo::Handle>::From<mojo::SharedBufferHandle>": {
            "offset": "0x1B14C0"
        },
        "mojo::ScopedHandleBase<mojo::Handle>::~ScopedHandleBase<mojo::Handle>": {
            "offset": "0x19CE60"
        },
        "mojo::ScopedHandleBase<mojo::InvitationHandle>::~ScopedHandleBase<mojo::InvitationHandle>": {
            "offset": "0x19CE60"
        },
        "mojo::ScopedHandleBase<mojo::MessageHandle>::CloseIfNecessary": {
            "offset": "0x206590"
        },
        "mojo::ScopedHandleBase<mojo::MessageHandle>::~ScopedHandleBase<mojo::MessageHandle>": {
            "offset": "0x205B40"
        },
        "mojo::ScopedHandleBase<mojo::MessagePipeHandle>::~ScopedHandleBase<mojo::MessagePipeHandle>": {
            "offset": "0x19CE60"
        },
        "mojo::ScopedHandleBase<mojo::SharedBufferHandle>::CloseIfNecessary": {
            "offset": "0x1FD680"
        },
        "mojo::ScopedHandleBase<mojo::SharedBufferHandle>::~ScopedHandleBase<mojo::SharedBufferHandle>": {
            "offset": "0x1FD320"
        },
        "mojo::ScopedHandleBase<mojo::TrapHandle>::CloseIfNecessary": {
            "offset": "0x23AFB0"
        },
        "mojo::ScopedHandleBase<mojo::TrapHandle>::~ScopedHandleBase<mojo::TrapHandle>": {
            "offset": "0x236960"
        },
        "mojo::ScopedInterfaceEndpointHandle::CreateGroupControllerGetter": {
            "offset": "0x224EF0"
        },
        "mojo::ScopedInterfaceEndpointHandle::CreatePairPendingAssociation": {
            "offset": "0x224FF0"
        },
        "mojo::ScopedInterfaceEndpointHandle::NotifyAssociation": {
            "offset": "0x225520"
        },
        "mojo::ScopedInterfaceEndpointHandle::ResetInternal": {
            "offset": "0x225C40"
        },
        "mojo::ScopedInterfaceEndpointHandle::ResetWithReason": {
            "offset": "0x225D10"
        },
        "mojo::ScopedInterfaceEndpointHandle::ScopedInterfaceEndpointHandle": {
            "offset": "0x224890"
        },
        "mojo::ScopedInterfaceEndpointHandle::SetAssociationEventHandler": {
            "offset": "0x225F20"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::Close": {
            "offset": "0x224D40"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::InitPendingState": {
            "offset": "0x2253B0"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::NotifyAssociation": {
            "offset": "0x2255D0"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::OnAssociated": {
            "offset": "0x2257A0"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::OnPeerClosedBeforeAssociation": {
            "offset": "0x2259F0"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::RunAssociationEventHandler": {
            "offset": "0x225DC0"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::SetAssociationEventHandler": {
            "offset": "0x225F70"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::group_controller": {
            "offset": "0x226200"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::id": {
            "offset": "0x226290"
        },
        "mojo::ScopedInterfaceEndpointHandle::State::~State": {
            "offset": "0x224A80"
        },
        "mojo::ScopedInterfaceEndpointHandle::disconnect_reason": {
            "offset": "0x226170"
        },
        "mojo::ScopedInterfaceEndpointHandle::group_controller": {
            "offset": "0x2261E0"
        },
        "mojo::ScopedInterfaceEndpointHandle::id": {
            "offset": "0x226270"
        },
        "mojo::ScopedInterfaceEndpointHandle::is_valid": {
            "offset": "0x226300"
        },
        "mojo::ScopedInterfaceEndpointHandle::pending_association": {
            "offset": "0x226380"
        },
        "mojo::ScopedInterfaceEndpointHandle::reset": {
            "offset": "0x2263F0"
        },
        "mojo::ScopedInterfaceEndpointHandle::~ScopedInterfaceEndpointHandle": {
            "offset": "0x224A10"
        },
        "mojo::SequenceLocalSyncEventWatcher::AllowWokenUpBySyncWatchOnSameSequence": {
            "offset": "0x226BC0"
        },
        "mojo::SequenceLocalSyncEventWatcher::Registration::~Registration": {
            "offset": "0x226900"
        },
        "mojo::SequenceLocalSyncEventWatcher::ResetEvent": {
            "offset": "0x227050"
        },
        "mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::GetStorageSlot": {
            "offset": "0x226BD0"
        },
        "mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::OnEventSignaled": {
            "offset": "0x226C50"
        },
        "mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::RegisterWatcher": {
            "offset": "0x226E50"
        },
        "mojo::SequenceLocalSyncEventWatcher::SequenceLocalSyncEventWatcher": {
            "offset": "0x226760"
        },
        "mojo::SequenceLocalSyncEventWatcher::SignalEvent": {
            "offset": "0x2270E0"
        },
        "mojo::SequenceLocalSyncEventWatcher::SyncWatch": {
            "offset": "0x227220"
        },
        "mojo::SequenceLocalSyncEventWatcher::~SequenceLocalSyncEventWatcher": {
            "offset": "0x226AA0"
        },
        "mojo::SharedBufferHandle::Clone": {
            "offset": "0x2447E0"
        },
        "mojo::SharedBufferHandle::Create": {
            "offset": "0x2448B0"
        },
        "mojo::SharedBufferHandle::GetSize": {
            "offset": "0x244900"
        },
        "mojo::SharedBufferHandle::Map": {
            "offset": "0x244950"
        },
        "mojo::SharedBufferHandle::MapAtOffset": {
            "offset": "0x244990"
        },
        "mojo::SharedBufferHandle::SharedBufferHandle": {
            "offset": "0x1BD0"
        },
        "mojo::SharedBufferHandle::~SharedBufferHandle": {
            "offset": "0x12B0"
        },
        "mojo::SimpleWatcher::Arm": {
            "offset": "0x236AB0"
        },
        "mojo::SimpleWatcher::ArmOrNotify": {
            "offset": "0x236F70"
        },
        "mojo::SimpleWatcher::Cancel": {
            "offset": "0x237230"
        },
        "mojo::SimpleWatcher::Context::CallNotify": {
            "offset": "0x2371F0"
        },
        "mojo::SimpleWatcher::Context::Create": {
            "offset": "0x237530"
        },
        "mojo::SimpleWatcher::Context::Notify": {
            "offset": "0x2378F0"
        },
        "mojo::SimpleWatcher::DiscardReadyState": {
            "offset": "0x6DF60"
        },
        "mojo::SimpleWatcher::IsWatching": {
            "offset": "0x237860"
        },
        "mojo::SimpleWatcher::OnHandleReady": {
            "offset": "0x237B20"
        },
        "mojo::SimpleWatcher::SimpleWatcher": {
            "offset": "0x2367C0"
        },
        "mojo::SimpleWatcher::Watch": {
            "offset": "0x19AD50"
        },
        "mojo::SimpleWatcher::handle": {
            "offset": "0x19B5C0"
        },
        "mojo::SimpleWatcher::ready_callback": {
            "offset": "0x19BB40"
        },
        "mojo::SimpleWatcher::set_heap_profiler_tag": {
            "offset": "0x19C170"
        },
        "mojo::SimpleWatcher::~SimpleWatcher": {
            "offset": "0x236A10"
        },
        "mojo::StringDataSource::GetLength": {
            "offset": "0x32570"
        },
        "mojo::StringDataSource::Read": {
            "offset": "0x2386D0"
        },
        "mojo::StringDataSource::StringDataSource": {
            "offset": "0x238440"
        },
        "mojo::StringDataSource::~StringDataSource": {
            "offset": "0x2385C0"
        },
        "mojo::StructPtr<mojo::interface_control::RunInput>::Take": {
            "offset": "0x241980"
        },
        "mojo::StructPtr<mojo::interface_control::RunInput>::~StructPtr<mojo::interface_control::RunInput>": {
            "offset": "0x20AED0"
        },
        "mojo::StructPtr<mojo::interface_control::RunMessageParams>::~StructPtr<mojo::interface_control::RunMessageParams>": {
            "offset": "0x209670"
        },
        "mojo::StructPtr<mojo::interface_control::RunOrClosePipeInput>::reset": {
            "offset": "0x2419F0"
        },
        "mojo::StructPtr<mojo::interface_control::RunOrClosePipeInput>::~StructPtr<mojo::interface_control::RunOrClosePipeInput>": {
            "offset": "0x20AF00"
        },
        "mojo::StructPtr<mojo::interface_control::RunOrClosePipeMessageParams>::~StructPtr<mojo::interface_control::RunOrClosePipeMessageParams>": {
            "offset": "0x2096A0"
        },
        "mojo::StructPtr<mojo::interface_control::RunOutput>::~StructPtr<mojo::interface_control::RunOutput>": {
            "offset": "0x2096D0"
        },
        "mojo::StructPtr<mojo::interface_control::RunResponseMessageParams>::~StructPtr<mojo::interface_control::RunResponseMessageParams>": {
            "offset": "0x209700"
        },
        "mojo::StructPtr<mojo::native::NativeStruct>::~StructPtr<mojo::native::NativeStruct>": {
            "offset": "0x2422D0"
        },
        "mojo::StructPtr<mojo::native::SerializedHandle>::~StructPtr<mojo::native::SerializedHandle>": {
            "offset": "0x19CE80"
        },
        "mojo::StructPtr<mojo::pipe_control::FlushAsync>::~StructPtr<mojo::pipe_control::FlushAsync>": {
            "offset": "0x243370"
        },
        "mojo::StructPtr<mojo::pipe_control::PauseUntilFlushCompletes>::~StructPtr<mojo::pipe_control::PauseUntilFlushCompletes>": {
            "offset": "0x243370"
        },
        "mojo::StructPtr<mojo::pipe_control::PeerAssociatedEndpointClosedEvent>::~StructPtr<mojo::pipe_control::PeerAssociatedEndpointClosedEvent>": {
            "offset": "0x2222C0"
        },
        "mojo::StructPtr<mojo::pipe_control::RunOrClosePipeInput>::StructPtr<mojo::pipe_control::RunOrClosePipeInput><>": {
            "offset": "0x243260"
        },
        "mojo::StructPtr<mojo::pipe_control::RunOrClosePipeInput>::~StructPtr<mojo::pipe_control::RunOrClosePipeInput>": {
            "offset": "0x2222F0"
        },
        "mojo::StructPtr<mojo::pipe_control::RunOrClosePipeMessageParams>::~StructPtr<mojo::pipe_control::RunOrClosePipeMessageParams>": {
            "offset": "0x221800"
        },
        "mojo::StructTraits<IPC::mojom::MessageDataView,IPC::MessageView>::Read": {
            "offset": "0x1B8710"
        },
        "mojo::StructTraits<IPC::mojom::MessageDataView,IPC::MessageView>::buffer": {
            "offset": "0x1B8B40"
        },
        "mojo::StructTraits<IPC::mojom::MessageDataView,IPC::MessageView>::handles": {
            "offset": "0x1B8B60"
        },
        "mojo::StructTraits<mojo::interface_control::RunMessageParamsDataView,mojo::StructPtr<mojo::interface_control::RunMessageParams> >::Read": {
            "offset": "0x2408B0"
        },
        "mojo::StructTraits<mojo::interface_control::RunOrClosePipeMessageParamsDataView,mojo::StructPtr<mojo::interface_control::RunOrClosePipeMessageParams> >::Read": {
            "offset": "0x240A80"
        },
        "mojo::StructTraits<mojo::interface_control::RunResponseMessageParamsDataView,mojo::StructPtr<mojo::interface_control::RunResponseMessageParams> >::Read": {
            "offset": "0x240C60"
        },
        "mojo::StructTraits<mojo::native::NativeStructDataView,mojo::StructPtr<mojo::native::NativeStruct> >::Read": {
            "offset": "0x242600"
        },
        "mojo::StructTraits<mojo::native::SerializedHandleDataView,mojo::StructPtr<mojo::native::SerializedHandle> >::Read": {
            "offset": "0x2428F0"
        },
        "mojo::StructTraits<mojo::pipe_control::PeerAssociatedEndpointClosedEventDataView,mojo::StructPtr<mojo::pipe_control::PeerAssociatedEndpointClosedEvent> >::Read": {
            "offset": "0x2435C0"
        },
        "mojo::StructTraits<mojo::pipe_control::RunOrClosePipeMessageParamsDataView,mojo::StructPtr<mojo::pipe_control::RunOrClosePipeMessageParams> >::Read": {
            "offset": "0x243840"
        },
        "mojo::StructTraits<mojo_base::mojom::BigBufferSharedMemoryRegionDataView,mojo_base::internal::BigBufferSharedMemoryRegion>::Read": {
            "offset": "0x1FE490"
        },
        "mojo::StructTraits<mojo_base::mojom::BigBufferSharedMemoryRegionDataView,mojo_base::internal::BigBufferSharedMemoryRegion>::buffer_handle": {
            "offset": "0x1FE7C0"
        },
        "mojo::StructTraits<mojo_base::mojom::BigBufferSharedMemoryRegionDataView,mojo_base::internal::BigBufferSharedMemoryRegion>::size": {
            "offset": "0x1FE840"
        },
        "mojo::StructTraits<mojo_base::mojom::DictionaryValueDataView,base::Value>::Read": {
            "offset": "0x1FF650"
        },
        "mojo::StructTraits<mojo_base::mojom::DictionaryValueDataView,base::Value>::storage": {
            "offset": "0x2003C0"
        },
        "mojo::StructTraits<mojo_base::mojom::FileDataView,base::File>::IsNull": {
            "offset": "0x1FEA30"
        },
        "mojo::StructTraits<mojo_base::mojom::FileDataView,base::File>::Read": {
            "offset": "0x1FEA50"
        },
        "mojo::StructTraits<mojo_base::mojom::FileDataView,base::File>::SetToNull": {
            "offset": "0x1FEB00"
        },
        "mojo::StructTraits<mojo_base::mojom::FileDataView,base::File>::async": {
            "offset": "0x1D190"
        },
        "mojo::StructTraits<mojo_base::mojom::FileDataView,base::File>::fd": {
            "offset": "0x1FEC00"
        },
        "mojo::StructTraits<mojo_base::mojom::FileInfoDataView,base::File::Info>::Read": {
            "offset": "0x1FE910"
        },
        "mojo::StructTraits<mojo_base::mojom::FileInfoDataView,base::File::Info>::creation_time": {
            "offset": "0x1FE9F0"
        },
        "mojo::StructTraits<mojo_base::mojom::FileInfoDataView,base::File::Info>::is_symbolic_link": {
            "offset": "0x1FEA00"
        },
        "mojo::StructTraits<mojo_base::mojom::FileInfoDataView,base::File::Info>::last_accessed": {
            "offset": "0x1FEA10"
        },
        "mojo::StructTraits<mojo_base::mojom::FileInfoDataView,base::File::Info>::last_modified": {
            "offset": "0x1FEA20"
        },
        "mojo::StructTraits<mojo_base::mojom::FileInfoDataView,base::File::Info>::size": {
            "offset": "0xAB80"
        },
        "mojo::StructTraits<mojo_base::mojom::FilePathDataView,base::FilePath>::Read": {
            "offset": "0x1FECB0"
        },
        "mojo::StructTraits<mojo_base::mojom::FilePathDataView,base::FilePath>::path": {
            "offset": "0x1FED40"
        },
        "mojo::StructTraits<mojo_base::mojom::GenericPendingReceiverDataView,mojo::GenericPendingReceiver>::IsNull": {
            "offset": "0x1FED80"
        },
        "mojo::StructTraits<mojo_base::mojom::GenericPendingReceiverDataView,mojo::GenericPendingReceiver>::Read": {
            "offset": "0x1FED90"
        },
        "mojo::StructTraits<mojo_base::mojom::GenericPendingReceiverDataView,mojo::GenericPendingReceiver>::SetToNull": {
            "offset": "0x1FEEE0"
        },
        "mojo::StructTraits<mojo_base::mojom::GenericPendingReceiverDataView,mojo::GenericPendingReceiver>::interface_name": {
            "offset": "0x1FEF90"
        },
        "mojo::StructTraits<mojo_base::mojom::GenericPendingReceiverDataView,mojo::GenericPendingReceiver>::receiving_pipe": {
            "offset": "0x1FF080"
        },
        "mojo::StructTraits<mojo_base::mojom::ListValueDataView,base::Value>::Read": {
            "offset": "0x1FFC90"
        },
        "mojo::StructTraits<mojo_base::mojom::ListValueDataView,base::Value>::storage": {
            "offset": "0x200440"
        },
        "mojo::StructTraits<mojo_base::mojom::ReadOnlyBufferDataView,base::span<unsigned char const ,-1> >::Read": {
            "offset": "0x1FF0A0"
        },
        "mojo::StructTraits<mojo_base::mojom::ReadOnlyBufferDataView,base::span<unsigned char const ,-1> >::buffer": {
            "offset": "0x4750"
        },
        "mojo::StructTraits<mojo_base::mojom::ReadOnlySharedMemoryRegionDataView,base::ReadOnlySharedMemoryRegion>::IsNull": {
            "offset": "0x1FF0E0"
        },
        "mojo::StructTraits<mojo_base::mojom::ReadOnlySharedMemoryRegionDataView,base::ReadOnlySharedMemoryRegion>::Read": {
            "offset": "0x1FF100"
        },
        "mojo::StructTraits<mojo_base::mojom::ReadOnlySharedMemoryRegionDataView,base::ReadOnlySharedMemoryRegion>::SetToNull": {
            "offset": "0x1FF1F0"
        },
        "mojo::StructTraits<mojo_base::mojom::ReadOnlySharedMemoryRegionDataView,base::ReadOnlySharedMemoryRegion>::buffer": {
            "offset": "0x1FF230"
        },
        "mojo::StructTraits<mojo_base::mojom::TimeDataView,base::Time>::Read": {
            "offset": "0x1FF3F0"
        },
        "mojo::StructTraits<mojo_base::mojom::TimeDataView,base::Time>::internal_value": {
            "offset": "0xAB80"
        },
        "mojo::StructTraits<mojo_base::mojom::TimeDeltaDataView,base::TimeDelta>::Read": {
            "offset": "0x1FF410"
        },
        "mojo::StructTraits<mojo_base::mojom::TimeDeltaDataView,base::TimeDelta>::microseconds": {
            "offset": "0xAB80"
        },
        "mojo::StructTraits<mojo_base::mojom::TimeTicksDataView,base::TimeTicks>::Read": {
            "offset": "0x1FF3F0"
        },
        "mojo::StructTraits<mojo_base::mojom::TimeTicksDataView,base::TimeTicks>::internal_value": {
            "offset": "0xAB80"
        },
        "mojo::StructTraits<mojo_base::mojom::TokenDataView,base::Token>::Read": {
            "offset": "0x1FF420"
        },
        "mojo::StructTraits<mojo_base::mojom::TokenDataView,base::Token>::high": {
            "offset": "0xAB80"
        },
        "mojo::StructTraits<mojo_base::mojom::TokenDataView,base::Token>::low": {
            "offset": "0xAAA0"
        },
        "mojo::StructTraits<mojo_base::mojom::UnguessableTokenDataView,base::UnguessableToken>::Read": {
            "offset": "0x1FF440"
        },
        "mojo::StructTraits<mojo_base::mojom::UnguessableTokenDataView,base::UnguessableToken>::high": {
            "offset": "0x1FF480"
        },
        "mojo::StructTraits<mojo_base::mojom::UnguessableTokenDataView,base::UnguessableToken>::low": {
            "offset": "0x1FF490"
        },
        "mojo::StructTraits<mojo_base::mojom::UnsafeSharedMemoryRegionDataView,base::UnsafeSharedMemoryRegion>::IsNull": {
            "offset": "0x1FF0E0"
        },
        "mojo::StructTraits<mojo_base::mojom::UnsafeSharedMemoryRegionDataView,base::UnsafeSharedMemoryRegion>::Read": {
            "offset": "0x1FF150"
        },
        "mojo::StructTraits<mojo_base::mojom::UnsafeSharedMemoryRegionDataView,base::UnsafeSharedMemoryRegion>::SetToNull": {
            "offset": "0x1FF1F0"
        },
        "mojo::StructTraits<mojo_base::mojom::UnsafeSharedMemoryRegionDataView,base::UnsafeSharedMemoryRegion>::buffer": {
            "offset": "0x1FF230"
        },
        "mojo::StructTraits<mojo_base::mojom::WritableSharedMemoryRegionDataView,base::WritableSharedMemoryRegion>::IsNull": {
            "offset": "0x1FF0E0"
        },
        "mojo::StructTraits<mojo_base::mojom::WritableSharedMemoryRegionDataView,base::WritableSharedMemoryRegion>::Read": {
            "offset": "0x1FF1A0"
        },
        "mojo::StructTraits<mojo_base::mojom::WritableSharedMemoryRegionDataView,base::WritableSharedMemoryRegion>::SetToNull": {
            "offset": "0x1FF1F0"
        },
        "mojo::StructTraits<mojo_base::mojom::WritableSharedMemoryRegionDataView,base::WritableSharedMemoryRegion>::buffer": {
            "offset": "0x1FF230"
        },
        "mojo::SyncCallRestrictions::AssertSyncCallAllowed": {
            "offset": "0x227E80"
        },
        "mojo::SyncCallRestrictions::DecreaseScopedAllowCount": {
            "offset": "0x227FA0"
        },
        "mojo::SyncCallRestrictions::DisallowSyncCall": {
            "offset": "0x228180"
        },
        "mojo::SyncCallRestrictions::IncreaseScopedAllowCount": {
            "offset": "0x228360"
        },
        "mojo::SyncEventWatcher::AllowWokenUpBySyncWatchOnSameThread": {
            "offset": "0x2287D0"
        },
        "mojo::SyncEventWatcher::DecrementRegisterCount": {
            "offset": "0x2288A0"
        },
        "mojo::SyncEventWatcher::IncrementRegisterCount": {
            "offset": "0x228AF0"
        },
        "mojo::SyncEventWatcher::SyncEventWatcher": {
            "offset": "0x2284D0"
        },
        "mojo::SyncEventWatcher::SyncWatch": {
            "offset": "0x228B50"
        },
        "mojo::SyncEventWatcher::~SyncEventWatcher": {
            "offset": "0x228650"
        },
        "mojo::SyncHandleRegistry::RegisterEvent": {
            "offset": "0x2299A0"
        },
        "mojo::SyncHandleRegistry::RegisterHandle": {
            "offset": "0x229C60"
        },
        "mojo::SyncHandleRegistry::RemoveInvalidEventCallbacks": {
            "offset": "0x229E40"
        },
        "mojo::SyncHandleRegistry::SyncHandleRegistry": {
            "offset": "0x2296F0"
        },
        "mojo::SyncHandleRegistry::UnregisterEvent": {
            "offset": "0x22A060"
        },
        "mojo::SyncHandleRegistry::UnregisterHandle": {
            "offset": "0x22A270"
        },
        "mojo::SyncHandleRegistry::Wait": {
            "offset": "0x22A440"
        },
        "mojo::SyncHandleRegistry::current": {
            "offset": "0x22AC60"
        },
        "mojo::SyncHandleRegistry::~SyncHandleRegistry": {
            "offset": "0x229920"
        },
        "mojo::SyncHandleWatcher::AllowWokenUpBySyncWatchOnSameThread": {
            "offset": "0x22B120"
        },
        "mojo::SyncHandleWatcher::DecrementRegisterCount": {
            "offset": "0x22B1F0"
        },
        "mojo::SyncHandleWatcher::IncrementRegisterCount": {
            "offset": "0x22B430"
        },
        "mojo::SyncHandleWatcher::SyncHandleWatcher": {
            "offset": "0x22AF20"
        },
        "mojo::SyncHandleWatcher::SyncWatch": {
            "offset": "0x22B490"
        },
        "mojo::SyncHandleWatcher::~SyncHandleWatcher": {
            "offset": "0x22AFC0"
        },
        "mojo::SyncMessageResponseContext::GetBadMessageCallback": {
            "offset": "0x214810"
        },
        "mojo::SyncMessageResponseContext::ReportBadMessage": {
            "offset": "0x214AD0"
        },
        "mojo::SyncMessageResponseContext::SyncMessageResponseContext": {
            "offset": "0x212EE0"
        },
        "mojo::SyncMessageResponseContext::current": {
            "offset": "0x215E40"
        },
        "mojo::SyncMessageResponseContext::~SyncMessageResponseContext": {
            "offset": "0x213290"
        },
        "mojo::ThreadSafeForwarderBase::Accept": {
            "offset": "0x22DB90"
        },
        "mojo::ThreadSafeForwarderBase::AcceptWithResponder": {
            "offset": "0x22DD50"
        },
        "mojo::ThreadSafeForwarderBase::ForwardToCallingThread::Accept": {
            "offset": "0x22D990"
        },
        "mojo::ThreadSafeForwarderBase::ForwardToCallingThread::CallAcceptAndDeleteResponder": {
            "offset": "0x22E770"
        },
        "mojo::ThreadSafeForwarderBase::PrefersSerializedMessages": {
            "offset": "0xAAC0"
        },
        "mojo::ThreadSafeForwarderBase::SyncResponseSignaler::Accept": {
            "offset": "0x22DAE0"
        },
        "mojo::ThreadSafeForwarderBase::ThreadSafeForwarderBase": {
            "offset": "0x22D3B0"
        },
        "mojo::ThreadSafeForwarderBase::~ThreadSafeForwarderBase": {
            "offset": "0x22D620"
        },
        "mojo::TypeConverter<enum IPC::MessageAttachment::Type,enum mojo::native::SerializedHandleType>::Convert": {
            "offset": "0x1BA050"
        },
        "mojo::TypeConverter<enum mojo::native::SerializedHandleType,enum IPC::MessageAttachment::Type>::Convert": {
            "offset": "0x1B9F90"
        },
        "mojo::UnionTraits<mojo::interface_control::RunInputDataView,mojo::StructPtr<mojo::interface_control::RunInput> >::Read": {
            "offset": "0x240E20"
        },
        "mojo::UnionTraits<mojo::interface_control::RunOrClosePipeInputDataView,mojo::StructPtr<mojo::interface_control::RunOrClosePipeInput> >::Read": {
            "offset": "0x2410F0"
        },
        "mojo::UnionTraits<mojo::interface_control::RunOutputDataView,mojo::StructPtr<mojo::interface_control::RunOutput> >::Read": {
            "offset": "0x241770"
        },
        "mojo::UnionTraits<mojo::pipe_control::RunOrClosePipeInputDataView,mojo::StructPtr<mojo::pipe_control::RunOrClosePipeInput> >::Read": {
            "offset": "0x2439D0"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBuffer>::GetTag": {
            "offset": "0x1FE350"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBuffer>::Read": {
            "offset": "0x1FE500"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBuffer>::bytes": {
            "offset": "0x1FE7E0"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBuffer>::invalid_buffer": {
            "offset": "0xAAC0"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBuffer>::shared_memory": {
            "offset": "0x1FE820"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBufferView>::GetTag": {
            "offset": "0x1FE3F0"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBufferView>::Read": {
            "offset": "0x1FE630"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBufferView>::bytes": {
            "offset": "0x1FE800"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBufferView>::invalid_buffer": {
            "offset": "0xAAC0"
        },
        "mojo::UnionTraits<mojo_base::mojom::BigBufferDataView,mojo_base::BigBufferView>::shared_memory": {
            "offset": "0x1FE830"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::GetTag": {
            "offset": "0x1FF570"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::Read": {
            "offset": "0x1FFE30"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::binary_value": {
            "offset": "0x200280"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::bool_value": {
            "offset": "0x200290"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::dictionary_value": {
            "offset": "0x2002A0"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::double_value": {
            "offset": "0x200320"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::int_value": {
            "offset": "0x200330"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::list_value": {
            "offset": "0x200340"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::null_value": {
            "offset": "0x12C0"
        },
        "mojo::UnionTraits<mojo_base::mojom::ValueDataView,base::Value>::string_value": {
            "offset": "0x200520"
        },
        "mojo::UnwrapPlatformFile": {
            "offset": "0x2449D0"
        },
        "mojo::UnwrapPlatformHandle": {
            "offset": "0x244AE0"
        },
        "mojo::UnwrapPlatformSharedMemoryRegion": {
            "offset": "0x244B80"
        },
        "mojo::UnwrapReadOnlySharedMemoryRegion": {
            "offset": "0x244E60"
        },
        "mojo::UnwrapUnsafeSharedMemoryRegion": {
            "offset": "0x244ED0"
        },
        "mojo::UnwrapWritableSharedMemoryRegion": {
            "offset": "0x244F40"
        },
        "mojo::Wait": {
            "offset": "0x2389F0"
        },
        "mojo::WaitMany": {
            "offset": "0x239070"
        },
        "mojo::WaitSet::AddEvent": {
            "offset": "0x23A6D0"
        },
        "mojo::WaitSet::AddHandle": {
            "offset": "0x23AF80"
        },
        "mojo::WaitSet::RemoveEvent": {
            "offset": "0x23B2D0"
        },
        "mojo::WaitSet::RemoveHandle": {
            "offset": "0x23B650"
        },
        "mojo::WaitSet::State::AddHandle": {
            "offset": "0x23A7D0"
        },
        "mojo::WaitSet::State::Context::OnNotification": {
            "offset": "0x23B280"
        },
        "mojo::WaitSet::State::Notify": {
            "offset": "0x23B020"
        },
        "mojo::WaitSet::State::RemoveHandle": {
            "offset": "0x23B390"
        },
        "mojo::WaitSet::State::State": {
            "offset": "0x23A0F0"
        },
        "mojo::WaitSet::State::Wait": {
            "offset": "0x23B670"
        },
        "mojo::WaitSet::Wait": {
            "offset": "0x23C060"
        },
        "mojo::WaitSet::WaitSet": {
            "offset": "0x23A280"
        },
        "mojo::WaitSet::~WaitSet": {
            "offset": "0x23A600"
        },
        "mojo::WrapPlatformFile": {
            "offset": "0x244FB0"
        },
        "mojo::WrapPlatformHandle": {
            "offset": "0x245070"
        },
        "mojo::WrapPlatformSharedMemoryRegion": {
            "offset": "0x245110"
        },
        "mojo::WrapReadOnlySharedMemoryRegion": {
            "offset": "0x245320"
        },
        "mojo::WrapUnsafeSharedMemoryRegion": {
            "offset": "0x245320"
        },
        "mojo::WrapWritableSharedMemoryRegion": {
            "offset": "0x245320"
        },
        "mojo::WriteMessageRaw": {
            "offset": "0x235D90"
        },
        "mojo::`anonymous namespace'::BlockingCopyHelper": {
            "offset": "0x2332D0"
        },
        "mojo::`anonymous namespace'::CloneHandle": {
            "offset": "0x230780"
        },
        "mojo::`anonymous namespace'::ConstructRunOrClosePipeMessage": {
            "offset": "0x222730"
        },
        "mojo::`anonymous namespace'::CopyToStringHelper": {
            "offset": "0x233620"
        },
        "mojo::`anonymous namespace'::CrashIfResultNotOk": {
            "offset": "0x231200"
        },
        "mojo::`anonymous namespace'::CrashMojoResourceExhausted": {
            "offset": "0x2312B0"
        },
        "mojo::`anonymous namespace'::CreateChannel": {
            "offset": "0x22FAA0"
        },
        "mojo::`anonymous namespace'::CreateSerializedMessageObject": {
            "offset": "0x213B90"
        },
        "mojo::`anonymous namespace'::CreateUnserializedMessage": {
            "offset": "0x214080"
        },
        "mojo::`anonymous namespace'::DestroyUnserializedContext": {
            "offset": "0x214510"
        },
        "mojo::`anonymous namespace'::DetermineIfEndpointIsConnected": {
            "offset": "0x20F5B0"
        },
        "mojo::`anonymous namespace'::DoNotifyBadMessage": {
            "offset": "0x214530"
        },
        "mojo::`anonymous namespace'::GetGlobalSettings": {
            "offset": "0x2281E0"
        },
        "mojo::`anonymous namespace'::GetPipeNameFromServerName": {
            "offset": "0x22F810"
        },
        "mojo::`anonymous namespace'::GetSequenceLocalScopedAllowCount": {
            "offset": "0x228260"
        },
        "mojo::`anonymous namespace'::IsValidMessageHeader": {
            "offset": "0x216C70"
        },
        "mojo::`anonymous namespace'::ResponderThunk::Accept": {
            "offset": "0x20EFC0"
        },
        "mojo::`anonymous namespace'::ResponderThunk::IsConnected": {
            "offset": "0x20FDB0"
        },
        "mojo::`anonymous namespace'::ResponderThunk::IsConnectedAsync": {
            "offset": "0x20FE80"
        },
        "mojo::`anonymous namespace'::ResponderThunk::PrefersSerializedMessages": {
            "offset": "0x210890"
        },
        "mojo::`anonymous namespace'::ResponderThunk::~ResponderThunk": {
            "offset": "0x20ECE0"
        },
        "mojo::`anonymous namespace'::RunErrorCallback": {
            "offset": "0x234C70"
        },
        "mojo::`anonymous namespace'::SendInvitation": {
            "offset": "0x235000"
        },
        "mojo::`anonymous namespace'::SerializeUnserializedContext": {
            "offset": "0x2152C0"
        },
        "mojo::`anonymous namespace'::TriggerContext::OnNotification": {
            "offset": "0x238970"
        },
        "mojo::`anonymous namespace'::WriteMessageHeader": {
            "offset": "0x2158D0"
        },
        "mojo::core::Broker::Broker": {
            "offset": "0x1BB670"
        },
        "mojo::core::Broker::GetInviterEndpoint": {
            "offset": "0x1BBB50"
        },
        "mojo::core::Broker::GetWritableSharedMemoryRegion": {
            "offset": "0x1BBB70"
        },
        "mojo::core::Broker::~Broker": {
            "offset": "0x1BBAA0"
        },
        "mojo::core::BrokerHost::BrokerHost": {
            "offset": "0x1BA440"
        },
        "mojo::core::BrokerHost::OnBufferRequest": {
            "offset": "0x1BA8F0"
        },
        "mojo::core::BrokerHost::OnChannelError": {
            "offset": "0x1BAC20"
        },
        "mojo::core::BrokerHost::OnChannelMessage": {
            "offset": "0x1BAD50"
        },
        "mojo::core::BrokerHost::SendChannel": {
            "offset": "0x1BAEF0"
        },
        "mojo::core::BrokerHost::SendNamedChannel": {
            "offset": "0x1BB290"
        },
        "mojo::core::BrokerHost::WillDestroyCurrentMessageLoop": {
            "offset": "0x1BB3B0"
        },
        "mojo::core::Channel::Channel": {
            "offset": "0x1BC740"
        },
        "mojo::core::Channel::Create": {
            "offset": "0x1BFE40"
        },
        "mojo::core::Channel::Delegate::~Delegate": {
            "offset": "0x1BA7B0"
        },
        "mojo::core::Channel::GetReadBuffer": {
            "offset": "0x1BDBD0"
        },
        "mojo::core::Channel::Message::CreateRawForFuzzing": {
            "offset": "0x1BCE50"
        },
        "mojo::core::Channel::Message::Deserialize": {
            "offset": "0x1BD040"
        },
        "mojo::core::Channel::Message::ExtendPayload": {
            "offset": "0x1BDA90"
        },
        "mojo::core::Channel::Message::Message": {
            "offset": "0x1BCC50"
        },
        "mojo::core::Channel::Message::SetHandles": {
            "offset": "0x1BE1E0"
        },
        "mojo::core::Channel::Message::TakeHandles": {
            "offset": "0x1BE630"
        },
        "mojo::core::Channel::Message::capacity": {
            "offset": "0x1BEA40"
        },
        "mojo::core::Channel::Message::data": {
            "offset": "0xAB80"
        },
        "mojo::core::Channel::Message::data_num_bytes": {
            "offset": "0xAAB0"
        },
        "mojo::core::Channel::Message::extra_header": {
            "offset": "0x1BEA70"
        },
        "mojo::core::Channel::Message::extra_header_size": {
            "offset": "0x1BEB00"
        },
        "mojo::core::Channel::Message::has_handles": {
            "offset": "0x1BEB20"
        },
        "mojo::core::Channel::Message::header": {
            "offset": "0x1BEB40"
        },
        "mojo::core::Channel::Message::is_legacy_message": {
            "offset": "0x1BEC00"
        },
        "mojo::core::Channel::Message::legacy_header": {
            "offset": "0xAB80"
        },
        "mojo::core::Channel::Message::mutable_extra_header": {
            "offset": "0x1BEC10"
        },
        "mojo::core::Channel::Message::mutable_payload": {
            "offset": "0x1BECA0"
        },
        "mojo::core::Channel::Message::num_handles": {
            "offset": "0x1BECC0"
        },
        "mojo::core::Channel::Message::payload": {
            "offset": "0x1BECA0"
        },
        "mojo::core::Channel::Message::payload_size": {
            "offset": "0x1BECF0"
        },
        "mojo::core::Channel::Message::~Message": {
            "offset": "0x1BCD50"
        },
        "mojo::core::Channel::OnControlMessage": {
            "offset": "0x1BDCD0"
        },
        "mojo::core::Channel::OnError": {
            "offset": "0x1BDCF0"
        },
        "mojo::core::Channel::OnReadComplete": {
            "offset": "0x1BDD10"
        },
        "mojo::core::Channel::ShutDown": {
            "offset": "0x1BE610"
        },
        "mojo::core::Channel::TryDispatchMessage": {
            "offset": "0x1BE670"
        },
        "mojo::core::Channel::delegate": {
            "offset": "0xAAB0"
        },
        "mojo::core::Channel::remote_process": {
            "offset": "0x36300"
        },
        "mojo::core::Channel::set_handle_policy": {
            "offset": "0xD9C0"
        },
        "mojo::core::Channel::set_remote_process": {
            "offset": "0x1BB5C0"
        },
        "mojo::core::Channel::~Channel": {
            "offset": "0x1BCD10"
        },
        "mojo::core::ConnectionParams::ConnectionParams": {
            "offset": "0x1C1CD0"
        },
        "mojo::core::ConnectionParams::TakeEndpoint": {
            "offset": "0x1BB350"
        },
        "mojo::core::ConnectionParams::TakeServerEndpoint": {
            "offset": "0x1BB390"
        },
        "mojo::core::ConnectionParams::endpoint": {
            "offset": "0x15A0"
        },
        "mojo::core::ConnectionParams::is_async": {
            "offset": "0xD790"
        },
        "mojo::core::ConnectionParams::leak_endpoint": {
            "offset": "0x1BB590"
        },
        "mojo::core::ConnectionParams::server_endpoint": {
            "offset": "0xDDC0"
        },
        "mojo::core::ConnectionParams::set_is_async": {
            "offset": "0x1BB5A0"
        },
        "mojo::core::ConnectionParams::set_leak_endpoint": {
            "offset": "0x1BB5B0"
        },
        "mojo::core::ConnectionParams::~ConnectionParams": {
            "offset": "0x1C1D10"
        },
        "mojo::core::Core::AcceptInvitation": {
            "offset": "0x1C3070"
        },
        "mojo::core::Core::AcquireDispatchersForTransit": {
            "offset": "0x1C35E0"
        },
        "mojo::core::Core::AddDispatcher": {
            "offset": "0x1C3690"
        },
        "mojo::core::Core::AddDispatchersFromTransit": {
            "offset": "0x1C3760"
        },
        "mojo::core::Core::AddTrigger": {
            "offset": "0x1C3880"
        },
        "mojo::core::Core::AppendMessageData": {
            "offset": "0x1C3A20"
        },
        "mojo::core::Core::ArmTrap": {
            "offset": "0x1C3B40"
        },
        "mojo::core::Core::AttachMessagePipeToInvitation": {
            "offset": "0x1C3CC0"
        },
        "mojo::core::Core::BeginReadData": {
            "offset": "0x1C3E80"
        },
        "mojo::core::Core::BeginWriteData": {
            "offset": "0x1C3F90"
        },
        "mojo::core::Core::Close": {
            "offset": "0x1C40A0"
        },
        "mojo::core::Core::ConnectIsolated": {
            "offset": "0x1C4240"
        },
        "mojo::core::Core::Core": {
            "offset": "0x1C2760"
        },
        "mojo::core::Core::CreateDataPipe": {
            "offset": "0x1C42F0"
        },
        "mojo::core::Core::CreateInvitation": {
            "offset": "0x1C4870"
        },
        "mojo::core::Core::CreateMessage": {
            "offset": "0x1C4920"
        },
        "mojo::core::Core::CreateMessagePipe": {
            "offset": "0x1C4980"
        },
        "mojo::core::Core::CreatePartialMessagePipe": {
            "offset": "0x1C4DB0"
        },
        "mojo::core::Core::CreateSharedBuffer": {
            "offset": "0x1C4EC0"
        },
        "mojo::core::Core::CreateTrap": {
            "offset": "0x1C5100"
        },
        "mojo::core::Core::DestroyMessage": {
            "offset": "0x1C52E0"
        },
        "mojo::core::Core::DuplicateBufferHandle": {
            "offset": "0x1C5350"
        },
        "mojo::core::Core::EndReadData": {
            "offset": "0x1C5580"
        },
        "mojo::core::Core::EndWriteData": {
            "offset": "0x1C5670"
        },
        "mojo::core::Core::ExtractMessagePipeFromInvitation": {
            "offset": "0x1C58A0"
        },
        "mojo::core::Core::FuseMessagePipes": {
            "offset": "0x1C5A70"
        },
        "mojo::core::Core::Get": {
            "offset": "0x1CF590"
        },
        "mojo::core::Core::GetActiveHandlesForTest": {
            "offset": "0x1C5D50"
        },
        "mojo::core::Core::GetAndRemoveDispatcher": {
            "offset": "0x1C5DE0"
        },
        "mojo::core::Core::GetBufferInfo": {
            "offset": "0x1C5E80"
        },
        "mojo::core::Core::GetDispatcher": {
            "offset": "0x1C5F60"
        },
        "mojo::core::Core::GetMessageContext": {
            "offset": "0x1C6000"
        },
        "mojo::core::Core::GetMessageData": {
            "offset": "0x1C6050"
        },
        "mojo::core::Core::GetNodeController": {
            "offset": "0x1C6200"
        },
        "mojo::core::Core::GetTimeTicksNow": {
            "offset": "0x1C62B0"
        },
        "mojo::core::Core::MapBuffer": {
            "offset": "0x1C6510"
        },
        "mojo::core::Core::NotifyBadMessage": {
            "offset": "0x1C6770"
        },
        "mojo::core::Core::PassNodeControllerToIOThread": {
            "offset": "0x1C6990"
        },
        "mojo::core::Core::QueryHandleSignalsState": {
            "offset": "0x1C69E0"
        },
        "mojo::core::Core::QueryQuota": {
            "offset": "0x1C6AE0"
        },
        "mojo::core::Core::ReadData": {
            "offset": "0x1C6BF0"
        },
        "mojo::core::Core::ReadMessage": {
            "offset": "0x1C6D10"
        },
        "mojo::core::Core::ReleaseDispatchersForTransit": {
            "offset": "0x1C6E30"
        },
        "mojo::core::Core::RemoveTrigger": {
            "offset": "0x1C6EC0"
        },
        "mojo::core::Core::RequestShutdown": {
            "offset": "0x1C7020"
        },
        "mojo::core::Core::SendBrokerClientInvitation": {
            "offset": "0x1C71E0"
        },
        "mojo::core::Core::SendInvitation": {
            "offset": "0x1C7290"
        },
        "mojo::core::Core::SerializeMessage": {
            "offset": "0x1C7DA0"
        },
        "mojo::core::Core::SetDefaultProcessErrorCallback": {
            "offset": "0x1C7E20"
        },
        "mojo::core::Core::SetIOTaskRunner": {
            "offset": "0x1C7E40"
        },
        "mojo::core::Core::SetMessageContext": {
            "offset": "0x1C7EC0"
        },
        "mojo::core::Core::SetQuota": {
            "offset": "0x1C7F20"
        },
        "mojo::core::Core::UnmapBuffer": {
            "offset": "0x1C8020"
        },
        "mojo::core::Core::UnwrapPlatformHandle": {
            "offset": "0x1C8290"
        },
        "mojo::core::Core::UnwrapPlatformSharedMemoryRegion": {
            "offset": "0x1C8470"
        },
        "mojo::core::Core::WrapPlatformHandle": {
            "offset": "0x1C8900"
        },
        "mojo::core::Core::WrapPlatformSharedMemoryRegion": {
            "offset": "0x1C89F0"
        },
        "mojo::core::Core::WriteData": {
            "offset": "0x1C8CF0"
        },
        "mojo::core::Core::WriteMessage": {
            "offset": "0x1C8E10"
        },
        "mojo::core::Core::~Core": {
            "offset": "0x1C2C60"
        },
        "mojo::core::CreateBrokerMessage<mojo::core::BufferRequestData>": {
            "offset": "0x1BA1B0"
        },
        "mojo::core::CreateBrokerMessage<mojo::core::BufferResponseData>": {
            "offset": "0x1BA110"
        },
        "mojo::core::CreateBrokerMessage<mojo::core::InitData>": {
            "offset": "0x1BA1B0"
        },
        "mojo::core::CreateSharedMemoryRegionHandleFromPlatformHandles": {
            "offset": "0x1E4EC0"
        },
        "mojo::core::DataPipeConsumerDispatcher::AddWatcherRef": {
            "offset": "0x1C94A0"
        },
        "mojo::core::DataPipeConsumerDispatcher::BeginReadData": {
            "offset": "0x1C9550"
        },
        "mojo::core::DataPipeConsumerDispatcher::BeginTransit": {
            "offset": "0x1C97B0"
        },
        "mojo::core::DataPipeConsumerDispatcher::CancelTransit": {
            "offset": "0x1C9840"
        },
        "mojo::core::DataPipeConsumerDispatcher::Close": {
            "offset": "0x1C9910"
        },
        "mojo::core::DataPipeConsumerDispatcher::CloseNoLock": {
            "offset": "0x1C99F0"
        },
        "mojo::core::DataPipeConsumerDispatcher::CompleteTransitAndClose": {
            "offset": "0x1C9B10"
        },
        "mojo::core::DataPipeConsumerDispatcher::Create": {
            "offset": "0x1C9CD0"
        },
        "mojo::core::DataPipeConsumerDispatcher::DataPipeConsumerDispatcher": {
            "offset": "0x1C9130"
        },
        "mojo::core::DataPipeConsumerDispatcher::Deserialize": {
            "offset": "0x1C9F00"
        },
        "mojo::core::DataPipeConsumerDispatcher::EndReadData": {
            "offset": "0x1CA470"
        },
        "mojo::core::DataPipeConsumerDispatcher::EndSerialize": {
            "offset": "0x1CA660"
        },
        "mojo::core::DataPipeConsumerDispatcher::GetHandleSignalsState": {
            "offset": "0x1CA850"
        },
        "mojo::core::DataPipeConsumerDispatcher::GetHandleSignalsStateNoLock": {
            "offset": "0x1CA8D0"
        },
        "mojo::core::DataPipeConsumerDispatcher::GetType": {
            "offset": "0x8BA30"
        },
        "mojo::core::DataPipeConsumerDispatcher::InitializeNoLock": {
            "offset": "0x1CA9E0"
        },
        "mojo::core::DataPipeConsumerDispatcher::NotifyRead": {
            "offset": "0x1CAC70"
        },
        "mojo::core::DataPipeConsumerDispatcher::OnPortStatusChanged": {
            "offset": "0x1CAD80"
        },
        "mojo::core::DataPipeConsumerDispatcher::PortObserverThunk::OnPortStatusChanged": {
            "offset": "0x1CAED0"
        },
        "mojo::core::DataPipeConsumerDispatcher::ReadData": {
            "offset": "0x1CAEF0"
        },
        "mojo::core::DataPipeConsumerDispatcher::RemoveWatcherRef": {
            "offset": "0x1CB410"
        },
        "mojo::core::DataPipeConsumerDispatcher::StartSerialize": {
            "offset": "0x1CB4B0"
        },
        "mojo::core::DataPipeConsumerDispatcher::UpdateSignalsStateNoLock": {
            "offset": "0x1CB5A0"
        },
        "mojo::core::DataPipeConsumerDispatcher::~DataPipeConsumerDispatcher": {
            "offset": "0x1C9200"
        },
        "mojo::core::DataPipeProducerDispatcher::AddWatcherRef": {
            "offset": "0x1CC110"
        },
        "mojo::core::DataPipeProducerDispatcher::BeginTransit": {
            "offset": "0x1CC230"
        },
        "mojo::core::DataPipeProducerDispatcher::BeginWriteData": {
            "offset": "0x1CC2C0"
        },
        "mojo::core::DataPipeProducerDispatcher::CancelTransit": {
            "offset": "0x1CC480"
        },
        "mojo::core::DataPipeProducerDispatcher::Close": {
            "offset": "0x1CC5E0"
        },
        "mojo::core::DataPipeProducerDispatcher::CloseNoLock": {
            "offset": "0x1CC6C0"
        },
        "mojo::core::DataPipeProducerDispatcher::CompleteTransitAndClose": {
            "offset": "0x1CC7E0"
        },
        "mojo::core::DataPipeProducerDispatcher::Create": {
            "offset": "0x1CC9A0"
        },
        "mojo::core::DataPipeProducerDispatcher::DataPipeProducerDispatcher": {
            "offset": "0x1CBE00"
        },
        "mojo::core::DataPipeProducerDispatcher::Deserialize": {
            "offset": "0x1CCBD0"
        },
        "mojo::core::DataPipeProducerDispatcher::EndSerialize": {
            "offset": "0x1CD120"
        },
        "mojo::core::DataPipeProducerDispatcher::EndWriteData": {
            "offset": "0x1CD310"
        },
        "mojo::core::DataPipeProducerDispatcher::GetHandleSignalsState": {
            "offset": "0x1CD4C0"
        },
        "mojo::core::DataPipeProducerDispatcher::GetHandleSignalsStateNoLock": {
            "offset": "0x1CD540"
        },
        "mojo::core::DataPipeProducerDispatcher::GetType": {
            "offset": "0x8BA20"
        },
        "mojo::core::DataPipeProducerDispatcher::InitializeNoLock": {
            "offset": "0x1CD5C0"
        },
        "mojo::core::DataPipeProducerDispatcher::NotifyWrite": {
            "offset": "0x1CD850"
        },
        "mojo::core::DataPipeProducerDispatcher::OnPortStatusChanged": {
            "offset": "0x1CD960"
        },
        "mojo::core::DataPipeProducerDispatcher::PortObserverThunk::OnPortStatusChanged": {
            "offset": "0x1CDAB0"
        },
        "mojo::core::DataPipeProducerDispatcher::RemoveWatcherRef": {
            "offset": "0x1CDAD0"
        },
        "mojo::core::DataPipeProducerDispatcher::StartSerialize": {
            "offset": "0x1CDB70"
        },
        "mojo::core::DataPipeProducerDispatcher::UpdateSignalsStateNoLock": {
            "offset": "0x1CDC60"
        },
        "mojo::core::DataPipeProducerDispatcher::WriteData": {
            "offset": "0x1CE180"
        },
        "mojo::core::DataPipeProducerDispatcher::~DataPipeProducerDispatcher": {
            "offset": "0x1CBEE0"
        },
        "mojo::core::Dispatcher::AddWatcherRef": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::Arm": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::AttachMessagePipe": {
            "offset": "0x1CE710"
        },
        "mojo::core::Dispatcher::BeginReadData": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::BeginTransit": {
            "offset": "0xAAC0"
        },
        "mojo::core::Dispatcher::BeginWriteData": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::CancelTransit": {
            "offset": "0x12B0"
        },
        "mojo::core::Dispatcher::CancelWatch": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::CompleteTransitAndClose": {
            "offset": "0x12B0"
        },
        "mojo::core::Dispatcher::Deserialize": {
            "offset": "0x1CE730"
        },
        "mojo::core::Dispatcher::Dispatcher": {
            "offset": "0x1CE5A0"
        },
        "mojo::core::Dispatcher::DispatcherInTransit::DispatcherInTransit": {
            "offset": "0x30F0"
        },
        "mojo::core::Dispatcher::DispatcherInTransit::~DispatcherInTransit": {
            "offset": "0x1CE620"
        },
        "mojo::core::Dispatcher::DuplicateBufferHandle": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::EndReadData": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::EndSerialize": {
            "offset": "0x1CE9A0"
        },
        "mojo::core::Dispatcher::EndWriteData": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::ExtractMessagePipe": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::GetBufferInfo": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::GetHandleSignalsState": {
            "offset": "0x1CEA20"
        },
        "mojo::core::Dispatcher::MapBuffer": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::QueryQuota": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::ReadData": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::ReadMessage": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::RemoveWatcherRef": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::SetQuota": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::StartSerialize": {
            "offset": "0x1CEA30"
        },
        "mojo::core::Dispatcher::WatchDispatcher": {
            "offset": "0x1CEA40"
        },
        "mojo::core::Dispatcher::WriteData": {
            "offset": "0x8BA30"
        },
        "mojo::core::Dispatcher::WriteMessage": {
            "offset": "0x1CEAA0"
        },
        "mojo::core::Dispatcher::~Dispatcher": {
            "offset": "0x1CE600"
        },
        "mojo::core::ExtractPlatformHandlesFromSharedMemoryRegionHandle": {
            "offset": "0x1E4F80"
        },
        "mojo::core::GetConfiguration": {
            "offset": "0x1BDBC0"
        },
        "mojo::core::GetIOTaskRunner": {
            "offset": "0x1CEAC0"
        },
        "mojo::core::GetSystemThunks": {
            "offset": "0x1CF5A0"
        },
        "mojo::core::HandleSignalsState::HandleSignalsState": {
            "offset": "0x163A50"
        },
        "mojo::core::HandleSignalsState::can_satisfy_any": {
            "offset": "0x1992E0"
        },
        "mojo::core::HandleSignalsState::equals": {
            "offset": "0x1991D0"
        },
        "mojo::core::HandleSignalsState::never_peer_closed": {
            "offset": "0x1992F0"
        },
        "mojo::core::HandleSignalsState::never_peer_remote": {
            "offset": "0x199300"
        },
        "mojo::core::HandleSignalsState::never_readable": {
            "offset": "0x199310"
        },
        "mojo::core::HandleSignalsState::never_writable": {
            "offset": "0x199320"
        },
        "mojo::core::HandleSignalsState::peer_closed": {
            "offset": "0x199330"
        },
        "mojo::core::HandleSignalsState::peer_remote": {
            "offset": "0x41100"
        },
        "mojo::core::HandleSignalsState::quota_exceeded": {
            "offset": "0x199340"
        },
        "mojo::core::HandleSignalsState::readable": {
            "offset": "0x199350"
        },
        "mojo::core::HandleSignalsState::satisfies_all": {
            "offset": "0x199360"
        },
        "mojo::core::HandleSignalsState::satisfies_any": {
            "offset": "0x199370"
        },
        "mojo::core::HandleSignalsState::writable": {
            "offset": "0x199390"
        },
        "mojo::core::HandleTable::AddDispatcher": {
            "offset": "0x1D0060"
        },
        "mojo::core::HandleTable::AddDispatchersFromTransit": {
            "offset": "0x1D0220"
        },
        "mojo::core::HandleTable::BeginTransit": {
            "offset": "0x1D05B0"
        },
        "mojo::core::HandleTable::CancelTransit": {
            "offset": "0x1D0840"
        },
        "mojo::core::HandleTable::CompleteTransitAndClose": {
            "offset": "0x1D0A00"
        },
        "mojo::core::HandleTable::Entry::~Entry": {
            "offset": "0x1CE620"
        },
        "mojo::core::HandleTable::GetActiveHandlesForTest": {
            "offset": "0x1D0C60"
        },
        "mojo::core::HandleTable::GetAndRemoveDispatcher": {
            "offset": "0x1D0CD0"
        },
        "mojo::core::HandleTable::GetDispatcher": {
            "offset": "0x1D0DD0"
        },
        "mojo::core::HandleTable::GetLock": {
            "offset": "0x19AE80"
        },
        "mojo::core::HandleTable::HandleTable": {
            "offset": "0x1CFC90"
        },
        "mojo::core::HandleTable::OnMemoryDump": {
            "offset": "0x1D0EA0"
        },
        "mojo::core::HandleTable::~HandleTable": {
            "offset": "0x1CFF10"
        },
        "mojo::core::Init": {
            "offset": "0x1CEB60"
        },
        "mojo::core::InitializeCore": {
            "offset": "0x1CF5B0"
        },
        "mojo::core::InvitationDispatcher::AttachMessagePipe": {
            "offset": "0x1D2230"
        },
        "mojo::core::InvitationDispatcher::Close": {
            "offset": "0x1D2400"
        },
        "mojo::core::InvitationDispatcher::ExtractMessagePipe": {
            "offset": "0x1D2500"
        },
        "mojo::core::InvitationDispatcher::GetType": {
            "offset": "0x1D2710"
        },
        "mojo::core::InvitationDispatcher::InvitationDispatcher": {
            "offset": "0x1D2030"
        },
        "mojo::core::InvitationDispatcher::TakeAttachedPorts": {
            "offset": "0x1D2720"
        },
        "mojo::core::InvitationDispatcher::~InvitationDispatcher": {
            "offset": "0x1D2100"
        },
        "mojo::core::MessagePipeDispatcher::AddWatcherRef": {
            "offset": "0x1D2E80"
        },
        "mojo::core::MessagePipeDispatcher::BeginTransit": {
            "offset": "0x1D2F30"
        },
        "mojo::core::MessagePipeDispatcher::CancelTransit": {
            "offset": "0x1D2FC0"
        },
        "mojo::core::MessagePipeDispatcher::Close": {
            "offset": "0x1D3040"
        },
        "mojo::core::MessagePipeDispatcher::CloseNoLock": {
            "offset": "0x1D3170"
        },
        "mojo::core::MessagePipeDispatcher::CompleteTransitAndClose": {
            "offset": "0x1D32D0"
        },
        "mojo::core::MessagePipeDispatcher::Deserialize": {
            "offset": "0x1D3460"
        },
        "mojo::core::MessagePipeDispatcher::EndSerialize": {
            "offset": "0x1D35A0"
        },
        "mojo::core::MessagePipeDispatcher::Fuse": {
            "offset": "0x1D35D0"
        },
        "mojo::core::MessagePipeDispatcher::GetHandleSignalsState": {
            "offset": "0x1D3740"
        },
        "mojo::core::MessagePipeDispatcher::GetHandleSignalsStateNoLock": {
            "offset": "0x1D37C0"
        },
        "mojo::core::MessagePipeDispatcher::GetType": {
            "offset": "0x8BA40"
        },
        "mojo::core::MessagePipeDispatcher::MessagePipeDispatcher": {
            "offset": "0x1D2AB0"
        },
        "mojo::core::MessagePipeDispatcher::OnPortStatusChanged": {
            "offset": "0x1D3A40"
        },
        "mojo::core::MessagePipeDispatcher::PortObserverThunk::OnPortStatusChanged": {
            "offset": "0x1D3D70"
        },
        "mojo::core::MessagePipeDispatcher::QueryQuota": {
            "offset": "0x1D3E00"
        },
        "mojo::core::MessagePipeDispatcher::ReadMessage": {
            "offset": "0x1D3FB0"
        },
        "mojo::core::MessagePipeDispatcher::RemoveWatcherRef": {
            "offset": "0x1D4290"
        },
        "mojo::core::MessagePipeDispatcher::SetQuota": {
            "offset": "0x1D4330"
        },
        "mojo::core::MessagePipeDispatcher::StartSerialize": {
            "offset": "0x1D4470"
        },
        "mojo::core::MessagePipeDispatcher::WriteMessage": {
            "offset": "0x1D4490"
        },
        "mojo::core::NodeChannel::AcceptBrokerClient": {
            "offset": "0x1D49F0"
        },
        "mojo::core::NodeChannel::AcceptInvitation": {
            "offset": "0x1D4B60"
        },
        "mojo::core::NodeChannel::AcceptInvitee": {
            "offset": "0x1D4C10"
        },
        "mojo::core::NodeChannel::AcceptPeer": {
            "offset": "0x1D4CB0"
        },
        "mojo::core::NodeChannel::AddBrokerClient": {
            "offset": "0x1D4D60"
        },
        "mojo::core::NodeChannel::BindBrokerHost": {
            "offset": "0x1D4FB0"
        },
        "mojo::core::NodeChannel::Broadcast": {
            "offset": "0x1D51B0"
        },
        "mojo::core::NodeChannel::BrokerClientAdded": {
            "offset": "0x1D5300"
        },
        "mojo::core::NodeChannel::CloneRemoteProcessHandle": {
            "offset": "0x1D5470"
        },
        "mojo::core::NodeChannel::Create": {
            "offset": "0x1D5540"
        },
        "mojo::core::NodeChannel::CreateEventMessage": {
            "offset": "0x1D5740"
        },
        "mojo::core::NodeChannel::Delegate::~Delegate": {
            "offset": "0x1D9550"
        },
        "mojo::core::NodeChannel::EventMessageFromRelay": {
            "offset": "0x1D5770"
        },
        "mojo::core::NodeChannel::GetEventMessageData": {
            "offset": "0x1D58B0"
        },
        "mojo::core::NodeChannel::HasRemoteProcessHandle": {
            "offset": "0x1D5900"
        },
        "mojo::core::NodeChannel::Introduce": {
            "offset": "0x1D5980"
        },
        "mojo::core::NodeChannel::LeakHandleOnShutdown": {
            "offset": "0x1D5AF0"
        },
        "mojo::core::NodeChannel::NotifyBadMessage": {
            "offset": "0x1D5B70"
        },
        "mojo::core::NodeChannel::OnChannelError": {
            "offset": "0x1D5D40"
        },
        "mojo::core::NodeChannel::OnChannelMessage": {
            "offset": "0x1D5F30"
        },
        "mojo::core::NodeChannel::RelayEventMessage": {
            "offset": "0x1D6CB0"
        },
        "mojo::core::NodeChannel::RequestIntroduction": {
            "offset": "0x1D6ED0"
        },
        "mojo::core::NodeChannel::RequestPortMerge": {
            "offset": "0x1D6F70"
        },
        "mojo::core::NodeChannel::SendChannelMessage": {
            "offset": "0x1D7030"
        },
        "mojo::core::NodeChannel::SetRemoteNodeName": {
            "offset": "0x1D7090"
        },
        "mojo::core::NodeChannel::SetRemoteProcessHandle": {
            "offset": "0x1D7140"
        },
        "mojo::core::NodeChannel::ShutDown": {
            "offset": "0x1D74A0"
        },
        "mojo::core::NodeChannel::Start": {
            "offset": "0x1D7560"
        },
        "mojo::core::NodeChannel::WriteChannelMessage": {
            "offset": "0x1D75E0"
        },
        "mojo::core::NodeController::AcceptBrokerClientInvitation": {
            "offset": "0x1D9AD0"
        },
        "mojo::core::NodeController::AcceptBrokerClientInvitationOnIOThread": {
            "offset": "0x1DA090"
        },
        "mojo::core::NodeController::AddPeer": {
            "offset": "0x1DA330"
        },
        "mojo::core::NodeController::AttemptShutdownIfRequested": {
            "offset": "0x1DB090"
        },
        "mojo::core::NodeController::BroadcastEvent": {
            "offset": "0x1DB2E0"
        },
        "mojo::core::NodeController::CancelPendingPortMerges": {
            "offset": "0x1DB580"
        },
        "mojo::core::NodeController::ClosePort": {
            "offset": "0x1DB6E0"
        },
        "mojo::core::NodeController::ConnectIsolated": {
            "offset": "0x1DB8F0"
        },
        "mojo::core::NodeController::ConnectIsolatedOnIOThread": {
            "offset": "0x1DBB10"
        },
        "mojo::core::NodeController::CreateSharedBuffer": {
            "offset": "0x1DC2D0"
        },
        "mojo::core::NodeController::DeserializeMessageAsEventForFuzzer": {
            "offset": "0x1DC4F0"
        },
        "mojo::core::NodeController::DeserializeRawBytesAsEventForFuzzer": {
            "offset": "0x1DC570"
        },
        "mojo::core::NodeController::DestroyOnIOThreadShutdown": {
            "offset": "0x1DC920"
        },
        "mojo::core::NodeController::DropAllPeers": {
            "offset": "0x1DC930"
        },
        "mojo::core::NodeController::DropPeer": {
            "offset": "0x1DCD40"
        },
        "mojo::core::NodeController::ForceDisconnectProcessForTesting": {
            "offset": "0x1DD390"
        },
        "mojo::core::NodeController::ForceDisconnectProcessForTestingOnIOThread": {
            "offset": "0x1DD4D0"
        },
        "mojo::core::NodeController::ForwardEvent": {
            "offset": "0x1DD980"
        },
        "mojo::core::NodeController::GetBrokerChannel": {
            "offset": "0x1DDA90"
        },
        "mojo::core::NodeController::GetInviterChannel": {
            "offset": "0x1DDB40"
        },
        "mojo::core::NodeController::GetPeerChannel": {
            "offset": "0x1DDBE0"
        },
        "mojo::core::NodeController::IsolatedConnection::~IsolatedConnection": {
            "offset": "0x1D9560"
        },
        "mojo::core::NodeController::MergeLocalPorts": {
            "offset": "0x1DDD10"
        },
        "mojo::core::NodeController::MergePortIntoInviter": {
            "offset": "0x1DDD20"
        },
        "mojo::core::NodeController::NodeController": {
            "offset": "0x1D8C20"
        },
        "mojo::core::NodeController::NotifyBadMessageFrom": {
            "offset": "0x1DE040"
        },
        "mojo::core::NodeController::OnAcceptBrokerClient": {
            "offset": "0x1DE0C0"
        },
        "mojo::core::NodeController::OnAcceptInvitation": {
            "offset": "0x1DEE80"
        },
        "mojo::core::NodeController::OnAcceptInvitee": {
            "offset": "0x1DF5A0"
        },
        "mojo::core::NodeController::OnAcceptPeer": {
            "offset": "0x1DF870"
        },
        "mojo::core::NodeController::OnAddBrokerClient": {
            "offset": "0x1DFCD0"
        },
        "mojo::core::NodeController::OnBroadcast": {
            "offset": "0x1E01A0"
        },
        "mojo::core::NodeController::OnBrokerClientAdded": {
            "offset": "0x1E0510"
        },
        "mojo::core::NodeController::OnChannelError": {
            "offset": "0x1E0870"
        },
        "mojo::core::NodeController::OnEventMessage": {
            "offset": "0x1E0A80"
        },
        "mojo::core::NodeController::OnEventMessageFromRelay": {
            "offset": "0x1E0C10"
        },
        "mojo::core::NodeController::OnIntroduce": {
            "offset": "0x1E0E30"
        },
        "mojo::core::NodeController::OnRelayEventMessage": {
            "offset": "0x1E1140"
        },
        "mojo::core::NodeController::OnRequestIntroduction": {
            "offset": "0x1E14D0"
        },
        "mojo::core::NodeController::OnRequestPortMerge": {
            "offset": "0x1E17B0"
        },
        "mojo::core::NodeController::PortObserver::~PortObserver": {
            "offset": "0x1C92F0"
        },
        "mojo::core::NodeController::PortStatusChanged": {
            "offset": "0x1E1C40"
        },
        "mojo::core::NodeController::RequestShutdown": {
            "offset": "0x1E1D70"
        },
        "mojo::core::NodeController::SendBrokerClientInvitation": {
            "offset": "0x1E2000"
        },
        "mojo::core::NodeController::SendBrokerClientInvitationOnIOThread": {
            "offset": "0x1E24D0"
        },
        "mojo::core::NodeController::SendPeerEvent": {
            "offset": "0x1E2AE0"
        },
        "mojo::core::NodeController::SendUserMessage": {
            "offset": "0x1E30D0"
        },
        "mojo::core::NodeController::SetIOTaskRunner": {
            "offset": "0x1E33C0"
        },
        "mojo::core::NodeController::SetPortObserver": {
            "offset": "0x1E3560"
        },
        "mojo::core::NodeController::core": {
            "offset": "0xAAB0"
        },
        "mojo::core::NodeController::io_task_runner": {
            "offset": "0x1BEBD0"
        },
        "mojo::core::NodeController::name": {
            "offset": "0xDDC0"
        },
        "mojo::core::NodeController::node": {
            "offset": "0x32570"
        },
        "mojo::core::NodeController::~NodeController": {
            "offset": "0x1D9610"
        },
        "mojo::core::PeekSizeMessageFilter::Match": {
            "offset": "0x1D3A00"
        },
        "mojo::core::PeekSizeMessageFilter::~PeekSizeMessageFilter": {
            "offset": "0x1D2D10"
        },
        "mojo::core::PlatformHandleDispatcher::BeginTransit": {
            "offset": "0x1E41E0"
        },
        "mojo::core::PlatformHandleDispatcher::CancelTransit": {
            "offset": "0x1E4260"
        },
        "mojo::core::PlatformHandleDispatcher::Close": {
            "offset": "0x1E42C0"
        },
        "mojo::core::PlatformHandleDispatcher::CompleteTransitAndClose": {
            "offset": "0x1E4350"
        },
        "mojo::core::PlatformHandleDispatcher::Create": {
            "offset": "0x1E43C0"
        },
        "mojo::core::PlatformHandleDispatcher::Deserialize": {
            "offset": "0x1E4480"
        },
        "mojo::core::PlatformHandleDispatcher::EndSerialize": {
            "offset": "0x1E44E0"
        },
        "mojo::core::PlatformHandleDispatcher::GetType": {
            "offset": "0x1E4570"
        },
        "mojo::core::PlatformHandleDispatcher::PlatformHandleDispatcher": {
            "offset": "0x1E3FF0"
        },
        "mojo::core::PlatformHandleDispatcher::StartSerialize": {
            "offset": "0x1E4580"
        },
        "mojo::core::PlatformHandleDispatcher::TakePlatformHandle": {
            "offset": "0x1E4590"
        },
        "mojo::core::PlatformHandleDispatcher::~PlatformHandleDispatcher": {
            "offset": "0x1E4060"
        },
        "mojo::core::PlatformHandleInTransit::CompleteTransit": {
            "offset": "0x1E4A70"
        },
        "mojo::core::PlatformHandleInTransit::IsPseudoHandle": {
            "offset": "0x1E4AC0"
        },
        "mojo::core::PlatformHandleInTransit::PlatformHandleInTransit": {
            "offset": "0x1E4710"
        },
        "mojo::core::PlatformHandleInTransit::TakeHandle": {
            "offset": "0x1E4AD0"
        },
        "mojo::core::PlatformHandleInTransit::TakeIncomingRemoteHandle": {
            "offset": "0x1E4B70"
        },
        "mojo::core::PlatformHandleInTransit::TransferToProcess": {
            "offset": "0x1E4D20"
        },
        "mojo::core::PlatformHandleInTransit::~PlatformHandleInTransit": {
            "offset": "0x1E4750"
        },
        "mojo::core::PlatformSharedMemoryMapping::GetBase": {
            "offset": "0xD8F0"
        },
        "mojo::core::PlatformSharedMemoryMapping::GetLength": {
            "offset": "0xAAB0"
        },
        "mojo::core::PlatformSharedMemoryMapping::IsValid": {
            "offset": "0x1E5530"
        },
        "mojo::core::PlatformSharedMemoryMapping::PlatformSharedMemoryMapping": {
            "offset": "0x1E50C0"
        },
        "mojo::core::PlatformSharedMemoryMapping::~PlatformSharedMemoryMapping": {
            "offset": "0x1E5510"
        },
        "mojo::core::RequestContext::AddWatchCancelFinalizer": {
            "offset": "0x1F3B90"
        },
        "mojo::core::RequestContext::AddWatchNotifyFinalizer": {
            "offset": "0x1F3C90"
        },
        "mojo::core::RequestContext::IsCurrent": {
            "offset": "0x1F3DF0"
        },
        "mojo::core::RequestContext::RequestContext": {
            "offset": "0x1F3570"
        },
        "mojo::core::RequestContext::WatchNotifyFinalizer::~WatchNotifyFinalizer": {
            "offset": "0x1F3B50"
        },
        "mojo::core::RequestContext::current": {
            "offset": "0x1F4230"
        },
        "mojo::core::RequestContext::source": {
            "offset": "0x1480"
        },
        "mojo::core::RequestContext::~RequestContext": {
            "offset": "0x1F3750"
        },
        "mojo::core::ScopedIPCSupport::ScopedIPCSupport": {
            "offset": "0x1CEC10"
        },
        "mojo::core::ScopedIPCSupport::~ScopedIPCSupport": {
            "offset": "0x1CEC90"
        },
        "mojo::core::ScopedProcessHandle::Clone": {
            "offset": "0x1F44C0"
        },
        "mojo::core::ScopedProcessHandle::CloneFrom": {
            "offset": "0x1F4500"
        },
        "mojo::core::ScopedProcessHandle::ScopedProcessHandle": {
            "offset": "0x30F0"
        },
        "mojo::core::ScopedProcessHandle::get": {
            "offset": "0xAB80"
        },
        "mojo::core::ScopedProcessHandle::is_valid": {
            "offset": "0x53D10"
        },
        "mojo::core::ScopedProcessHandle::release": {
            "offset": "0x54920"
        },
        "mojo::core::ScopedProcessHandle::~ScopedProcessHandle": {
            "offset": "0x6F480"
        },
        "mojo::core::SendDataPipeControlMessage": {
            "offset": "0x1CBB00"
        },
        "mojo::core::SetDefaultProcessErrorCallback": {
            "offset": "0x1CEBC0"
        },
        "mojo::core::SharedBufferDispatcher::BeginTransit": {
            "offset": "0x1F4930"
        },
        "mojo::core::SharedBufferDispatcher::CancelTransit": {
            "offset": "0x1E4260"
        },
        "mojo::core::SharedBufferDispatcher::Close": {
            "offset": "0x1F49C0"
        },
        "mojo::core::SharedBufferDispatcher::CompleteTransitAndClose": {
            "offset": "0x1F4A60"
        },
        "mojo::core::SharedBufferDispatcher::Create": {
            "offset": "0x1F4AF0"
        },
        "mojo::core::SharedBufferDispatcher::CreateFromPlatformSharedMemoryRegion": {
            "offset": "0x1F4C00"
        },
        "mojo::core::SharedBufferDispatcher::CreateInternal": {
            "offset": "0x1F4CE0"
        },
        "mojo::core::SharedBufferDispatcher::Deserialize": {
            "offset": "0x1F4D70"
        },
        "mojo::core::SharedBufferDispatcher::DuplicateBufferHandle": {
            "offset": "0x1F50B0"
        },
        "mojo::core::SharedBufferDispatcher::EndSerialize": {
            "offset": "0x1F54C0"
        },
        "mojo::core::SharedBufferDispatcher::GetBufferInfo": {
            "offset": "0x1F5660"
        },
        "mojo::core::SharedBufferDispatcher::GetRegionForTesting": {
            "offset": "0x36300"
        },
        "mojo::core::SharedBufferDispatcher::GetType": {
            "offset": "0x9D760"
        },
        "mojo::core::SharedBufferDispatcher::MapBuffer": {
            "offset": "0x1F56F0"
        },
        "mojo::core::SharedBufferDispatcher::PassPlatformSharedMemoryRegion": {
            "offset": "0x1F5930"
        },
        "mojo::core::SharedBufferDispatcher::SharedBufferDispatcher": {
            "offset": "0x1F4710"
        },
        "mojo::core::SharedBufferDispatcher::StartSerialize": {
            "offset": "0x1F5A00"
        },
        "mojo::core::SharedBufferDispatcher::ValidateCreateOptions": {
            "offset": "0x1F5A20"
        },
        "mojo::core::SharedBufferDispatcher::ValidateDuplicateOptions": {
            "offset": "0x1F5B50"
        },
        "mojo::core::SharedBufferDispatcher::~SharedBufferDispatcher": {
            "offset": "0x1F47E0"
        },
        "mojo::core::UserMessageImpl::AppendData": {
            "offset": "0x1F6450"
        },
        "mojo::core::UserMessageImpl::CommitSize": {
            "offset": "0x1F6710"
        },
        "mojo::core::UserMessageImpl::CreateEventForNewMessage": {
            "offset": "0x1F67F0"
        },
        "mojo::core::UserMessageImpl::CreateEventForNewSerializedMessage": {
            "offset": "0x1F6890"
        },
        "mojo::core::UserMessageImpl::CreateFromChannelMessage": {
            "offset": "0x1F6A40"
        },
        "mojo::core::UserMessageImpl::ExtractSerializedHandles": {
            "offset": "0x1F74B0"
        },
        "mojo::core::UserMessageImpl::FailHandleSerializationForTesting": {
            "offset": "0x1F7B10"
        },
        "mojo::core::UserMessageImpl::FinalizeEventMessage": {
            "offset": "0x1F7B20"
        },
        "mojo::core::UserMessageImpl::GetSizeIfSerialized": {
            "offset": "0x1F7C20"
        },
        "mojo::core::UserMessageImpl::HasContext": {
            "offset": "0x73780"
        },
        "mojo::core::UserMessageImpl::IsSerialized": {
            "offset": "0x1C6450"
        },
        "mojo::core::UserMessageImpl::IsTransmittable": {
            "offset": "0x1C64E0"
        },
        "mojo::core::UserMessageImpl::SerializeIfNecessary": {
            "offset": "0x1F7D50"
        },
        "mojo::core::UserMessageImpl::SetContext": {
            "offset": "0x1F7E90"
        },
        "mojo::core::UserMessageImpl::UserMessageImpl": {
            "offset": "0x1F5F20"
        },
        "mojo::core::UserMessageImpl::WillBeRoutedExternally": {
            "offset": "0x1F7F10"
        },
        "mojo::core::UserMessageImpl::context": {
            "offset": "0xD8F0"
        },
        "mojo::core::UserMessageImpl::num_handles": {
            "offset": "0x1F8040"
        },
        "mojo::core::UserMessageImpl::set_source_node": {
            "offset": "0x1C8F70"
        },
        "mojo::core::UserMessageImpl::source_node": {
            "offset": "0xDDA0"
        },
        "mojo::core::UserMessageImpl::user_payload": {
            "offset": "0x1C9010"
        },
        "mojo::core::UserMessageImpl::user_payload_capacity": {
            "offset": "0x1F81F0"
        },
        "mojo::core::UserMessageImpl::user_payload_size": {
            "offset": "0x1C90A0"
        },
        "mojo::core::UserMessageImpl::~UserMessageImpl": {
            "offset": "0x1F6040"
        },
        "mojo::core::Watch::AssertWatcherLockAcquired": {
            "offset": "0x1F8570"
        },
        "mojo::core::Watch::Cancel": {
            "offset": "0x1F8590"
        },
        "mojo::core::Watch::InvokeCallback": {
            "offset": "0x1F85D0"
        },
        "mojo::core::Watch::NotifyState": {
            "offset": "0x1F8680"
        },
        "mojo::core::Watch::Watch": {
            "offset": "0x1F8430"
        },
        "mojo::core::Watch::~Watch": {
            "offset": "0x1F84D0"
        },
        "mojo::core::WatcherDispatcher::Arm": {
            "offset": "0x1F9210"
        },
        "mojo::core::WatcherDispatcher::CancelWatch": {
            "offset": "0x1F9620"
        },
        "mojo::core::WatcherDispatcher::Close": {
            "offset": "0x1F9A00"
        },
        "mojo::core::WatcherDispatcher::GetType": {
            "offset": "0x7AB70"
        },
        "mojo::core::WatcherDispatcher::InvokeWatchCallback": {
            "offset": "0x1F9C30"
        },
        "mojo::core::WatcherDispatcher::NotifyHandleClosed": {
            "offset": "0x1F9D00"
        },
        "mojo::core::WatcherDispatcher::NotifyHandleState": {
            "offset": "0x1F9F40"
        },
        "mojo::core::WatcherDispatcher::WatchDispatcher": {
            "offset": "0x1FA130"
        },
        "mojo::core::WatcherDispatcher::WatcherDispatcher": {
            "offset": "0x1F8FE0"
        },
        "mojo::core::WatcherSet::Add": {
            "offset": "0x1FB0A0"
        },
        "mojo::core::WatcherSet::Entry::Entry": {
            "offset": "0x1FAE50"
        },
        "mojo::core::WatcherSet::Entry::~Entry": {
            "offset": "0x1FAFE0"
        },
        "mojo::core::WatcherSet::NotifyClosed": {
            "offset": "0x1FB450"
        },
        "mojo::core::WatcherSet::NotifyState": {
            "offset": "0x1FB4A0"
        },
        "mojo::core::WatcherSet::Remove": {
            "offset": "0x1FB520"
        },
        "mojo::core::WatcherSet::WatcherSet": {
            "offset": "0x1FAED0"
        },
        "mojo::core::WatcherSet::~WatcherSet": {
            "offset": "0x1FB090"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::ChannelWin": {
            "offset": "0x1BF770"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::GetReadPlatformHandles": {
            "offset": "0x1C0060"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::LeakHandle": {
            "offset": "0x1C02F0"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::OnIOCompleted": {
            "offset": "0x1C0390"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::OnWriteDone": {
            "offset": "0x1C0620"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::OnWriteError": {
            "offset": "0x1C0990"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::ReadMore": {
            "offset": "0x1C0AA0"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::ShutDownImpl": {
            "offset": "0x1C0FA0"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::ShutDownOnIOThread": {
            "offset": "0x1C1060"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::Start": {
            "offset": "0x1C11C0"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::StartOnIOThread": {
            "offset": "0x1C1280"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::WillDestroyCurrentMessageLoop": {
            "offset": "0x1C1480"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::Write": {
            "offset": "0x1C1520"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::WriteNextNoLock": {
            "offset": "0x1C1920"
        },
        "mojo::core::`anonymous namespace'::ChannelWin::WriteNoLock": {
            "offset": "0x1C1960"
        },
        "mojo::core::`anonymous namespace'::CloseHandleInProcess": {
            "offset": "0x1E48E0"
        },
        "mojo::core::`anonymous namespace'::CreateMessage<mojo::core::`anonymous namespace'::AcceptBrokerClientData>": {
            "offset": "0x1D4720"
        },
        "mojo::core::`anonymous namespace'::CreateMessage<mojo::core::`anonymous namespace'::AddBrokerClientData>": {
            "offset": "0x1D4720"
        },
        "mojo::core::`anonymous namespace'::CreateMessage<mojo::core::`anonymous namespace'::BindBrokerHostData>": {
            "offset": "0x1D4720"
        },
        "mojo::core::`anonymous namespace'::CreateMessage<mojo::core::`anonymous namespace'::BrokerClientAddedData>": {
            "offset": "0x1D4720"
        },
        "mojo::core::`anonymous namespace'::CreateMessage<mojo::core::`anonymous namespace'::IntroductionData>": {
            "offset": "0x1D4720"
        },
        "mojo::core::`anonymous namespace'::CreateMessage<mojo::core::`anonymous namespace'::RelayEventMessageData>": {
            "offset": "0x1D4720"
        },
        "mojo::core::`anonymous namespace'::CreateMessage<void>": {
            "offset": "0x1D4720"
        },
        "mojo::core::`anonymous namespace'::CreateOrExtendSerializedEventMessage": {
            "offset": "0x1F6B80"
        },
        "mojo::core::`anonymous namespace'::DeserializeEventMessage": {
            "offset": "0x1DC310"
        },
        "mojo::core::`anonymous namespace'::EnsureMemoryDumpProviderExists": {
            "offset": "0x1F7420"
        },
        "mojo::core::`anonymous namespace'::InvokeProcessErrorCallbackOnTaskRunner": {
            "offset": "0x1C62D0"
        },
        "mojo::core::`anonymous namespace'::MessageMemoryDumpProvider::OnMemoryDump": {
            "offset": "0x1F7C50"
        },
        "mojo::core::`anonymous namespace'::RunMojoProcessErrorHandler": {
            "offset": "0x1C70E0"
        },
        "mojo::core::`anonymous namespace'::SerializeEventMessage": {
            "offset": "0x1E3130"
        },
        "mojo::core::`anonymous namespace'::TakeHandlesFromBrokerMessage": {
            "offset": "0x1BBF50"
        },
        "mojo::core::`anonymous namespace'::ThreadDestructionObserver::Create": {
            "offset": "0x1DC0B0"
        },
        "mojo::core::`anonymous namespace'::ThreadDestructionObserver::WillDestroyCurrentMessageLoop": {
            "offset": "0x1E35F0"
        },
        "mojo::core::`anonymous namespace'::TransferHandle": {
            "offset": "0x1E4C50"
        },
        "mojo::core::`anonymous namespace'::WaitForBrokerMessage": {
            "offset": "0x1BC190"
        },
        "mojo::core::ports::Event::Clone": {
            "offset": "0xD61F0"
        },
        "mojo::core::ports::Event::Deserialize": {
            "offset": "0x1E63C0"
        },
        "mojo::core::ports::Event::Event": {
            "offset": "0x1E5960"
        },
        "mojo::core::ports::Event::GetSerializedSize": {
            "offset": "0x1E6B50"
        },
        "mojo::core::ports::Event::PortDescriptor::PortDescriptor": {
            "offset": "0x1E5AD0"
        },
        "mojo::core::ports::Event::Serialize": {
            "offset": "0x1E6D60"
        },
        "mojo::core::ports::Event::port_name": {
            "offset": "0x15B0"
        },
        "mojo::core::ports::Event::set_port_name": {
            "offset": "0x1BED20"
        },
        "mojo::core::ports::Event::type": {
            "offset": "0xD9A0"
        },
        "mojo::core::ports::Event::~Event": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::MergePortEvent::Deserialize": {
            "offset": "0x1E6520"
        },
        "mojo::core::ports::MergePortEvent::GetSerializedDataSize": {
            "offset": "0x1E6A50"
        },
        "mojo::core::ports::MergePortEvent::MergePortEvent": {
            "offset": "0x1E5980"
        },
        "mojo::core::ports::MergePortEvent::SerializeData": {
            "offset": "0x1E6D80"
        },
        "mojo::core::ports::MergePortEvent::new_port_descriptor": {
            "offset": "0xD5E0"
        },
        "mojo::core::ports::MergePortEvent::new_port_name": {
            "offset": "0xD460"
        },
        "mojo::core::ports::MergePortEvent::~MergePortEvent": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::MessageQueue::AcceptMessage": {
            "offset": "0x1E74B0"
        },
        "mojo::core::ports::MessageQueue::GetNextMessage": {
            "offset": "0x1E75A0"
        },
        "mojo::core::ports::MessageQueue::HasNextMessage": {
            "offset": "0x1E7710"
        },
        "mojo::core::ports::MessageQueue::MessageQueue": {
            "offset": "0x1E73A0"
        },
        "mojo::core::ports::MessageQueue::TakeAllMessages": {
            "offset": "0x1E7730"
        },
        "mojo::core::ports::MessageQueue::next_sequence_num": {
            "offset": "0xD8F0"
        },
        "mojo::core::ports::MessageQueue::queued_message_count": {
            "offset": "0xBD820"
        },
        "mojo::core::ports::MessageQueue::queued_num_bytes": {
            "offset": "0x32570"
        },
        "mojo::core::ports::MessageQueue::set_signalable": {
            "offset": "0x1BED30"
        },
        "mojo::core::ports::MessageQueue::~MessageQueue": {
            "offset": "0x1E73C0"
        },
        "mojo::core::ports::Name::Name": {
            "offset": "0x29200"
        },
        "mojo::core::ports::Node::AcceptEvent": {
            "offset": "0x1E9890"
        },
        "mojo::core::ports::Node::AcceptPort": {
            "offset": "0x1E99F0"
        },
        "mojo::core::ports::Node::AddPortWithName": {
            "offset": "0x1E9CF0"
        },
        "mojo::core::ports::Node::BeginProxying": {
            "offset": "0x1E9FF0"
        },
        "mojo::core::ports::Node::CanShutdownCleanly": {
            "offset": "0x1EA1D0"
        },
        "mojo::core::ports::Node::ClosePort": {
            "offset": "0x1EA780"
        },
        "mojo::core::ports::Node::ConvertToProxy": {
            "offset": "0x1EAAD0"
        },
        "mojo::core::ports::Node::CreatePortPair": {
            "offset": "0x1EAC30"
        },
        "mojo::core::ports::Node::CreateUninitializedPort": {
            "offset": "0x1EACA0"
        },
        "mojo::core::ports::Node::DestroyAllPortsWithPeer": {
            "offset": "0x1EAE60"
        },
        "mojo::core::ports::Node::ErasePort": {
            "offset": "0x1EB620"
        },
        "mojo::core::ports::Node::ForwardUserMessagesFromProxy": {
            "offset": "0x1EB970"
        },
        "mojo::core::ports::Node::GetMessageW": {
            "offset": "0x1EBC80"
        },
        "mojo::core::ports::Node::GetPort": {
            "offset": "0x1EC1C0"
        },
        "mojo::core::ports::Node::GetStatus": {
            "offset": "0x1EC3C0"
        },
        "mojo::core::ports::Node::GetUserData": {
            "offset": "0x1EC4E0"
        },
        "mojo::core::ports::Node::InitializePort": {
            "offset": "0x1EC560"
        },
        "mojo::core::ports::Node::InitiateProxyRemoval": {
            "offset": "0x1EC680"
        },
        "mojo::core::ports::Node::LostConnectionToNode": {
            "offset": "0x1EC780"
        },
        "mojo::core::ports::Node::MaybeForwardAckRequest": {
            "offset": "0x1EC860"
        },
        "mojo::core::ports::Node::MaybeResendAck": {
            "offset": "0x1EC950"
        },
        "mojo::core::ports::Node::MaybeResendAckRequest": {
            "offset": "0x1ECA50"
        },
        "mojo::core::ports::Node::MergeLocalPorts": {
            "offset": "0x1ECB50"
        },
        "mojo::core::ports::Node::MergePorts": {
            "offset": "0x1ECC60"
        },
        "mojo::core::ports::Node::MergePortsInternal": {
            "offset": "0x1ECF10"
        },
        "mojo::core::ports::Node::Node": {
            "offset": "0x1E8E40"
        },
        "mojo::core::ports::Node::OnMergePort": {
            "offset": "0x1ED790"
        },
        "mojo::core::ports::Node::OnObserveClosure": {
            "offset": "0x1EDA40"
        },
        "mojo::core::ports::Node::OnObserveProxy": {
            "offset": "0x1EDE30"
        },
        "mojo::core::ports::Node::OnObserveProxyAck": {
            "offset": "0x1EE6D0"
        },
        "mojo::core::ports::Node::OnPortAccepted": {
            "offset": "0x1EE940"
        },
        "mojo::core::ports::Node::OnUserMessage": {
            "offset": "0x1EEB00"
        },
        "mojo::core::ports::Node::OnUserMessageReadAck": {
            "offset": "0x1EF3C0"
        },
        "mojo::core::ports::Node::OnUserMessageReadAckRequest": {
            "offset": "0x1EF630"
        },
        "mojo::core::ports::Node::PrepareToForwardUserMessage": {
            "offset": "0x1EF890"
        },
        "mojo::core::ports::Node::RemoveFromPeerPortMap": {
            "offset": "0x1F0860"
        },
        "mojo::core::ports::Node::SendUserMessage": {
            "offset": "0x1F0AA0"
        },
        "mojo::core::ports::Node::SendUserMessageInternal": {
            "offset": "0x1F0BA0"
        },
        "mojo::core::ports::Node::SetAcknowledgeRequestInterval": {
            "offset": "0x1F0DA0"
        },
        "mojo::core::ports::Node::SetUserData": {
            "offset": "0x1F0EB0"
        },
        "mojo::core::ports::Node::SwapPortPeers": {
            "offset": "0x1F0FA0"
        },
        "mojo::core::ports::Node::TryRemoveProxy": {
            "offset": "0x1F1180"
        },
        "mojo::core::ports::Node::UpdatePortPeerAddress": {
            "offset": "0x1F13E0"
        },
        "mojo::core::ports::Node::~Node": {
            "offset": "0x1E95A0"
        },
        "mojo::core::ports::NodeDelegate::~NodeDelegate": {
            "offset": "0x1D9830"
        },
        "mojo::core::ports::NodeName::NodeName": {
            "offset": "0x29200"
        },
        "mojo::core::ports::ObserveClosureEvent::Clone": {
            "offset": "0x1E6230"
        },
        "mojo::core::ports::ObserveClosureEvent::Deserialize": {
            "offset": "0x1E65E0"
        },
        "mojo::core::ports::ObserveClosureEvent::GetSerializedDataSize": {
            "offset": "0x1E6A60"
        },
        "mojo::core::ports::ObserveClosureEvent::ObserveClosureEvent": {
            "offset": "0x1E59F0"
        },
        "mojo::core::ports::ObserveClosureEvent::SerializeData": {
            "offset": "0x1E6DC0"
        },
        "mojo::core::ports::ObserveClosureEvent::last_sequence_num": {
            "offset": "0x695C0"
        },
        "mojo::core::ports::ObserveClosureEvent::set_last_sequence_num": {
            "offset": "0x1BED10"
        },
        "mojo::core::ports::ObserveClosureEvent::~ObserveClosureEvent": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::ObserveProxyAckEvent::Clone": {
            "offset": "0x1E62B0"
        },
        "mojo::core::ports::ObserveProxyAckEvent::Deserialize": {
            "offset": "0x1E6670"
        },
        "mojo::core::ports::ObserveProxyAckEvent::GetSerializedDataSize": {
            "offset": "0x1E6A60"
        },
        "mojo::core::ports::ObserveProxyAckEvent::ObserveProxyAckEvent": {
            "offset": "0x1E5A20"
        },
        "mojo::core::ports::ObserveProxyAckEvent::SerializeData": {
            "offset": "0x1E6DC0"
        },
        "mojo::core::ports::ObserveProxyAckEvent::last_sequence_num": {
            "offset": "0x695C0"
        },
        "mojo::core::ports::ObserveProxyAckEvent::~ObserveProxyAckEvent": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::ObserveProxyEvent::Clone": {
            "offset": "0x1E6330"
        },
        "mojo::core::ports::ObserveProxyEvent::Deserialize": {
            "offset": "0x1E6700"
        },
        "mojo::core::ports::ObserveProxyEvent::GetSerializedDataSize": {
            "offset": "0x154F60"
        },
        "mojo::core::ports::ObserveProxyEvent::ObserveProxyEvent": {
            "offset": "0x1E5A50"
        },
        "mojo::core::ports::ObserveProxyEvent::SerializeData": {
            "offset": "0x1E6DD0"
        },
        "mojo::core::ports::ObserveProxyEvent::proxy_node_name": {
            "offset": "0xD460"
        },
        "mojo::core::ports::ObserveProxyEvent::proxy_port_name": {
            "offset": "0xD5E0"
        },
        "mojo::core::ports::ObserveProxyEvent::proxy_target_node_name": {
            "offset": "0x1E180"
        },
        "mojo::core::ports::ObserveProxyEvent::proxy_target_port_name": {
            "offset": "0xD7F0"
        },
        "mojo::core::ports::ObserveProxyEvent::~ObserveProxyEvent": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::Port::Port": {
            "offset": "0x1F1E30"
        },
        "mojo::core::ports::Port::~Port": {
            "offset": "0x1F1F10"
        },
        "mojo::core::ports::PortAcceptedEvent::Deserialize": {
            "offset": "0x1E67B0"
        },
        "mojo::core::ports::PortAcceptedEvent::GetSerializedDataSize": {
            "offset": "0x12A0"
        },
        "mojo::core::ports::PortAcceptedEvent::PortAcceptedEvent": {
            "offset": "0x1E5AA0"
        },
        "mojo::core::ports::PortAcceptedEvent::SerializeData": {
            "offset": "0x12B0"
        },
        "mojo::core::ports::PortAcceptedEvent::~PortAcceptedEvent": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::PortLocker::AssertNoPortsLockedOnCurrentThread": {
            "offset": "0x1F2AB0"
        },
        "mojo::core::ports::PortLocker::GetPort": {
            "offset": "0x1EC2E0"
        },
        "mojo::core::ports::PortLocker::PortLocker": {
            "offset": "0x1F2610"
        },
        "mojo::core::ports::PortLocker::~PortLocker": {
            "offset": "0x1F2810"
        },
        "mojo::core::ports::PortName::PortName": {
            "offset": "0x29200"
        },
        "mojo::core::ports::PortRef::PortRef": {
            "offset": "0x2E280"
        },
        "mojo::core::ports::PortRef::is_valid": {
            "offset": "0x19A890"
        },
        "mojo::core::ports::PortRef::name": {
            "offset": "0x3FB0"
        },
        "mojo::core::ports::PortRef::port": {
            "offset": "0xAAB0"
        },
        "mojo::core::ports::PortRef::~PortRef": {
            "offset": "0x1F2DC0"
        },
        "mojo::core::ports::SinglePortLocker::SinglePortLocker": {
            "offset": "0x1F2710"
        },
        "mojo::core::ports::SinglePortLocker::~SinglePortLocker": {
            "offset": "0x1F2AA0"
        },
        "mojo::core::ports::UserMessage::GetSizeIfSerialized": {
            "offset": "0x12A0"
        },
        "mojo::core::ports::UserMessage::UserMessage": {
            "offset": "0x1F2EF0"
        },
        "mojo::core::ports::UserMessage::WillBeRoutedExternally": {
            "offset": "0xAAC0"
        },
        "mojo::core::ports::UserMessage::type_info": {
            "offset": "0xAAA0"
        },
        "mojo::core::ports::UserMessage::~UserMessage": {
            "offset": "0x1F2F10"
        },
        "mojo::core::ports::UserMessageEvent::AttachMessage": {
            "offset": "0x1E6160"
        },
        "mojo::core::ports::UserMessageEvent::Deserialize": {
            "offset": "0x1E6820"
        },
        "mojo::core::ports::UserMessageEvent::GetMessageW<mojo::core::UserMessageImpl>": {
            "offset": "0x1C1D80"
        },
        "mojo::core::ports::UserMessageEvent::GetSerializedDataSize": {
            "offset": "0x1E6A70"
        },
        "mojo::core::ports::UserMessageEvent::GetSizeIfSerialized": {
            "offset": "0x1E6B70"
        },
        "mojo::core::ports::UserMessageEvent::HasMessage": {
            "offset": "0x1BDCC0"
        },
        "mojo::core::ports::UserMessageEvent::NotifyWillBeRoutedExternally": {
            "offset": "0x1E6B90"
        },
        "mojo::core::ports::UserMessageEvent::ReservePorts": {
            "offset": "0x1E6C20"
        },
        "mojo::core::ports::UserMessageEvent::SerializeData": {
            "offset": "0x1E6DF0"
        },
        "mojo::core::ports::UserMessageEvent::UserMessageEvent": {
            "offset": "0x1E5B50"
        },
        "mojo::core::ports::UserMessageEvent::num_ports": {
            "offset": "0x1BECE0"
        },
        "mojo::core::ports::UserMessageEvent::port_descriptors": {
            "offset": "0x32570"
        },
        "mojo::core::ports::UserMessageEvent::ports": {
            "offset": "0xD470"
        },
        "mojo::core::ports::UserMessageEvent::sequence_num": {
            "offset": "0x695C0"
        },
        "mojo::core::ports::UserMessageEvent::set_sequence_num": {
            "offset": "0x1BED10"
        },
        "mojo::core::ports::UserMessageEvent::~UserMessageEvent": {
            "offset": "0x1E5DB0"
        },
        "mojo::core::ports::UserMessageReadAckEvent::Deserialize": {
            "offset": "0x1E6950"
        },
        "mojo::core::ports::UserMessageReadAckEvent::GetSerializedDataSize": {
            "offset": "0x1E6A60"
        },
        "mojo::core::ports::UserMessageReadAckEvent::SerializeData": {
            "offset": "0x1E6DC0"
        },
        "mojo::core::ports::UserMessageReadAckEvent::UserMessageReadAckEvent": {
            "offset": "0x1E5BC0"
        },
        "mojo::core::ports::UserMessageReadAckEvent::sequence_num_acknowledged": {
            "offset": "0x695C0"
        },
        "mojo::core::ports::UserMessageReadAckEvent::~UserMessageReadAckEvent": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::UserMessageReadAckRequestEvent::Deserialize": {
            "offset": "0x1E69D0"
        },
        "mojo::core::ports::UserMessageReadAckRequestEvent::GetSerializedDataSize": {
            "offset": "0x1E6A60"
        },
        "mojo::core::ports::UserMessageReadAckRequestEvent::SerializeData": {
            "offset": "0x1E6DC0"
        },
        "mojo::core::ports::UserMessageReadAckRequestEvent::UserMessageReadAckRequestEvent": {
            "offset": "0x1E5C70"
        },
        "mojo::core::ports::UserMessageReadAckRequestEvent::sequence_num_to_acknowledge": {
            "offset": "0x695C0"
        },
        "mojo::core::ports::UserMessageReadAckRequestEvent::~UserMessageReadAckRequestEvent": {
            "offset": "0x1E5DA0"
        },
        "mojo::core::ports::`anonymous namespace'::DebugError": {
            "offset": "0x1EADC0"
        },
        "mojo::core::ports::`anonymous namespace'::GenerateRandomPortName": {
            "offset": "0x1EBB10"
        },
        "mojo::core::ports::`anonymous namespace'::UpdateTLS": {
            "offset": "0x1F2AC0"
        },
        "mojo::interface_control::EnableIdleTracking::EnableIdleTracking": {
            "offset": "0x2FB0"
        },
        "mojo::interface_control::FlushForTesting::FlushForTesting": {
            "offset": "0x3FB0"
        },
        "mojo::interface_control::MessageAck::MessageAck": {
            "offset": "0x3FB0"
        },
        "mojo::interface_control::NotifyIdle::NotifyIdle": {
            "offset": "0x3FB0"
        },
        "mojo::interface_control::QueryVersion::QueryVersion": {
            "offset": "0x3FB0"
        },
        "mojo::interface_control::QueryVersionResult::QueryVersionResult": {
            "offset": "0x1BD0"
        },
        "mojo::interface_control::RequireVersion::RequireVersion": {
            "offset": "0x1BD0"
        },
        "mojo::interface_control::RequireVersion::~RequireVersion": {
            "offset": "0x12B0"
        },
        "mojo::interface_control::RunInput::RunInput": {
            "offset": "0x2406A0"
        },
        "mojo::interface_control::RunInput::set_flush_for_testing": {
            "offset": "0x241B40"
        },
        "mojo::interface_control::RunInput::set_query_version": {
            "offset": "0x241D60"
        },
        "mojo::interface_control::RunInput::~RunInput": {
            "offset": "0x240740"
        },
        "mojo::interface_control::RunMessageParams::RunMessageParams": {
            "offset": "0x163A50"
        },
        "mojo::interface_control::RunMessageParams::~RunMessageParams": {
            "offset": "0x240760"
        },
        "mojo::interface_control::RunOrClosePipeInput::RunOrClosePipeInput": {
            "offset": "0x2406F0"
        },
        "mojo::interface_control::RunOrClosePipeInput::set_enable_idle_tracking": {
            "offset": "0x241A60"
        },
        "mojo::interface_control::RunOrClosePipeInput::set_message_ack": {
            "offset": "0x241BE0"
        },
        "mojo::interface_control::RunOrClosePipeInput::set_notify_idle": {
            "offset": "0x241CA0"
        },
        "mojo::interface_control::RunOrClosePipeInput::set_require_version": {
            "offset": "0x241E80"
        },
        "mojo::interface_control::RunOrClosePipeInput::~RunOrClosePipeInput": {
            "offset": "0x2407B0"
        },
        "mojo::interface_control::RunOrClosePipeMessageParams::RunOrClosePipeMessageParams": {
            "offset": "0x163A50"
        },
        "mojo::interface_control::RunOrClosePipeMessageParams::~RunOrClosePipeMessageParams": {
            "offset": "0x2407F0"
        },
        "mojo::interface_control::RunOutput::RunOutput": {
            "offset": "0x2406F0"
        },
        "mojo::interface_control::RunOutput::get_query_version_result": {
            "offset": "0x20AC80"
        },
        "mojo::interface_control::RunOutput::set_query_version_result": {
            "offset": "0x241DF0"
        },
        "mojo::interface_control::RunOutput::~RunOutput": {
            "offset": "0x240850"
        },
        "mojo::interface_control::RunResponseMessageParams::RunResponseMessageParams": {
            "offset": "0x163A50"
        },
        "mojo::interface_control::RunResponseMessageParams::~RunResponseMessageParams": {
            "offset": "0x240870"
        },
        "mojo::interface_control::internal::EnableIdleTracking_Data::BufferWriter::data": {
            "offset": "0x20D5E0"
        },
        "mojo::interface_control::internal::EnableIdleTracking_Data::EnableIdleTracking_Data": {
            "offset": "0x23CA00"
        },
        "mojo::interface_control::internal::FlushForTesting_Data::BufferWriter::data": {
            "offset": "0x20D6C0"
        },
        "mojo::interface_control::internal::FlushForTesting_Data::FlushForTesting_Data": {
            "offset": "0x23F970"
        },
        "mojo::interface_control::internal::MessageAck_Data::BufferWriter::data": {
            "offset": "0x20D7A0"
        },
        "mojo::interface_control::internal::MessageAck_Data::MessageAck_Data": {
            "offset": "0x23F970"
        },
        "mojo::interface_control::internal::NotifyIdle_Data::BufferWriter::data": {
            "offset": "0x20D880"
        },
        "mojo::interface_control::internal::NotifyIdle_Data::NotifyIdle_Data": {
            "offset": "0x23F970"
        },
        "mojo::interface_control::internal::QueryVersionResult_Data::BufferWriter::data": {
            "offset": "0x20A9E0"
        },
        "mojo::interface_control::internal::QueryVersionResult_Data::QueryVersionResult_Data": {
            "offset": "0x23CA00"
        },
        "mojo::interface_control::internal::QueryVersion_Data::BufferWriter::data": {
            "offset": "0x20D960"
        },
        "mojo::interface_control::internal::QueryVersion_Data::QueryVersion_Data": {
            "offset": "0x23F970"
        },
        "mojo::interface_control::internal::RequireVersion_Data::BufferWriter::data": {
            "offset": "0x20DA40"
        },
        "mojo::interface_control::internal::RequireVersion_Data::RequireVersion_Data": {
            "offset": "0x23CA00"
        },
        "mojo::interface_control::internal::RunInput_Data::BufferWriter::data": {
            "offset": "0x20DB20"
        },
        "mojo::interface_control::internal::RunInput_Data::Validate": {
            "offset": "0x23F9B0"
        },
        "mojo::interface_control::internal::RunMessageParams_Data::BufferWriter::data": {
            "offset": "0x20DC00"
        },
        "mojo::interface_control::internal::RunMessageParams_Data::RunMessageParams_Data": {
            "offset": "0x23F990"
        },
        "mojo::interface_control::internal::RunMessageParams_Data::Validate": {
            "offset": "0x23FCB0"
        },
        "mojo::interface_control::internal::RunOrClosePipeInput_Data::BufferWriter::data": {
            "offset": "0x20DCE0"
        },
        "mojo::interface_control::internal::RunOrClosePipeInput_Data::Validate": {
            "offset": "0x23FDC0"
        },
        "mojo::interface_control::internal::RunOrClosePipeMessageParams_Data::BufferWriter::data": {
            "offset": "0x20DDC0"
        },
        "mojo::interface_control::internal::RunOrClosePipeMessageParams_Data::RunOrClosePipeMessageParams_Data": {
            "offset": "0x23F990"
        },
        "mojo::interface_control::internal::RunOrClosePipeMessageParams_Data::Validate": {
            "offset": "0x240290"
        },
        "mojo::interface_control::internal::RunOutput_Data::BufferWriter::data": {
            "offset": "0x20AAC0"
        },
        "mojo::interface_control::internal::RunOutput_Data::Validate": {
            "offset": "0x2403A0"
        },
        "mojo::interface_control::internal::RunResponseMessageParams_Data::BufferWriter::data": {
            "offset": "0x20ABA0"
        },
        "mojo::interface_control::internal::RunResponseMessageParams_Data::RunResponseMessageParams_Data": {
            "offset": "0x23F990"
        },
        "mojo::interface_control::internal::RunResponseMessageParams_Data::Validate": {
            "offset": "0x2405C0"
        },
        "mojo::internal::ArrayDataTraits<bool>::BitRef::BitRef": {
            "offset": "0x202710"
        },
        "mojo::internal::ArrayDataTraits<bool>::BitRef::~BitRef": {
            "offset": "0x12B0"
        },
        "mojo::internal::ArraySerializationHelper<mojo::internal::Pointer<mojo::native::internal::SerializedHandle_Data>,0,0>::ValidateElements": {
            "offset": "0x23D3D0"
        },
        "mojo::internal::ArraySerializer<mojo::ArrayDataView<unsigned char>,base::span<unsigned char const ,-1>,mojo::internal::ArrayIterator<mojo::ArrayTraits<base::span<unsigned char const ,-1> >,base::span<unsigned char const ,-1>,0>,void>::SerializeElements": {
            "offset": "0x23F0C0"
        },
        "mojo::internal::Array_Data<char>::BufferWriter::data": {
            "offset": "0x223E20"
        },
        "mojo::internal::Array_Data<char>::Validate": {
            "offset": "0x23CA40"
        },
        "mojo::internal::Array_Data<mojo::internal::Pointer<mojo::native::internal::SerializedHandle_Data> >::BufferWriter::Allocate": {
            "offset": "0x21FB80"
        },
        "mojo::internal::Array_Data<mojo::internal::Pointer<mojo::native::internal::SerializedHandle_Data> >::BufferWriter::data": {
            "offset": "0x215F00"
        },
        "mojo::internal::Array_Data<mojo::internal::Pointer<mojo::native::internal::SerializedHandle_Data> >::Validate": {
            "offset": "0x23CCD0"
        },
        "mojo::internal::Array_Data<mojo_base::mojom::internal::Value_Data>::at": {
            "offset": "0x2001E0"
        },
        "mojo::internal::Array_Data<unsigned char>::BufferWriter::Allocate": {
            "offset": "0x21FAC0"
        },
        "mojo::internal::Array_Data<unsigned char>::BufferWriter::data": {
            "offset": "0x215F00"
        },
        "mojo::internal::Array_Data<unsigned char>::Validate": {
            "offset": "0x241F40"
        },
        "mojo::internal::Array_Data<unsigned int>::BufferWriter::data": {
            "offset": "0x215F00"
        },
        "mojo::internal::Array_Data<unsigned int>::Validate": {
            "offset": "0x216ED0"
        },
        "mojo::internal::AssociatedInterfacePtrState<IPC::mojom::Channel>::Bind": {
            "offset": "0x1AC790"
        },
        "mojo::internal::AssociatedInterfacePtrState<IPC::mojom::Channel>::~AssociatedInterfacePtrState<IPC::mojom::Channel>": {
            "offset": "0x19CE10"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::AssociatedInterfacePtrStateBase": {
            "offset": "0x203680"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::Bind": {
            "offset": "0x203690"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::CloseWithReason": {
            "offset": "0x203930"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::FlushForTesting": {
            "offset": "0x203940"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::ForwardMessage": {
            "offset": "0x19A780"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::ForwardMessageWithResponder": {
            "offset": "0x19A7B0"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::OnQueryVersion": {
            "offset": "0x203950"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::PassHandle": {
            "offset": "0x203A10"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::QueryVersion": {
            "offset": "0x203A50"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::RequireVersion": {
            "offset": "0x203B60"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::Swap": {
            "offset": "0x203BB0"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::associated_group": {
            "offset": "0x19AE90"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::encountered_error": {
            "offset": "0x19B100"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::endpoint_client": {
            "offset": "0xAB80"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::force_outgoing_messages_async": {
            "offset": "0x19B240"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::has_pending_callbacks": {
            "offset": "0x19B5F0"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::is_bound": {
            "offset": "0x4AB0"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::set_connection_error_handler": {
            "offset": "0x19BB80"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::set_connection_error_with_reason_handler": {
            "offset": "0x19BE70"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::version": {
            "offset": "0xD9A0"
        },
        "mojo::internal::AssociatedInterfacePtrStateBase::~AssociatedInterfacePtrStateBase": {
            "offset": "0x39C0"
        },
        "mojo::internal::BindingStateBase::BindInternal": {
            "offset": "0x203CF0"
        },
        "mojo::internal::BindingStateBase::BindingStateBase": {
            "offset": "0x203BD0"
        },
        "mojo::internal::BindingStateBase::Close": {
            "offset": "0x2040E0"
        },
        "mojo::internal::BindingStateBase::CloseWithReason": {
            "offset": "0x2041F0"
        },
        "mojo::internal::BindingStateBase::EnableBatchDispatch": {
            "offset": "0x2042F0"
        },
        "mojo::internal::BindingStateBase::EnableTestingMode": {
            "offset": "0x204380"
        },
        "mojo::internal::BindingStateBase::FlushAsync": {
            "offset": "0x204410"
        },
        "mojo::internal::BindingStateBase::FlushForTesting": {
            "offset": "0x202D90"
        },
        "mojo::internal::BindingStateBase::GetBadMessageCallback": {
            "offset": "0x204460"
        },
        "mojo::internal::BindingStateBase::HasAssociatedInterfaces": {
            "offset": "0x19A840"
        },
        "mojo::internal::BindingStateBase::PauseIncomingMethodCallProcessing": {
            "offset": "0x204550"
        },
        "mojo::internal::BindingStateBase::PauseRemoteCallbacksUntilFlushCompletes": {
            "offset": "0x2045E0"
        },
        "mojo::internal::BindingStateBase::RaiseError": {
            "offset": "0x19AB00"
        },
        "mojo::internal::BindingStateBase::ResumeIncomingMethodCallProcessing": {
            "offset": "0x204630"
        },
        "mojo::internal::BindingStateBase::RouterForTesting": {
            "offset": "0x2046C0"
        },
        "mojo::internal::BindingStateBase::SetFilter": {
            "offset": "0x204920"
        },
        "mojo::internal::BindingStateBase::WaitForIncomingMethodCall": {
            "offset": "0x2049F0"
        },
        "mojo::internal::BindingStateBase::handle": {
            "offset": "0x19B390"
        },
        "mojo::internal::BindingStateBase::is_bound": {
            "offset": "0x4AB0"
        },
        "mojo::internal::BindingStateBase::set_connection_error_handler": {
            "offset": "0x19BC40"
        },
        "mojo::internal::BindingStateBase::set_connection_error_with_reason_handler": {
            "offset": "0x19BF30"
        },
        "mojo::internal::BindingStateBase::~BindingStateBase": {
            "offset": "0x203C80"
        },
        "mojo::internal::Buffer::Allocate": {
            "offset": "0x204C80"
        },
        "mojo::internal::Buffer::AllocateAndGet": {
            "offset": "0x19A260"
        },
        "mojo::internal::Buffer::AttachHandles": {
            "offset": "0x204EE0"
        },
        "mojo::internal::Buffer::Buffer": {
            "offset": "0x204C20"
        },
        "mojo::internal::Buffer::Reset": {
            "offset": "0x204FD0"
        },
        "mojo::internal::Buffer::Seal": {
            "offset": "0x204FF0"
        },
        "mojo::internal::Buffer::cursor": {
            "offset": "0x695C0"
        },
        "mojo::internal::Buffer::data": {
            "offset": "0xAAB0"
        },
        "mojo::internal::Buffer::is_valid": {
            "offset": "0x19B9D0"
        },
        "mojo::internal::Buffer::size": {
            "offset": "0xD8F0"
        },
        "mojo::internal::Buffer::~Buffer": {
            "offset": "0x12B0"
        },
        "mojo::internal::ComputeSerializedMessageSize": {
            "offset": "0x217170"
        },
        "mojo::internal::ContainerValidateParams::~ContainerValidateParams": {
            "offset": "0x216B20"
        },
        "mojo::internal::ControlMessageHandler::Accept": {
            "offset": "0x209920"
        },
        "mojo::internal::ControlMessageHandler::AcceptWithResponder": {
            "offset": "0x209A80"
        },
        "mojo::internal::ControlMessageHandler::ControlMessageHandler": {
            "offset": "0x209630"
        },
        "mojo::internal::ControlMessageHandler::IsControlMessage": {
            "offset": "0x209C20"
        },
        "mojo::internal::ControlMessageHandler::Run": {
            "offset": "0x209C60"
        },
        "mojo::internal::ControlMessageHandler::RunOrClosePipe": {
            "offset": "0x20A230"
        },
        "mojo::internal::ControlMessageHandler::~ControlMessageHandler": {
            "offset": "0x209730"
        },
        "mojo::internal::ControlMessageProxy::ControlMessageProxy": {
            "offset": "0x20AEB0"
        },
        "mojo::internal::ControlMessageProxy::EnableIdleTracking": {
            "offset": "0x20B1F0"
        },
        "mojo::internal::ControlMessageProxy::FlushAsyncForTesting": {
            "offset": "0x20B300"
        },
        "mojo::internal::ControlMessageProxy::FlushForTesting": {
            "offset": "0x20B700"
        },
        "mojo::internal::ControlMessageProxy::NotifyIdle": {
            "offset": "0x20B790"
        },
        "mojo::internal::ControlMessageProxy::OnConnectionError": {
            "offset": "0x20B890"
        },
        "mojo::internal::ControlMessageProxy::QueryVersion": {
            "offset": "0x20B8B0"
        },
        "mojo::internal::ControlMessageProxy::RequireVersion": {
            "offset": "0x20BA80"
        },
        "mojo::internal::ControlMessageProxy::RunFlushForTestingClosure": {
            "offset": "0x20BC60"
        },
        "mojo::internal::ControlMessageProxy::SendMessageAck": {
            "offset": "0x20BF00"
        },
        "mojo::internal::ControlMessageProxy::~ControlMessageProxy": {
            "offset": "0x20AF30"
        },
        "mojo::internal::Deserialize<mojo_base::mojom::TimeDataView,mojo_base::mojom::internal::Time_Data * &,base::Time,mojo::internal::SerializationContext * &,0>": {
            "offset": "0x1FE860"
        },
        "mojo::internal::Deserialize<mojo_base::mojom::ValueDataView,mojo_base::mojom::internal::Value_Data *,base::Value,mojo::internal::SerializationContext * &,0>": {
            "offset": "0x1FF4A0"
        },
        "mojo::internal::FixedBufferForTesting::FixedBufferForTesting": {
            "offset": "0x20DEA0"
        },
        "mojo::internal::FixedBufferForTesting::~FixedBufferForTesting": {
            "offset": "0x20DEF0"
        },
        "mojo::internal::GetTaskRunnerToUseFromUserProvidedTaskRunner": {
            "offset": "0x22B710"
        },
        "mojo::internal::InterfacePtrStateBase::Bind": {
            "offset": "0x211810"
        },
        "mojo::internal::InterfacePtrStateBase::FlushAsync": {
            "offset": "0x204410"
        },
        "mojo::internal::InterfacePtrStateBase::HasAssociatedInterfaces": {
            "offset": "0x19A840"
        },
        "mojo::internal::InterfacePtrStateBase::InitializeEndpointClient": {
            "offset": "0x211A90"
        },
        "mojo::internal::InterfacePtrStateBase::InterfacePtrStateBase": {
            "offset": "0x211700"
        },
        "mojo::internal::InterfacePtrStateBase::OnQueryVersion": {
            "offset": "0x211D30"
        },
        "mojo::internal::InterfacePtrStateBase::PassMessagePipe": {
            "offset": "0x19A8D0"
        },
        "mojo::internal::InterfacePtrStateBase::PauseReceiverUntilFlushCompletes": {
            "offset": "0x2045E0"
        },
        "mojo::internal::InterfacePtrStateBase::QueryVersion": {
            "offset": "0x211DF0"
        },
        "mojo::internal::InterfacePtrStateBase::RequireVersion": {
            "offset": "0x211F00"
        },
        "mojo::internal::InterfacePtrStateBase::SetNextCallLocation": {
            "offset": "0x19ABF0"
        },
        "mojo::internal::InterfacePtrStateBase::Swap": {
            "offset": "0x211F20"
        },
        "mojo::internal::InterfacePtrStateBase::encountered_error": {
            "offset": "0x19B230"
        },
        "mojo::internal::InterfacePtrStateBase::endpoint_client": {
            "offset": "0xAAA0"
        },
        "mojo::internal::InterfacePtrStateBase::force_outgoing_messages_async": {
            "offset": "0x19B2F0"
        },
        "mojo::internal::InterfacePtrStateBase::handle": {
            "offset": "0x19B4D0"
        },
        "mojo::internal::InterfacePtrStateBase::has_pending_callbacks": {
            "offset": "0x19B620"
        },
        "mojo::internal::InterfacePtrStateBase::is_bound": {
            "offset": "0x19B9A0"
        },
        "mojo::internal::InterfacePtrStateBase::router": {
            "offset": "0xAB80"
        },
        "mojo::internal::InterfacePtrStateBase::version": {
            "offset": "0xD680"
        },
        "mojo::internal::InterfacePtrStateBase::~InterfacePtrStateBase": {
            "offset": "0x211720"
        },
        "mojo::internal::IsHandleOrInterfaceValid": {
            "offset": "0xC2EE0"
        },
        "mojo::internal::MakeMessageWithArrayIndex": {
            "offset": "0x202790"
        },
        "mojo::internal::MakeMessageWithExpectedArraySize": {
            "offset": "0x202910"
        },
        "mojo::internal::MayAutoLock::MayAutoLock": {
            "offset": "0x205A20"
        },
        "mojo::internal::MayAutoLock::~MayAutoLock": {
            "offset": "0x1AA000"
        },
        "mojo::internal::MayAutoUnlock::MayAutoUnlock": {
            "offset": "0x205A70"
        },
        "mojo::internal::MayAutoUnlock::~MayAutoUnlock": {
            "offset": "0x205FF0"
        },
        "mojo::internal::MessageDispatchContext::GetBadMessageCallback": {
            "offset": "0x214750"
        },
        "mojo::internal::MessageDispatchContext::MessageDispatchContext": {
            "offset": "0x212E20"
        },
        "mojo::internal::MessageDispatchContext::current": {
            "offset": "0x215D80"
        },
        "mojo::internal::MessageDispatchContext::~MessageDispatchContext": {
            "offset": "0x213060"
        },
        "mojo::internal::MessagePipeScoperBase::MessagePipeScoperBase": {
            "offset": "0x236090"
        },
        "mojo::internal::MessagePipeScoperBase::StartWatchingPipe": {
            "offset": "0x236450"
        },
        "mojo::internal::MessagePipeScoperBase::~MessagePipeScoperBase": {
            "offset": "0x236140"
        },
        "mojo::internal::MessageQuotaChecker::AfterMessagesDequeued": {
            "offset": "0x217460"
        },
        "mojo::internal::MessageQuotaChecker::BeforeMessagesEnqueued": {
            "offset": "0x2176C0"
        },
        "mojo::internal::MessageQuotaChecker::BeforeWrite": {
            "offset": "0x217740"
        },
        "mojo::internal::MessageQuotaChecker::GetConfiguration": {
            "offset": "0x217750"
        },
        "mojo::internal::MessageQuotaChecker::GetConfigurationForTesting": {
            "offset": "0x2177D0"
        },
        "mojo::internal::MessageQuotaChecker::GetCurrentMessagePipeQuota": {
            "offset": "0x2177F0"
        },
        "mojo::internal::MessageQuotaChecker::GetCurrentQuotaStatusForTesting": {
            "offset": "0x217870"
        },
        "mojo::internal::MessageQuotaChecker::GetMaxQuotaUsage": {
            "offset": "0x217950"
        },
        "mojo::internal::MessageQuotaChecker::MaybeCreate": {
            "offset": "0x2179C0"
        },
        "mojo::internal::MessageQuotaChecker::MaybeCreateForTesting": {
            "offset": "0x217B50"
        },
        "mojo::internal::MessageQuotaChecker::MaybeCreateImpl": {
            "offset": "0x217B70"
        },
        "mojo::internal::MessageQuotaChecker::MessageQuotaChecker": {
            "offset": "0x2173F0"
        },
        "mojo::internal::MessageQuotaChecker::QuotaCheckImpl": {
            "offset": "0x217C90"
        },
        "mojo::internal::MessageQuotaChecker::SetMessagePipe": {
            "offset": "0x217EE0"
        },
        "mojo::internal::MessageQuotaChecker::~MessageQuotaChecker": {
            "offset": "0x217440"
        },
        "mojo::internal::MultiplexRouter::Accept": {
            "offset": "0x219C40"
        },
        "mojo::internal::MultiplexRouter::AssertLockAcquired": {
            "offset": "0x21A120"
        },
        "mojo::internal::MultiplexRouter::AssociateInterface": {
            "offset": "0x21A140"
        },
        "mojo::internal::MultiplexRouter::AttachEndpointClient": {
            "offset": "0x21A630"
        },
        "mojo::internal::MultiplexRouter::CloseEndpointHandle": {
            "offset": "0x21A970"
        },
        "mojo::internal::MultiplexRouter::CloseEndpointsForMessage": {
            "offset": "0x21ABF0"
        },
        "mojo::internal::MultiplexRouter::CloseMessagePipe": {
            "offset": "0x21AE00"
        },
        "mojo::internal::MultiplexRouter::CreateLocalEndpointHandle": {
            "offset": "0x21B080"
        },
        "mojo::internal::MultiplexRouter::DetachEndpointClient": {
            "offset": "0x21B460"
        },
        "mojo::internal::MultiplexRouter::EnableBatchDispatch": {
            "offset": "0x21B5E0"
        },
        "mojo::internal::MultiplexRouter::EnableTestingMode": {
            "offset": "0x21B5F0"
        },
        "mojo::internal::MultiplexRouter::FindEndpoint": {
            "offset": "0x21BA00"
        },
        "mojo::internal::MultiplexRouter::FindOrInsertEndpoint": {
            "offset": "0x21BB20"
        },
        "mojo::internal::MultiplexRouter::FlushAsync": {
            "offset": "0x21BCC0"
        },
        "mojo::internal::MultiplexRouter::HasAssociatedEndpoints": {
            "offset": "0x21BD10"
        },
        "mojo::internal::MultiplexRouter::InsertEndpointsForMessage": {
            "offset": "0x21BEA0"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::AllowWokenUpBySyncWatchOnSameThread": {
            "offset": "0x21A080"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::AttachClient": {
            "offset": "0x21A420"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::DetachClient": {
            "offset": "0x21B260"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::EnsureSyncWatcherExists": {
            "offset": "0x21B700"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::OnSyncEventSignaled": {
            "offset": "0x21CAB0"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessageW": {
            "offset": "0x21E930"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::SignalSyncMessageEvent": {
            "offset": "0x21F040"
        },
        "mojo::internal::MultiplexRouter::InterfaceEndpoint::SyncWatch": {
            "offset": "0x21F090"
        },
        "mojo::internal::MultiplexRouter::LockAndCallProcessTasks": {
            "offset": "0x21BFB0"
        },
        "mojo::internal::MultiplexRouter::MaybePostToProcessTasks": {
            "offset": "0x21C080"
        },
        "mojo::internal::MultiplexRouter::MessageWrapper::~MessageWrapper": {
            "offset": "0x218EB0"
        },
        "mojo::internal::MultiplexRouter::MultiplexRouter": {
            "offset": "0x2188C0"
        },
        "mojo::internal::MultiplexRouter::OnFlushPipeSignaled": {
            "offset": "0x21C1B0"
        },
        "mojo::internal::MultiplexRouter::OnPeerAssociatedEndpointClosed": {
            "offset": "0x21C290"
        },
        "mojo::internal::MultiplexRouter::OnPipeConnectionError": {
            "offset": "0x21C510"
        },
        "mojo::internal::MultiplexRouter::PassMessagePipe": {
            "offset": "0x19A990"
        },
        "mojo::internal::MultiplexRouter::PauseIncomingMethodCallProcessing": {
            "offset": "0x21CCD0"
        },
        "mojo::internal::MultiplexRouter::PauseInternal": {
            "offset": "0x21CCE0"
        },
        "mojo::internal::MultiplexRouter::PausePeerUntilFlushCompletes": {
            "offset": "0x21CFB0"
        },
        "mojo::internal::MultiplexRouter::PrefersSerializedMessages": {
            "offset": "0x21D000"
        },
        "mojo::internal::MultiplexRouter::ProcessFirstSyncMessageForEndpoint": {
            "offset": "0x21D0A0"
        },
        "mojo::internal::MultiplexRouter::ProcessIncomingMessage": {
            "offset": "0x21D320"
        },
        "mojo::internal::MultiplexRouter::ProcessNotifyErrorTask": {
            "offset": "0x21D7D0"
        },
        "mojo::internal::MultiplexRouter::ProcessTasks": {
            "offset": "0x21DAA0"
        },
        "mojo::internal::MultiplexRouter::RaiseError": {
            "offset": "0x21E360"
        },
        "mojo::internal::MultiplexRouter::RaiseErrorInNonTestingMode": {
            "offset": "0x21E450"
        },
        "mojo::internal::MultiplexRouter::ResumeIncomingMethodCallProcessing": {
            "offset": "0x21E490"
        },
        "mojo::internal::MultiplexRouter::SetConnectionGroup": {
            "offset": "0x21EBD0"
        },
        "mojo::internal::MultiplexRouter::SetIncomingMessageFilter": {
            "offset": "0x21EC20"
        },
        "mojo::internal::MultiplexRouter::SetMasterInterfaceName": {
            "offset": "0x21EC80"
        },
        "mojo::internal::MultiplexRouter::SimulateReceivingMessageForTesting": {
            "offset": "0x19AC10"
        },
        "mojo::internal::MultiplexRouter::UpdateEndpointStateMayRemove": {
            "offset": "0x21F140"
        },
        "mojo::internal::MultiplexRouter::WaitForFlushToComplete": {
            "offset": "0x21F2E0"
        },
        "mojo::internal::MultiplexRouter::WaitForIncomingMessage": {
            "offset": "0x19ACB0"
        },
        "mojo::internal::MultiplexRouter::handle": {
            "offset": "0x19B510"
        },
        "mojo::internal::MultiplexRouter::is_valid": {
            "offset": "0x19BA80"
        },
        "mojo::internal::MultiplexRouter::~MultiplexRouter": {
            "offset": "0x218F20"
        },
        "mojo::internal::PendingReceiverState::PendingReceiverState": {
            "offset": "0x221610"
        },
        "mojo::internal::PendingReceiverState::reset": {
            "offset": "0x2216C0"
        },
        "mojo::internal::PendingReceiverState::~PendingReceiverState": {
            "offset": "0x221640"
        },
        "mojo::internal::PendingRemoteState::PendingRemoteState": {
            "offset": "0x163A50"
        },
        "mojo::internal::PendingRemoteState::reset": {
            "offset": "0x2217A0"
        },
        "mojo::internal::PendingRemoteState::~PendingRemoteState": {
            "offset": "0x200580"
        },
        "mojo::internal::ReportNonNullableValidationError": {
            "offset": "0x22C470"
        },
        "mojo::internal::ReportSerializationWarning": {
            "offset": "0x22BE60"
        },
        "mojo::internal::ReportValidationError": {
            "offset": "0x22BE80"
        },
        "mojo::internal::ReportValidationErrorForMessage": {
            "offset": "0x22C220"
        },
        "mojo::internal::ScopedSuppressValidationErrorLoggingForTests::ScopedSuppressValidationErrorLoggingForTests": {
            "offset": "0x22BBF0"
        },
        "mojo::internal::ScopedSuppressValidationErrorLoggingForTests::~ScopedSuppressValidationErrorLoggingForTests": {
            "offset": "0x22BD50"
        },
        "mojo::internal::SerializationContext::AddAssociatedEndpoint": {
            "offset": "0x227880"
        },
        "mojo::internal::SerializationContext::AddAssociatedInterfaceInfo": {
            "offset": "0x227980"
        },
        "mojo::internal::SerializationContext::AddHandle": {
            "offset": "0x2279E0"
        },
        "mojo::internal::SerializationContext::AddInterfaceInfo": {
            "offset": "0x227AE0"
        },
        "mojo::internal::SerializationContext::SerializationContext": {
            "offset": "0x227830"
        },
        "mojo::internal::SerializationContext::TakeAssociatedEndpointHandle": {
            "offset": "0x227B50"
        },
        "mojo::internal::SerializationContext::TakeHandle": {
            "offset": "0x227C00"
        },
        "mojo::internal::SerializationContext::TakeHandleAsReceiver": {
            "offset": "0x227CB0"
        },
        "mojo::internal::SerializationContext::TakeHandlesFromMessage": {
            "offset": "0x227D40"
        },
        "mojo::internal::SerializationContext::associated_endpoint_handles": {
            "offset": "0xD460"
        },
        "mojo::internal::SerializationContext::handles": {
            "offset": "0x15A0"
        },
        "mojo::internal::SerializationContext::mutable_associated_endpoint_handles": {
            "offset": "0xD460"
        },
        "mojo::internal::SerializationContext::mutable_handles": {
            "offset": "0x15A0"
        },
        "mojo::internal::SerializationContext::receiver_connection_group": {
            "offset": "0xAB80"
        },
        "mojo::internal::SerializationContext::~SerializationContext": {
            "offset": "0x227860"
        },
        "mojo::internal::SerializationWarningObserverForTesting::SerializationWarningObserverForTesting": {
            "offset": "0x22BC10"
        },
        "mojo::internal::SerializationWarningObserverForTesting::last_warning": {
            "offset": "0x1480"
        },
        "mojo::internal::SerializationWarningObserverForTesting::set_last_warning": {
            "offset": "0xBD00"
        },
        "mojo::internal::SerializationWarningObserverForTesting::~SerializationWarningObserverForTesting": {
            "offset": "0x22BD60"
        },
        "mojo::internal::Serializer<IPC::mojom::MessageDataView,IPC::MessageView>::Serialize": {
            "offset": "0x23EC50"
        },
        "mojo::internal::Serializer<mojo::ArrayDataView<unsigned char>,base::span<unsigned char const ,-1> >::Serialize": {
            "offset": "0x23E490"
        },
        "mojo::internal::Serializer<mojo::interface_control::RunInputDataView,mojo::StructPtr<mojo::interface_control::RunInput> const >::Serialize": {
            "offset": "0x20C420"
        },
        "mojo::internal::Serializer<mojo::interface_control::RunMessageParamsDataView,mojo::StructPtr<mojo::interface_control::RunMessageParams> >::Serialize": {
            "offset": "0x20C950"
        },
        "mojo::internal::Serializer<mojo::interface_control::RunOrClosePipeInputDataView,mojo::StructPtr<mojo::interface_control::RunOrClosePipeInput> const >::Serialize": {
            "offset": "0x20CB30"
        },
        "mojo::internal::Serializer<mojo::interface_control::RunOrClosePipeMessageParamsDataView,mojo::StructPtr<mojo::interface_control::RunOrClosePipeMessageParams> >::Serialize": {
            "offset": "0x20D400"
        },
        "mojo::internal::Serializer<mojo::interface_control::RunOutputDataView,mojo::StructPtr<mojo::interface_control::RunOutput> const >::Serialize": {
            "offset": "0x20A4A0"
        },
        "mojo::internal::Serializer<mojo::interface_control::RunResponseMessageParamsDataView,mojo::StructPtr<mojo::interface_control::RunResponseMessageParams> >::Serialize": {
            "offset": "0x20A770"
        },
        "mojo::internal::Serializer<mojo::pipe_control::DisconnectReasonDataView,mojo::InlinedStructPtr<mojo::pipe_control::DisconnectReason> const >::Serialize": {
            "offset": "0x222C60"
        },
        "mojo::internal::Serializer<mojo::pipe_control::FlushAsyncDataView,mojo::StructPtr<mojo::pipe_control::FlushAsync> >::Serialize": {
            "offset": "0x222FE0"
        },
        "mojo::internal::Serializer<mojo::pipe_control::PauseUntilFlushCompletesDataView,mojo::StructPtr<mojo::pipe_control::PauseUntilFlushCompletes> >::Serialize": {
            "offset": "0x2231B0"
        },
        "mojo::internal::Serializer<mojo::pipe_control::RunOrClosePipeInputDataView,mojo::StructPtr<mojo::pipe_control::RunOrClosePipeInput> >::Serialize": {
            "offset": "0x223380"
        },
        "mojo::internal::Serializer<mojo::pipe_control::RunOrClosePipeMessageParamsDataView,mojo::StructPtr<mojo::pipe_control::RunOrClosePipeMessageParams> >::Serialize": {
            "offset": "0x223AF0"
        },
        "mojo::internal::Serializer<mojo_base::mojom::BigBufferDataView,mojo_base::BigBufferView>::Serialize": {
            "offset": "0x23E700"
        },
        "mojo::internal::SyncMessageResponseSetup::SetCurrentSyncResponseMessage": {
            "offset": "0x215590"
        },
        "mojo::internal::UnmappedNativeStructSerializerImpl::Deserialize": {
            "offset": "0x21FC50"
        },
        "mojo::internal::UnmappedNativeStructSerializerImpl::DeserializeMessageAttachments": {
            "offset": "0x21FCB0"
        },
        "mojo::internal::UnmappedNativeStructSerializerImpl::Serialize": {
            "offset": "0x2202A0"
        },
        "mojo::internal::UnmappedNativeStructSerializerImpl::SerializeMessageContents": {
            "offset": "0x220D60"
        },
        "mojo::internal::UnserializedMessageContext::UnserializedMessageContext": {
            "offset": "0x22B810"
        },
        "mojo::internal::UnserializedMessageContext::header": {
            "offset": "0x15B0"
        },
        "mojo::internal::UnserializedMessageContext::message_flags": {
            "offset": "0xD680"
        },
        "mojo::internal::UnserializedMessageContext::message_name": {
            "offset": "0xD800"
        },
        "mojo::internal::UnserializedMessageContext::tag": {
            "offset": "0xAAA0"
        },
        "mojo::internal::UnserializedMessageContext::~UnserializedMessageContext": {
            "offset": "0x22B840"
        },
        "mojo::internal::ValidateHandleOrInterface": {
            "offset": "0x22C580"
        },
        "mojo::internal::ValidateHandleOrInterfaceNonNullable": {
            "offset": "0x22C5F0"
        },
        "mojo::internal::ValidateMessageIsRequestExpectingResponse": {
            "offset": "0x22C620"
        },
        "mojo::internal::ValidateMessageIsRequestWithoutResponse": {
            "offset": "0x22C680"
        },
        "mojo::internal::ValidateMessageIsResponse": {
            "offset": "0x22C6E0"
        },
        "mojo::internal::ValidateNonInlinedUnionHeaderAndClaimMemory": {
            "offset": "0x22C740"
        },
        "mojo::internal::ValidateRequestGeneric": {
            "offset": "0x20E100"
        },
        "mojo::internal::ValidateRequestGenericPacked": {
            "offset": "0x20E200"
        },
        "mojo::internal::ValidateResponseGeneric": {
            "offset": "0x20E310"
        },
        "mojo::internal::ValidateResponseGenericPacked": {
            "offset": "0x20E400"
        },
        "mojo::internal::ValidateStruct<mojo::pipe_control::internal::PeerAssociatedEndpointClosedEvent_Data>": {
            "offset": "0x242AD0"
        },
        "mojo::internal::ValidateStructHeaderAndClaimMemory": {
            "offset": "0x22C7A0"
        },
        "mojo::internal::ValidationContext::ClaimAssociatedEndpointHandle": {
            "offset": "0x19A2F0"
        },
        "mojo::internal::ValidationContext::ClaimHandle": {
            "offset": "0x19A310"
        },
        "mojo::internal::ValidationContext::ClaimMemory": {
            "offset": "0x19A330"
        },
        "mojo::internal::ValidationContext::ExceedsMaxDepth": {
            "offset": "0x19A700"
        },
        "mojo::internal::ValidationContext::GetFullDescription": {
            "offset": "0x22BB10"
        },
        "mojo::internal::ValidationContext::InternalIsValidRange": {
            "offset": "0x19A870"
        },
        "mojo::internal::ValidationContext::IsValidRange": {
            "offset": "0x19A8A0"
        },
        "mojo::internal::ValidationContext::ScopedDepthTracker::~ScopedDepthTracker": {
            "offset": "0x216B80"
        },
        "mojo::internal::ValidationContext::ValidationContext": {
            "offset": "0x22B990"
        },
        "mojo::internal::ValidationContext::description": {
            "offset": "0xAAA0"
        },
        "mojo::internal::ValidationContext::message": {
            "offset": "0xAB80"
        },
        "mojo::internal::ValidationContext::~ValidationContext": {
            "offset": "0x12B0"
        },
        "mojo::internal::ValidationErrorObserverForTesting::ValidationErrorObserverForTesting": {
            "offset": "0x22BCA0"
        },
        "mojo::internal::ValidationErrorObserverForTesting::last_error": {
            "offset": "0x1480"
        },
        "mojo::internal::ValidationErrorObserverForTesting::set_last_error": {
            "offset": "0x19C240"
        },
        "mojo::internal::ValidationErrorObserverForTesting::~ValidationErrorObserverForTesting": {
            "offset": "0x22BDE0"
        },
        "mojo::internal::ValidationErrorToString": {
            "offset": "0x22C360"
        },
        "mojo::internal::`anonymous namespace'::FindGenericValidationInfo": {
            "offset": "0x20DF10"
        },
        "mojo::internal::`anonymous namespace'::MaybeDumpWithoutCrashing": {
            "offset": "0x217C20"
        },
        "mojo::internal::`anonymous namespace'::OnWatcherSignaled": {
            "offset": "0x236270"
        },
        "mojo::internal::`anonymous namespace'::RunClosure": {
            "offset": "0x20BC00"
        },
        "mojo::internal::`anonymous namespace'::RunResponseForwardToCallback::Accept": {
            "offset": "0x20AFB0"
        },
        "mojo::internal::`anonymous namespace'::RunVersionCallback": {
            "offset": "0x20BD30"
        },
        "mojo::internal::`anonymous namespace'::SendRunMessage": {
            "offset": "0x20C000"
        },
        "mojo::internal::`anonymous namespace'::SendRunOrClosePipeMessage": {
            "offset": "0x20C220"
        },
        "mojo::native::NativeStruct::~NativeStruct": {
            "offset": "0x242360"
        },
        "mojo::native::SerializedHandle::SerializedHandle": {
            "offset": "0x163A50"
        },
        "mojo::native::SerializedHandle::~SerializedHandle": {
            "offset": "0x200580"
        },
        "mojo::native::internal::NativeStruct_Data::BufferWriter::data": {
            "offset": "0x2213A0"
        },
        "mojo::native::internal::NativeStruct_Data::NativeStruct_Data": {
            "offset": "0x23C9E0"
        },
        "mojo::native::internal::SerializedHandle_Data::BufferWriter::data": {
            "offset": "0x221490"
        },
        "mojo::native::internal::SerializedHandle_Data::SerializedHandle_Data": {
            "offset": "0x23CA00"
        },
        "mojo::native::internal::SerializedHandle_Data::Validate": {
            "offset": "0x2421D0"
        },
        "mojo::pipe_control::DisconnectReason::DisconnectReason": {
            "offset": "0x2432D0"
        },
        "mojo::pipe_control::DisconnectReason::~DisconnectReason": {
            "offset": "0x2F130"
        },
        "mojo::pipe_control::FlushAsync::FlushAsync": {
            "offset": "0x234270"
        },
        "mojo::pipe_control::PauseUntilFlushCompletes::PauseUntilFlushCompletes": {
            "offset": "0x234270"
        },
        "mojo::pipe_control::PeerAssociatedEndpointClosedEvent::PeerAssociatedEndpointClosedEvent": {
            "offset": "0x2432F0"
        },
        "mojo::pipe_control::PeerAssociatedEndpointClosedEvent::~PeerAssociatedEndpointClosedEvent": {
            "offset": "0x2433F0"
        },
        "mojo::pipe_control::RunOrClosePipeInput::DestroyActive": {
            "offset": "0x243500"
        },
        "mojo::pipe_control::RunOrClosePipeInput::RunOrClosePipeInput": {
            "offset": "0x243320"
        },
        "mojo::pipe_control::RunOrClosePipeInput::set_flush_async": {
            "offset": "0x244270"
        },
        "mojo::pipe_control::RunOrClosePipeInput::set_pause_until_flush_completes": {
            "offset": "0x244310"
        },
        "mojo::pipe_control::RunOrClosePipeInput::set_peer_associated_endpoint_closed_event": {
            "offset": "0x2443B0"
        },
        "mojo::pipe_control::RunOrClosePipeInput::~RunOrClosePipeInput": {
            "offset": "0x243400"
        },
        "mojo::pipe_control::RunOrClosePipeMessageParams::RunOrClosePipeMessageParams": {
            "offset": "0x163A50"
        },
        "mojo::pipe_control::RunOrClosePipeMessageParams::~RunOrClosePipeMessageParams": {
            "offset": "0x2433B0"
        },
        "mojo::pipe_control::internal::DisconnectReason_Data::BufferWriter::data": {
            "offset": "0x223F00"
        },
        "mojo::pipe_control::internal::DisconnectReason_Data::DisconnectReason_Data": {
            "offset": "0x23C9E0"
        },
        "mojo::pipe_control::internal::DisconnectReason_Data::Validate": {
            "offset": "0x242C20"
        },
        "mojo::pipe_control::internal::FlushAsync_Data::BufferWriter::data": {
            "offset": "0x223FE0"
        },
        "mojo::pipe_control::internal::FlushAsync_Data::FlushAsync_Data": {
            "offset": "0x23CA00"
        },
        "mojo::pipe_control::internal::PauseUntilFlushCompletes_Data::BufferWriter::data": {
            "offset": "0x2240C0"
        },
        "mojo::pipe_control::internal::PauseUntilFlushCompletes_Data::PauseUntilFlushCompletes_Data": {
            "offset": "0x23CA00"
        },
        "mojo::pipe_control::internal::PeerAssociatedEndpointClosedEvent_Data::BufferWriter::data": {
            "offset": "0x2241A0"
        },
        "mojo::pipe_control::internal::PeerAssociatedEndpointClosedEvent_Data::PeerAssociatedEndpointClosedEvent_Data": {
            "offset": "0x23C9E0"
        },
        "mojo::pipe_control::internal::RunOrClosePipeInput_Data::BufferWriter::data": {
            "offset": "0x224280"
        },
        "mojo::pipe_control::internal::RunOrClosePipeInput_Data::Validate": {
            "offset": "0x242DB0"
        },
        "mojo::pipe_control::internal::RunOrClosePipeMessageParams_Data::BufferWriter::data": {
            "offset": "0x224360"
        },
        "mojo::pipe_control::internal::RunOrClosePipeMessageParams_Data::RunOrClosePipeMessageParams_Data": {
            "offset": "0x23F990"
        },
        "mojo::pipe_control::internal::RunOrClosePipeMessageParams_Data::Validate": {
            "offset": "0x243150"
        },
        "mojo_base::BigBuffer::BigBuffer": {
            "offset": "0x1FCE70"
        },
        "mojo_base::BigBuffer::byte_span": {
            "offset": "0x19AEA0"
        },
        "mojo_base::BigBuffer::data": {
            "offset": "0x1FDE60"
        },
        "mojo_base::BigBuffer::shared_memory": {
            "offset": "0x19C290"
        },
        "mojo_base::BigBuffer::size": {
            "offset": "0x1FE070"
        },
        "mojo_base::BigBuffer::storage_type": {
            "offset": "0x1480"
        },
        "mojo_base::BigBuffer::~BigBuffer": {
            "offset": "0x1FD340"
        },
        "mojo_base::BigBufferView::BigBufferView": {
            "offset": "0x1FD2C0"
        },
        "mojo_base::BigBufferView::CreateInvalidForTest": {
            "offset": "0x1FD6F0"
        },
        "mojo_base::BigBufferView::SetBytes": {
            "offset": "0x1FD720"
        },
        "mojo_base::BigBufferView::SetSharedMemory": {
            "offset": "0x1FD810"
        },
        "mojo_base::BigBufferView::ToBigBuffer": {
            "offset": "0x1FD9F0"
        },
        "mojo_base::BigBufferView::bytes": {
            "offset": "0x19AF30"
        },
        "mojo_base::BigBufferView::data": {
            "offset": "0x1FDF80"
        },
        "mojo_base::BigBufferView::shared_memory": {
            "offset": "0x19C340"
        },
        "mojo_base::BigBufferView::storage_type": {
            "offset": "0x1480"
        },
        "mojo_base::BigBufferView::~BigBufferView": {
            "offset": "0x1FD3D0"
        },
        "mojo_base::`anonymous namespace'::TryCreateSharedMemory": {
            "offset": "0x1FDC20"
        },
        "mojo_base::internal::BigBufferSharedMemoryRegion::BigBufferSharedMemoryRegion": {
            "offset": "0x1FD070"
        },
        "mojo_base::internal::BigBufferSharedMemoryRegion::TakeBufferHandle": {
            "offset": "0x1FD930"
        },
        "mojo_base::internal::BigBufferSharedMemoryRegion::memory": {
            "offset": "0xAAB0"
        },
        "mojo_base::internal::BigBufferSharedMemoryRegion::size": {
            "offset": "0xAB80"
        },
        "mojo_base::internal::BigBufferSharedMemoryRegion::~BigBufferSharedMemoryRegion": {
            "offset": "0x1FD390"
        },
        "mojo_base::mojom::BigBufferDataView::GetBytesDataView": {
            "offset": "0x1FE290"
        },
        "mojo_base::mojom::BigBufferDataView::ReadSharedMemory<mojo_base::internal::BigBufferSharedMemoryRegion>": {
            "offset": "0x1FE110"
        },
        "mojo_base::mojom::BigBufferSharedMemoryRegionDataView::TakeBufferHandle": {
            "offset": "0x1FE720"
        },
        "mojo_base::mojom::FileDataView::TakeFd": {
            "offset": "0x1FEB60"
        },
        "mojo_base::mojom::GenericPendingReceiverDataView::TakeReceivingPipe": {
            "offset": "0x1FEEF0"
        },
        "mojo_base::mojom::ReadOnlySharedMemoryRegionDataView::TakeBuffer": {
            "offset": "0x1FE720"
        },
        "mojo_base::mojom::UnsafeSharedMemoryRegionDataView::TakeBuffer": {
            "offset": "0x1FE720"
        },
        "mojo_base::mojom::WritableSharedMemoryRegionDataView::TakeBuffer": {
            "offset": "0x1FE720"
        },
        "mojo_base::mojom::internal::BigBufferSharedMemoryRegion_Data::BigBufferSharedMemoryRegion_Data": {
            "offset": "0x23CA00"
        },
        "mojo_base::mojom::internal::BigBufferSharedMemoryRegion_Data::BufferWriter::data": {
            "offset": "0x23F3D0"
        },
        "mojo_base::mojom::internal::BigBuffer_Data::BufferWriter::data": {
            "offset": "0x23F4C0"
        },
        "mojo_base::mojom::internal::BigBuffer_Data::Validate": {
            "offset": "0x244480"
        },
        "scoped_refptr<IPC::ChannelProxy::Context>::~scoped_refptr<IPC::ChannelProxy::Context>": {
            "offset": "0x1A0C30"
        },
        "scoped_refptr<IPC::MessageAttachment>::~scoped_refptr<IPC::MessageAttachment>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<IPC::MessageAttachmentSet>::~scoped_refptr<IPC::MessageAttachmentSet>": {
            "offset": "0x1A5BF0"
        },
        "scoped_refptr<IPC::MessageFilter>::~scoped_refptr<IPC::MessageFilter>": {
            "offset": "0x1A0C80"
        },
        "scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue>::~scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue>": {
            "offset": "0x1B27A0"
        },
        "scoped_refptr<IPC::SyncChannel::SyncContext>::~scoped_refptr<IPC::SyncChannel::SyncContext>": {
            "offset": "0x1A0C30"
        },
        "scoped_refptr<IPC::SyncMessageFilter>::~scoped_refptr<IPC::SyncMessageFilter>": {
            "offset": "0x1A0C80"
        },
        "scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint>::~scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint>": {
            "offset": "0x1AA400"
        },
        "scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>::~scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>": {
            "offset": "0x1AA3B0"
        },
        "scoped_refptr<IPC::internal::HandleAttachmentWin>::~scoped_refptr<IPC::internal::HandleAttachmentWin>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >::~scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >": {
            "offset": "0x6D200"
        },
        "scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >::~scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >": {
            "offset": "0x6D200"
        },
        "scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >::~scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >": {
            "offset": "0x6D200"
        },
        "scoped_refptr<base::Pickle::Attachment>::~scoped_refptr<base::Pickle::Attachment>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<base::RefCountedBytes>::~scoped_refptr<base::RefCountedBytes>": {
            "offset": "0x719B0"
        },
        "scoped_refptr<base::RefCountedData<base::AtomicFlag> >::~scoped_refptr<base::RefCountedData<base::AtomicFlag> >": {
            "offset": "0xDC2F0"
        },
        "scoped_refptr<base::RefCountedData<bool> >::~scoped_refptr<base::RefCountedData<bool> >": {
            "offset": "0x228580"
        },
        "scoped_refptr<base::RefCountedString>::~scoped_refptr<base::RefCountedString>": {
            "offset": "0x719B0"
        },
        "scoped_refptr<base::SequencedTaskRunner>::~scoped_refptr<base::SequencedTaskRunner>": {
            "offset": "0x3970"
        },
        "scoped_refptr<base::SingleThreadTaskRunner>::~scoped_refptr<base::SingleThreadTaskRunner>": {
            "offset": "0x3970"
        },
        "scoped_refptr<base::TaskRunner>::~scoped_refptr<base::TaskRunner>": {
            "offset": "0x3970"
        },
        "scoped_refptr<base::UpdateableSequencedTaskRunner>::~scoped_refptr<base::UpdateableSequencedTaskRunner>": {
            "offset": "0x3970"
        },
        "scoped_refptr<base::internal::JobTaskSource>::~scoped_refptr<base::internal::JobTaskSource>": {
            "offset": "0x719B0"
        },
        "scoped_refptr<base::internal::Sequence>::~scoped_refptr<base::internal::Sequence>": {
            "offset": "0x719B0"
        },
        "scoped_refptr<base::internal::TaskSource>::~scoped_refptr<base::internal::TaskSource>": {
            "offset": "0x719B0"
        },
        "scoped_refptr<base::internal::WorkerThread>::~scoped_refptr<base::internal::WorkerThread>": {
            "offset": "0x10E650"
        },
        "scoped_refptr<base::sequence_manager::TaskQueue>::~scoped_refptr<base::sequence_manager::TaskQueue>": {
            "offset": "0x719B0"
        },
        "scoped_refptr<base::sequence_manager::internal::AssociatedThreadId>::~scoped_refptr<base::sequence_manager::internal::AssociatedThreadId>": {
            "offset": "0x74AD0"
        },
        "scoped_refptr<base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster>::~scoped_refptr<base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster>": {
            "offset": "0xF32A0"
        },
        "scoped_refptr<base::trace_event::MemoryDumpProviderInfo>::~scoped_refptr<base::trace_event::MemoryDumpProviderInfo>": {
            "offset": "0x14ACB0"
        },
        "scoped_refptr<mojo::AssociatedGroupController>::~scoped_refptr<mojo::AssociatedGroupController>": {
            "offset": "0x1A0C80"
        },
        "scoped_refptr<mojo::ConnectionGroup>::~scoped_refptr<mojo::ConnectionGroup>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::DataPipeProducer::SequenceState>::~scoped_refptr<mojo::DataPipeProducer::SequenceState>": {
            "offset": "0x231E10"
        },
        "scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State>::~scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State>": {
            "offset": "0x224900"
        },
        "scoped_refptr<mojo::SimpleWatcher::Context>::~scoped_refptr<mojo::SimpleWatcher::Context>": {
            "offset": "0x2369E0"
        },
        "scoped_refptr<mojo::SyncHandleRegistry>::~scoped_refptr<mojo::SyncHandleRegistry>": {
            "offset": "0x1B2870"
        },
        "scoped_refptr<mojo::ThreadSafeForwarderBase::InProgressSyncCalls>::~scoped_refptr<mojo::ThreadSafeForwarderBase::InProgressSyncCalls>": {
            "offset": "0x22D4C0"
        },
        "scoped_refptr<mojo::ThreadSafeForwarderBase::SyncResponseInfo>::~scoped_refptr<mojo::ThreadSafeForwarderBase::SyncResponseInfo>": {
            "offset": "0x22D560"
        },
        "scoped_refptr<mojo::WaitSet::State::Context>::~scoped_refptr<mojo::WaitSet::State::Context>": {
            "offset": "0x23A310"
        },
        "scoped_refptr<mojo::WaitSet::State>::~scoped_refptr<mojo::WaitSet::State>": {
            "offset": "0x23A360"
        },
        "scoped_refptr<mojo::`anonymous namespace'::TriggerContext>::~scoped_refptr<mojo::`anonymous namespace'::TriggerContext>": {
            "offset": "0x238910"
        },
        "scoped_refptr<mojo::`anonymous namespace'::WatcherState>::~scoped_refptr<mojo::`anonymous namespace'::WatcherState>": {
            "offset": "0x226880"
        },
        "scoped_refptr<mojo::core::Channel>::~scoped_refptr<mojo::core::Channel>": {
            "offset": "0x1BA690"
        },
        "scoped_refptr<mojo::core::DataPipeConsumerDispatcher::PortObserverThunk>::~scoped_refptr<mojo::core::DataPipeConsumerDispatcher::PortObserverThunk>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::core::DataPipeConsumerDispatcher>::~scoped_refptr<mojo::core::DataPipeConsumerDispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::DataPipeProducerDispatcher::PortObserverThunk>::~scoped_refptr<mojo::core::DataPipeProducerDispatcher::PortObserverThunk>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::core::DataPipeProducerDispatcher>::~scoped_refptr<mojo::core::DataPipeProducerDispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::Dispatcher>::~scoped_refptr<mojo::core::Dispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::InvitationDispatcher>::~scoped_refptr<mojo::core::InvitationDispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::MessagePipeDispatcher::PortObserverThunk>::~scoped_refptr<mojo::core::MessagePipeDispatcher::PortObserverThunk>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::core::MessagePipeDispatcher>::~scoped_refptr<mojo::core::MessagePipeDispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::NodeChannel>::~scoped_refptr<mojo::core::NodeChannel>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::core::NodeController::PortObserver>::~scoped_refptr<mojo::core::NodeController::PortObserver>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::core::PlatformHandleDispatcher>::~scoped_refptr<mojo::core::PlatformHandleDispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::SharedBufferDispatcher>::~scoped_refptr<mojo::core::SharedBufferDispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::Watch>::~scoped_refptr<mojo::core::Watch>": {
            "offset": "0x1F35C0"
        },
        "scoped_refptr<mojo::core::WatcherDispatcher>::~scoped_refptr<mojo::core::WatcherDispatcher>": {
            "offset": "0x1C29B0"
        },
        "scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin>::~scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin>": {
            "offset": "0x1BFBD0"
        },
        "scoped_refptr<mojo::core::ports::Port>::~scoped_refptr<mojo::core::ports::Port>": {
            "offset": "0x1E9330"
        },
        "scoped_refptr<mojo::core::ports::UserData>::~scoped_refptr<mojo::core::ports::UserData>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::internal::MessageQuotaChecker>::~scoped_refptr<mojo::internal::MessageQuotaChecker>": {
            "offset": "0x199A70"
        },
        "scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>::~scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint>": {
            "offset": "0x6D200"
        },
        "scoped_refptr<mojo::internal::MultiplexRouter>::~scoped_refptr<mojo::internal::MultiplexRouter>": {
            "offset": "0x203440"
        },
        "snprintf": {
            "offset": "0xC2120"
        },
        "sprintf": {
            "offset": "0x14D6C0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<base::BucketRanges const *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<base::BucketRanges const *,void *> > >": {
            "offset": "0x3870"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<base::MessagePumpForIO::IOItem,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<base::MessagePumpForIO::IOItem,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<base::ProcessEntry,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<base::ProcessEntry,void *> > >": {
            "offset": "0xAEBA0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<char const *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<char const *,void *> > >": {
            "offset": "0x3870"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *>,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,IPC::Listener *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,IPC::Listener *>,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,base::FilePath>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,base::FilePath>,void *> > >": {
            "offset": "0x29230"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,int>,void *> > >": {
            "offset": "0x3870"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x29230"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > >,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > >,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > >,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > >,void *> > >": {
            "offset": "0x29230"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >,void *> > >": {
            "offset": "0x29230"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >": {
            "offset": "0x29230"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo>,void *> > >": {
            "offset": "0x18D140"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >": {
            "offset": "0x3870"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<IPC::PendingSyncMsg *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<IPC::PendingSyncMsg *,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<IPC::`anonymous namespace'::ChannelAssociatedGroupController *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<IPC::`anonymous namespace'::ChannelAssociatedGroupController *,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<__int64,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<__int64,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::WaitableEvent *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::WaitableEvent *,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::internal::PartitionRootBase *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::internal::PartitionRootBase *,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::sequence_manager::TimeDomain *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::sequence_manager::TimeDomain *,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::sequence_manager::internal::TaskQueueImpl *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<base::sequence_manager::internal::TaskQueueImpl *,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<enum base::sequence_manager::TaskQueue::QueuePriority,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<enum base::sequence_manager::TaskQueue::QueuePriority,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<enum base::trace_event::MemoryDumpLevelOfDetail,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<enum base::trace_event::MemoryDumpLevelOfDetail,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<mojo::core::Watch const *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<mojo::core::Watch const *,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<scoped_refptr<base::trace_event::MemoryDumpProviderInfo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<scoped_refptr<base::trace_event::MemoryDumpProviderInfo>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo>,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::debug::ThreadActivityAnalyzer::ThreadKey const ,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::debug::ThreadActivityAnalyzer::ThreadKey const ,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> > >,void *> > >": {
            "offset": "0x29230"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::sequence_manager::TimeDomain * const,base::TimeTicks>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::sequence_manager::TimeDomain * const,base::TimeTicks>,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver>,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<enum mojo::core::Dispatcher::Type const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<enum mojo::core::Dispatcher::Type const ,int>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,int *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,int *>,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,int>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState>,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection>,void *> > >": {
            "offset": "0x84BD0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > >,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::Feature const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::Feature const *>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry>,void *> > >": {
            "offset": "0x3BED0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> >,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> >,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> > >": {
            "offset": "0x29210"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName>,void *> > >": {
            "offset": "0x1D8F40"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef>,void *> > >": {
            "offset": "0x3BED0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > >,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,void *> > >": {
            "offset": "0x84BD0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,base::HistogramSnapshotManager::SampleInfo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,base::HistogramSnapshotManager::SampleInfo>,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> >,void *> > >": {
            "offset": "0x1D8F40"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,void *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,void *>,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void * const,base::SharedMemoryTracker::UsageInfo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void * const,base::SharedMemoryTracker::UsageInfo>,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<unsigned __int64,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<unsigned __int64,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<unsigned int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<unsigned int,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<unsigned long,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Alloc_temporary2<std::allocator<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> > >::~_Alloc_temporary2<std::allocator<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> > >": {
            "offset": "0x1FAEF0"
        },
        "std::_Alloc_temporary2<std::allocator<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> > >::~_Alloc_temporary2<std::allocator<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> > >": {
            "offset": "0x1E8F70"
        },
        "std::_Alloc_temporary2<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> > >::~_Alloc_temporary2<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> > >": {
            "offset": "0x1D2080"
        },
        "std::_Alloc_temporary2<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > > >::~_Alloc_temporary2<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > > >": {
            "offset": "0x1746A0"
        },
        "std::_Buffered_inplace_merge_divide_and_conquer2<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5B1C0"
        },
        "std::_Buffered_inplace_merge_divide_and_conquer<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5B2B0"
        },
        "std::_Buffered_inplace_merge_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5B560"
        },
        "std::_Buffered_merge_sort_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5B980"
        },
        "std::_Buffered_rotate_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *>": {
            "offset": "0x5BB20"
        },
        "std::_Chunked_merge_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5BD50"
        },
        "std::_Copy_n_unchecked4<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,unsigned __int64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>": {
            "offset": "0x1F300"
        },
        "std::_Copy_unchecked<base::CheckedContiguousIterator<unsigned char const >,base::CheckedContiguousIterator<unsigned char const >,char *>": {
            "offset": "0x1BC430"
        },
        "std::_Copy_unchecked<base::CheckedContiguousIterator<unsigned char const >,base::CheckedContiguousIterator<unsigned char const >,unsigned char *>": {
            "offset": "0x1BC430"
        },
        "std::_Default_allocator_traits<std::allocator<base::OneShotEvent::TaskInfo> >::construct<base::OneShotEvent::TaskInfo,base::Location const &,scoped_refptr<base::SingleThreadTaskRunner> const &,base::OnceCallback<void __cdecl(void)>,base::TimeDelta const &>": {
            "offset": "0xA57E0"
        },
        "std::_Default_allocator_traits<std::allocator<base::Value> >::construct<base::Value,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x172AB0"
        },
        "std::_Default_allocator_traits<std::allocator<base::Value> >::construct<base::Value,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>": {
            "offset": "0x172B60"
        },
        "std::_Default_allocator_traits<std::allocator<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask> >::construct<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask,base::sequence_manager::Task,base::sequence_manager::internal::TaskQueueImpl *,base::sequence_manager::TaskQueue::TaskTiming>": {
            "offset": "0xE6FB0"
        },
        "std::_Default_allocator_traits<std::allocator<base::trace_event::MemoryAllocatorDump::Entry> >::construct<base::trace_event::MemoryAllocatorDump::Entry,char const * &,char const * &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x1492F0"
        },
        "std::_Default_allocator_traits<std::allocator<base::trace_event::MemoryAllocatorDump::Entry> >::construct<base::trace_event::MemoryAllocatorDump::Entry,char const * &,char const * &,unsigned __int64 &>": {
            "offset": "0x149220"
        },
        "std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > >": {
            "offset": "0x200880"
        },
        "std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> >": {
            "offset": "0x1D8470"
        },
        "std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0x20500"
        },
        "std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > > >": {
            "offset": "0x14EFA0"
        },
        "std::_Default_allocator_traits<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> >": {
            "offset": "0x1D1B90"
        },
        "std::_Destroy_range<base::StackAllocator<base::RepeatingCallback<void __cdecl(void)>,1> >": {
            "offset": "0xA33B0"
        },
        "std::_Destroy_range<base::StackAllocator<mojo::core::RequestContext::WatchNotifyFinalizer,8> >": {
            "offset": "0x1F2FC0"
        },
        "std::_Destroy_range<base::StackAllocator<mojo::core::ports::PortRef,4> >": {
            "offset": "0x1D78B0"
        },
        "std::_Destroy_range<base::StackAllocator<scoped_refptr<mojo::core::Watch>,8> >": {
            "offset": "0x1F3030"
        },
        "std::_Destroy_range<std::allocator<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage> >": {
            "offset": "0x1B1BB0"
        },
        "std::_Destroy_range<std::allocator<base::DeferredSequencedTaskRunner::DeferredTask> >": {
            "offset": "0x3A0C0"
        },
        "std::_Destroy_range<std::allocator<base::FieldTrial::ActiveGroup> >": {
            "offset": "0x7B540"
        },
        "std::_Destroy_range<std::allocator<base::FilePath> >": {
            "offset": "0x47330"
        },
        "std::_Destroy_range<std::allocator<base::Frame> >": {
            "offset": "0xB3690"
        },
        "std::_Destroy_range<std::allocator<base::OnceCallback<void __cdecl(void)> > >": {
            "offset": "0xA33B0"
        },
        "std::_Destroy_range<std::allocator<base::OneShotEvent::TaskInfo> >": {
            "offset": "0xA5430"
        },
        "std::_Destroy_range<std::allocator<base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> > >": {
            "offset": "0xA33B0"
        },
        "std::_Destroy_range<std::allocator<base::SamplingHeapProfiler::Sample> >": {
            "offset": "0xBFE30"
        },
        "std::_Destroy_range<std::allocator<base::ScopedDeferTaskPosting::DeferredTask> >": {
            "offset": "0xE02F0"
        },
        "std::_Destroy_range<std::allocator<base::Value> >": {
            "offset": "0x5BFB0"
        },
        "std::_Destroy_range<std::allocator<base::WeakPtr<base::StatisticsRecorder::HistogramProvider> > >": {
            "offset": "0x9E380"
        },
        "std::_Destroy_range<std::allocator<base::debug::GlobalActivityTracker::ModuleInfo> >": {
            "offset": "0x27CC0"
        },
        "std::_Destroy_range<std::allocator<base::internal::DelayedTaskManager::DelayedTask> >": {
            "offset": "0x109C70"
        },
        "std::_Destroy_range<std::allocator<base::internal::PriorityQueue::TaskSourceAndSortKey> >": {
            "offset": "0x1112D0"
        },
        "std::_Destroy_range<std::allocator<base::internal::RegisteredTaskSource> >": {
            "offset": "0x118F30"
        },
        "std::_Destroy_range<std::allocator<base::sequence_manager::Task> >": {
            "offset": "0xF2520"
        },
        "std::_Destroy_range<std::allocator<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask> >": {
            "offset": "0xE69E0"
        },
        "std::_Destroy_range<std::allocator<base::trace_event::MemoryAllocatorDump::Entry> >": {
            "offset": "0x148DA0"
        },
        "std::_Destroy_range<std::allocator<base::trace_event::TraceConfig::EventFilterConfig> >": {
            "offset": "0x155330"
        },
        "std::_Destroy_range<std::allocator<base::win::ScopedVariant> >": {
            "offset": "0x183B00"
        },
        "std::_Destroy_range<std::allocator<logging::VlogInfo::VmodulePattern> >": {
            "offset": "0x17F730"
        },
        "std::_Destroy_range<std::allocator<mojo::Message> >": {
            "offset": "0x1A8E20"
        },
        "std::_Destroy_range<std::allocator<mojo::PlatformHandle> >": {
            "offset": "0x1BF380"
        },
        "std::_Destroy_range<std::allocator<mojo::ScopedHandleBase<mojo::Handle> > >": {
            "offset": "0x212080"
        },
        "std::_Destroy_range<std::allocator<mojo::ScopedInterfaceEndpointHandle> >": {
            "offset": "0x2120D0"
        },
        "std::_Destroy_range<std::allocator<mojo::StructPtr<mojo::native::SerializedHandle> > >": {
            "offset": "0x19C7D0"
        },
        "std::_Destroy_range<std::allocator<mojo::core::Dispatcher::DispatcherInTransit> >": {
            "offset": "0x1CF600"
        },
        "std::_Destroy_range<std::allocator<mojo::core::PlatformHandleInTransit> >": {
            "offset": "0x1BA250"
        },
        "std::_Destroy_range<std::allocator<mojo::core::ports::PortRef> >": {
            "offset": "0x1D78B0"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<IPC::MessageAttachment> > >": {
            "offset": "0x1A65A0"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<IPC::MessageFilter> > >": {
            "offset": "0x1A00A0"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<IPC::SyncMessageFilter> > >": {
            "offset": "0x1A00A0"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > >": {
            "offset": "0x1A8DA0"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<base::SingleThreadTaskRunner> > >": {
            "offset": "0x161B00"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<base::internal::WorkerThread> > >": {
            "offset": "0x10DB90"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >": {
            "offset": "0x14A800"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<mojo::WaitSet::State::Context> > >": {
            "offset": "0x239B60"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<mojo::`anonymous namespace'::TriggerContext> > >": {
            "offset": "0x2388A0"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<mojo::core::NodeChannel> > >": {
            "offset": "0x1A65A0"
        },
        "std::_Destroy_range<std::allocator<scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > >": {
            "offset": "0x1A65A0"
        },
        "std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x27D00"
        },
        "std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0x1F570"
        },
        "std::_Destroy_range<std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > > >": {
            "offset": "0x27D90"
        },
        "std::_Destroy_range<std::allocator<std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> > > >": {
            "offset": "0x1F87F0"
        },
        "std::_Destroy_range<std::allocator<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> > >": {
            "offset": "0x1FA9C0"
        },
        "std::_Destroy_range<std::allocator<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> > >": {
            "offset": "0x1E7B30"
        },
        "std::_Destroy_range<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > > >": {
            "offset": "0x1A0000"
        },
        "std::_Destroy_range<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> > >": {
            "offset": "0x1C1FC0"
        },
        "std::_Destroy_range<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0xC9B40"
        },
        "std::_Destroy_range<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > > >": {
            "offset": "0x5BF70"
        },
        "std::_Destroy_range<std::allocator<std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> > > >": {
            "offset": "0x1F87F0"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > > >": {
            "offset": "0xBD8B0"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<base::ModuleCache::Module,std::default_delete<base::ModuleCache::Module> > > >": {
            "offset": "0xBD8B0"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<base::trace_event::TraceBufferChunk,std::default_delete<base::trace_event::TraceBufferChunk> > > >": {
            "offset": "0x153120"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<base::trace_event::TraceEvent,std::default_delete<base::trace_event::TraceEvent> > > >": {
            "offset": "0x161B70"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<base::trace_event::TraceEventFilter,std::default_delete<base::trace_event::TraceEventFilter> > > >": {
            "offset": "0xBD8B0"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<base::trace_event::TraceLog::EnabledStateObserver,std::default_delete<base::trace_event::TraceLog::EnabledStateObserver> > > >": {
            "offset": "0xBD8B0"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> > > >": {
            "offset": "0xBD8B0"
        },
        "std::_Facet_Register": {
            "offset": "0x2475F0"
        },
        "std::_Find_unchecked<base::Value *,base::Value>": {
            "offset": "0x1725F0"
        },
        "std::_Find_unchecked<base::Value const *,base::Value>": {
            "offset": "0x1725F0"
        },
        "std::_Guess_median_unchecked<int *,std::less<void> >": {
            "offset": "0x87570"
        },
        "std::_Guess_median_unchecked<mojo::core::ports::PortRef const * *,<lambda_068163cdaa23394ec839fd63db9def76> >": {
            "offset": "0x1F1FC0"
        },
        "std::_Hash<std::_Umap_traits<IPC::`anonymous namespace'::MessageMemoryDumpInfo,unsigned __int64,std::_Uhash_compare<IPC::`anonymous namespace'::MessageMemoryDumpInfo,IPC::A0x56226f87::MessageMemoryDumpInfoHash,std::equal_to<IPC::`anonymous namespace'::MessageMemoryDumpInfo> >,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x1AAF30"
        },
        "std::_Hash<std::_Umap_traits<IPC::`anonymous namespace'::MessageMemoryDumpInfo,unsigned __int64,std::_Uhash_compare<IPC::`anonymous namespace'::MessageMemoryDumpInfo,IPC::A0x56226f87::MessageMemoryDumpInfoHash,std::equal_to<IPC::`anonymous namespace'::MessageMemoryDumpInfo> >,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> >,0> >::_Forced_rehash": {
            "offset": "0x1B0C40"
        },
        "std::_Hash<std::_Umap_traits<IPC::`anonymous namespace'::MessageMemoryDumpInfo,unsigned __int64,std::_Uhash_compare<IPC::`anonymous namespace'::MessageMemoryDumpInfo,IPC::A0x56226f87::MessageMemoryDumpInfoHash,std::equal_to<IPC::`anonymous namespace'::MessageMemoryDumpInfo> >,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> >,0> >::emplace<IPC::`anonymous namespace'::MessageMemoryDumpInfo,int>": {
            "offset": "0x1A94C0"
        },
        "std::_Hash<std::_Umap_traits<IPC::`anonymous namespace'::MessageMemoryDumpInfo,unsigned __int64,std::_Uhash_compare<IPC::`anonymous namespace'::MessageMemoryDumpInfo,IPC::A0x56226f87::MessageMemoryDumpInfoHash,std::equal_to<IPC::`anonymous namespace'::MessageMemoryDumpInfo> >,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> >,0> >::~_Hash<std::_Umap_traits<IPC::`anonymous namespace'::MessageMemoryDumpInfo,unsigned __int64,std::_Uhash_compare<IPC::`anonymous namespace'::MessageMemoryDumpInfo,IPC::A0x56226f87::MessageMemoryDumpInfoHash,std::equal_to<IPC::`anonymous namespace'::MessageMemoryDumpInfo> >,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> >,0> >": {
            "offset": "0x1AA0D0"
        },
        "std::_Hash<std::_Umap_traits<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::HistogramBase *,std::_Uhash_compare<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::StringPieceHashImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::equal_to<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> >,0> >::_Find_last<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x9E560"
        },
        "std::_Hash<std::_Umap_traits<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::HistogramBase *,std::_Uhash_compare<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::StringPieceHashImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::equal_to<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> >,0> >::_Forced_rehash": {
            "offset": "0xA2750"
        },
        "std::_Hash<std::_Umap_traits<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::HistogramBase *,std::_Uhash_compare<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::StringPieceHashImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::equal_to<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> >,0> >::_Try_emplace<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x9ED10"
        },
        "std::_Hash<std::_Umap_traits<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::HistogramBase *,std::_Uhash_compare<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::StringPieceHashImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::equal_to<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> >,0> >::~_Hash<std::_Umap_traits<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::HistogramBase *,std::_Uhash_compare<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::StringPieceHashImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::equal_to<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> >,0> >": {
            "offset": "0x9F760"
        },
        "std::_Hash<std::_Umap_traits<base::FieldTrialList::Observer *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::FieldTrialList::Observer *,std::hash<base::FieldTrialList::Observer *>,std::equal_to<base::FieldTrialList::Observer *> >,std::allocator<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Erase<base::FieldTrialList::Observer *>": {
            "offset": "0x6C7F0"
        },
        "std::_Hash<std::_Umap_traits<base::FieldTrialList::Observer *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::FieldTrialList::Observer *,std::hash<base::FieldTrialList::Observer *>,std::equal_to<base::FieldTrialList::Observer *> >,std::allocator<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Forced_rehash": {
            "offset": "0x6EC40"
        },
        "std::_Hash<std::_Umap_traits<base::FieldTrialList::Observer *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::FieldTrialList::Observer *,std::hash<base::FieldTrialList::Observer *>,std::equal_to<base::FieldTrialList::Observer *> >,std::allocator<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Try_emplace<base::FieldTrialList::Observer * const &>": {
            "offset": "0x6C9F0"
        },
        "std::_Hash<std::_Umap_traits<base::FieldTrialList::Observer *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::FieldTrialList::Observer *,std::hash<base::FieldTrialList::Observer *>,std::equal_to<base::FieldTrialList::Observer *> >,std::allocator<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::~_Hash<std::_Umap_traits<base::FieldTrialList::Observer *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::FieldTrialList::Observer *,std::hash<base::FieldTrialList::Observer *>,std::equal_to<base::FieldTrialList::Observer *> >,std::allocator<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >": {
            "offset": "0x6D0D0"
        },
        "std::_Hash<std::_Umap_traits<base::MemoryPressureListener *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::MemoryPressureListener *,std::hash<base::MemoryPressureListener *>,std::equal_to<base::MemoryPressureListener *> >,std::allocator<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Erase<base::MemoryPressureListener *>": {
            "offset": "0x6C7F0"
        },
        "std::_Hash<std::_Umap_traits<base::MemoryPressureListener *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::MemoryPressureListener *,std::hash<base::MemoryPressureListener *>,std::equal_to<base::MemoryPressureListener *> >,std::allocator<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Forced_rehash": {
            "offset": "0x6EC40"
        },
        "std::_Hash<std::_Umap_traits<base::MemoryPressureListener *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::MemoryPressureListener *,std::hash<base::MemoryPressureListener *>,std::equal_to<base::MemoryPressureListener *> >,std::allocator<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Try_emplace<base::MemoryPressureListener * const &>": {
            "offset": "0x6C9F0"
        },
        "std::_Hash<std::_Umap_traits<base::MemoryPressureListener *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::MemoryPressureListener *,std::hash<base::MemoryPressureListener *>,std::equal_to<base::MemoryPressureListener *> >,std::allocator<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::~_Hash<std::_Umap_traits<base::MemoryPressureListener *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::MemoryPressureListener *,std::hash<base::MemoryPressureListener *>,std::equal_to<base::MemoryPressureListener *> >,std::allocator<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >": {
            "offset": "0x6D0D0"
        },
        "std::_Hash<std::_Umap_traits<base::PowerObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::PowerObserver *,std::hash<base::PowerObserver *>,std::equal_to<base::PowerObserver *> >,std::allocator<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Erase<base::PowerObserver *>": {
            "offset": "0x6C7F0"
        },
        "std::_Hash<std::_Umap_traits<base::PowerObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::PowerObserver *,std::hash<base::PowerObserver *>,std::equal_to<base::PowerObserver *> >,std::allocator<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Forced_rehash": {
            "offset": "0x6EC40"
        },
        "std::_Hash<std::_Umap_traits<base::PowerObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::PowerObserver *,std::hash<base::PowerObserver *>,std::equal_to<base::PowerObserver *> >,std::allocator<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Try_emplace<base::PowerObserver * const &>": {
            "offset": "0x6C9F0"
        },
        "std::_Hash<std::_Umap_traits<base::PowerObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::PowerObserver *,std::hash<base::PowerObserver *>,std::equal_to<base::PowerObserver *> >,std::allocator<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::~_Hash<std::_Umap_traits<base::PowerObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::PowerObserver *,std::hash<base::PowerObserver *>,std::equal_to<base::PowerObserver *> >,std::allocator<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >": {
            "offset": "0x6D0D0"
        },
        "std::_Hash<std::_Umap_traits<base::SystemMonitor::DevicesChangedObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::SystemMonitor::DevicesChangedObserver *,std::hash<base::SystemMonitor::DevicesChangedObserver *>,std::equal_to<base::SystemMonitor::DevicesChangedObserver *> >,std::allocator<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Erase<base::SystemMonitor::DevicesChangedObserver *>": {
            "offset": "0x6C7F0"
        },
        "std::_Hash<std::_Umap_traits<base::SystemMonitor::DevicesChangedObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::SystemMonitor::DevicesChangedObserver *,std::hash<base::SystemMonitor::DevicesChangedObserver *>,std::equal_to<base::SystemMonitor::DevicesChangedObserver *> >,std::allocator<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Forced_rehash": {
            "offset": "0x6EC40"
        },
        "std::_Hash<std::_Umap_traits<base::SystemMonitor::DevicesChangedObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::SystemMonitor::DevicesChangedObserver *,std::hash<base::SystemMonitor::DevicesChangedObserver *>,std::equal_to<base::SystemMonitor::DevicesChangedObserver *> >,std::allocator<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::_Try_emplace<base::SystemMonitor::DevicesChangedObserver * const &>": {
            "offset": "0x6C9F0"
        },
        "std::_Hash<std::_Umap_traits<base::SystemMonitor::DevicesChangedObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::SystemMonitor::DevicesChangedObserver *,std::hash<base::SystemMonitor::DevicesChangedObserver *>,std::equal_to<base::SystemMonitor::DevicesChangedObserver *> >,std::allocator<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >::~_Hash<std::_Umap_traits<base::SystemMonitor::DevicesChangedObserver *,scoped_refptr<base::SequencedTaskRunner>,std::_Uhash_compare<base::SystemMonitor::DevicesChangedObserver *,std::hash<base::SystemMonitor::DevicesChangedObserver *>,std::equal_to<base::SystemMonitor::DevicesChangedObserver *> >,std::allocator<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > >,0> >": {
            "offset": "0x6D0D0"
        },
        "std::_Hash<std::_Umap_traits<base::internal::CheckedLockImpl const *,base::internal::CheckedLockImpl const *,std::_Uhash_compare<base::internal::CheckedLockImpl const *,std::hash<base::internal::CheckedLockImpl const *>,std::equal_to<base::internal::CheckedLockImpl const *> >,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> >,0> >::_Forced_rehash": {
            "offset": "0x6EC40"
        },
        "std::_Hash<std::_Umap_traits<base::internal::CheckedLockImpl const *,base::internal::CheckedLockImpl const *,std::_Uhash_compare<base::internal::CheckedLockImpl const *,std::hash<base::internal::CheckedLockImpl const *>,std::equal_to<base::internal::CheckedLockImpl const *> >,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> >,0> >::_Try_emplace<base::internal::CheckedLockImpl const * const &>": {
            "offset": "0xDE930"
        },
        "std::_Hash<std::_Umap_traits<base::internal::CheckedLockImpl const *,base::internal::CheckedLockImpl const *,std::_Uhash_compare<base::internal::CheckedLockImpl const *,std::hash<base::internal::CheckedLockImpl const *>,std::equal_to<base::internal::CheckedLockImpl const *> >,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> >,0> >::~_Hash<std::_Umap_traits<base::internal::CheckedLockImpl const *,base::internal::CheckedLockImpl const *,std::_Uhash_compare<base::internal::CheckedLockImpl const *,std::hash<base::internal::CheckedLockImpl const *>,std::equal_to<base::internal::CheckedLockImpl const *> >,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> >,0> >": {
            "offset": "0xDEDA0"
        },
        "std::_Hash<std::_Umap_traits<int,IPC::Listener *,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,IPC::Listener *> >,0> >::_Forced_rehash": {
            "offset": "0xA7110"
        },
        "std::_Hash<std::_Umap_traits<int,IPC::Listener *,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,IPC::Listener *> >,0> >::_Try_emplace<int const &>": {
            "offset": "0x1B8B80"
        },
        "std::_Hash<std::_Umap_traits<int,IPC::Listener *,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,IPC::Listener *> >,0> >::~_Hash<std::_Umap_traits<int,IPC::Listener *,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,IPC::Listener *> >,0> >": {
            "offset": "0xDEDA0"
        },
        "std::_Hash<std::_Umap_traits<int,base::FilePath,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,base::FilePath> >,0> >::_Forced_rehash": {
            "offset": "0xA7110"
        },
        "std::_Hash<std::_Umap_traits<int,base::FilePath,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,base::FilePath> >,0> >::_Try_emplace<int const &>": {
            "offset": "0xA6090"
        },
        "std::_Hash<std::_Umap_traits<int,base::FilePath,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,base::FilePath> >,0> >::_Unchecked_erase": {
            "offset": "0xA72D0"
        },
        "std::_Hash<std::_Umap_traits<int,base::FilePath,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,base::FilePath> >,0> >::clear": {
            "offset": "0xA74F0"
        },
        "std::_Hash<std::_Umap_traits<int,base::FilePath,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,base::FilePath> >,0> >::~_Hash<std::_Umap_traits<int,base::FilePath,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,base::FilePath> >,0> >": {
            "offset": "0xA63E0"
        },
        "std::_Hash<std::_Umap_traits<int,int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,int> >,0> >::_Forced_rehash": {
            "offset": "0xA7110"
        },
        "std::_Hash<std::_Umap_traits<int,int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,int> >,0> >::_Try_emplace<int>": {
            "offset": "0x162E20"
        },
        "std::_Hash<std::_Umap_traits<int,int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,int> >,0> >::~_Hash<std::_Umap_traits<int,int,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,int> >,0> >": {
            "offset": "0x9F880"
        },
        "std::_Hash<std::_Umap_traits<int,scoped_refptr<base::SingleThreadTaskRunner>,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > >,0> >::_Forced_rehash": {
            "offset": "0xA7110"
        },
        "std::_Hash<std::_Umap_traits<int,scoped_refptr<base::SingleThreadTaskRunner>,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > >,0> >::_Try_emplace<int const &>": {
            "offset": "0x162590"
        },
        "std::_Hash<std::_Umap_traits<int,scoped_refptr<base::SingleThreadTaskRunner>,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > >,0> >::_Unchecked_erase": {
            "offset": "0x16C2E0"
        },
        "std::_Hash<std::_Umap_traits<int,scoped_refptr<base::SingleThreadTaskRunner>,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > >,0> >::clear": {
            "offset": "0x16C550"
        },
        "std::_Hash<std::_Umap_traits<int,scoped_refptr<base::SingleThreadTaskRunner>,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > >,0> >::~_Hash<std::_Umap_traits<int,scoped_refptr<base::SingleThreadTaskRunner>,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > >,0> >": {
            "offset": "0x6D0D0"
        },
        "std::_Hash<std::_Umap_traits<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Forced_rehash": {
            "offset": "0xA7110"
        },
        "std::_Hash<std::_Umap_traits<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Try_emplace<int const &>": {
            "offset": "0x1622B0"
        },
        "std::_Hash<std::_Umap_traits<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Hash<std::_Umap_traits<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >": {
            "offset": "0x163A60"
        },
        "std::_Hash<std::_Umap_traits<int,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > >,0> >::_Forced_rehash": {
            "offset": "0xA7110"
        },
        "std::_Hash<std::_Umap_traits<int,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > >,0> >::_Try_emplace<int const &>": {
            "offset": "0x162860"
        },
        "std::_Hash<std::_Umap_traits<int,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > >,0> >::~_Hash<std::_Umap_traits<int,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> >,std::_Uhash_compare<int,std::hash<int>,std::equal_to<int> >,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > >,0> >": {
            "offset": "0x163AD0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x1D9850"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >::_Forced_rehash": {
            "offset": "0x1E3AD0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >::_Rehash_for_1": {
            "offset": "0x1E3C70"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >::clear": {
            "offset": "0x1E3EA0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >::emplace<std::pair<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel> > >": {
            "offset": "0x1D84E0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >::find<void>": {
            "offset": "0x1D8AA0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >::~_Hash<std::_Umap_traits<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > >,0> >": {
            "offset": "0x1D8FD0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x1D9840"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > >,0> >::_Forced_rehash": {
            "offset": "0x1E3930"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > >,0> >::_Try_emplace<mojo::core::ports::NodeName const &>": {
            "offset": "0x1D80D0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > >,0> >::clear": {
            "offset": "0x1E3E00"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > >,0> >::erase": {
            "offset": "0x1E3F00"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > >,0> >::~_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > >,0> >": {
            "offset": "0x1D8F60"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x1E9650"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > >,0> >::_Forced_rehash": {
            "offset": "0x1F16D0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > >,0> >::_Try_emplace<mojo::core::ports::NodeName const &>": {
            "offset": "0x1E8110"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > >,0> >::~_Hash<std::_Umap_traits<mojo::core::ports::NodeName,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > >,std::_Uhash_compare<mojo::core::ports::NodeName,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > >,0> >": {
            "offset": "0x1E8F80"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x1E9700"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > >,0> >::_Forced_rehash": {
            "offset": "0x1F1870"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > >,0> >::_Try_emplace<mojo::core::ports::PortName const &>": {
            "offset": "0x1E8410"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > >,0> >::~_Hash<std::_Umap_traits<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > >,0> >": {
            "offset": "0x1E8FF0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,scoped_refptr<mojo::core::ports::Port>,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x1E97B0"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,scoped_refptr<mojo::core::ports::Port>,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > >,0> >::_Forced_rehash": {
            "offset": "0x1F1A10"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,scoped_refptr<mojo::core::ports::Port>,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > >,0> >::emplace<mojo::core::ports::PortName const &,scoped_refptr<mojo::core::ports::Port> >": {
            "offset": "0x1E8800"
        },
        "std::_Hash<std::_Umap_traits<mojo::core::ports::PortName,scoped_refptr<mojo::core::ports::Port>,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > >,0> >::~_Hash<std::_Umap_traits<mojo::core::ports::PortName,scoped_refptr<mojo::core::ports::Port>,std::_Uhash_compare<mojo::core::ports::PortName,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName> >,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > >,0> >": {
            "offset": "0x1E9060"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(int)>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x9E640"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(int)>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > >,0> >::_Forced_rehash": {
            "offset": "0xA29C0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(int)>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > >,0> >::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > >": {
            "offset": "0x9F2A0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(int)>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > >,0> >::~_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(int)>,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > >,0> >": {
            "offset": "0x9F810"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x9E640"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::_Forced_rehash": {
            "offset": "0xA29C0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x162B40"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> >,0> >": {
            "offset": "0x163B40"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,mojo::core::HandleTable::Entry,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> >,0> >::_Forced_rehash": {
            "offset": "0xA7110"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,mojo::core::HandleTable::Entry,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> >,0> >::emplace<std::pair<unsigned int,mojo::core::HandleTable::Entry> >": {
            "offset": "0x1CF8E0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,mojo::core::HandleTable::Entry,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> >,0> >::erase<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > > >,0>": {
            "offset": "0x1CFBC0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,mojo::core::HandleTable::Entry,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> >,0> >::~_Hash<std::_Umap_traits<unsigned int,mojo::core::HandleTable::Entry,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> >,0> >": {
            "offset": "0x1CFD40"
        },
        "std::_Hash<std::_Umap_traits<void *,base::SamplingHeapProfiler::Sample,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> >,0> >::_Forced_rehash": {
            "offset": "0x6EC40"
        },
        "std::_Hash<std::_Umap_traits<void *,base::SamplingHeapProfiler::Sample,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> >,0> >::emplace<void * &,base::SamplingHeapProfiler::Sample>": {
            "offset": "0xC01D0"
        },
        "std::_Hash<std::_Umap_traits<void *,base::SamplingHeapProfiler::Sample,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> >,0> >::~_Hash<std::_Umap_traits<void *,base::SamplingHeapProfiler::Sample,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> >,0> >": {
            "offset": "0xC0A30"
        },
        "std::_Hash<std::_Umap_traits<void *,base::win::internal::ScopedHandleVerifierInfo,std::_Uhash_compare<void *,base::win::internal::HandleHash,std::equal_to<void *> >,std::allocator<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x18D1D0"
        },
        "std::_Hash<std::_Umap_traits<void *,base::win::internal::ScopedHandleVerifierInfo,std::_Uhash_compare<void *,base::win::internal::HandleHash,std::equal_to<void *> >,std::allocator<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> >,0> >::_Forced_rehash": {
            "offset": "0x18DC70"
        },
        "std::_Hash<std::_Umap_traits<void *,base::win::internal::ScopedHandleVerifierInfo,std::_Uhash_compare<void *,base::win::internal::HandleHash,std::equal_to<void *> >,std::allocator<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> >,0> >::emplace<std::pair<void *,base::win::internal::ScopedHandleVerifierInfo> &>": {
            "offset": "0x18CE60"
        },
        "std::_Hash<std::_Umap_traits<void *,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > >,0> >::_Forced_rehash": {
            "offset": "0x6EC40"
        },
        "std::_Hash<std::_Umap_traits<void *,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > >,0> >::emplace<void * &,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >": {
            "offset": "0x1C2450"
        },
        "std::_Hash<std::_Umap_traits<void *,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > >,0> >::~_Hash<std::_Umap_traits<void *,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > >,0> >": {
            "offset": "0x1C2880"
        },
        "std::_Hash<std::_Uset_traits<base::BucketRanges const *,std::_Uhash_compare<base::BucketRanges const *,base::StatisticsRecorder::BucketRangesHash,base::StatisticsRecorder::BucketRangesEqual>,std::allocator<base::BucketRanges const *>,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x9FD50"
        },
        "std::_Hash<std::_Uset_traits<base::BucketRanges const *,std::_Uhash_compare<base::BucketRanges const *,base::StatisticsRecorder::BucketRangesHash,base::StatisticsRecorder::BucketRangesEqual>,std::allocator<base::BucketRanges const *>,0> >::_Forced_rehash": {
            "offset": "0xA2C40"
        },
        "std::_Hash<std::_Uset_traits<base::BucketRanges const *,std::_Uhash_compare<base::BucketRanges const *,base::StatisticsRecorder::BucketRangesHash,base::StatisticsRecorder::BucketRangesEqual>,std::allocator<base::BucketRanges const *>,0> >::emplace<base::BucketRanges const * const &>": {
            "offset": "0x9EFD0"
        },
        "std::_Hash<std::_Uset_traits<base::BucketRanges const *,std::_Uhash_compare<base::BucketRanges const *,base::StatisticsRecorder::BucketRangesHash,base::StatisticsRecorder::BucketRangesEqual>,std::allocator<base::BucketRanges const *>,0> >::~_Hash<std::_Uset_traits<base::BucketRanges const *,std::_Uhash_compare<base::BucketRanges const *,base::StatisticsRecorder::BucketRangesHash,base::StatisticsRecorder::BucketRangesEqual>,std::allocator<base::BucketRanges const *>,0> >": {
            "offset": "0x9F880"
        },
        "std::_Hash<std::_Uset_traits<char const *,std::_Uhash_compare<char const *,std::hash<char const *>,std::equal_to<char const *> >,std::allocator<char const *>,0> >::_Forced_rehash": {
            "offset": "0xC1DD0"
        },
        "std::_Hash<std::_Uset_traits<char const *,std::_Uhash_compare<char const *,std::hash<char const *>,std::equal_to<char const *> >,std::allocator<char const *>,0> >::emplace<char const * const &>": {
            "offset": "0xC04E0"
        },
        "std::_Hash<std::_Uset_traits<char const *,std::_Uhash_compare<char const *,std::hash<char const *>,std::equal_to<char const *> >,std::allocator<char const *>,0> >::~_Hash<std::_Uset_traits<char const *,std::_Uhash_compare<char const *,std::hash<char const *>,std::equal_to<char const *> >,std::allocator<char const *>,0> >": {
            "offset": "0x9F880"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x158110"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Desired_grow_bucket_count": {
            "offset": "0x15C890"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x9E640"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Forced_rehash": {
            "offset": "0x15C930"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Insert_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> >": {
            "offset": "0x156810"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Unchecked_erase": {
            "offset": "0x15CCF0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::clear": {
            "offset": "0x15D0C0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x156D20"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >": {
            "offset": "0x157D90"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::_Clear_guard::~_Clear_guard": {
            "offset": "0x3C90"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::_Desired_grow_bucket_count": {
            "offset": "0x15C890"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::_Forced_rehash": {
            "offset": "0xCB90"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::_Insert_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned long> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned long> >,std::_Iterator_base0> >": {
            "offset": "0x156590"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::_Unchecked_erase": {
            "offset": "0xD190"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::clear": {
            "offset": "0x15D000"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::emplace<unsigned long>": {
            "offset": "0x156FB0"
        },
        "std::_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >::~_Hash<std::_Uset_traits<unsigned long,std::_Uhash_compare<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long> >,std::allocator<unsigned long>,0> >": {
            "offset": "0x9F880"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<base::BucketRanges const *> >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<base::BucketRanges const *> >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<base::BucketRanges const *> >,std::_Iterator_base0> > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<char const *> >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<char const *> >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<char const *> >,std::_Iterator_base0> > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned long> >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned long> >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned long> >,std::_Iterator_base0> > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > > > > >::_Assign_grow": {
            "offset": "0x1B03E0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > > > > >": {
            "offset": "0x1AA180"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,IPC::Listener *> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,IPC::Listener *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,IPC::Listener *> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,base::FilePath> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,base::FilePath> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,base::FilePath> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,int> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,int> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::SamplingHeapProfiler::Sample> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::SamplingHeapProfiler::Sample> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::SamplingHeapProfiler::Sample> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> > > > > >": {
            "offset": "0x29650"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > > > > >::_Assign_grow": {
            "offset": "0x6EB00"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > > > > >": {
            "offset": "0x29650"
        },
        "std::_Inplace_merge_buffer_left<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5C560"
        },
        "std::_Inplace_merge_buffer_right<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5C850"
        },
        "std::_Insert_string<char,std::char_traits<char>,unsigned __int64>": {
            "offset": "0x1FF10"
        },
        "std::_Insertion_sort_isort_max_chunks<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5CB50"
        },
        "std::_Insertion_sort_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5CEA0"
        },
        "std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x155E90"
        },
        "std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Freenode<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x155F30"
        },
        "std::_List_node<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6C960"
        },
        "std::_List_node<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6C960"
        },
        "std::_List_node<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6C960"
        },
        "std::_List_node<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6C960"
        },
        "std::_List_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >": {
            "offset": "0x6C960"
        },
        "std::_List_node<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,void *> > >": {
            "offset": "0x1D7FD0"
        },
        "std::_List_node<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,void *> > >": {
            "offset": "0x1E7E20"
        },
        "std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >": {
            "offset": "0x162190"
        },
        "std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *> > >": {
            "offset": "0x1CF770"
        },
        "std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *> > >": {
            "offset": "0x1CF800"
        },
        "std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *> > >": {
            "offset": "0xC0030"
        },
        "std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *> > >": {
            "offset": "0xC00D0"
        },
        "std::_List_node<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,void *> > >": {
            "offset": "0x1C2320"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<base::BucketRanges const *,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<base::BucketRanges const *,void *> > >": {
            "offset": "0x3870"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<char const *,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<char const *,void *> > >": {
            "offset": "0x3870"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x157E10"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6D150"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6D150"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6D150"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,void *> > >": {
            "offset": "0x6D150"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *>,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,IPC::Listener *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,IPC::Listener *>,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,base::FilePath>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,base::FilePath>,void *> > >": {
            "offset": "0xA6450"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,int>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,int>,void *> > >": {
            "offset": "0x3870"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >": {
            "offset": "0x6D150"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x163BC0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > >,void *> > >": {
            "offset": "0x163C00"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,void *> > >": {
            "offset": "0x1D9090"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > >,void *> > >": {
            "offset": "0x1D9050"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > >,void *> > >": {
            "offset": "0x1E90E0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > >,void *> > >": {
            "offset": "0x1E9120"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,void *> > >": {
            "offset": "0x1E9160"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >,void *> > >": {
            "offset": "0x9F930"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,void *> > >": {
            "offset": "0x163C40"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,void *> > >": {
            "offset": "0x1CFDC0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,base::SamplingHeapProfiler::Sample>,void *> > >": {
            "offset": "0xC0AB0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo>,void *> > >": {
            "offset": "0x18D140"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,void *> > >": {
            "offset": "0x1C2900"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<unsigned long,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<unsigned long,void *> > >": {
            "offset": "0x3870"
        },
        "std::_List_node_insert_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_List_node_insert_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x157EA0"
        },
        "std::_List_node_insert_op2<std::allocator<std::_List_node<unsigned long,void *> > >::~_List_node_insert_op2<std::allocator<std::_List_node<unsigned long,void *> > >": {
            "offset": "0x38D0"
        },
        "std::_Med3_unchecked<base::HistogramBase * *,bool (__cdecl*)(base::HistogramBase const *,base::HistogramBase const *)>": {
            "offset": "0x9E710"
        },
        "std::_Move_backward_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>": {
            "offset": "0x20180"
        },
        "std::_Move_backward_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *>": {
            "offset": "0x5D180"
        },
        "std::_Move_unchecked<base::OffsetAdjuster::Adjustment *,base::OffsetAdjuster::Adjustment *>": {
            "offset": "0x91E10"
        },
        "std::_Move_unchecked<base::trace_event::TraceConfig::EventFilterConfig *,base::trace_event::TraceConfig::EventFilterConfig *>": {
            "offset": "0x156AC0"
        },
        "std::_Move_unchecked<base::trace_event::TraceConfig::MemoryDumpConfig::Trigger *,base::trace_event::TraceConfig::MemoryDumpConfig::Trigger *>": {
            "offset": "0x91E10"
        },
        "std::_Move_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>": {
            "offset": "0x15DA40"
        },
        "std::_Move_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *>": {
            "offset": "0x20250"
        },
        "std::_Move_unchecked<std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> > *,std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> > *>": {
            "offset": "0x1F8A50"
        },
        "std::_Move_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *>": {
            "offset": "0x5D230"
        },
        "std::_Move_unchecked<std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> > *,std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> > *>": {
            "offset": "0x1F8A50"
        },
        "std::_Move_unchecked<unsigned int *,unsigned int *>": {
            "offset": "0x91E10"
        },
        "std::_Optimistic_temporary_buffer<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > >::~_Optimistic_temporary_buffer<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > >": {
            "offset": "0x5D940"
        },
        "std::_Partition_by_median_guess_unchecked<base::HistogramBase * *,bool (__cdecl*)(base::HistogramBase const *,base::HistogramBase const *)>": {
            "offset": "0x9E790"
        },
        "std::_Pop_heap_hole_by_index<base::sequence_manager::Task *,base::sequence_manager::Task,std::less<base::sequence_manager::Task> >": {
            "offset": "0xF27E0"
        },
        "std::_Pop_heap_hole_unchecked<std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> > *,std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> >,std::less<void> >": {
            "offset": "0x1E7120"
        },
        "std::_Push_heap_by_index<std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> > *,std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> >,std::less<void> >": {
            "offset": "0x1E72B0"
        },
        "std::_Sort_unchecked<base::HistogramBase * *,bool (__cdecl*)(base::HistogramBase const *,base::HistogramBase const *)>": {
            "offset": "0x9E9D0"
        },
        "std::_Sort_unchecked<int *,std::less<void> >": {
            "offset": "0x877C0"
        },
        "std::_Sort_unchecked<mojo::core::ports::PortRef const * *,<lambda_068163cdaa23394ec839fd63db9def76> >": {
            "offset": "0x1F2160"
        },
        "std::_Stable_sort_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5D2D0"
        },
        "std::_String_val<std::_Simple_types<char> >::_Xran": {
            "offset": "0x25E90"
        },
        "std::_String_val<std::_Simple_types<wchar_t> >::_Xran": {
            "offset": "0x25E90"
        },
        "std::_Throw_bad_array_new_length": {
            "offset": "0x12D0"
        },
        "std::_Throw_bad_cast": {
            "offset": "0x4D770"
        },
        "std::_Throw_tree_length_error": {
            "offset": "0xD170"
        },
        "std::_Tree<std::_Tmap_traits<__int64,base::debug::GlobalActivityAnalyzer::UserDataSnapshot,std::less<__int64>,std::allocator<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> >,0> >::_Erase": {
            "offset": "0x2BB70"
        },
        "std::_Tree<std::_Tmap_traits<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > >,0> >::insert<0,0>": {
            "offset": "0xDC0B0"
        },
        "std::_Tree<std::_Tmap_traits<__int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Erase": {
            "offset": "0x35E50"
        },
        "std::_Tree<std::_Tmap_traits<__int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Erase_unchecked": {
            "offset": "0x36000"
        },
        "std::_Tree<std::_Tmap_traits<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::debug::ActivityUserData::ValueInfo,std::less<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo> >,0> >::_Find_lower_bound<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x2CFD0"
        },
        "std::_Tree<std::_Tmap_traits<base::trace_event::MemoryAllocatorDumpGuid,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge,std::less<base::trace_event::MemoryAllocatorDumpGuid>,std::allocator<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >,0> >::_Find_hint<base::trace_event::MemoryAllocatorDumpGuid>": {
            "offset": "0x14ED90"
        },
        "std::_Tree<std::_Tmap_traits<base::trace_event::MemoryAllocatorDumpGuid,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge,std::less<base::trace_event::MemoryAllocatorDumpGuid>,std::allocator<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >,0> >::clear": {
            "offset": "0x151A50"
        },
        "std::_Tree<std::_Tmap_traits<base::trace_event::TraceLog::AsyncEnabledStateObserver *,base::trace_event::TraceLog::RegisteredAsyncObserver,std::less<base::trace_event::TraceLog::AsyncEnabledStateObserver *>,std::allocator<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> >,0> >::_Erase": {
            "offset": "0x16C140"
        },
        "std::_Tree<std::_Tmap_traits<int,scoped_refptr<base::SingleThreadTaskRunner>,std::less<int>,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > >,0> >::_Erase_unchecked": {
            "offset": "0x1A4D40"
        },
        "std::_Tree<std::_Tmap_traits<int,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >,std::less<int>,std::allocator<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > >,0> >::_Erase_unchecked": {
            "offset": "0xB83B0"
        },
        "std::_Tree<std::_Tmap_traits<int,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >,std::less<int>,std::allocator<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > >,0> >::erase": {
            "offset": "0xB8530"
        },
        "std::_Tree<std::_Tmap_traits<mojo::Handle,base::RepeatingCallback<void __cdecl(unsigned int)>,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > >,0> >::_Erase": {
            "offset": "0x22A9A0"
        },
        "std::_Tree<std::_Tmap_traits<mojo::Handle,mojo::WaitSet::State::ReadyState,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> >,0> >::_Erase": {
            "offset": "0x23C150"
        },
        "std::_Tree<std::_Tmap_traits<mojo::Handle,mojo::WaitSet::State::ReadyState,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> >,0> >::_Erase_unchecked": {
            "offset": "0x23C320"
        },
        "std::_Tree<std::_Tmap_traits<mojo::Handle,scoped_refptr<mojo::WaitSet::State::Context>,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > >,0> >::_Erase_unchecked": {
            "offset": "0x23C4F0"
        },
        "std::_Tree<std::_Tmap_traits<mojo::Handle,scoped_refptr<mojo::WaitSet::State::Context>,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > >,0> >::erase": {
            "offset": "0x23C7B0"
        },
        "std::_Tree<std::_Tmap_traits<mojo::core::ports::NodeName,mojo::core::NodeController::IsolatedConnection,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> >,0> >::_Emplace<mojo::core::ports::NodeName &,mojo::core::NodeController::IsolatedConnection>": {
            "offset": "0x1D78F0"
        },
        "std::_Tree<std::_Tmap_traits<mojo::core::ports::NodeName,mojo::core::NodeController::IsolatedConnection,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> >,0> >::erase<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > > >,0>": {
            "offset": "0x1D8940"
        },
        "std::_Tree<std::_Tmap_traits<mojo::core::ports::NodeName,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > >,0> >::_Emplace<mojo::core::ports::NodeName const &,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > >": {
            "offset": "0x1D7A80"
        },
        "std::_Tree<std::_Tmap_traits<mojo::core::ports::NodeName,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > >,0> >::erase<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > > >,0>": {
            "offset": "0x1D89E0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,base::debug::GlobalActivityTracker::ModuleInfoRecord * &>": {
            "offset": "0x2CB90"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FeatureList::OverrideEntry,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FeatureList::OverrideEntry,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry> >,0> >::find<char const *,std::less<void>,int>": {
            "offset": "0x3BD10"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FieldTrial *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> >,0> >::_Copy_nodes<0>": {
            "offset": "0x7B460"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FieldTrial *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1FA20"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FieldTrial *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> >,0> >::_Erase": {
            "offset": "0x83FA0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FieldTrial *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FieldTrial *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> >,0> >::_Getal": {
            "offset": "0x3FB0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > >,0> >::_Copy<0>": {
            "offset": "0x200660"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > >,0> >::_Copy_nodes<0>": {
            "offset": "0x200710"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > >,0> >::_Getal": {
            "offset": "0x3FB0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> >,0> >::_Copy<0>": {
            "offset": "0x27B20"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> >,0> >::_Copy_nodes<0>": {
            "offset": "0x27BD0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> >,0> >::_Getal": {
            "offset": "0x3FB0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::NodeName,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1FA20"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::NodeName,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> >,0> >::_Erase": {
            "offset": "0x1E3710"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::NodeName,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> >,0> >::_Erase_unchecked": {
            "offset": "0x1E38B0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::NodeName,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Copy_nodes<0>": {
            "offset": "0x843F0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Getal": {
            "offset": "0x3FB0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Copy<0>": {
            "offset": "0x1F250"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Copy_nodes<0>": {
            "offset": "0x1F480"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0x1F5B0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1FA20"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Erase": {
            "offset": "0x25BE0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Getal": {
            "offset": "0x3FB0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::find<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<void>,int>": {
            "offset": "0x20570"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D080"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Copy<0>": {
            "offset": "0xABDE0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Copy_nodes<0>": {
            "offset": "0x2CAA0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,0> >::_Getal": {
            "offset": "0x3FB0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Eqrange<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x844E0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Erase": {
            "offset": "0x854F0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x84A00"
        },
        "std::_Tree<std::_Tmap_traits<unsigned __int64,scoped_refptr<mojo::WaitSet::State::Context>,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > >,0> >::_Erase_unchecked": {
            "offset": "0x23C390"
        },
        "std::_Tree<std::_Tmap_traits<unsigned __int64,scoped_refptr<mojo::WaitSet::State::Context>,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > >,0> >::erase": {
            "offset": "0x23C8C0"
        },
        "std::_Tree<std::_Tmap_traits<unsigned int,base::circular_deque<mojo::internal::MultiplexRouter::Task *>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > >,0> >::erase<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > > >,0>": {
            "offset": "0x218820"
        },
        "std::_Tree<std::_Tmap_traits<unsigned int,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > >,0> >::_Erase_unchecked": {
            "offset": "0x1B06F0"
        },
        "std::_Tree<std::_Tmap_traits<unsigned int,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > >,0> >::erase": {
            "offset": "0x1B0EC0"
        },
        "std::_Tree<std::_Tmap_traits<unsigned int,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > >,0> >::insert<0,0>": {
            "offset": "0x1A9A60"
        },
        "std::_Tree<std::_Tmap_traits<void *,base::SharedMemoryTracker::UsageInfo,std::less<void *>,std::allocator<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> >,0> >::_Erase": {
            "offset": "0x735B0"
        },
        "std::_Tree<std::_Tmap_traits<void const *,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> >,std::less<void const *>,std::allocator<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > >,0> >::_Erase": {
            "offset": "0xD6750"
        },
        "std::_Tree<std::_Tset_traits<IPC::PendingSyncMsg *,std::less<IPC::PendingSyncMsg *>,std::allocator<IPC::PendingSyncMsg *>,0> >::_Erase": {
            "offset": "0xEFC50"
        },
        "std::_Tree<std::_Tset_traits<IPC::`anonymous namespace'::ChannelAssociatedGroupController *,std::less<IPC::`anonymous namespace'::ChannelAssociatedGroupController *>,std::allocator<IPC::`anonymous namespace'::ChannelAssociatedGroupController *>,0> >::_Erase": {
            "offset": "0x1B0520"
        },
        "std::_Tree<std::_Tset_traits<base::internal::PartitionRootBase *,std::less<base::internal::PartitionRootBase *>,std::allocator<base::internal::PartitionRootBase *>,0> >::_Erase": {
            "offset": "0xC630"
        },
        "std::_Tree<std::_Tset_traits<base::internal::PartitionRootBase *,std::less<base::internal::PartitionRootBase *>,std::allocator<base::internal::PartitionRootBase *>,0> >::clear": {
            "offset": "0xD490"
        },
        "std::_Tree<std::_Tset_traits<base::sequence_manager::TimeDomain *,std::less<base::sequence_manager::TimeDomain *>,std::allocator<base::sequence_manager::TimeDomain *>,0> >::_Erase": {
            "offset": "0xEFC50"
        },
        "std::_Tree<std::_Tset_traits<base::sequence_manager::internal::TaskQueueImpl *,std::less<base::sequence_manager::internal::TaskQueueImpl *>,std::allocator<base::sequence_manager::internal::TaskQueueImpl *>,0> >::_Erase": {
            "offset": "0xC630"
        },
        "std::_Tree<std::_Tset_traits<base::sequence_manager::internal::TaskQueueImpl *,std::less<base::sequence_manager::internal::TaskQueueImpl *>,std::allocator<base::sequence_manager::internal::TaskQueueImpl *>,0> >::clear": {
            "offset": "0xD490"
        },
        "std::_Tree<std::_Tset_traits<base::sequence_manager::internal::TaskQueueImpl *,std::less<base::sequence_manager::internal::TaskQueueImpl *>,std::allocator<base::sequence_manager::internal::TaskQueueImpl *>,0> >::erase": {
            "offset": "0xF02E0"
        },
        "std::_Tree<std::_Tset_traits<enum base::sequence_manager::TaskQueue::QueuePriority,std::less<enum base::sequence_manager::TaskQueue::QueuePriority>,std::allocator<enum base::sequence_manager::TaskQueue::QueuePriority>,1> >::_Erase": {
            "offset": "0xEFE20"
        },
        "std::_Tree<std::_Tset_traits<enum base::sequence_manager::TaskQueue::QueuePriority,std::less<enum base::sequence_manager::TaskQueue::QueuePriority>,std::allocator<enum base::sequence_manager::TaskQueue::QueuePriority>,1> >::_Find_hint<enum base::sequence_manager::TaskQueue::QueuePriority>": {
            "offset": "0xE6C60"
        },
        "std::_Tree<std::_Tset_traits<enum base::sequence_manager::TaskQueue::QueuePriority,std::less<enum base::sequence_manager::TaskQueue::QueuePriority>,std::allocator<enum base::sequence_manager::TaskQueue::QueuePriority>,1> >::~_Tree<std::_Tset_traits<enum base::sequence_manager::TaskQueue::QueuePriority,std::less<enum base::sequence_manager::TaskQueue::QueuePriority>,std::allocator<enum base::sequence_manager::TaskQueue::QueuePriority>,1> >": {
            "offset": "0x293F0"
        },
        "std::_Tree<std::_Tset_traits<enum base::trace_event::MemoryDumpLevelOfDetail,std::less<enum base::trace_event::MemoryDumpLevelOfDetail>,std::allocator<enum base::trace_event::MemoryDumpLevelOfDetail>,0> >::_Copy<0>": {
            "offset": "0x155280"
        },
        "std::_Tree<std::_Tset_traits<enum base::trace_event::MemoryDumpLevelOfDetail,std::less<enum base::trace_event::MemoryDumpLevelOfDetail>,std::allocator<enum base::trace_event::MemoryDumpLevelOfDetail>,0> >::_Copy_nodes<0>": {
            "offset": "0x2D70"
        },
        "std::_Tree<std::_Tset_traits<enum base::trace_event::MemoryDumpLevelOfDetail,std::less<enum base::trace_event::MemoryDumpLevelOfDetail>,std::allocator<enum base::trace_event::MemoryDumpLevelOfDetail>,0> >::_Find_hint<enum base::trace_event::MemoryDumpLevelOfDetail>": {
            "offset": "0x155C80"
        },
        "std::_Tree<std::_Tset_traits<enum base::trace_event::MemoryDumpLevelOfDetail,std::less<enum base::trace_event::MemoryDumpLevelOfDetail>,std::allocator<enum base::trace_event::MemoryDumpLevelOfDetail>,0> >::_Getal": {
            "offset": "0x3FB0"
        },
        "std::_Tree<std::_Tset_traits<enum base::trace_event::MemoryDumpLevelOfDetail,std::less<enum base::trace_event::MemoryDumpLevelOfDetail>,std::allocator<enum base::trace_event::MemoryDumpLevelOfDetail>,0> >::clear": {
            "offset": "0x15D150"
        },
        "std::_Tree<std::_Tset_traits<mojo::core::Watch const *,std::less<mojo::core::Watch const *>,std::allocator<mojo::core::Watch const *>,0> >::_Erase": {
            "offset": "0xEFC50"
        },
        "std::_Tree<std::_Tset_traits<mojo::core::Watch const *,std::less<mojo::core::Watch const *>,std::allocator<mojo::core::Watch const *>,0> >::erase": {
            "offset": "0x1FA780"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Emplace<char const * &>": {
            "offset": "0x1887A0"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x8E580"
        },
        "std::_Tree<std::_Tset_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x84A00"
        },
        "std::_Tree<std::_Tset_traits<unsigned __int64,std::less<unsigned __int64>,std::allocator<unsigned __int64>,0> >::_Erase": {
            "offset": "0xC630"
        },
        "std::_Tree<std::_Tset_traits<unsigned __int64,std::less<unsigned __int64>,std::allocator<unsigned __int64>,0> >::clear": {
            "offset": "0xD490"
        },
        "std::_Tree<std::_Tset_traits<unsigned __int64,std::less<unsigned __int64>,std::allocator<unsigned __int64>,0> >::insert<0,0>": {
            "offset": "0x69BE0"
        },
        "std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::_Find_hint<unsigned long>": {
            "offset": "0x155C80"
        },
        "std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::~_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >": {
            "offset": "0x293F0"
        },
        "std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<enum base::trace_event::MemoryDumpLevelOfDetail,void *> >,std::_Tree_val<std::_Tree_simple_types<enum base::trace_event::MemoryDumpLevelOfDetail> > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<enum base::trace_event::MemoryDumpLevelOfDetail,void *> >,std::_Tree_val<std::_Tree_simple_types<enum base::trace_event::MemoryDumpLevelOfDetail> > >": {
            "offset": "0x157F70"
        },
        "std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > > > >": {
            "offset": "0x200A00"
        },
        "std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > >": {
            "offset": "0x29280"
        },
        "std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > > >": {
            "offset": "0x20F50"
        },
        "std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > > >": {
            "offset": "0xAC0A0"
        },
        "std::_Tree_node<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver>,void *> > >": {
            "offset": "0x162230"
        },
        "std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *> > >": {
            "offset": "0x7BF30"
        },
        "std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName>,void *> > >": {
            "offset": "0x1D8060"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<enum base::sequence_manager::TaskQueue::QueuePriority,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<enum base::sequence_manager::TaskQueue::QueuePriority,void *> > >": {
            "offset": "0x38B0"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x1889C0"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *>,void *> > >": {
            "offset": "0x2EFE0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<scoped_refptr<base::trace_event::MemoryDumpProviderInfo>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<scoped_refptr<base::trace_event::MemoryDumpProviderInfo>,void *> > >": {
            "offset": "0x3890"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >,void *> > >": {
            "offset": "0x913B0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver>,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection>,void *> > >": {
            "offset": "0x84BD0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > >,void *> > >": {
            "offset": "0x72980"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> >,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> > >": {
            "offset": "0x29210"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName>,void *> > >": {
            "offset": "0x1D8F40"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef>,void *> > >": {
            "offset": "0x3BED0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >": {
            "offset": "0x29250"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x20F20"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,void *> > >": {
            "offset": "0x84BD0"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::PendingSyncMsg *> >::_Erase_tree<std::allocator<std::_Tree_node<IPC::PendingSyncMsg *,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::PendingSyncMsg *> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::PendingSyncMsg *> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::PendingSyncMsg *> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::PendingSyncMsg *> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::`anonymous namespace'::ChannelAssociatedGroupController *> >::_Erase_tree<std::allocator<std::_Tree_node<IPC::`anonymous namespace'::ChannelAssociatedGroupController *,void *> > >": {
            "offset": "0x1A9340"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::`anonymous namespace'::ChannelAssociatedGroupController *> >::_Extract": {
            "offset": "0x1B0870"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::`anonymous namespace'::ChannelAssociatedGroupController *> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::`anonymous namespace'::ChannelAssociatedGroupController *> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<IPC::`anonymous namespace'::ChannelAssociatedGroupController *> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<__int64> >::_Erase_tree<std::allocator<std::_Tree_node<__int64,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<__int64> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::WaitableEvent *> >::_Erase_tree<std::allocator<std::_Tree_node<base::WaitableEvent *,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::WaitableEvent *> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::WaitableEvent *> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::WaitableEvent *> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::WaitableEvent *> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::internal::PartitionRootBase *> >::_Erase_tree<std::allocator<std::_Tree_node<base::internal::PartitionRootBase *,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::internal::PartitionRootBase *> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::internal::PartitionRootBase *> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::internal::PartitionRootBase *> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::internal::PartitionRootBase *> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::TimeDomain *> >::_Erase_tree<std::allocator<std::_Tree_node<base::sequence_manager::TimeDomain *,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::TimeDomain *> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::TimeDomain *> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::TimeDomain *> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::TimeDomain *> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::internal::TaskQueueImpl *> >::_Erase_tree<std::allocator<std::_Tree_node<base::sequence_manager::internal::TaskQueueImpl *,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::internal::TaskQueueImpl *> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::internal::TaskQueueImpl *> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::internal::TaskQueueImpl *> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<base::sequence_manager::internal::TaskQueueImpl *> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::sequence_manager::TaskQueue::QueuePriority> >::_Erase_tree<std::allocator<std::_Tree_node<enum base::sequence_manager::TaskQueue::QueuePriority,void *> > >": {
            "offset": "0x2E90"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::sequence_manager::TaskQueue::QueuePriority> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::sequence_manager::TaskQueue::QueuePriority> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::sequence_manager::TaskQueue::QueuePriority> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::sequence_manager::TaskQueue::QueuePriority> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::trace_event::MemoryDumpLevelOfDetail> >::_Erase_head<std::allocator<std::_Tree_node<enum base::trace_event::MemoryDumpLevelOfDetail,void *> > >": {
            "offset": "0x155C00"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::trace_event::MemoryDumpLevelOfDetail> >::_Erase_tree<std::allocator<std::_Tree_node<enum base::trace_event::MemoryDumpLevelOfDetail,void *> > >": {
            "offset": "0x2E90"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::trace_event::MemoryDumpLevelOfDetail> >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<enum base::trace_event::MemoryDumpLevelOfDetail,void *> > >": {
            "offset": "0x2E90"
        },
        "std::_Tree_val<std::_Tree_simple_types<enum base::trace_event::MemoryDumpLevelOfDetail> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<mojo::core::Watch const *> >::_Erase_tree<std::allocator<std::_Tree_node<mojo::core::Watch const *,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<mojo::core::Watch const *> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<mojo::core::Watch const *> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<mojo::core::Watch const *> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<mojo::core::Watch const *> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >::_Erase_tree<std::allocator<std::_Tree_node<scoped_refptr<base::trace_event::MemoryDumpProviderInfo>,void *> > >": {
            "offset": "0x14A870"
        },
        "std::_Tree_val<std::_Tree_simple_types<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x7BE70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot>,void *> > >": {
            "offset": "0x287C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >,void *> > >": {
            "offset": "0xDBFF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x2CF50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo>,void *> > >": {
            "offset": "0x2CDA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,bool> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,bool>,void *> > >": {
            "offset": "0x15FBD0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::debug::ThreadActivityAnalyzer::ThreadKey const ,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<base::debug::ThreadActivityAnalyzer::ThreadKey const ,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> > >,void *> > >": {
            "offset": "0x28720"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::debug::ThreadActivityAnalyzer::ThreadKey const ,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::sequence_manager::TimeDomain * const,base::TimeTicks> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<base::sequence_manager::TimeDomain * const,base::TimeTicks>,void *> > >": {
            "offset": "0x91280"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::sequence_manager::TimeDomain * const,base::TimeTicks> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > >,void *> > >": {
            "offset": "0xE6BC0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>,void *> > >": {
            "offset": "0x72880"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::trace_event::MemoryAllocatorDumpGuid const ,base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver>,void *> > >": {
            "offset": "0x1620D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<enum mojo::core::Dispatcher::Type const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<enum mojo::core::Dispatcher::Type const ,int>,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<enum mojo::core::Dispatcher::Type const ,int> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,int *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,int *>,void *> > >": {
            "offset": "0x91280"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,int *> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,int>,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,int> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,void *> > >": {
            "offset": "0x1A0710"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x2CF50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >,void *> > >": {
            "offset": "0xB52D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> >,void *> > >": {
            "offset": "0x229550"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState>,void *> > >": {
            "offset": "0x91280"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> >,void *> > >": {
            "offset": "0x239E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> >,void *> > >": {
            "offset": "0x226440"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> > > >::_Extract": {
            "offset": "0x1B0870"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection>,void *> > >": {
            "offset": "0x1D7D70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > >,void *> > >": {
            "offset": "0x1D7DF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::Feature const *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::Feature const *>,void *> > >": {
            "offset": "0x2CE00"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::Feature const *> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry>,void *> > >": {
            "offset": "0x3BAE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *> > >": {
            "offset": "0x2CE00"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *>,void *> > >": {
            "offset": "0x2CE00"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> >,void *> > >": {
            "offset": "0x200800"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> >,void *> > >": {
            "offset": "0x200800"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::GenericPendingReceiver)> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> >,void *> > >": {
            "offset": "0x19CAA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> > >": {
            "offset": "0x28650"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue>,void *> > >": {
            "offset": "0x28650"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *>,void *> > >": {
            "offset": "0x2CE00"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName>,void *> > >": {
            "offset": "0x1D7E90"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef>,void *> > >": {
            "offset": "0x1D7F50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >": {
            "offset": "0x2CE00"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x7BDF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x848F0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >": {
            "offset": "0x1FBB0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >": {
            "offset": "0x1FBB0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > >,void *> > >": {
            "offset": "0x14ED10"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x7BDF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >": {
            "offset": "0x2CEC0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,void *> > >": {
            "offset": "0x2CEC0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,void *> > >": {
            "offset": "0x84850"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,base::HistogramSnapshotManager::SampleInfo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,base::HistogramSnapshotManager::SampleInfo>,void *> > >": {
            "offset": "0x91280"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,base::HistogramSnapshotManager::SampleInfo> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> >,void *> > >": {
            "offset": "0x239E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> > >,void *> > >": {
            "offset": "0x91B40"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > >,void *> > >": {
            "offset": "0x20E5D0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > >,void *> > >": {
            "offset": "0xD5CA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> >,void *> > >": {
            "offset": "0x2186F0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >,void *> > >": {
            "offset": "0x1A93A0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > > >::_Extract": {
            "offset": "0x1B0870"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> >,void *> > >": {
            "offset": "0x218770"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,void *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,void *>,void *> > >": {
            "offset": "0x91280"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,void *> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,void *> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,void *> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,void *> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<void * const,base::SharedMemoryTracker::UsageInfo>,void *> > >": {
            "offset": "0x72880"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>,void *> > >": {
            "offset": "0x91280"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > >,void *> > >": {
            "offset": "0xD5CA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > > >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > > >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > > >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > > >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned __int64> >::_Erase_tree<std::allocator<std::_Tree_node<unsigned __int64,void *> > >": {
            "offset": "0x2E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned __int64> >::_Extract": {
            "offset": "0xC7C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned __int64> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned __int64> >::_Lrotate": {
            "offset": "0xD0B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned __int64> >::_Rrotate": {
            "offset": "0xD110"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned int> >::_Erase_tree<std::allocator<std::_Tree_node<unsigned int,void *> > >": {
            "offset": "0x2E90"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned int> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned long> >::_Erase_tree<std::allocator<std::_Tree_node<unsigned long,void *> > >": {
            "offset": "0x2E90"
        },
        "std::_Tree_val<std::_Tree_simple_types<unsigned long> >::_Insert_node": {
            "offset": "0xCE50"
        },
        "std::_Uninitialized_backout_al<base::StackAllocator<base::RepeatingCallback<void __cdecl(void)>,1> >::~_Uninitialized_backout_al<base::StackAllocator<base::RepeatingCallback<void __cdecl(void)>,1> >": {
            "offset": "0x2297D0"
        },
        "std::_Uninitialized_backout_al<base::StackAllocator<mojo::core::RequestContext::WatchNotifyFinalizer,8> >::~_Uninitialized_backout_al<base::StackAllocator<mojo::core::RequestContext::WatchNotifyFinalizer,8> >": {
            "offset": "0x1F35B0"
        },
        "std::_Uninitialized_backout_al<base::StackAllocator<mojo::core::ports::PortRef,4> >::~_Uninitialized_backout_al<base::StackAllocator<mojo::core::ports::PortRef,4> >": {
            "offset": "0x1D9110"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::DeferredSequencedTaskRunner::DeferredTask> >::~_Uninitialized_backout_al<std::allocator<base::DeferredSequencedTaskRunner::DeferredTask> >": {
            "offset": "0x3A5B0"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::OneShotEvent::TaskInfo> >::~_Uninitialized_backout_al<std::allocator<base::OneShotEvent::TaskInfo> >": {
            "offset": "0xA5960"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::SamplingHeapProfiler::Sample> >::~_Uninitialized_backout_al<std::allocator<base::SamplingHeapProfiler::Sample> >": {
            "offset": "0xC0B40"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::ScopedDeferTaskPosting::DeferredTask> >::~_Uninitialized_backout_al<std::allocator<base::ScopedDeferTaskPosting::DeferredTask> >": {
            "offset": "0xE06F0"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::WeakPtr<base::StatisticsRecorder::HistogramProvider> > >::~_Uninitialized_backout_al<std::allocator<base::WeakPtr<base::StatisticsRecorder::HistogramProvider> > >": {
            "offset": "0x9F980"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::debug::GlobalActivityTracker::ModuleInfo> >::~_Uninitialized_backout_al<std::allocator<base::debug::GlobalActivityTracker::ModuleInfo> >": {
            "offset": "0x292C0"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::sequence_manager::Task> >::~_Uninitialized_backout_al<std::allocator<base::sequence_manager::Task> >": {
            "offset": "0xF3260"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask> >::~_Uninitialized_backout_al<std::allocator<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask> >": {
            "offset": "0xE7B50"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::trace_event::TraceConfig::EventFilterConfig> >::~_Uninitialized_backout_al<std::allocator<base::trace_event::TraceConfig::EventFilterConfig> >": {
            "offset": "0x3920"
        },
        "std::_Uninitialized_backout_al<std::allocator<base::win::ScopedVariant> >::~_Uninitialized_backout_al<std::allocator<base::win::ScopedVariant> >": {
            "offset": "0x183FB0"
        },
        "std::_Uninitialized_backout_al<std::allocator<mojo::Message> >::~_Uninitialized_backout_al<std::allocator<mojo::Message> >": {
            "offset": "0x1AA1E0"
        },
        "std::_Uninitialized_backout_al<std::allocator<mojo::PlatformHandle> >::~_Uninitialized_backout_al<std::allocator<mojo::PlatformHandle> >": {
            "offset": "0x1BFAE0"
        },
        "std::_Uninitialized_backout_al<std::allocator<mojo::ScopedInterfaceEndpointHandle> >::~_Uninitialized_backout_al<std::allocator<mojo::ScopedInterfaceEndpointHandle> >": {
            "offset": "0x212FC0"
        },
        "std::_Uninitialized_backout_al<std::allocator<mojo::core::Dispatcher::DispatcherInTransit> >::~_Uninitialized_backout_al<std::allocator<mojo::core::Dispatcher::DispatcherInTransit> >": {
            "offset": "0x1CFE40"
        },
        "std::_Uninitialized_backout_al<std::allocator<mojo::core::PlatformHandleInTransit> >::~_Uninitialized_backout_al<std::allocator<mojo::core::PlatformHandleInTransit> >": {
            "offset": "0x1BA650"
        },
        "std::_Uninitialized_backout_al<std::allocator<mojo::core::ports::PortRef> >::~_Uninitialized_backout_al<std::allocator<mojo::core::ports::PortRef> >": {
            "offset": "0x1D9110"
        },
        "std::_Uninitialized_backout_al<std::allocator<scoped_refptr<base::internal::WorkerThread> > >::~_Uninitialized_backout_al<std::allocator<scoped_refptr<base::internal::WorkerThread> > >": {
            "offset": "0x10E640"
        },
        "std::_Uninitialized_backout_al<std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >::~_Uninitialized_backout_al<std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >": {
            "offset": "0x14ACA0"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x15DDB0"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0x20F90"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > > >::~_Uninitialized_backout_al<std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > > >": {
            "offset": "0x29300"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> > >::~_Uninitialized_backout_al<std::allocator<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> > >": {
            "offset": "0x1FAF00"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> > >::~_Uninitialized_backout_al<std::allocator<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> > >": {
            "offset": "0x1E91D0"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> > >::~_Uninitialized_backout_al<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> > >": {
            "offset": "0x1C2960"
        },
        "std::_Uninitialized_copy<base::SamplingHeapProfiler::Sample *,base::SamplingHeapProfiler::Sample *,std::allocator<base::SamplingHeapProfiler::Sample> >": {
            "offset": "0xC0140"
        },
        "std::_Uninitialized_copy<base::trace_event::TraceConfig::EventFilterConfig *,base::trace_event::TraceConfig::EventFilterConfig *,std::allocator<base::trace_event::TraceConfig::EventFilterConfig> >": {
            "offset": "0x156B70"
        },
        "std::_Uninitialized_copy<mojo::core::Dispatcher::DispatcherInTransit *,mojo::core::Dispatcher::DispatcherInTransit *,std::allocator<mojo::core::Dispatcher::DispatcherInTransit> >": {
            "offset": "0x1CF870"
        },
        "std::_Uninitialized_copy<mojo::core::RequestContext::WatchNotifyFinalizer *,mojo::core::RequestContext::WatchNotifyFinalizer *,base::StackAllocator<mojo::core::RequestContext::WatchNotifyFinalizer,8> >": {
            "offset": "0x1F3400"
        },
        "std::_Uninitialized_copy<mojo::core::ports::PortRef *,mojo::core::ports::PortRef *,base::StackAllocator<mojo::core::ports::PortRef,4> >": {
            "offset": "0x1D8390"
        },
        "std::_Uninitialized_copy<mojo::core::ports::PortRef *,mojo::core::ports::PortRef *,std::allocator<mojo::core::ports::PortRef> >": {
            "offset": "0x1D8390"
        },
        "std::_Uninitialized_copy<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > *,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > *,std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > > >": {
            "offset": "0x28860"
        },
        "std::_Uninitialized_copy_n<base::trace_event::TraceConfig::EventFilterConfig const *,std::allocator<base::trace_event::TraceConfig::EventFilterConfig> >": {
            "offset": "0x156C20"
        },
        "std::_Uninitialized_copy_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x15DB00"
        },
        "std::_Uninitialized_copy_n<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > *,std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > > >": {
            "offset": "0x28910"
        },
        "std::_Uninitialized_copy_n<std::reverse_iterator<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >,std::_Iterator_base0> >,std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >": {
            "offset": "0x14A920"
        },
        "std::_Uninitialized_merge_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::value_compare>": {
            "offset": "0x5D3E0"
        },
        "std::_Uninitialized_move<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage *,std::allocator<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage> >": {
            "offset": "0x1B20B0"
        },
        "std::_Uninitialized_move<base::DeferredSequencedTaskRunner::DeferredTask *,std::allocator<base::DeferredSequencedTaskRunner::DeferredTask> >": {
            "offset": "0x3A380"
        },
        "std::_Uninitialized_move<base::FieldTrial::ActiveGroup *,std::allocator<base::FieldTrial::ActiveGroup> >": {
            "offset": "0x7C170"
        },
        "std::_Uninitialized_move<base::OffsetAdjuster::Adjustment *,std::allocator<base::OffsetAdjuster::Adjustment> >": {
            "offset": "0xD3500"
        },
        "std::_Uninitialized_move<base::OneShotEvent::TaskInfo *,std::allocator<base::OneShotEvent::TaskInfo> >": {
            "offset": "0xA5730"
        },
        "std::_Uninitialized_move<base::SamplingHeapProfiler::Sample *,std::allocator<base::SamplingHeapProfiler::Sample> >": {
            "offset": "0xC0140"
        },
        "std::_Uninitialized_move<base::ScopedDeferTaskPosting::DeferredTask *,std::allocator<base::ScopedDeferTaskPosting::DeferredTask> >": {
            "offset": "0xE05F0"
        },
        "std::_Uninitialized_move<base::Value *,std::allocator<base::Value> >": {
            "offset": "0x172A50"
        },
        "std::_Uninitialized_move<base::WeakPtr<base::StatisticsRecorder::HistogramProvider> *,std::allocator<base::WeakPtr<base::StatisticsRecorder::HistogramProvider> > >": {
            "offset": "0x9EF50"
        },
        "std::_Uninitialized_move<base::debug::GlobalActivityTracker::ModuleInfo *,std::allocator<base::debug::GlobalActivityTracker::ModuleInfo> >": {
            "offset": "0x289C0"
        },
        "std::_Uninitialized_move<base::internal::DelayedTaskManager::DelayedTask *,std::allocator<base::internal::DelayedTaskManager::DelayedTask> >": {
            "offset": "0x109E00"
        },
        "std::_Uninitialized_move<base::internal::PriorityQueue::TaskSourceAndSortKey *,std::allocator<base::internal::PriorityQueue::TaskSourceAndSortKey> >": {
            "offset": "0x111490"
        },
        "std::_Uninitialized_move<base::sequence_manager::Task *,std::allocator<base::sequence_manager::Task> >": {
            "offset": "0xF2910"
        },
        "std::_Uninitialized_move<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask *,std::allocator<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask> >": {
            "offset": "0xE6EE0"
        },
        "std::_Uninitialized_move<base::trace_event::MemoryAllocatorDump::Entry *,std::allocator<base::trace_event::MemoryAllocatorDump::Entry> >": {
            "offset": "0x149100"
        },
        "std::_Uninitialized_move<base::trace_event::TraceConfig::EventFilterConfig *,std::allocator<base::trace_event::TraceConfig::EventFilterConfig> >": {
            "offset": "0x156B70"
        },
        "std::_Uninitialized_move<base::trace_event::TraceConfig::MemoryDumpConfig::Trigger *,std::allocator<base::trace_event::TraceConfig::MemoryDumpConfig::Trigger> >": {
            "offset": "0x156CD0"
        },
        "std::_Uninitialized_move<base::win::ScopedVariant *,std::allocator<base::win::ScopedVariant> >": {
            "offset": "0x183DB0"
        },
        "std::_Uninitialized_move<logging::VlogInfo::VmodulePattern *,std::allocator<logging::VlogInfo::VmodulePattern> >": {
            "offset": "0x17FA20"
        },
        "std::_Uninitialized_move<mojo::Message *,std::allocator<mojo::Message> >": {
            "offset": "0x1A9450"
        },
        "std::_Uninitialized_move<mojo::PlatformHandle *,std::allocator<mojo::PlatformHandle> >": {
            "offset": "0x1BF500"
        },
        "std::_Uninitialized_move<mojo::ScopedInterfaceEndpointHandle *,std::allocator<mojo::ScopedInterfaceEndpointHandle> >": {
            "offset": "0x212430"
        },
        "std::_Uninitialized_move<mojo::core::Dispatcher::DispatcherInTransit *,std::allocator<mojo::core::Dispatcher::DispatcherInTransit> >": {
            "offset": "0x1CF870"
        },
        "std::_Uninitialized_move<mojo::core::PlatformHandleInTransit *,std::allocator<mojo::core::PlatformHandleInTransit> >": {
            "offset": "0x1BA3D0"
        },
        "std::_Uninitialized_move<mojo::core::RequestContext::WatchNotifyFinalizer *,base::StackAllocator<mojo::core::RequestContext::WatchNotifyFinalizer,8> >": {
            "offset": "0x1F3400"
        },
        "std::_Uninitialized_move<mojo::core::ports::PortRef *,std::allocator<mojo::core::ports::PortRef> >": {
            "offset": "0x1D8400"
        },
        "std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x28A30"
        },
        "std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >": {
            "offset": "0x20490"
        },
        "std::_Uninitialized_move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > *,std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > > >": {
            "offset": "0x28AB0"
        },
        "std::_Uninitialized_move<std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> > *,std::allocator<std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> > > >": {
            "offset": "0x1F8B00"
        },
        "std::_Uninitialized_move<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> *,std::allocator<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> > >": {
            "offset": "0x1FAC10"
        },
        "std::_Uninitialized_move<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> *,std::allocator<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> > >": {
            "offset": "0x1E86D0"
        },
        "std::_Uninitialized_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > > >": {
            "offset": "0x1A07C0"
        },
        "std::_Uninitialized_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> > >": {
            "offset": "0x1C2390"
        },
        "std::_Uninitialized_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0xCA2C0"
        },
        "std::_Uninitialized_move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > > >": {
            "offset": "0x5D5C0"
        },
        "std::_Uninitialized_move<std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> > *,std::allocator<std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> > > >": {
            "offset": "0x1F8B00"
        },
        "std::_Uninitialized_move<unsigned int *,std::allocator<unsigned int> >": {
            "offset": "0x91E40"
        },
        "std::_Uninitialized_move_unchecked<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > *>": {
            "offset": "0x5D630"
        },
        "std::_Uninitialized_value_construct_n<base::StackAllocator<MojoTrapEvent,4> >": {
            "offset": "0x23A0A0"
        },
        "std::_Uninitialized_value_construct_n<base::StackAllocator<base::WaitableEvent *,4> >": {
            "offset": "0x1E8750"
        },
        "std::_Uninitialized_value_construct_n<base::StackAllocator<mojo::core::ports::PortRef const *,5> >": {
            "offset": "0x1E8750"
        },
        "std::_Uninitialized_value_construct_n<base::StackAllocator<mojo::core::ports::PortRef,4> >": {
            "offset": "0x1E87A0"
        },
        "std::_Uninitialized_value_construct_n<std::allocator<base::debug::Activity> >": {
            "offset": "0x2D540"
        },
        "std::_Uninitialized_value_construct_n<std::allocator<mojo::PlatformHandle> >": {
            "offset": "0x1F5E30"
        },
        "std::_Uninitialized_value_construct_n<std::allocator<mojo::ScopedHandleBase<mojo::Handle> > >": {
            "offset": "0x235850"
        },
        "std::_Uninitialized_value_construct_n<std::allocator<mojo::core::ports::Event::PortDescriptor> >": {
            "offset": "0x1E5910"
        },
        "std::_Uninitialized_value_construct_n<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0xCA380"
        },
        "std::_Xlen_string": {
            "offset": "0x12F0"
        },
        "std::all_of<base::CheckedContiguousIterator<std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const >,<lambda_10240c5e1b52b6e37fd6e75399124637> >": {
            "offset": "0x1812B0"
        },
        "std::allocator<HINSTANCE__ *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<HINSTANCE__ *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<IPC::MessageFilter *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage>::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<__int64>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<`anonymous namespace'::GdiTableEntry<unsigned __int64> >::deallocate": {
            "offset": "0x38600"
        },
        "std::allocator<`anonymous namespace'::GdiTableEntry<void *> >::deallocate": {
            "offset": "0x38600"
        },
        "std::allocator<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<base::BucketRanges const *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<base::BucketRanges const *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::DeferredSequencedTaskRunner::DeferredTask>::deallocate": {
            "offset": "0x3B0B0"
        },
        "std::allocator<base::DelegateSimpleThread *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::FieldTrial::ActiveGroup>::deallocate": {
            "offset": "0x84270"
        },
        "std::allocator<base::FieldTrial::FieldTrialEntry const *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::FieldTrialList::Observer *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<base::FieldTrialList::Observer *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::FilePath>::deallocate": {
            "offset": "0x263E0"
        },
        "std::allocator<base::Frame>::allocate": {
            "offset": "0x2BE70"
        },
        "std::allocator<base::Frame>::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<base::HistogramBase *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<base::HistogramBase *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::ModuleCache::Module const *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<base::ModuleCache::Module const *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::OffsetAdjuster::Adjustment>::allocate": {
            "offset": "0xD46A0"
        },
        "std::allocator<base::OffsetAdjuster::Adjustment>::deallocate": {
            "offset": "0xD4720"
        },
        "std::allocator<base::OnceCallback<void __cdecl(void)> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::OneShotEvent::TaskInfo>::deallocate": {
            "offset": "0x3B0B0"
        },
        "std::allocator<base::PoissonAllocationSampler::SamplesObserver *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<base::PoissonAllocationSampler::SamplesObserver *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::RunLoop *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::SamplingHeapProfiler::Sample>::allocate": {
            "offset": "0xC2050"
        },
        "std::allocator<base::SamplingHeapProfiler::Sample>::deallocate": {
            "offset": "0xC20D0"
        },
        "std::allocator<base::ScopedDeferTaskPosting::DeferredTask>::deallocate": {
            "offset": "0xE0D10"
        },
        "std::allocator<base::ThreadIdNameManager::Observer *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::TimeTicks>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::Value *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::Value>::allocate": {
            "offset": "0x2BDF0"
        },
        "std::allocator<base::Value>::deallocate": {
            "offset": "0x614C0"
        },
        "std::allocator<base::WeakPtr<base::StatisticsRecorder::HistogramProvider> >::allocate": {
            "offset": "0x2BE70"
        },
        "std::allocator<base::WeakPtr<base::StatisticsRecorder::HistogramProvider> >::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<base::`anonymous namespace'::FieldTrialStringEntry>::deallocate": {
            "offset": "0x842C0"
        },
        "std::allocator<base::`anonymous namespace'::ReplacementOffset>::deallocate": {
            "offset": "0xD1DE0"
        },
        "std::allocator<base::debug::Activity>::allocate": {
            "offset": "0x36100"
        },
        "std::allocator<base::debug::Activity>::deallocate": {
            "offset": "0x36200"
        },
        "std::allocator<base::debug::GlobalActivityTracker::ModuleInfo>::deallocate": {
            "offset": "0x2BEE0"
        },
        "std::allocator<base::internal::CheckedLockImpl const *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::internal::DelayedTaskManager::DelayedTask>::allocate": {
            "offset": "0x36100"
        },
        "std::allocator<base::internal::DelayedTaskManager::DelayedTask>::deallocate": {
            "offset": "0x36200"
        },
        "std::allocator<base::internal::PriorityQueue::TaskSourceAndSortKey>::allocate": {
            "offset": "0x2BDF0"
        },
        "std::allocator<base::internal::PriorityQueue::TaskSourceAndSortKey>::deallocate": {
            "offset": "0x614C0"
        },
        "std::allocator<base::internal::RegisteredTaskSource>::deallocate": {
            "offset": "0xD4720"
        },
        "std::allocator<base::internal::Sequence *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::internal::UncheckedObserverAdapter>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::internal::WorkerThread *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::sequence_manager::Task const *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::sequence_manager::Task>::deallocate": {
            "offset": "0xFA230"
        },
        "std::allocator<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::allocate": {
            "offset": "0x25EB0"
        },
        "std::allocator<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::deallocate": {
            "offset": "0x263E0"
        },
        "std::allocator<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask>::allocate": {
            "offset": "0xF0080"
        },
        "std::allocator<base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask>::deallocate": {
            "offset": "0xF0290"
        },
        "std::allocator<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::allocate": {
            "offset": "0x2BE70"
        },
        "std::allocator<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<base::trace_event::MemoryAllocatorDump::Entry>::allocate": {
            "offset": "0x14A3A0"
        },
        "std::allocator<base::trace_event::MemoryAllocatorDump::Entry>::deallocate": {
            "offset": "0x14A410"
        },
        "std::allocator<base::trace_event::MemoryDumpScheduler::Config::Trigger>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<base::trace_event::MemoryDumpScheduler::Config::Trigger>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>::allocate": {
            "offset": "0xD46A0"
        },
        "std::allocator<base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>::deallocate": {
            "offset": "0xD4720"
        },
        "std::allocator<base::trace_event::StackFrame>::allocate": {
            "offset": "0x2BE70"
        },
        "std::allocator<base::trace_event::StackFrame>::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<base::trace_event::TraceConfig::EventFilterConfig>::allocate": {
            "offset": "0x15CF90"
        },
        "std::allocator<base::trace_event::TraceConfig::EventFilterConfig>::deallocate": {
            "offset": "0x15D210"
        },
        "std::allocator<base::trace_event::TraceConfig::MemoryDumpConfig::Trigger>::allocate": {
            "offset": "0x15CF10"
        },
        "std::allocator<base::trace_event::TraceConfig::MemoryDumpConfig::Trigger>::deallocate": {
            "offset": "0x15D1C0"
        },
        "std::allocator<base::trace_event::TraceLog::EnabledStateObserver *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<base::trace_event::TraceLog::EnabledStateObserver *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<base::win::ScopedVariant>::deallocate": {
            "offset": "0xD4720"
        },
        "std::allocator<char const *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<char const *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<char16_t>::allocate": {
            "offset": "0x25F20"
        },
        "std::allocator<char>::allocate": {
            "offset": "0x1F40"
        },
        "std::allocator<char>::deallocate": {
            "offset": "0x1FA0"
        },
        "std::allocator<int>::allocate": {
            "offset": "0x8E200"
        },
        "std::allocator<int>::deallocate": {
            "offset": "0x84220"
        },
        "std::allocator<logging::VlogInfo::VmodulePattern>::deallocate": {
            "offset": "0x614C0"
        },
        "std::allocator<mojo::Message>::deallocate": {
            "offset": "0x2BEE0"
        },
        "std::allocator<mojo::PlatformHandle>::allocate": {
            "offset": "0x2BE70"
        },
        "std::allocator<mojo::PlatformHandle>::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<mojo::ScopedHandleBase<mojo::Handle> >::allocate": {
            "offset": "0x8E200"
        },
        "std::allocator<mojo::ScopedHandleBase<mojo::Handle> >::deallocate": {
            "offset": "0x84220"
        },
        "std::allocator<mojo::ScopedInterfaceEndpointHandle>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<mojo::ScopedInterfaceEndpointHandle>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<mojo::SequenceLocalSyncEventWatcher const *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<mojo::StructPtr<mojo::native::SerializedHandle> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<mojo::ThreadSafeForwarderBase::SyncResponseInfo *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<mojo::core::Dispatcher::DispatcherInTransit>::allocate": {
            "offset": "0x2BE70"
        },
        "std::allocator<mojo::core::Dispatcher::DispatcherInTransit>::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<mojo::core::PlatformHandleInTransit>::allocate": {
            "offset": "0x25EB0"
        },
        "std::allocator<mojo::core::PlatformHandleInTransit>::deallocate": {
            "offset": "0x263E0"
        },
        "std::allocator<mojo::core::ports::Event::PortDescriptor>::deallocate": {
            "offset": "0x1E6F60"
        },
        "std::allocator<mojo::core::ports::PortName>::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<mojo::core::ports::PortRef>::allocate": {
            "offset": "0xD46A0"
        },
        "std::allocator<mojo::core::ports::PortRef>::deallocate": {
            "offset": "0xD4720"
        },
        "std::allocator<scoped_refptr<IPC::MessageAttachment> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<IPC::MessageFilter> >::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<scoped_refptr<IPC::MessageFilter> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<IPC::SyncMessageFilter> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >::deallocate": {
            "offset": "0x1B0E70"
        },
        "std::allocator<scoped_refptr<base::SingleThreadTaskRunner> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<base::internal::WorkerThread> >::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<scoped_refptr<base::internal::WorkerThread> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> >::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<mojo::WaitSet::State::Context> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<mojo::core::NodeChannel> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> >::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<scoped_refptr<mojo::internal::MultiplexRouter::InterfaceEndpoint> >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<std::_Tree_node<__int64,void *> >::allocate": {
            "offset": "0x2BDF0"
        },
        "std::allocator<std::_Tree_node<std::pair<enum mojo::core::Dispatcher::Type const ,int>,void *> >::allocate": {
            "offset": "0x2BDF0"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate": {
            "offset": "0x25EB0"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate": {
            "offset": "0x263E0"
        },
        "std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate": {
            "offset": "0x25EB0"
        },
        "std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate": {
            "offset": "0x263E0"
        },
        "std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > >::allocate": {
            "offset": "0x2BE70"
        },
        "std::allocator<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > > >::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> > >::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry> >::deallocate": {
            "offset": "0x263E0"
        },
        "std::allocator<std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef> >::deallocate": {
            "offset": "0x614C0"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > >::deallocate": {
            "offset": "0x614C0"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef> >::deallocate": {
            "offset": "0x3B0B0"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate": {
            "offset": "0xCB700"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate": {
            "offset": "0x84270"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > >::allocate": {
            "offset": "0x2BDF0"
        },
        "std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > > >::deallocate": {
            "offset": "0x614C0"
        },
        "std::allocator<std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> > >::deallocate": {
            "offset": "0x2BF20"
        },
        "std::allocator<std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<std::unique_ptr<base::ModuleCache::Module,std::default_delete<base::ModuleCache::Module> > >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<std::unique_ptr<base::trace_event::TraceBufferChunk,std::default_delete<base::trace_event::TraceBufferChunk> > >::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<std::unique_ptr<base::trace_event::TraceBufferChunk,std::default_delete<base::trace_event::TraceBufferChunk> > >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<std::unique_ptr<base::trace_event::TraceEvent,std::default_delete<base::trace_event::TraceEvent> > >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<std::unique_ptr<base::trace_event::TraceEventFilter,std::default_delete<base::trace_event::TraceEventFilter> > >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<std::unique_ptr<base::trace_event::TraceLog::EnabledStateObserver,std::default_delete<base::trace_event::TraceLog::EnabledStateObserver> > >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> > >::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> > >::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<unsigned __int64>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<unsigned char>::deallocate": {
            "offset": "0x1FA0"
        },
        "std::allocator<unsigned int>::allocate": {
            "offset": "0x8E200"
        },
        "std::allocator<unsigned int>::deallocate": {
            "offset": "0x84220"
        },
        "std::allocator<void *>::allocate": {
            "offset": "0x841B0"
        },
        "std::allocator<void *>::deallocate": {
            "offset": "0x2BF70"
        },
        "std::allocator<wchar_t>::allocate": {
            "offset": "0x25F20"
        },
        "std::allocator<wchar_t>::deallocate": {
            "offset": "0x18C450"
        },
        "std::array<base::MetadataRecorder::ItemInternal,50>::~array<base::MetadataRecorder::ItemInternal,50>": {
            "offset": "0xB2DB0"
        },
        "std::bad_alloc::bad_alloc": {
            "offset": "0x246820"
        },
        "std::bad_alloc::~bad_alloc": {
            "offset": "0x11F0"
        },
        "std::bad_array_new_length::bad_array_new_length": {
            "offset": "0x1100"
        },
        "std::bad_array_new_length::~bad_array_new_length": {
            "offset": "0x11F0"
        },
        "std::bad_cast::bad_cast": {
            "offset": "0x4BCD0"
        },
        "std::bad_cast::~bad_cast": {
            "offset": "0x11F0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Endwrite": {
            "offset": "0x4D620"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Lock": {
            "offset": "0x4D710"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Reset_back": {
            "offset": "0x4D730"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Unlock": {
            "offset": "0x4D790"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::close": {
            "offset": "0x4D7B0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::imbue": {
            "offset": "0x4D860"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::overflow": {
            "offset": "0x4D8B0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::pbackfail": {
            "offset": "0x4DA70"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::seekoff": {
            "offset": "0x4DC30"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::seekpos": {
            "offset": "0x4DD00"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::setbuf": {
            "offset": "0x4DDA0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::sync": {
            "offset": "0x4DE80"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::uflow": {
            "offset": "0x4DED0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::underflow": {
            "offset": "0x4E190"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::xsgetn": {
            "offset": "0x4E210"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::xsputn": {
            "offset": "0x4E350"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >": {
            "offset": "0x4BD00"
        },
        "std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >": {
            "offset": "0x4BA80"
        },
        "std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x19A0"
        },
        "std::basic_istream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x4BDA0"
        },
        "std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x19A0"
        },
        "std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x19E0"
        },
        "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x66580"
        },
        "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str": {
            "offset": "0x2480"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>": {
            "offset": "0x1F0C0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>": {
            "offset": "0x3BBA0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_55b0f89b53a0342680e40398a0d39887>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>": {
            "offset": "0xCEF20"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>": {
            "offset": "0x2D150"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >": {
            "offset": "0x62AB0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_b986da8d428e4af07c64af60eec09b61>,unsigned __int64,unsigned __int64,char>": {
            "offset": "0x62C00"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>": {
            "offset": "0x2D2E0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>": {
            "offset": "0x551C0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append": {
            "offset": "0x36170"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign": {
            "offset": "0x1310"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<wchar_t const *,0>": {
            "offset": "0xD56A0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x20970"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>": {
            "offset": "0xC6030"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><wchar_t const *,0>": {
            "offset": "0xD4D00"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back": {
            "offset": "0x63FB0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace": {
            "offset": "0xD1E30"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve": {
            "offset": "0xD21B0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize": {
            "offset": "0x4DB90"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x1170"
        },
        "std::basic_string<char16_t,std::char_traits<char16_t>,std::allocator<char16_t> >::append": {
            "offset": "0x25F90"
        },
        "std::basic_string<char16_t,std::char_traits<char16_t>,std::allocator<char16_t> >::~basic_string<char16_t,std::char_traits<char16_t>,std::allocator<char16_t> >": {
            "offset": "0x25E20"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>": {
            "offset": "0x1F180"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_51c4cb9729979bd953fe6d1bff5c73b0>,unsigned __int64,unsigned __int64,wchar_t>": {
            "offset": "0x4E5B0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_967c2ed818824c5314a20ec3af46b793>,unsigned __int64,wchar_t const *,unsigned __int64>": {
            "offset": "0x20310"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_a3050a43f3157934f354774ab3dd2e02>,unsigned __int64,wchar_t>": {
            "offset": "0x41B70"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_cc38baf86caa2c9da7d2f2d7bbabc1b7>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>": {
            "offset": "0xCF0F0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate": {
            "offset": "0x25E20"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append": {
            "offset": "0x25F90"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign": {
            "offset": "0x46A80"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<char const *,0>": {
            "offset": "0xD54F0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x20A40"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><char const *,0>": {
            "offset": "0xD4C00"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><wchar_t *,0>": {
            "offset": "0xC6120"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase": {
            "offset": "0x46BB0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_of": {
            "offset": "0x46C20"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::push_back": {
            "offset": "0x26430"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace": {
            "offset": "0xD1FD0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve": {
            "offset": "0x46D90"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize": {
            "offset": "0x46F20"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x20FD0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow": {
            "offset": "0x1FF0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail": {
            "offset": "0x2160"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff": {
            "offset": "0x21F0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos": {
            "offset": "0x2370"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str": {
            "offset": "0x38CB0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow": {
            "offset": "0x2590"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x1BE0"
        },
        "std::copy<base::CheckedContiguousIterator<unsigned char const >,unsigned char *>": {
            "offset": "0x1FCA80"
        },
        "std::endl<char,std::char_traits<char> >": {
            "offset": "0x39C70"
        },
        "std::equal<char const *,char const *,base::CaseInsensitiveCompareASCII<char> >": {
            "offset": "0xCF280"
        },
        "std::exception::exception": {
            "offset": "0x1130"
        },
        "std::exception::what": {
            "offset": "0x15C0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<base::BucketRanges const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<base::BucketRanges const *> >,std::_Iterator_base0> >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<char const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<char const *> >,std::_Iterator_base0> >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned long> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<unsigned long> >,std::_Iterator_base0> >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > > > >": {
            "offset": "0x1A99D0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,IPC::Listener *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,IPC::Listener *> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,base::FilePath> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,base::FilePath> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,int> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::SamplingHeapProfiler::Sample> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::SamplingHeapProfiler::Sample> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> > > > >": {
            "offset": "0x2EF0"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > > > >": {
            "offset": "0x2EF0"
        },
        "std::generate_canonical<double,53,std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005> >": {
            "offset": "0xE7070"
        },
        "std::getline<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x4B7B0"
        },
        "std::hex": {
            "offset": "0x38650"
        },
        "std::is_sorted_until<base::CheckedContiguousIterator<std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const >,std::less<void> >": {
            "offset": "0x181520"
        },
        "std::list<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage,std::allocator<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage> >::~list<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage,std::allocator<IPC::SyncChannel::ReceivedSyncMsgQueue::QueuedMessage> >": {
            "offset": "0x1B26F0"
        },
        "std::list<base::BucketRanges const *,std::allocator<base::BucketRanges const *> >::~list<base::BucketRanges const *,std::allocator<base::BucketRanges const *> >": {
            "offset": "0x9F9C0"
        },
        "std::list<base::MessagePumpForIO::IOItem,std::allocator<base::MessagePumpForIO::IOItem> >::~list<base::MessagePumpForIO::IOItem,std::allocator<base::MessagePumpForIO::IOItem> >": {
            "offset": "0x778E0"
        },
        "std::list<base::ProcessEntry,std::allocator<base::ProcessEntry> >::~list<base::ProcessEntry,std::allocator<base::ProcessEntry> >": {
            "offset": "0xAEBC0"
        },
        "std::list<char const *,std::allocator<char const *> >::~list<char const *,std::allocator<char const *> >": {
            "offset": "0x9F9C0"
        },
        "std::list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Assign_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> >": {
            "offset": "0x154FF0"
        },
        "std::list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x157F90"
        },
        "std::list<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64>,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > >::~list<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64>,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > >": {
            "offset": "0x1AA2D0"
        },
        "std::list<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *>,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > >::~list<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *>,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > >": {
            "offset": "0x778E0"
        },
        "std::list<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > > >::~list<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::FieldTrialList::Observer * const,scoped_refptr<base::SequencedTaskRunner> > > >": {
            "offset": "0x6D1D0"
        },
        "std::list<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > > >::~list<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::MemoryPressureListener * const,scoped_refptr<base::SequencedTaskRunner> > > >": {
            "offset": "0x6D1D0"
        },
        "std::list<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > > >::~list<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::PowerObserver * const,scoped_refptr<base::SequencedTaskRunner> > > >": {
            "offset": "0x6D1D0"
        },
        "std::list<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > > >::~list<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> >,std::allocator<std::pair<base::SystemMonitor::DevicesChangedObserver * const,scoped_refptr<base::SequencedTaskRunner> > > >": {
            "offset": "0x6D1D0"
        },
        "std::list<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *>,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > >::~list<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *>,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > >": {
            "offset": "0xDEE50"
        },
        "std::list<std::pair<int const ,IPC::Listener *>,std::allocator<std::pair<int const ,IPC::Listener *> > >::~list<std::pair<int const ,IPC::Listener *>,std::allocator<std::pair<int const ,IPC::Listener *> > >": {
            "offset": "0xDEE50"
        },
        "std::list<std::pair<int const ,base::FilePath>,std::allocator<std::pair<int const ,base::FilePath> > >::~list<std::pair<int const ,base::FilePath>,std::allocator<std::pair<int const ,base::FilePath> > >": {
            "offset": "0xA6490"
        },
        "std::list<std::pair<int const ,int>,std::allocator<std::pair<int const ,int> > >::~list<std::pair<int const ,int>,std::allocator<std::pair<int const ,int> > >": {
            "offset": "0x9F9C0"
        },
        "std::list<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::~list<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >": {
            "offset": "0x6D1D0"
        },
        "std::list<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~list<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x163CD0"
        },
        "std::list<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > >,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > >::~list<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > >,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > >": {
            "offset": "0x163D40"
        },
        "std::list<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > >::_Unchecked_erase": {
            "offset": "0x1E3D70"
        },
        "std::list<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > >::~list<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> >,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > >": {
            "offset": "0x1D9240"
        },
        "std::list<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > >::_Unchecked_erase": {
            "offset": "0x1E3D20"
        },
        "std::list<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > >::~list<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > >": {
            "offset": "0x1D91D0"
        },
        "std::list<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > >::~list<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > >,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::unordered_map<mojo::core::ports::PortName,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> >,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > > > > >": {
            "offset": "0x1E9210"
        },
        "std::list<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > >,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > >::~list<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > >,std::allocator<std::pair<mojo::core::ports::PortName const ,base::flat_map<mojo::core::ports::PortName,mojo::core::ports::PortRef,std::less<void> > > > >": {
            "offset": "0x1E9280"
        },
        "std::list<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > >::~list<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> >,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > >": {
            "offset": "0x1E92F0"
        },
        "std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > >": {
            "offset": "0x9FA20"
        },
        "std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >": {
            "offset": "0x163DB0"
        },
        "std::list<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > >::~list<std::pair<unsigned int const ,mojo::core::HandleTable::Entry>,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > >": {
            "offset": "0x1CFE80"
        },
        "std::list<std::pair<void * const,base::SamplingHeapProfiler::Sample>,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> > >::~list<std::pair<void * const,base::SamplingHeapProfiler::Sample>,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> > >": {
            "offset": "0xC0B50"
        },
        "std::list<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo>,std::allocator<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> > >::~list<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo>,std::allocator<std::pair<void * const,base::win::internal::ScopedHandleVerifierInfo> > >": {
            "offset": "0x18D160"
        },
        "std::list<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > >::~list<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > >,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > >": {
            "offset": "0x1C2980"
        },
        "std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >": {
            "offset": "0x9F9C0"
        },
        "std::locale::~locale": {
            "offset": "0x4BD70"
        },
        "std::lock_guard<base::subtle::SpinLock>::~lock_guard<base::subtle::SpinLock>": {
            "offset": "0x3960"
        },
        "std::lower_bound<base::CheckedContiguousIterator<std::pair<base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,int> const >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,<lambda_3893dc16bae0f540f77969030de8d112> >": {
            "offset": "0x181880"
        },
        "std::make_unique<base::Value,base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &,0>": {
            "offset": "0x1732E0"
        },
        "std::make_unique<base::Value,base::BasicStringPiece<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > &,0>": {
            "offset": "0x1733C0"
        },
        "std::make_unique<base::Value,base::Value,0>": {
            "offset": "0x1734A0"
        },
        "std::make_unique<base::debug::ActivityUserData,0>": {
            "offset": "0x2D6B0"
        },
        "std::make_unique<std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0>": {
            "offset": "0x1630F0"
        },
        "std::map<__int64,base::debug::GlobalActivityAnalyzer::UserDataSnapshot,std::less<__int64>,std::allocator<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> > >::~map<__int64,base::debug::GlobalActivityAnalyzer::UserDataSnapshot,std::less<__int64>,std::allocator<std::pair<__int64 const ,base::debug::GlobalActivityAnalyzer::UserDataSnapshot> > >": {
            "offset": "0x293C0"
        },
        "std::map<__int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~map<__int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<__int64>,std::allocator<std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x2F100"
        },
        "std::map<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::debug::ActivityUserData::ValueInfo,std::less<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo> > >::insert<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::debug::ActivityUserData::ValueInfo>,0>": {
            "offset": "0x2D590"
        },
        "std::map<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::debug::ActivityUserData::ValueInfo,std::less<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo> > >::~map<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::debug::ActivityUserData::ValueInfo,std::less<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::debug::ActivityUserData::ValueInfo> > >": {
            "offset": "0x2F0A0"
        },
        "std::map<base::debug::ThreadActivityAnalyzer::ThreadKey,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> >,std::less<base::debug::ThreadActivityAnalyzer::ThreadKey>,std::allocator<std::pair<base::debug::ThreadActivityAnalyzer::ThreadKey const ,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> > > > >::~map<base::debug::ThreadActivityAnalyzer::ThreadKey,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> >,std::less<base::debug::ThreadActivityAnalyzer::ThreadKey>,std::allocator<std::pair<base::debug::ThreadActivityAnalyzer::ThreadKey const ,std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> > > > >": {
            "offset": "0x29390"
        },
        "std::map<base::sequence_manager::TimeDomain *,base::TimeTicks,std::less<base::sequence_manager::TimeDomain *>,std::allocator<std::pair<base::sequence_manager::TimeDomain * const,base::TimeTicks> > >::~map<base::sequence_manager::TimeDomain *,base::TimeTicks,std::less<base::sequence_manager::TimeDomain *>,std::allocator<std::pair<base::sequence_manager::TimeDomain * const,base::TimeTicks> > >": {
            "offset": "0x913D0"
        },
        "std::map<base::sequence_manager::internal::TaskQueueImpl *,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> >,std::less<base::sequence_manager::internal::TaskQueueImpl *>,std::allocator<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > > > >::~map<base::sequence_manager::internal::TaskQueueImpl *,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> >,std::less<base::sequence_manager::internal::TaskQueueImpl *>,std::allocator<std::pair<base::sequence_manager::internal::TaskQueueImpl * const,std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> > > > >": {
            "offset": "0xE7C40"
        },
        "std::map<base::trace_event::TraceLog::AsyncEnabledStateObserver *,base::trace_event::TraceLog::RegisteredAsyncObserver,std::less<base::trace_event::TraceLog::AsyncEnabledStateObserver *>,std::allocator<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> > >::~map<base::trace_event::TraceLog::AsyncEnabledStateObserver *,base::trace_event::TraceLog::RegisteredAsyncObserver,std::less<base::trace_event::TraceLog::AsyncEnabledStateObserver *>,std::allocator<std::pair<base::trace_event::TraceLog::AsyncEnabledStateObserver * const,base::trace_event::TraceLog::RegisteredAsyncObserver> > >": {
            "offset": "0x163DE0"
        },
        "std::map<enum mojo::core::Dispatcher::Type,int,std::less<enum mojo::core::Dispatcher::Type>,std::allocator<std::pair<enum mojo::core::Dispatcher::Type const ,int> > >::~map<enum mojo::core::Dispatcher::Type,int,std::less<enum mojo::core::Dispatcher::Type>,std::allocator<std::pair<enum mojo::core::Dispatcher::Type const ,int> > >": {
            "offset": "0x29450"
        },
        "std::map<int,scoped_refptr<base::SingleThreadTaskRunner>,std::less<int>,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::~map<int,scoped_refptr<base::SingleThreadTaskRunner>,std::less<int>,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >": {
            "offset": "0x1A0BB0"
        },
        "std::map<int,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >,std::less<int>,std::allocator<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > > >::~map<int,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >,std::less<int>,std::allocator<std::pair<int const ,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > > > >": {
            "offset": "0xB55E0"
        },
        "std::map<mojo::Handle,base::RepeatingCallback<void __cdecl(unsigned int)>,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > > >::~map<mojo::Handle,base::RepeatingCallback<void __cdecl(unsigned int)>,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,base::RepeatingCallback<void __cdecl(unsigned int)> > > >": {
            "offset": "0x229840"
        },
        "std::map<mojo::Handle,mojo::WaitSet::State::ReadyState,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> > >::~map<mojo::Handle,mojo::WaitSet::State::ReadyState,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,mojo::WaitSet::State::ReadyState> > >": {
            "offset": "0x913D0"
        },
        "std::map<mojo::Handle,scoped_refptr<mojo::WaitSet::State::Context>,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::~map<mojo::Handle,scoped_refptr<mojo::WaitSet::State::Context>,std::less<mojo::Handle>,std::allocator<std::pair<mojo::Handle const ,scoped_refptr<mojo::WaitSet::State::Context> > > >": {
            "offset": "0x23A2E0"
        },
        "std::map<mojo::SequenceLocalSyncEventWatcher const *,scoped_refptr<mojo::`anonymous namespace'::WatcherState>,std::less<mojo::SequenceLocalSyncEventWatcher const *>,std::allocator<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> > > >::~map<mojo::SequenceLocalSyncEventWatcher const *,scoped_refptr<mojo::`anonymous namespace'::WatcherState>,std::less<mojo::SequenceLocalSyncEventWatcher const *>,std::allocator<std::pair<mojo::SequenceLocalSyncEventWatcher const * const,scoped_refptr<mojo::`anonymous namespace'::WatcherState> > > >": {
            "offset": "0x226850"
        },
        "std::map<mojo::core::ports::NodeName,mojo::core::NodeController::IsolatedConnection,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > >::~map<mojo::core::ports::NodeName,mojo::core::NodeController::IsolatedConnection,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,mojo::core::NodeController::IsolatedConnection> > >": {
            "offset": "0x1D9270"
        },
        "std::map<mojo::core::ports::NodeName,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > >::~map<mojo::core::ports::NodeName,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > >,std::less<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::PortRef> > > > > >": {
            "offset": "0x1D92A0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::GlobalActivityTracker::ModuleInfoRecord *> > >": {
            "offset": "0x2F070"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FeatureList::OverrideEntry,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FeatureList::OverrideEntry,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FeatureList::OverrideEntry> > >": {
            "offset": "0x3BEF0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FieldTrial *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FieldTrial *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::FieldTrial *> > >": {
            "offset": "0x2F070"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> > > >": {
            "offset": "0x19CEB0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::debug::ActivityUserData::TypedValue> > >": {
            "offset": "0x29360"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::NodeName,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::NodeName,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,mojo::core::ports::NodeName> > >": {
            "offset": "0x1D92D0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >": {
            "offset": "0x2F070"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x7BFA0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x7C6D0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::less<void>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >": {
            "offset": "0x20FE0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > > > >": {
            "offset": "0x14F210"
        },
        "std::map<unsigned __int64,base::HistogramSnapshotManager::SampleInfo,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,base::HistogramSnapshotManager::SampleInfo> > >::~map<unsigned __int64,base::HistogramSnapshotManager::SampleInfo,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,base::HistogramSnapshotManager::SampleInfo> > >": {
            "offset": "0x913D0"
        },
        "std::map<unsigned __int64,scoped_refptr<mojo::WaitSet::State::Context>,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > > >::~map<unsigned __int64,scoped_refptr<mojo::WaitSet::State::Context>,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,scoped_refptr<mojo::WaitSet::State::Context> > > >": {
            "offset": "0x23A2E0"
        },
        "std::map<unsigned __int64,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> >,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> > > > >::~map<unsigned __int64,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> >,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,std::unique_ptr<base::PersistentSampleMapRecords,std::default_delete<base::PersistentSampleMapRecords> > > > >": {
            "offset": "0x92050"
        },
        "std::map<unsigned __int64,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> >,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > > > >::~map<unsigned __int64,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> >,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > > > >": {
            "offset": "0x20E9C0"
        },
        "std::map<unsigned __int64,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > > > >::~map<unsigned __int64,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> > > > >": {
            "offset": "0xD5E40"
        },
        "std::map<unsigned int,base::circular_deque<mojo::internal::MultiplexRouter::Task *>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > >::~map<unsigned int,base::circular_deque<mojo::internal::MultiplexRouter::Task *>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,base::circular_deque<mojo::internal::MultiplexRouter::Task *> > > >": {
            "offset": "0x218D40"
        },
        "std::map<unsigned int,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > > >::~map<unsigned int,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> > > >": {
            "offset": "0x1AA330"
        },
        "std::map<unsigned long,void *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void *> > >::~map<unsigned long,void *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,void *> > >": {
            "offset": "0x913D0"
        },
        "std::map<void *,base::SharedMemoryTracker::UsageInfo,std::less<void *>,std::allocator<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> > >::~map<void *,base::SharedMemoryTracker::UsageInfo,std::less<void *>,std::allocator<std::pair<void * const,base::SharedMemoryTracker::UsageInfo> > >": {
            "offset": "0x729A0"
        },
        "std::map<void *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::less<void *>,std::allocator<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >::~map<void *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::less<void *>,std::allocator<std::pair<void * const,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> > >": {
            "offset": "0x913D0"
        },
        "std::map<void const *,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> >,std::less<void const *>,std::allocator<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > > >::~map<void const *,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> >,std::less<void const *>,std::allocator<std::pair<void const * const,std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> > > > >": {
            "offset": "0xD5E40"
        },
        "std::multiset<enum base::sequence_manager::TaskQueue::QueuePriority,std::less<enum base::sequence_manager::TaskQueue::QueuePriority>,std::allocator<enum base::sequence_manager::TaskQueue::QueuePriority> >::~multiset<enum base::sequence_manager::TaskQueue::QueuePriority,std::less<enum base::sequence_manager::TaskQueue::QueuePriority>,std::allocator<enum base::sequence_manager::TaskQueue::QueuePriority> >": {
            "offset": "0x293F0"
        },
        "std::pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >::~pair<__int64 const ,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >": {
            "offset": "0xDC2A0"
        },
        "std::pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<__int64 const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2F130"
        },
        "std::pair<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >::~pair<__int64,scoped_refptr<base::RefCountedData<base::AtomicFlag> > >": {
            "offset": "0xDC2A0"
        },
        "std::pair<__int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<__int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2F130"
        },
        "std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >::~pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> >": {
            "offset": "0x1A0BE0"
        },
        "std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2F130"
        },
        "std::pair<int,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >::~pair<int,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >": {
            "offset": "0xB5610"
        },
        "std::pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> >::~pair<mojo::core::Dispatcher *,scoped_refptr<mojo::core::Watch> >": {
            "offset": "0x1F90A0"
        },
        "std::pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry>::~pair<mojo::core::WatcherDispatcher *,mojo::core::WatcherSet::Entry>": {
            "offset": "0x1FAF40"
        },
        "std::pair<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel> >::~pair<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel> >": {
            "offset": "0x1D9300"
        },
        "std::pair<mojo::core::ports::PortName,mojo::core::ports::PortRef>::~pair<mojo::core::ports::PortName,mojo::core::ports::PortRef>": {
            "offset": "0x1E9320"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> >": {
            "offset": "0x55590"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(mojo::ScopedInterfaceEndpointHandle)> >": {
            "offset": "0x55590"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x7C700"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FeatureList::OverrideEntry>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::FeatureList::OverrideEntry>": {
            "offset": "0x1170"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::debug::ActivityUserData::TypedValue>": {
            "offset": "0x2F1A0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef>": {
            "offset": "0x1D2090"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x7C700"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >": {
            "offset": "0x21010"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >": {
            "offset": "0x5D950"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> > >": {
            "offset": "0x14F240"
        },
        "std::pair<unsigned __int64,scoped_refptr<mojo::core::Watch> >::~pair<unsigned __int64,scoped_refptr<mojo::core::Watch> >": {
            "offset": "0x1F90A0"
        },
        "std::pair<unsigned __int64,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > >::~pair<unsigned __int64,std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> > >": {
            "offset": "0x20E9F0"
        },
        "std::pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >::~pair<unsigned int const ,scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >": {
            "offset": "0x1AA360"
        },
        "std::pair<unsigned int,mojo::core::HandleTable::Entry>::~pair<unsigned int,mojo::core::HandleTable::Entry>": {
            "offset": "0x1CFEB0"
        },
        "std::queue<base::DelegateSimpleThread::Delegate *,base::circular_deque<base::DelegateSimpleThread::Delegate *> >::~queue<base::DelegateSimpleThread::Delegate *,base::circular_deque<base::DelegateSimpleThread::Delegate *> >": {
            "offset": "0x137DC0"
        },
        "std::queue<base::internal::Task,base::circular_deque<base::internal::Task> >::front": {
            "offset": "0x1141F0"
        },
        "std::queue<base::internal::Task,base::circular_deque<base::internal::Task> >::pop": {
            "offset": "0x114280"
        },
        "std::queue<base::internal::Task,base::circular_deque<base::internal::Task> >::~queue<base::internal::Task,base::circular_deque<base::internal::Task> >": {
            "offset": "0x1133B0"
        },
        "std::queue<mojo::Message,base::circular_deque<mojo::Message> >::~queue<mojo::Message,base::circular_deque<mojo::Message> >": {
            "offset": "0x205C10"
        },
        "std::queue<mojo::core::ports::NodeName,base::circular_deque<mojo::core::ports::NodeName> >::~queue<mojo::core::ports::NodeName,base::circular_deque<mojo::core::ports::NodeName> >": {
            "offset": "0x1D9350"
        },
        "std::queue<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper>,base::circular_deque<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> > >::front": {
            "offset": "0x1B0FD0"
        },
        "std::queue<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper>,base::circular_deque<std::pair<unsigned int,IPC::`anonymous namespace'::ChannelAssociatedGroupController::MessageWrapper> > >::pop": {
            "offset": "0x1B1060"
        },
        "std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >::~queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >": {
            "offset": "0x1D9360"
        },
        "std::set<IPC::PendingSyncMsg *,std::less<IPC::PendingSyncMsg *>,std::allocator<IPC::PendingSyncMsg *> >::~set<IPC::PendingSyncMsg *,std::less<IPC::PendingSyncMsg *>,std::allocator<IPC::PendingSyncMsg *> >": {
            "offset": "0x29450"
        },
        "std::set<IPC::`anonymous namespace'::ChannelAssociatedGroupController *,std::less<IPC::`anonymous namespace'::ChannelAssociatedGroupController *>,std::allocator<IPC::`anonymous namespace'::ChannelAssociatedGroupController *> >::~set<IPC::`anonymous namespace'::ChannelAssociatedGroupController *,std::less<IPC::`anonymous namespace'::ChannelAssociatedGroupController *>,std::allocator<IPC::`anonymous namespace'::ChannelAssociatedGroupController *> >": {
            "offset": "0x1AA450"
        },
        "std::set<__int64,std::less<__int64>,std::allocator<__int64> >::~set<__int64,std::less<__int64>,std::allocator<__int64> >": {
            "offset": "0x29450"
        },
        "std::set<base::WaitableEvent *,std::less<base::WaitableEvent *>,std::allocator<base::WaitableEvent *> >::~set<base::WaitableEvent *,std::less<base::WaitableEvent *>,std::allocator<base::WaitableEvent *> >": {
            "offset": "0x29450"
        },
        "std::set<base::sequence_manager::TimeDomain *,std::less<base::sequence_manager::TimeDomain *>,std::allocator<base::sequence_manager::TimeDomain *> >::~set<base::sequence_manager::TimeDomain *,std::less<base::sequence_manager::TimeDomain *>,std::allocator<base::sequence_manager::TimeDomain *> >": {
            "offset": "0x29450"
        },
        "std::set<base::sequence_manager::internal::TaskQueueImpl *,std::less<base::sequence_manager::internal::TaskQueueImpl *>,std::allocator<base::sequence_manager::internal::TaskQueueImpl *> >::~set<base::sequence_manager::internal::TaskQueueImpl *,std::less<base::sequence_manager::internal::TaskQueueImpl *>,std::allocator<base::sequence_manager::internal::TaskQueueImpl *> >": {
            "offset": "0x29450"
        },
        "std::set<enum base::trace_event::MemoryDumpLevelOfDetail,std::less<enum base::trace_event::MemoryDumpLevelOfDetail>,std::allocator<enum base::trace_event::MemoryDumpLevelOfDetail> >::~set<enum base::trace_event::MemoryDumpLevelOfDetail,std::less<enum base::trace_event::MemoryDumpLevelOfDetail>,std::allocator<enum base::trace_event::MemoryDumpLevelOfDetail> >": {
            "offset": "0x157FC0"
        },
        "std::set<scoped_refptr<base::trace_event::MemoryDumpProviderInfo>,base::trace_event::MemoryDumpProviderInfo::Comparator,std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >::~set<scoped_refptr<base::trace_event::MemoryDumpProviderInfo>,base::trace_event::MemoryDumpProviderInfo::Comparator,std::allocator<scoped_refptr<base::trace_event::MemoryDumpProviderInfo> > >": {
            "offset": "0x14AD00"
        },
        "std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x7C7B0"
        },
        "std::set<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~set<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x7C6D0"
        },
        "std::set<unsigned int,std::less<unsigned int>,std::allocator<unsigned int> >::~set<unsigned int,std::less<unsigned int>,std::allocator<unsigned int> >": {
            "offset": "0x293F0"
        },
        "std::set<unsigned long,std::less<unsigned long>,std::allocator<unsigned long> >::~set<unsigned long,std::less<unsigned long>,std::allocator<unsigned long> >": {
            "offset": "0x293F0"
        },
        "std::stack<base::FilePath,base::circular_deque<base::FilePath> >::push": {
            "offset": "0x41AA0"
        },
        "std::stack<base::FilePath,base::circular_deque<base::FilePath> >::~stack<base::FilePath,base::circular_deque<base::FilePath> >": {
            "offset": "0x40D30"
        },
        "std::stack<base::OnceCallback<void __cdecl(void)>,base::circular_deque<base::OnceCallback<void __cdecl(void)> > >::~stack<base::OnceCallback<void __cdecl(void)>,base::circular_deque<base::OnceCallback<void __cdecl(void)> > >": {
            "offset": "0x1B790"
        },
        "std::swap<base::flat_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::core::ports::PortRef,std::less<void> >,0>": {
            "offset": "0x1D1E70"
        },
        "std::swap<base::flat_map<unsigned __int64,scoped_refptr<mojo::core::Watch>,std::less<void> >,0>": {
            "offset": "0x1F8E10"
        },
        "std::swap<base::internal::flat_tree<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,base::internal::GetKeyFromValuePairFirst<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::unique_ptr<base::Value,std::default_delete<base::Value> > >,std::less<void> >::Impl,0>": {
            "offset": "0x173510"
        },
        "std::swap<base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue,0>": {
            "offset": "0xF2990"
        },
        "std::swap<scoped_refptr<mojo::SimpleWatcher::Context>,0>": {
            "offset": "0x2365A0"
        },
        "std::tuple<IPC::Message>::~tuple<IPC::Message>": {
            "offset": "0x1A0FA0"
        },
        "std::tuple<base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>::~tuple<base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>": {
            "offset": "0x6D250"
        },
        "std::tuple<base::File>::~tuple<base::File>": {
            "offset": "0x48BC0"
        },
        "std::tuple<base::FilePath,std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<base::FilePath,std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x55660"
        },
        "std::tuple<base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>::~tuple<base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>": {
            "offset": "0x6D250"
        },
        "std::tuple<base::OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *>::~tuple<base::OnceCallback<base::SysInfo::HardwareInfo __cdecl(void)>,std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > *>": {
            "offset": "0xDA5B0"
        },
        "std::tuple<base::OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>,base::internal::OwnedWrapper<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> >,std::default_delete<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > > > >::~tuple<base::OnceCallback<void __cdecl(base::SysInfo::HardwareInfo)>,base::internal::OwnedWrapper<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> >,std::default_delete<std::unique_ptr<base::SysInfo::HardwareInfo,std::default_delete<base::SysInfo::HardwareInfo> > > > >": {
            "offset": "0xDA5C0"
        },
        "std::tuple<base::OnceCallback<void __cdecl(bool)> >::~tuple<base::OnceCallback<void __cdecl(bool)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x55590"
        },
        "std::tuple<base::OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>,base::WeakPtr<mojo::internal::BindingStateBase> >::~tuple<base::OnceCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>,base::WeakPtr<mojo::internal::BindingStateBase> >": {
            "offset": "0x203C10"
        },
        "std::tuple<base::OnceCallback<void __cdecl(unsigned int)> >::~tuple<base::OnceCallback<void __cdecl(unsigned int)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::OnceCallback<void __cdecl(void)> >::~tuple<base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >::~tuple<base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xDC400"
        },
        "std::tuple<base::Optional<mojo::PlatformHandle> >::~tuple<base::Optional<mojo::PlatformHandle> >": {
            "offset": "0x1D8EE0"
        },
        "std::tuple<base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>::~tuple<base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>": {
            "offset": "0x6D250"
        },
        "std::tuple<base::Process>::~tuple<base::Process>": {
            "offset": "0x71070"
        },
        "std::tuple<base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> >::~tuple<base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>,enum base::trace_event::MemoryDumpType>::~tuple<base::RepeatingCallback<void __cdecl(enum base::trace_event::MemoryDumpType,enum base::trace_event::MemoryDumpLevelOfDetail)>,enum base::trace_event::MemoryDumpType>": {
            "offset": "0xDA5B0"
        },
        "std::tuple<base::RepeatingCallback<void __cdecl(unsigned int)> >::~tuple<base::RepeatingCallback<void __cdecl(unsigned int)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::RepeatingCallback<void __cdecl(void)> >::~tuple<base::RepeatingCallback<void __cdecl(void)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::ScopedClosureRunner>::~tuple<base::ScopedClosureRunner>": {
            "offset": "0xDC6D0"
        },
        "std::tuple<base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>::~tuple<base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>": {
            "offset": "0x6D250"
        },
        "std::tuple<base::WeakPtr<IPC::ChannelMojo> >::~tuple<base::WeakPtr<IPC::ChannelMojo> >": {
            "offset": "0x48A70"
        },
        "std::tuple<base::WeakPtr<base::RunLoop> >::~tuple<base::WeakPtr<base::RunLoop> >": {
            "offset": "0x48A70"
        },
        "std::tuple<base::WeakPtr<base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> > > >::~tuple<base::WeakPtr<base::internal::CancelableCallbackImpl<base::OnceCallback<void __cdecl(void)> > > >": {
            "offset": "0x48A70"
        },
        "std::tuple<base::WeakPtr<base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> > > >::~tuple<base::WeakPtr<base::internal::CancelableCallbackImpl<base::RepeatingCallback<void __cdecl(void)> > > >": {
            "offset": "0x48A70"
        },
        "std::tuple<base::WeakPtr<base::sequence_manager::internal::ThreadControllerImpl>,enum base::sequence_manager::internal::ThreadControllerImpl::WorkType>::~tuple<base::WeakPtr<base::sequence_manager::internal::ThreadControllerImpl>,enum base::sequence_manager::internal::ThreadControllerImpl::WorkType>": {
            "offset": "0xFCEF0"
        },
        "std::tuple<base::WeakPtr<base::trace_event::TraceLog::AsyncEnabledStateObserver> >::~tuple<base::WeakPtr<base::trace_event::TraceLog::AsyncEnabledStateObserver> >": {
            "offset": "0x48A70"
        },
        "std::tuple<base::WeakPtr<base::win::ObjectWatcher>,base::win::ObjectWatcher::Delegate *>::~tuple<base::WeakPtr<base::win::ObjectWatcher>,base::win::ObjectWatcher::Delegate *>": {
            "offset": "0xFCEF0"
        },
        "std::tuple<base::WeakPtr<mojo::DataPipeDrainer> >::~tuple<base::WeakPtr<mojo::DataPipeDrainer> >": {
            "offset": "0x48A70"
        },
        "std::tuple<base::WeakPtr<mojo::DataPipeProducer>,base::OnceCallback<void __cdecl(unsigned int)> >::~tuple<base::WeakPtr<mojo::DataPipeProducer>,base::OnceCallback<void __cdecl(unsigned int)> >": {
            "offset": "0x20EA20"
        },
        "std::tuple<base::WeakPtr<mojo::InterfaceEndpointClient> >::~tuple<base::WeakPtr<mojo::InterfaceEndpointClient> >": {
            "offset": "0x48A70"
        },
        "std::tuple<base::WeakPtr<mojo::InterfaceEndpointClient>,base::OnceCallback<void __cdecl(bool)> >::~tuple<base::WeakPtr<mojo::InterfaceEndpointClient>,base::OnceCallback<void __cdecl(bool)> >": {
            "offset": "0x20EA20"
        },
        "std::tuple<base::WeakPtr<mojo::InterfaceEndpointClient>,base::Optional<mojo::DisconnectReason> >::~tuple<base::WeakPtr<mojo::InterfaceEndpointClient>,base::Optional<mojo::DisconnectReason> >": {
            "offset": "0x20EA40"
        },
        "std::tuple<base::WeakPtr<mojo::SimpleWatcher>,int,unsigned int,mojo::HandleSignalsState>::~tuple<base::WeakPtr<mojo::SimpleWatcher>,int,unsigned int,mojo::HandleSignalsState>": {
            "offset": "0x236A00"
        },
        "std::tuple<base::`anonymous namespace'::PostTaskAndReplyRelay>::~tuple<base::`anonymous namespace'::PostTaskAndReplyRelay>": {
            "offset": "0x134BD0"
        },
        "std::tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::BarrierInfo,std::default_delete<base::`anonymous namespace'::BarrierInfo> > >::~tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::BarrierInfo,std::default_delete<base::`anonymous namespace'::BarrierInfo> > >": {
            "offset": "0x1CB90"
        },
        "std::tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::CreateOrOpenHelper,std::default_delete<base::`anonymous namespace'::CreateOrOpenHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >::~tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::CreateOrOpenHelper,std::default_delete<base::`anonymous namespace'::CreateOrOpenHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >": {
            "offset": "0x48A80"
        },
        "std::tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::CreateTemporaryHelper,std::default_delete<base::`anonymous namespace'::CreateTemporaryHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)> >::~tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::CreateTemporaryHelper,std::default_delete<base::`anonymous namespace'::CreateTemporaryHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::FilePath const &)> >": {
            "offset": "0x48AC0"
        },
        "std::tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::GenericFileHelper,std::default_delete<base::`anonymous namespace'::GenericFileHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >::~tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::GenericFileHelper,std::default_delete<base::`anonymous namespace'::GenericFileHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error)> >": {
            "offset": "0x48A80"
        },
        "std::tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::GetInfoHelper,std::default_delete<base::`anonymous namespace'::GetInfoHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)> >::~tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::GetInfoHelper,std::default_delete<base::`anonymous namespace'::GetInfoHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,base::File::Info const &)> >": {
            "offset": "0x48B10"
        },
        "std::tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::ReadHelper,std::default_delete<base::`anonymous namespace'::ReadHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,char const *,int)> >::~tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::ReadHelper,std::default_delete<base::`anonymous namespace'::ReadHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,char const *,int)> >": {
            "offset": "0x48B60"
        },
        "std::tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::WriteHelper,std::default_delete<base::`anonymous namespace'::WriteHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,int)> >::~tuple<base::internal::OwnedWrapper<base::`anonymous namespace'::WriteHelper,std::default_delete<base::`anonymous namespace'::WriteHelper> >,base::OnceCallback<void __cdecl(enum base::File::Error,int)> >": {
            "offset": "0x48B60"
        },
        "std::tuple<base::internal::OwnedWrapper<base::internal::BaseTimerTaskInternal,std::default_delete<base::internal::BaseTimerTaskInternal> > >::~tuple<base::internal::OwnedWrapper<base::internal::BaseTimerTaskInternal,std::default_delete<base::internal::BaseTimerTaskInternal> > >": {
            "offset": "0x1446F0"
        },
        "std::tuple<base::internal::OwnedWrapper<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >,scoped_refptr<base::SingleThreadTaskRunner>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64>::~tuple<base::internal::OwnedWrapper<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >,scoped_refptr<base::SingleThreadTaskRunner>,void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64>": {
            "offset": "0x1C2A10"
        },
        "std::tuple<base::internal::PassedWrapper<mojo::Message> >::~tuple<base::internal::PassedWrapper<mojo::Message> >": {
            "offset": "0x1AA0C0"
        },
        "std::tuple<base::internal::PassedWrapper<std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> > > >::~tuple<base::internal::PassedWrapper<std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> > > >": {
            "offset": "0x3C10"
        },
        "std::tuple<base::internal::RetainedRefWrapper<IPC::MessageFilter> >::~tuple<base::internal::RetainedRefWrapper<IPC::MessageFilter> >": {
            "offset": "0x1A0B60"
        },
        "std::tuple<base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >::~tuple<base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >": {
            "offset": "0x1A0D40"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::RunLoop>,base::RepeatingCallback<void __cdecl(void)> >::~tuple<base::internal::UnretainedWrapper<base::RunLoop>,base::RepeatingCallback<void __cdecl(void)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int,std::unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> > >::~tuple<base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,int,std::unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> > >": {
            "offset": "0x39C0"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >::~tuple<base::internal::UnretainedWrapper<base::StackSamplingProfiler::SamplingThread>,std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> > >": {
            "offset": "0xB5660"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::`anonymous namespace'::CreateOrOpenHelper>,base::FilePath,unsigned int>::~tuple<base::internal::UnretainedWrapper<base::`anonymous namespace'::CreateOrOpenHelper>,base::FilePath,unsigned int>": {
            "offset": "0x48BB0"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::debug::GlobalActivityTracker>,__int64,__int64,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<base::internal::UnretainedWrapper<base::debug::GlobalActivityTracker>,__int64,__int64,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1170"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::internal::`anonymous namespace'::WorkerThreadDelegate>,scoped_refptr<base::internal::Sequence> >::~tuple<base::internal::UnretainedWrapper<base::internal::`anonymous namespace'::WorkerThreadDelegate>,scoped_refptr<base::internal::Sequence> >": {
            "offset": "0x10E6A0"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::sequence_manager::internal::TaskQueueImpl>,base::sequence_manager::Task>::~tuple<base::internal::UnretainedWrapper<base::sequence_manager::internal::TaskQueueImpl>,base::sequence_manager::Task>": {
            "offset": "0xE7D60"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager>,std::unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> > >::~tuple<base::internal::UnretainedWrapper<base::trace_event::MemoryDumpManager>,std::unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> > >": {
            "offset": "0x14AD30"
        },
        "std::tuple<base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler>,base::trace_event::MemoryDumpScheduler::Config>::~tuple<base::internal::UnretainedWrapper<base::trace_event::MemoryDumpScheduler>,base::trace_event::MemoryDumpScheduler::Config>": {
            "offset": "0x14DD70"
        },
        "std::tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,base::Optional<mojo::PlatformHandle> >::~tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,base::Optional<mojo::PlatformHandle> >": {
            "offset": "0x1D9370"
        },
        "std::tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ConnectionParams,mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1D93A0"
        },
        "std::tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ScopedProcessHandle,mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::~tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ScopedProcessHandle,mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >": {
            "offset": "0x1D93C0"
        },
        "std::tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ports::NodeName,base::internal::RetainedRefWrapper<mojo::core::NodeChannel> >::~tuple<base::internal::UnretainedWrapper<mojo::core::NodeController>,mojo::core::ports::NodeName,base::internal::RetainedRefWrapper<mojo::core::NodeChannel> >": {
            "offset": "0x1D8EF0"
        },
        "std::tuple<base::internal::UnretainedWrapper<mojo::internal::AssociatedInterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >::~tuple<base::internal::UnretainedWrapper<mojo::internal::AssociatedInterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >": {
            "offset": "0x3850"
        },
        "std::tuple<base::internal::UnretainedWrapper<mojo::internal::InterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >::~tuple<base::internal::UnretainedWrapper<mojo::internal::InterfacePtrStateBase>,base::OnceCallback<void __cdecl(unsigned int)> >": {
            "offset": "0x3850"
        },
        "std::tuple<mojo::ConnectionGroup::Ref>::~tuple<mojo::ConnectionGroup::Ref>": {
            "offset": "0x201490"
        },
        "std::tuple<mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> > >::~tuple<mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> > >": {
            "offset": "0x22D5F0"
        },
        "std::tuple<mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> > >::~tuple<mojo::Message,std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> > >": {
            "offset": "0x22D5F0"
        },
        "std::tuple<mojo::Message>::~tuple<mojo::Message>": {
            "offset": "0x1AA620"
        },
        "std::tuple<mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int>::~tuple<mojo::ScopedHandleBase<mojo::DataPipeProducerHandle>,unsigned int>": {
            "offset": "0x231EB0"
        },
        "std::tuple<mojo::ScopedInterfaceEndpointHandle>::~tuple<mojo::ScopedInterfaceEndpointHandle>": {
            "offset": "0x19CE50"
        },
        "std::tuple<mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::~tuple<mojo::core::ConnectionParams,mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >": {
            "offset": "0x1D93F0"
        },
        "std::tuple<mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::~tuple<mojo::core::ports::NodeName,base::RepeatingCallback<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >": {
            "offset": "0x3850"
        },
        "std::tuple<mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<mojo::core::ports::PortRef,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1D2090"
        },
        "std::tuple<scoped_refptr<IPC::ChannelProxy::Context> >::~tuple<scoped_refptr<IPC::ChannelProxy::Context> >": {
            "offset": "0x1A0D40"
        },
        "std::tuple<scoped_refptr<IPC::ChannelProxy::Context>,IPC::Message>::~tuple<scoped_refptr<IPC::ChannelProxy::Context>,IPC::Message>": {
            "offset": "0x1A0EF0"
        },
        "std::tuple<scoped_refptr<IPC::ChannelProxy::Context>,base::internal::RetainedRefWrapper<IPC::MessageFilter> >::~tuple<scoped_refptr<IPC::ChannelProxy::Context>,base::internal::RetainedRefWrapper<IPC::MessageFilter> >": {
            "offset": "0x1A0D90"
        },
        "std::tuple<scoped_refptr<IPC::ChannelProxy::Context>,bool>::~tuple<scoped_refptr<IPC::ChannelProxy::Context>,bool>": {
            "offset": "0x1A0F50"
        },
        "std::tuple<scoped_refptr<IPC::ChannelProxy::Context>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::ScopedInterfaceEndpointHandle>::~tuple<scoped_refptr<IPC::ChannelProxy::Context>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::ScopedInterfaceEndpointHandle>": {
            "offset": "0x1A0E20"
        },
        "std::tuple<scoped_refptr<IPC::ChannelProxy::Context>,std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >::~tuple<scoped_refptr<IPC::ChannelProxy::Context>,std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >": {
            "offset": "0x1A0E80"
        },
        "std::tuple<scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue> >::~tuple<scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue> >": {
            "offset": "0x1B28C0"
        },
        "std::tuple<scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue>,base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >::~tuple<scoped_refptr<IPC::SyncChannel::ReceivedSyncMsgQueue>,base::internal::RetainedRefWrapper<IPC::SyncChannel::SyncContext> >": {
            "offset": "0x1B28D0"
        },
        "std::tuple<scoped_refptr<IPC::SyncChannel::SyncContext>,base::RunLoop *>::~tuple<scoped_refptr<IPC::SyncChannel::SyncContext>,base::RunLoop *>": {
            "offset": "0x1A0F50"
        },
        "std::tuple<scoped_refptr<IPC::SyncMessageFilter>,IPC::Message *>::~tuple<scoped_refptr<IPC::SyncMessageFilter>,IPC::Message *>": {
            "offset": "0x1B6960"
        },
        "std::tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,base::internal::PassedWrapper<mojo::Message> >::~tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,base::internal::PassedWrapper<mojo::Message> >": {
            "offset": "0x1AA550"
        },
        "std::tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,mojo::Message>::~tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,mojo::Message>": {
            "offset": "0x1AA5C0"
        },
        "std::tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >::~tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,base::internal::UnretainedWrapper<IPC::`anonymous namespace'::ChannelAssociatedGroupController::Endpoint> >": {
            "offset": "0x1AA500"
        },
        "std::tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,unsigned int>::~tuple<scoped_refptr<IPC::`anonymous namespace'::ChannelAssociatedGroupController>,unsigned int,unsigned int>": {
            "offset": "0x1AA4B0"
        },
        "std::tuple<scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >,base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>::~tuple<scoped_refptr<base::ObserverListThreadSafe<base::FieldTrialList::Observer> >,base::FieldTrialList::Observer *,base::ObserverListThreadSafe<base::FieldTrialList::Observer>::NotificationData>": {
            "offset": "0x6D260"
        },
        "std::tuple<scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >,base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>::~tuple<scoped_refptr<base::ObserverListThreadSafe<base::MemoryPressureListener> >,base::MemoryPressureListener *,base::ObserverListThreadSafe<base::MemoryPressureListener>::NotificationData>": {
            "offset": "0x6D260"
        },
        "std::tuple<scoped_refptr<base::ObserverListThreadSafe<base::PowerObserver> >,base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>::~tuple<scoped_refptr<base::ObserverListThreadSafe<base::PowerObserver> >,base::PowerObserver *,base::ObserverListThreadSafe<base::PowerObserver>::NotificationData>": {
            "offset": "0x6D260"
        },
        "std::tuple<scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >,base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>::~tuple<scoped_refptr<base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver> >,base::SystemMonitor::DevicesChangedObserver *,base::ObserverListThreadSafe<base::SystemMonitor::DevicesChangedObserver>::NotificationData>": {
            "offset": "0x6D260"
        },
        "std::tuple<scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)> >::~tuple<scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xDC420"
        },
        "std::tuple<scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >::~tuple<scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xDC480"
        },
        "std::tuple<scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::ScopedClosureRunner>::~tuple<scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::ScopedClosureRunner>": {
            "offset": "0xDC4F0"
        },
        "std::tuple<scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)> >::~tuple<scoped_refptr<base::SequencedTaskRunner>,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xBAB50"
        },
        "std::tuple<scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>::~tuple<scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>": {
            "offset": "0x1A0BE0"
        },
        "std::tuple<scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)> >::~tuple<scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xDC550"
        },
        "std::tuple<scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >::~tuple<scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xDC5E0"
        },
        "std::tuple<scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::ScopedClosureRunner>::~tuple<scoped_refptr<base::SequencedTaskRunner>,scoped_refptr<base::RefCountedData<base::AtomicFlag> >,base::ScopedClosureRunner>": {
            "offset": "0xDC640"
        },
        "std::tuple<scoped_refptr<base::SingleThreadTaskRunner>,base::OnceCallback<void __cdecl(void)> >::~tuple<scoped_refptr<base::SingleThreadTaskRunner>,base::OnceCallback<void __cdecl(void)> >": {
            "offset": "0xBAB50"
        },
        "std::tuple<scoped_refptr<base::SingleThreadTaskRunner>,base::RepeatingCallback<void __cdecl(void)> >::~tuple<scoped_refptr<base::SingleThreadTaskRunner>,base::RepeatingCallback<void __cdecl(void)> >": {
            "offset": "0xBAB50"
        },
        "std::tuple<scoped_refptr<base::SingleThreadTaskRunner>,base::internal::UnretainedWrapper<base::SingleThreadTaskRunner>,std::unique_ptr<base::RunLoop::ScopedDisallowRunningForTesting,std::default_delete<base::RunLoop::ScopedDisallowRunningForTesting> > >::~tuple<scoped_refptr<base::SingleThreadTaskRunner>,base::internal::UnretainedWrapper<base::SingleThreadTaskRunner>,std::unique_ptr<base::RunLoop::ScopedDisallowRunningForTesting,std::default_delete<base::RunLoop::ScopedDisallowRunningForTesting> > >": {
            "offset": "0x13EFC0"
        },
        "std::tuple<scoped_refptr<base::internal::Sequence>,base::internal::UnretainedWrapper<base::internal::ThreadPoolImpl> >::~tuple<scoped_refptr<base::internal::Sequence>,base::internal::UnretainedWrapper<base::internal::ThreadPoolImpl> >": {
            "offset": "0x124200"
        },
        "std::tuple<scoped_refptr<mojo::ConnectionGroup>,mojo::ConnectionGroup::Ref>::~tuple<scoped_refptr<mojo::ConnectionGroup>,mojo::ConnectionGroup::Ref>": {
            "offset": "0x201400"
        },
        "std::tuple<scoped_refptr<mojo::DataPipeProducer::SequenceState> >::~tuple<scoped_refptr<mojo::DataPipeProducer::SequenceState> >": {
            "offset": "0x231EE0"
        },
        "std::tuple<scoped_refptr<mojo::DataPipeProducer::SequenceState>,std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >::~tuple<scoped_refptr<mojo::DataPipeProducer::SequenceState>,std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >": {
            "offset": "0x231EF0"
        },
        "std::tuple<scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State> >::~tuple<scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State> >": {
            "offset": "0x224950"
        },
        "std::tuple<scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State>,scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>::~tuple<scoped_refptr<mojo::ScopedInterfaceEndpointHandle::State>,scoped_refptr<base::SequencedTaskRunner>,enum mojo::ScopedInterfaceEndpointHandle::AssociationEvent>": {
            "offset": "0x224990"
        },
        "std::tuple<scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin> >::~tuple<scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin> >": {
            "offset": "0x1BFC20"
        },
        "std::tuple<scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin>,enum mojo::core::Channel::Error>::~tuple<scoped_refptr<mojo::core::`anonymous namespace'::ChannelWin>,enum mojo::core::Channel::Error>": {
            "offset": "0x1BFC70"
        },
        "std::tuple<scoped_refptr<mojo::internal::MultiplexRouter> >::~tuple<scoped_refptr<mojo::internal::MultiplexRouter> >": {
            "offset": "0x203C30"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1170"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::ScopedInterfaceEndpointHandle>::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,mojo::ScopedInterfaceEndpointHandle>": {
            "offset": "0x1A0CD0"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x7C700"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>": {
            "offset": "0x2F130"
        },
        "std::tuple<std::queue<base::internal::Task,base::circular_deque<base::internal::Task> > >::~tuple<std::queue<base::internal::Task,base::circular_deque<base::internal::Task> > >": {
            "offset": "0x1133B0"
        },
        "std::tuple<std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >::~tuple<std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> > >": {
            "offset": "0x39C0"
        },
        "std::tuple<std::unique_ptr<base::ThreadTaskRunnerHandle,std::default_delete<base::ThreadTaskRunnerHandle> > >::~tuple<std::unique_ptr<base::ThreadTaskRunnerHandle,std::default_delete<base::ThreadTaskRunnerHandle> > >": {
            "offset": "0xFEB70"
        },
        "std::tuple<std::unique_ptr<base::internal::AdaptCallbackForRepeatingHelper<>,std::default_delete<base::internal::AdaptCallbackForRepeatingHelper<> > > >::~tuple<std::unique_ptr<base::internal::AdaptCallbackForRepeatingHelper<>,std::default_delete<base::internal::AdaptCallbackForRepeatingHelper<> > > >": {
            "offset": "0x55600"
        },
        "std::tuple<std::unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >,base::RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)>,base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> >::~tuple<std::unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >,base::RepeatingCallback<void __cdecl(scoped_refptr<base::RefCountedString> const &,bool)>,base::RepeatingCallback<bool __cdecl(char const *,char const *,base::RepeatingCallback<bool __cdecl(char const *)> *)> >": {
            "offset": "0x163E10"
        },
        "std::tuple<std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >::~tuple<std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> > >": {
            "offset": "0x39C0"
        },
        "std::tuple<std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,mojo::Message>::~tuple<std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >,mojo::Message>": {
            "offset": "0x22D5C0"
        },
        "std::tuple<std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> > >::~tuple<std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> > >": {
            "offset": "0x39C0"
        },
        "std::tuple<std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> > >::~tuple<std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> > >": {
            "offset": "0x39C0"
        },
        "std::tuple<std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,base::OnceCallback<void __cdecl(void)>,base::OnceCallback<void __cdecl(bool)>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x55630"
        },
        "std::tuple<void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<void (__cdecl base::FieldTrialList::Observer::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x7C7E0"
        },
        "std::tuple<void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>::~tuple<void (__cdecl*)(unsigned __int64,MojoProcessErrorDetails const *),unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>": {
            "offset": "0x1C2A00"
        },
        "std::unique_ptr<FileVersionInfoWin,std::default_delete<FileVersionInfoWin> >::~unique_ptr<FileVersionInfoWin,std::default_delete<FileVersionInfoWin> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<IPC::Channel,std::default_delete<IPC::Channel> >::~unique_ptr<IPC::Channel,std::default_delete<IPC::Channel> >": {
            "offset": "0x124250"
        },
        "std::unique_ptr<IPC::ChannelMojo,std::default_delete<IPC::ChannelMojo> >::~unique_ptr<IPC::ChannelMojo,std::default_delete<IPC::ChannelMojo> >": {
            "offset": "0x124250"
        },
        "std::unique_ptr<IPC::ChannelProxy,std::default_delete<IPC::ChannelProxy> >::~unique_ptr<IPC::ChannelProxy,std::default_delete<IPC::ChannelProxy> >": {
            "offset": "0x124250"
        },
        "std::unique_ptr<IPC::Message,std::default_delete<IPC::Message> >::~unique_ptr<IPC::Message,std::default_delete<IPC::Message> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<IPC::MessageFilterRouter,std::default_delete<IPC::MessageFilterRouter> >::~unique_ptr<IPC::MessageFilterRouter,std::default_delete<IPC::MessageFilterRouter> >": {
            "offset": "0x1A0FB0"
        },
        "std::unique_ptr<IPC::MessageReplyDeserializer,std::default_delete<IPC::MessageReplyDeserializer> >::~unique_ptr<IPC::MessageReplyDeserializer,std::default_delete<IPC::MessageReplyDeserializer> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<IPC::MojoBootstrap,std::default_delete<IPC::MojoBootstrap> >::~unique_ptr<IPC::MojoBootstrap,std::default_delete<IPC::MojoBootstrap> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<IPC::SyncChannel,std::default_delete<IPC::SyncChannel> >::~unique_ptr<IPC::SyncChannel,std::default_delete<IPC::SyncChannel> >": {
            "offset": "0x124250"
        },
        "std::unique_ptr<IPC::internal::MessagePipeReader,std::default_delete<IPC::internal::MessagePipeReader> >::~unique_ptr<IPC::internal::MessagePipeReader,std::default_delete<IPC::internal::MessagePipeReader> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<IPC::mojom::ChannelRequestValidator,std::default_delete<IPC::mojom::ChannelRequestValidator> >::~unique_ptr<IPC::mojom::ChannelRequestValidator,std::default_delete<IPC::mojom::ChannelRequestValidator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<_PSAPI_WORKING_SET_EX_INFORMATION [0],std::default_delete<_PSAPI_WORKING_SET_EX_INFORMATION [0]> >::~unique_ptr<_PSAPI_WORKING_SET_EX_INFORMATION [0],std::default_delete<_PSAPI_WORKING_SET_EX_INFORMATION [0]> >": {
            "offset": "0xF640"
        },
        "std::unique_ptr<base::BucketRanges const ,std::default_delete<base::BucketRanges const > >::~unique_ptr<base::BucketRanges const ,std::default_delete<base::BucketRanges const > >": {
            "offset": "0x92080"
        },
        "std::unique_ptr<base::BucketRanges,std::default_delete<base::BucketRanges> >::~unique_ptr<base::BucketRanges,std::default_delete<base::BucketRanges> >": {
            "offset": "0x92080"
        },
        "std::unique_ptr<base::ConditionVariable,std::default_delete<base::ConditionVariable> >::~unique_ptr<base::ConditionVariable,std::default_delete<base::ConditionVariable> >": {
            "offset": "0x10B5B0"
        },
        "std::unique_ptr<base::DictionaryValue,std::default_delete<base::DictionaryValue> >::~unique_ptr<base::DictionaryValue,std::default_delete<base::DictionaryValue> >": {
            "offset": "0x5D9E0"
        },
        "std::unique_ptr<base::DiscardableMemory,std::default_delete<base::DiscardableMemory> >::~unique_ptr<base::DiscardableMemory,std::default_delete<base::DiscardableMemory> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::Environment,std::default_delete<base::Environment> >::~unique_ptr<base::Environment,std::default_delete<base::Environment> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::FeatureList,std::default_delete<base::FeatureList> >::~unique_ptr<base::FeatureList,std::default_delete<base::FeatureList> >": {
            "offset": "0x3BF20"
        },
        "std::unique_ptr<base::FieldTrial::EntropyProvider const ,std::default_delete<base::FieldTrial::EntropyProvider const > >::~unique_ptr<base::FieldTrial::EntropyProvider const ,std::default_delete<base::FieldTrial::EntropyProvider const > >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::FilePathWatcher::PlatformDelegate,std::default_delete<base::FilePathWatcher::PlatformDelegate> >::~unique_ptr<base::FilePathWatcher::PlatformDelegate,std::default_delete<base::FilePathWatcher::PlatformDelegate> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::FilePersistentMemoryAllocator,std::default_delete<base::FilePersistentMemoryAllocator> >::~unique_ptr<base::FilePersistentMemoryAllocator,std::default_delete<base::FilePersistentMemoryAllocator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::GlobalHistogramAllocator,std::default_delete<base::GlobalHistogramAllocator> >::~unique_ptr<base::GlobalHistogramAllocator,std::default_delete<base::GlobalHistogramAllocator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::HistogramBase,std::default_delete<base::HistogramBase> >::~unique_ptr<base::HistogramBase,std::default_delete<base::HistogramBase> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::HistogramSamples,std::default_delete<base::HistogramSamples> >::~unique_ptr<base::HistogramSamples,std::default_delete<base::HistogramSamples> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::ListValue,std::default_delete<base::ListValue> >::~unique_ptr<base::ListValue,std::default_delete<base::ListValue> >": {
            "offset": "0x5D9E0"
        },
        "std::unique_ptr<base::LocalPersistentMemoryAllocator,std::default_delete<base::LocalPersistentMemoryAllocator> >::~unique_ptr<base::LocalPersistentMemoryAllocator,std::default_delete<base::LocalPersistentMemoryAllocator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::LockFreeAddressHashSet,std::default_delete<base::LockFreeAddressHashSet> >::~unique_ptr<base::LockFreeAddressHashSet,std::default_delete<base::LockFreeAddressHashSet> >": {
            "offset": "0xBEDD0"
        },
        "std::unique_ptr<base::MemoryMappedFile,std::default_delete<base::MemoryMappedFile> >::~unique_ptr<base::MemoryMappedFile,std::default_delete<base::MemoryMappedFile> >": {
            "offset": "0x294B0"
        },
        "std::unique_ptr<base::MessagePump,std::default_delete<base::MessagePump> >::~unique_ptr<base::MessagePump,std::default_delete<base::MessagePump> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::MessagePumpForUI,std::default_delete<base::MessagePumpForUI> >::~unique_ptr<base::MessagePumpForUI,std::default_delete<base::MessagePumpForUI> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::ModuleCache::Module,std::default_delete<base::ModuleCache::Module> >::~unique_ptr<base::ModuleCache::Module,std::default_delete<base::ModuleCache::Module> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::NativeUnwinderWin,std::default_delete<base::NativeUnwinderWin> >::~unique_ptr<base::NativeUnwinderWin,std::default_delete<base::NativeUnwinderWin> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::PartitionBucketMemoryStats [0],std::default_delete<base::PartitionBucketMemoryStats [0]> >::~unique_ptr<base::PartitionBucketMemoryStats [0],std::default_delete<base::PartitionBucketMemoryStats [0]> >": {
            "offset": "0xF640"
        },
        "std::unique_ptr<base::PendingTask,std::default_delete<base::PendingTask> >::~unique_ptr<base::PendingTask,std::default_delete<base::PendingTask> >": {
            "offset": "0xE0E30"
        },
        "std::unique_ptr<base::PersistentMemoryAllocator,std::default_delete<base::PersistentMemoryAllocator> >::~unique_ptr<base::PersistentMemoryAllocator,std::default_delete<base::PersistentMemoryAllocator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::PowerMonitorSource,std::default_delete<base::PowerMonitorSource> >::~unique_ptr<base::PowerMonitorSource,std::default_delete<base::PowerMonitorSource> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::ProfileBuilder,std::default_delete<base::ProfileBuilder> >::~unique_ptr<base::ProfileBuilder,std::default_delete<base::ProfileBuilder> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::ProfileBuilder::MetadataProvider,std::default_delete<base::ProfileBuilder::MetadataProvider> >::~unique_ptr<base::ProfileBuilder::MetadataProvider,std::default_delete<base::ProfileBuilder::MetadataProvider> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::ReadOnlySharedPersistentMemoryAllocator,std::default_delete<base::ReadOnlySharedPersistentMemoryAllocator> >::~unique_ptr<base::ReadOnlySharedPersistentMemoryAllocator,std::default_delete<base::ReadOnlySharedPersistentMemoryAllocator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::RecordHistogramChecker,std::default_delete<base::RecordHistogramChecker> >::~unique_ptr<base::RecordHistogramChecker,std::default_delete<base::RecordHistogramChecker> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::RepeatingTimer,std::default_delete<base::RepeatingTimer> >::~unique_ptr<base::RepeatingTimer,std::default_delete<base::RepeatingTimer> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::RunLoop::ScopedDisallowRunningForTesting,std::default_delete<base::RunLoop::ScopedDisallowRunningForTesting> >::~unique_ptr<base::RunLoop::ScopedDisallowRunningForTesting,std::default_delete<base::RunLoop::ScopedDisallowRunningForTesting> >": {
            "offset": "0x13F040"
        },
        "std::unique_ptr<base::SampleCountIterator,std::default_delete<base::SampleCountIterator> >::~unique_ptr<base::SampleCountIterator,std::default_delete<base::SampleCountIterator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::SampleMap,std::default_delete<base::SampleMap> >::~unique_ptr<base::SampleMap,std::default_delete<base::SampleMap> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::SequenceCheckerImpl::Core,std::default_delete<base::SequenceCheckerImpl::Core> >::~unique_ptr<base::SequenceCheckerImpl::Core,std::default_delete<base::SequenceCheckerImpl::Core> >": {
            "offset": "0x7A3E0"
        },
        "std::unique_ptr<base::SharedMemoryMapping,std::default_delete<base::SharedMemoryMapping> >::~unique_ptr<base::SharedMemoryMapping,std::default_delete<base::SharedMemoryMapping> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::StackBuffer,std::default_delete<base::StackBuffer> >::~unique_ptr<base::StackBuffer,std::default_delete<base::StackBuffer> >": {
            "offset": "0xB56B0"
        },
        "std::unique_ptr<base::StackCopier,std::default_delete<base::StackCopier> >::~unique_ptr<base::StackCopier,std::default_delete<base::StackCopier> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::StackCopierSuspend,std::default_delete<base::StackCopierSuspend> >::~unique_ptr<base::StackCopierSuspend,std::default_delete<base::StackCopierSuspend> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::StackSampler,std::default_delete<base::StackSampler> >::~unique_ptr<base::StackSampler,std::default_delete<base::StackSampler> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >::~unique_ptr<base::StackSamplingProfiler::SamplingThread::CollectionContext,std::default_delete<base::StackSamplingProfiler::SamplingThread::CollectionContext> >": {
            "offset": "0xB5660"
        },
        "std::unique_ptr<base::StatisticsRecorder,std::default_delete<base::StatisticsRecorder> >::~unique_ptr<base::StatisticsRecorder,std::default_delete<base::StatisticsRecorder> >": {
            "offset": "0x9FA90"
        },
        "std::unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> >::~unique_ptr<base::SupportsUserData::Data,std::default_delete<base::SupportsUserData::Data> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::SuspendableThreadDelegate::ScopedSuspendThread,std::default_delete<base::SuspendableThreadDelegate::ScopedSuspendThread> >::~unique_ptr<base::SuspendableThreadDelegate::ScopedSuspendThread,std::default_delete<base::SuspendableThreadDelegate::ScopedSuspendThread> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::SuspendableThreadDelegateWin,std::default_delete<base::SuspendableThreadDelegateWin> >::~unique_ptr<base::SuspendableThreadDelegateWin,std::default_delete<base::SuspendableThreadDelegateWin> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::Thread,std::default_delete<base::Thread> >::~unique_ptr<base::Thread,std::default_delete<base::Thread> >": {
            "offset": "0x124250"
        },
        "std::unique_ptr<base::Thread::Delegate,std::default_delete<base::Thread::Delegate> >::~unique_ptr<base::Thread::Delegate,std::default_delete<base::Thread::Delegate> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::ThreadTaskRunnerHandle,std::default_delete<base::ThreadTaskRunnerHandle> >::~unique_ptr<base::ThreadTaskRunnerHandle,std::default_delete<base::ThreadTaskRunnerHandle> >": {
            "offset": "0xFEB70"
        },
        "std::unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> >::~unique_ptr<base::Unwinder,std::default_delete<base::Unwinder> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::Value,std::default_delete<base::Value> >::~unique_ptr<base::Value,std::default_delete<base::Value> >": {
            "offset": "0x5D9E0"
        },
        "std::unique_ptr<base::WaitableEvent,std::default_delete<base::WaitableEvent> >::~unique_ptr<base::WaitableEvent,std::default_delete<base::WaitableEvent> >": {
            "offset": "0x1164A0"
        },
        "std::unique_ptr<base::WorkIdProvider,std::default_delete<base::WorkIdProvider> >::~unique_ptr<base::WorkIdProvider,std::default_delete<base::WorkIdProvider> >": {
            "offset": "0x7A3E0"
        },
        "std::unique_ptr<base::WritableSharedPersistentMemoryAllocator,std::default_delete<base::WritableSharedPersistentMemoryAllocator> >::~unique_ptr<base::WritableSharedPersistentMemoryAllocator,std::default_delete<base::WritableSharedPersistentMemoryAllocator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::debug::GlobalActivityTracker,std::default_delete<base::debug::GlobalActivityTracker> >::~unique_ptr<base::debug::GlobalActivityTracker,std::default_delete<base::debug::GlobalActivityTracker> >": {
            "offset": "0x2F210"
        },
        "std::unique_ptr<base::debug::GlobalActivityTracker::ManagedActivityTracker,std::default_delete<base::debug::GlobalActivityTracker::ManagedActivityTracker> >::~unique_ptr<base::debug::GlobalActivityTracker::ManagedActivityTracker,std::default_delete<base::debug::GlobalActivityTracker::ManagedActivityTracker> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::debug::StackTrace,std::default_delete<base::debug::StackTrace> >::~unique_ptr<base::debug::StackTrace,std::default_delete<base::debug::StackTrace> >": {
            "offset": "0x13DA10"
        },
        "std::unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> >::~unique_ptr<base::debug::ThreadActivityAnalyzer,std::default_delete<base::debug::ThreadActivityAnalyzer> >": {
            "offset": "0x294E0"
        },
        "std::unique_ptr<base::debug::ThreadActivityTracker,std::default_delete<base::debug::ThreadActivityTracker> >::~unique_ptr<base::debug::ThreadActivityTracker,std::default_delete<base::debug::ThreadActivityTracker> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::internal::AdaptCallbackForRepeatingHelper<>,std::default_delete<base::internal::AdaptCallbackForRepeatingHelper<> > >::~unique_ptr<base::internal::AdaptCallbackForRepeatingHelper<>,std::default_delete<base::internal::AdaptCallbackForRepeatingHelper<> > >": {
            "offset": "0x55600"
        },
        "std::unique_ptr<base::internal::TaskTracker,std::default_delete<base::internal::TaskTracker> >::~unique_ptr<base::internal::TaskTracker,std::default_delete<base::internal::TaskTracker> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::internal::TaskTracker::State,std::default_delete<base::internal::TaskTracker::State> >::~unique_ptr<base::internal::TaskTracker::State,std::default_delete<base::internal::TaskTracker::State> >": {
            "offset": "0x116480"
        },
        "std::unique_ptr<base::internal::ThreadGroup,std::default_delete<base::internal::ThreadGroup> >::~unique_ptr<base::internal::ThreadGroup,std::default_delete<base::internal::ThreadGroup> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::internal::ThreadGroupImpl,std::default_delete<base::internal::ThreadGroupImpl> >::~unique_ptr<base::internal::ThreadGroupImpl,std::default_delete<base::internal::ThreadGroupImpl> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl,std::default_delete<base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl> >::~unique_ptr<base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl,std::default_delete<base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::internal::TrackedRef<base::internal::TaskTracker>,std::default_delete<base::internal::TrackedRef<base::internal::TaskTracker> > >::~unique_ptr<base::internal::TrackedRef<base::internal::TaskTracker>,std::default_delete<base::internal::TrackedRef<base::internal::TaskTracker> > >": {
            "offset": "0x116450"
        },
        "std::unique_ptr<base::internal::TrackedRef<base::internal::ThreadGroup::Delegate>,std::default_delete<base::internal::TrackedRef<base::internal::ThreadGroup::Delegate> > >::~unique_ptr<base::internal::TrackedRef<base::internal::ThreadGroup::Delegate>,std::default_delete<base::internal::TrackedRef<base::internal::ThreadGroup::Delegate> > >": {
            "offset": "0x116450"
        },
        "std::unique_ptr<base::internal::TrackedRef<base::internal::ThreadGroupImpl>,std::default_delete<base::internal::TrackedRef<base::internal::ThreadGroupImpl> > >::~unique_ptr<base::internal::TrackedRef<base::internal::ThreadGroupImpl>,std::default_delete<base::internal::TrackedRef<base::internal::ThreadGroupImpl> > >": {
            "offset": "0x116450"
        },
        "std::unique_ptr<base::internal::WorkerThread::Delegate,std::default_delete<base::internal::WorkerThread::Delegate> >::~unique_ptr<base::internal::WorkerThread::Delegate,std::default_delete<base::internal::WorkerThread::Delegate> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::internal::`anonymous namespace'::TaskTracingInfo,std::default_delete<base::internal::`anonymous namespace'::TaskTracingInfo> >::~unique_ptr<base::internal::`anonymous namespace'::TaskTracingInfo,std::default_delete<base::internal::`anonymous namespace'::TaskTracingInfo> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::internal::`anonymous namespace'::WorkerThreadDelegate,std::default_delete<base::internal::`anonymous namespace'::WorkerThreadDelegate> >::~unique_ptr<base::internal::`anonymous namespace'::WorkerThreadDelegate,std::default_delete<base::internal::`anonymous namespace'::WorkerThreadDelegate> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::sequence_manager::SequenceManager,std::default_delete<base::sequence_manager::SequenceManager> >::~unique_ptr<base::sequence_manager::SequenceManager,std::default_delete<base::sequence_manager::SequenceManager> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::sequence_manager::internal::AtomicFlagSet::Group,std::default_delete<base::sequence_manager::internal::AtomicFlagSet::Group> >::~unique_ptr<base::sequence_manager::internal::AtomicFlagSet::Group,std::default_delete<base::sequence_manager::internal::AtomicFlagSet::Group> >": {
            "offset": "0xE4E20"
        },
        "std::unique_ptr<base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring,std::default_delete<base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring> >::~unique_ptr<base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring,std::default_delete<base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task,&base::subtle::TimeTicksNowIgnoringOverride>::Ring> >": {
            "offset": "0xF32F0"
        },
        "std::unique_ptr<base::sequence_manager::internal::RealTimeDomain,std::default_delete<base::sequence_manager::internal::RealTimeDomain> >::~unique_ptr<base::sequence_manager::internal::RealTimeDomain,std::default_delete<base::sequence_manager::internal::RealTimeDomain> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::sequence_manager::internal::SequenceManagerImpl,std::default_delete<base::sequence_manager::internal::SequenceManagerImpl> >::~unique_ptr<base::sequence_manager::internal::SequenceManagerImpl,std::default_delete<base::sequence_manager::internal::SequenceManagerImpl> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> >::~unique_ptr<base::sequence_manager::internal::TaskQueueImpl,std::default_delete<base::sequence_manager::internal::TaskQueueImpl> >": {
            "offset": "0xE7C70"
        },
        "std::unique_ptr<base::sequence_manager::internal::ThreadController,std::default_delete<base::sequence_manager::internal::ThreadController> >::~unique_ptr<base::sequence_manager::internal::ThreadController,std::default_delete<base::sequence_manager::internal::ThreadController> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::sequence_manager::internal::ThreadControllerImpl,std::default_delete<base::sequence_manager::internal::ThreadControllerImpl> >::~unique_ptr<base::sequence_manager::internal::ThreadControllerImpl,std::default_delete<base::sequence_manager::internal::ThreadControllerImpl> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl,std::default_delete<base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl> >::~unique_ptr<base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl,std::default_delete<base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::sequence_manager::internal::WorkQueue,std::default_delete<base::sequence_manager::internal::WorkQueue> >::~unique_ptr<base::sequence_manager::internal::WorkQueue,std::default_delete<base::sequence_manager::internal::WorkQueue> >": {
            "offset": "0xF3300"
        },
        "std::unique_ptr<base::trace_event::ConvertableToTraceFormat,std::default_delete<base::trace_event::ConvertableToTraceFormat> >::~unique_ptr<base::trace_event::ConvertableToTraceFormat,std::default_delete<base::trace_event::ConvertableToTraceFormat> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> >::~unique_ptr<base::trace_event::MemoryAllocatorDump,std::default_delete<base::trace_event::MemoryAllocatorDump> >": {
            "offset": "0x14F2D0"
        },
        "std::unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> >::~unique_ptr<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState,std::default_delete<base::trace_event::MemoryDumpManager::ProcessMemoryDumpAsyncState> >": {
            "offset": "0x14AD30"
        },
        "std::unique_ptr<base::trace_event::MemoryDumpProvider,std::default_delete<base::trace_event::MemoryDumpProvider> >::~unique_ptr<base::trace_event::MemoryDumpProvider,std::default_delete<base::trace_event::MemoryDumpProvider> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::trace_event::ProcessMemoryDump,std::default_delete<base::trace_event::ProcessMemoryDump> >::~unique_ptr<base::trace_event::ProcessMemoryDump,std::default_delete<base::trace_event::ProcessMemoryDump> >": {
            "offset": "0x14AD40"
        },
        "std::unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >::~unique_ptr<base::trace_event::TraceBuffer,std::default_delete<base::trace_event::TraceBuffer> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::trace_event::TraceBufferChunk,std::default_delete<base::trace_event::TraceBufferChunk> >::reset": {
            "offset": "0x154F70"
        },
        "std::unique_ptr<base::trace_event::TraceBufferChunk,std::default_delete<base::trace_event::TraceBufferChunk> >::~unique_ptr<base::trace_event::TraceBufferChunk,std::default_delete<base::trace_event::TraceBufferChunk> >": {
            "offset": "0x153500"
        },
        "std::unique_ptr<base::trace_event::TraceEvent,std::default_delete<base::trace_event::TraceEvent> >::~unique_ptr<base::trace_event::TraceEvent,std::default_delete<base::trace_event::TraceEvent> >": {
            "offset": "0x163E50"
        },
        "std::unique_ptr<base::trace_event::TraceEventFilter,std::default_delete<base::trace_event::TraceEventFilter> >::~unique_ptr<base::trace_event::TraceEventFilter,std::default_delete<base::trace_event::TraceEventFilter> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::trace_event::TraceEventMemoryOverhead,std::default_delete<base::trace_event::TraceEventMemoryOverhead> >::~unique_ptr<base::trace_event::TraceEventMemoryOverhead,std::default_delete<base::trace_event::TraceEventMemoryOverhead> >": {
            "offset": "0x153570"
        },
        "std::unique_ptr<base::trace_event::TraceLog::EnabledStateObserver,std::default_delete<base::trace_event::TraceLog::EnabledStateObserver> >::~unique_ptr<base::trace_event::TraceLog::EnabledStateObserver,std::default_delete<base::trace_event::TraceLog::EnabledStateObserver> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::trace_event::TracedValue,std::default_delete<base::trace_event::TracedValue> >::~unique_ptr<base::trace_event::TracedValue,std::default_delete<base::trace_event::TracedValue> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::trace_event::TracedValue::Writer,std::default_delete<base::trace_event::TracedValue::Writer> >::~unique_ptr<base::trace_event::TracedValue::Writer,std::default_delete<base::trace_event::TracedValue::Writer> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::trace_event::`anonymous namespace'::PickleWriter,std::default_delete<base::trace_event::`anonymous namespace'::PickleWriter> >::~unique_ptr<base::trace_event::`anonymous namespace'::PickleWriter,std::default_delete<base::trace_event::`anonymous namespace'::PickleWriter> >": {
            "offset": "0x16CD90"
        },
        "std::unique_ptr<base::win::RegKey::Watcher,std::default_delete<base::win::RegKey::Watcher> >::~unique_ptr<base::win::RegKey::Watcher,std::default_delete<base::win::RegKey::Watcher> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::win::ScopedCOMInitializer,std::default_delete<base::win::ScopedCOMInitializer> >::~unique_ptr<base::win::ScopedCOMInitializer,std::default_delete<base::win::ScopedCOMInitializer> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<base::win::ScopedWindowsThreadEnvironment,std::default_delete<base::win::ScopedWindowsThreadEnvironment> >::~unique_ptr<base::win::ScopedWindowsThreadEnvironment,std::default_delete<base::win::ScopedWindowsThreadEnvironment> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<char [0],std::default_delete<char [0]> >::~unique_ptr<char [0],std::default_delete<char [0]> >": {
            "offset": "0xF640"
        },
        "std::unique_ptr<mojo::AssociatedGroup,std::default_delete<mojo::AssociatedGroup> >::~unique_ptr<mojo::AssociatedGroup,std::default_delete<mojo::AssociatedGroup> >": {
            "offset": "0x20EA90"
        },
        "std::unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> >::~unique_ptr<mojo::DataPipeProducer::DataSource,std::default_delete<mojo::DataPipeProducer::DataSource> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::FilteredDataSource::Filter,std::default_delete<mojo::FilteredDataSource::Filter> >::~unique_ptr<mojo::FilteredDataSource::Filter,std::default_delete<mojo::FilteredDataSource::Filter> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::InterfaceEndpointClient,std::default_delete<mojo::InterfaceEndpointClient> >::~unique_ptr<mojo::InterfaceEndpointClient,std::default_delete<mojo::InterfaceEndpointClient> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> >::~unique_ptr<mojo::InterfaceEndpointClient::SyncResponseInfo,std::default_delete<mojo::InterfaceEndpointClient::SyncResponseInfo> >": {
            "offset": "0x20EA60"
        },
        "std::unique_ptr<mojo::MessageFilter,std::default_delete<mojo::MessageFilter> >::~unique_ptr<mojo::MessageFilter,std::default_delete<mojo::MessageFilter> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::MessageHeaderValidator,std::default_delete<mojo::MessageHeaderValidator> >::~unique_ptr<mojo::MessageHeaderValidator,std::default_delete<mojo::MessageHeaderValidator> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >::~unique_ptr<mojo::MessageReceiver,std::default_delete<mojo::MessageReceiver> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::MessageReceiverWithStatus,std::default_delete<mojo::MessageReceiverWithStatus> >::~unique_ptr<mojo::MessageReceiverWithStatus,std::default_delete<mojo::MessageReceiverWithStatus> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::PassThroughFilter,std::default_delete<mojo::PassThroughFilter> >::~unique_ptr<mojo::PassThroughFilter,std::default_delete<mojo::PassThroughFilter> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::SequenceLocalSyncEventWatcher,std::default_delete<mojo::SequenceLocalSyncEventWatcher> >::~unique_ptr<mojo::SequenceLocalSyncEventWatcher,std::default_delete<mojo::SequenceLocalSyncEventWatcher> >": {
            "offset": "0x205C20"
        },
        "std::unique_ptr<mojo::SequenceLocalSyncEventWatcher::Registration,std::default_delete<mojo::SequenceLocalSyncEventWatcher::Registration> >::~unique_ptr<mojo::SequenceLocalSyncEventWatcher::Registration,std::default_delete<mojo::SequenceLocalSyncEventWatcher::Registration> >": {
            "offset": "0x2268D0"
        },
        "std::unique_ptr<mojo::SimpleWatcher,std::default_delete<mojo::SimpleWatcher> >::~unique_ptr<mojo::SimpleWatcher,std::default_delete<mojo::SimpleWatcher> >": {
            "offset": "0x205C50"
        },
        "std::unique_ptr<mojo::SyncEventWatcher,std::default_delete<mojo::SyncEventWatcher> >::~unique_ptr<mojo::SyncEventWatcher,std::default_delete<mojo::SyncEventWatcher> >": {
            "offset": "0x1B2930"
        },
        "std::unique_ptr<mojo::SyncHandleWatcher,std::default_delete<mojo::SyncHandleWatcher> >::~unique_ptr<mojo::SyncHandleWatcher,std::default_delete<mojo::SyncHandleWatcher> >": {
            "offset": "0x205C80"
        },
        "std::unique_ptr<mojo::ThreadSafeForwarder<IPC::mojom::Channel>,std::default_delete<mojo::ThreadSafeForwarder<IPC::mojom::Channel> > >::~unique_ptr<mojo::ThreadSafeForwarder<IPC::mojom::Channel>,std::default_delete<mojo::ThreadSafeForwarder<IPC::mojom::Channel> > >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> >::~unique_ptr<mojo::ThreadSafeForwarderBase::ForwardToCallingThread,std::default_delete<mojo::ThreadSafeForwarderBase::ForwardToCallingThread> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> >::~unique_ptr<mojo::ThreadSafeForwarderBase::SyncResponseSignaler,std::default_delete<mojo::ThreadSafeForwarderBase::SyncResponseSignaler> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::`anonymous namespace'::ResponderThunk,std::default_delete<mojo::`anonymous namespace'::ResponderThunk> >::~unique_ptr<mojo::`anonymous namespace'::ResponderThunk,std::default_delete<mojo::`anonymous namespace'::ResponderThunk> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::Broker,std::default_delete<mojo::core::Broker> >::~unique_ptr<mojo::core::Broker,std::default_delete<mojo::core::Broker> >": {
            "offset": "0x1D9410"
        },
        "std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >::~unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >": {
            "offset": "0x1BA6E0"
        },
        "std::unique_ptr<mojo::core::Channel::ReadBuffer,std::default_delete<mojo::core::Channel::ReadBuffer> >::~unique_ptr<mojo::core::Channel::ReadBuffer,std::default_delete<mojo::core::Channel::ReadBuffer> >": {
            "offset": "0x1BCC80"
        },
        "std::unique_ptr<mojo::core::HandleTable,std::default_delete<mojo::core::HandleTable> >::~unique_ptr<mojo::core::HandleTable,std::default_delete<mojo::core::HandleTable> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::NodeController,std::default_delete<mojo::core::NodeController> >::~unique_ptr<mojo::core::NodeController,std::default_delete<mojo::core::NodeController> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >::~unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >": {
            "offset": "0x1C2A70"
        },
        "std::unique_ptr<mojo::core::UserMessageImpl,std::default_delete<mojo::core::UserMessageImpl> >::~unique_ptr<mojo::core::UserMessageImpl,std::default_delete<mojo::core::UserMessageImpl> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >::~unique_ptr<mojo::core::`anonymous namespace'::ProcessDisconnectHandler,std::default_delete<mojo::core::`anonymous namespace'::ProcessDisconnectHandler> >": {
            "offset": "0x1C2AA0"
        },
        "std::unique_ptr<mojo::core::ports::Event,std::default_delete<mojo::core::ports::Event> >::~unique_ptr<mojo::core::ports::Event,std::default_delete<mojo::core::ports::Event> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::MergePortEvent,std::default_delete<mojo::core::ports::MergePortEvent> >::~unique_ptr<mojo::core::ports::MergePortEvent,std::default_delete<mojo::core::ports::MergePortEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::Node,std::default_delete<mojo::core::ports::Node> >::~unique_ptr<mojo::core::ports::Node,std::default_delete<mojo::core::ports::Node> >": {
            "offset": "0x1D9440"
        },
        "std::unique_ptr<mojo::core::ports::ObserveClosureEvent,std::default_delete<mojo::core::ports::ObserveClosureEvent> >::~unique_ptr<mojo::core::ports::ObserveClosureEvent,std::default_delete<mojo::core::ports::ObserveClosureEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::ObserveProxyAckEvent,std::default_delete<mojo::core::ports::ObserveProxyAckEvent> >::~unique_ptr<mojo::core::ports::ObserveProxyAckEvent,std::default_delete<mojo::core::ports::ObserveProxyAckEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::ObserveProxyEvent,std::default_delete<mojo::core::ports::ObserveProxyEvent> >::~unique_ptr<mojo::core::ports::ObserveProxyEvent,std::default_delete<mojo::core::ports::ObserveProxyEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::PortAcceptedEvent,std::default_delete<mojo::core::ports::PortAcceptedEvent> >::~unique_ptr<mojo::core::ports::PortAcceptedEvent,std::default_delete<mojo::core::ports::PortAcceptedEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::UserMessage,std::default_delete<mojo::core::ports::UserMessage> >::~unique_ptr<mojo::core::ports::UserMessage,std::default_delete<mojo::core::ports::UserMessage> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> >::~unique_ptr<mojo::core::ports::UserMessageEvent,std::default_delete<mojo::core::ports::UserMessageEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::UserMessageReadAckEvent,std::default_delete<mojo::core::ports::UserMessageReadAckEvent> >::~unique_ptr<mojo::core::ports::UserMessageReadAckEvent,std::default_delete<mojo::core::ports::UserMessageReadAckEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::core::ports::UserMessageReadAckRequestEvent,std::default_delete<mojo::core::ports::UserMessageReadAckRequestEvent> >::~unique_ptr<mojo::core::ports::UserMessageReadAckRequestEvent,std::default_delete<mojo::core::ports::UserMessageReadAckRequestEvent> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> >::~unique_ptr<mojo::internal::MessagePipeScoperBase,std::default_delete<mojo::internal::MessagePipeScoperBase> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> >::~unique_ptr<mojo::internal::MultiplexRouter::Task,std::default_delete<mojo::internal::MultiplexRouter::Task> >": {
            "offset": "0x218E30"
        },
        "std::unique_ptr<mojo::internal::UnserializedMessageContext,std::default_delete<mojo::internal::UnserializedMessageContext> >::~unique_ptr<mojo::internal::UnserializedMessageContext,std::default_delete<mojo::internal::UnserializedMessageContext> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<mojo::native::NativeStruct,std::default_delete<mojo::native::NativeStruct> >::~unique_ptr<mojo::native::NativeStruct,std::default_delete<mojo::native::NativeStruct> >": {
            "offset": "0x2422E0"
        },
        "std::unique_ptr<mojo::pipe_control::RunOrClosePipeInput,std::default_delete<mojo::pipe_control::RunOrClosePipeInput> >::~unique_ptr<mojo::pipe_control::RunOrClosePipeInput,std::default_delete<mojo::pipe_control::RunOrClosePipeInput> >": {
            "offset": "0x2433B0"
        },
        "std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >": {
            "offset": "0x39C0"
        },
        "std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x556A0"
        },
        "std::unique_ptr<std::pair<mojo::core::ports::NodeName,std::unique_ptr<mojo::core::ports::Event,std::default_delete<mojo::core::ports::Event> > >,std::default_delete<std::pair<mojo::core::ports::NodeName,std::unique_ptr<mojo::core::ports::Event,std::default_delete<mojo::core::ports::Event> > > > >::~unique_ptr<std::pair<mojo::core::ports::NodeName,std::unique_ptr<mojo::core::ports::Event,std::default_delete<mojo::core::ports::Event> > >,std::default_delete<std::pair<mojo::core::ports::NodeName,std::unique_ptr<mojo::core::ports::Event,std::default_delete<mojo::core::ports::Event> > > > >": {
            "offset": "0x1F1ED0"
        },
        "std::unique_ptr<std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::default_delete<std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~unique_ptr<std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::default_delete<std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >": {
            "offset": "0x146C30"
        },
        "std::unique_ptr<unsigned __int64 [0],std::default_delete<unsigned __int64 [0]> >::~unique_ptr<unsigned __int64 [0],std::default_delete<unsigned __int64 [0]> >": {
            "offset": "0xF640"
        },
        "std::unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >::~unique_ptr<unsigned char [0],std::default_delete<unsigned char [0]> >": {
            "offset": "0xF640"
        },
        "std::unique_ptr<unsigned int [0],std::default_delete<unsigned int [0]> >::~unique_ptr<unsigned int [0],std::default_delete<unsigned int [0]> >": {
            "offset": "0xF640"
        },
        "std::unique_ptr<void,void * (__cdecl*)(void *)>::~unique_ptr<void,void * (__cdecl*)(void *)>": {
            "offset": "0x22F0B0"
        },
        "std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::~unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >": {
            "offset": "0xF640"
        },
        "std::unordered_map<IPC::`anonymous namespace'::MessageMemoryDumpInfo,unsigned __int64,IPC::A0x56226f87::MessageMemoryDumpInfoHash,std::equal_to<IPC::`anonymous namespace'::MessageMemoryDumpInfo>,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > >::~unordered_map<IPC::`anonymous namespace'::MessageMemoryDumpInfo,unsigned __int64,IPC::A0x56226f87::MessageMemoryDumpInfoHash,std::equal_to<IPC::`anonymous namespace'::MessageMemoryDumpInfo>,std::allocator<std::pair<IPC::`anonymous namespace'::MessageMemoryDumpInfo const ,unsigned __int64> > >": {
            "offset": "0x1AA630"
        },
        "std::unordered_map<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::HistogramBase *,base::StringPieceHashImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::equal_to<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > >::~unordered_map<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,base::HistogramBase *,base::StringPieceHashImpl<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::equal_to<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<base::BasicStringPiece<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,base::HistogramBase *> > >": {
            "offset": "0x9FAC0"
        },
        "std::unordered_map<base::internal::CheckedLockImpl const *,base::internal::CheckedLockImpl const *,std::hash<base::internal::CheckedLockImpl const *>,std::equal_to<base::internal::CheckedLockImpl const *>,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > >::~unordered_map<base::internal::CheckedLockImpl const *,base::internal::CheckedLockImpl const *,std::hash<base::internal::CheckedLockImpl const *>,std::equal_to<base::internal::CheckedLockImpl const *>,std::allocator<std::pair<base::internal::CheckedLockImpl const * const,base::internal::CheckedLockImpl const *> > >": {
            "offset": "0xDEF30"
        },
        "std::unordered_map<int,IPC::Listener *,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,IPC::Listener *> > >::~unordered_map<int,IPC::Listener *,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,IPC::Listener *> > >": {
            "offset": "0xDEF30"
        },
        "std::unordered_map<int,base::FilePath,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,base::FilePath> > >::unordered_map<int,base::FilePath,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,base::FilePath> > >": {
            "offset": "0xA6360"
        },
        "std::unordered_map<int,base::FilePath,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,base::FilePath> > >::~unordered_map<int,base::FilePath,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,base::FilePath> > >": {
            "offset": "0xA6500"
        },
        "std::unordered_map<int,int,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,int> > >::~unordered_map<int,int,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,int> > >": {
            "offset": "0x9FAE0"
        },
        "std::unordered_map<int,scoped_refptr<base::SingleThreadTaskRunner>,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >::~unordered_map<int,scoped_refptr<base::SingleThreadTaskRunner>,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,scoped_refptr<base::SingleThreadTaskRunner> > > >": {
            "offset": "0x163E90"
        },
        "std::unordered_map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::unordered_map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x163230"
        },
        "std::unordered_map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~unordered_map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x163E80"
        },
        "std::unordered_map<int,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> >,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > >::~unordered_map<int,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> >,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<int const ,std::stack<base::TimeTicks,base::circular_deque<base::TimeTicks> > > > >": {
            "offset": "0x163EA0"
        },
        "std::unordered_map<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > >::unordered_map<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > >": {
            "offset": "0x1D8BA0"
        },
        "std::unordered_map<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > >::~unordered_map<mojo::core::ports::NodeName,scoped_refptr<mojo::core::NodeChannel>,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,scoped_refptr<mojo::core::NodeChannel> > > >": {
            "offset": "0x1D9480"
        },
        "std::unordered_map<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > >::unordered_map<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > >": {
            "offset": "0x1D8B20"
        },
        "std::unordered_map<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > >::~unordered_map<mojo::core::ports::NodeName,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > >,std::hash<mojo::core::ports::NodeName>,std::equal_to<mojo::core::ports::NodeName>,std::allocator<std::pair<mojo::core::ports::NodeName const ,std::queue<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> >,base::circular_deque<std::unique_ptr<mojo::core::Channel::Message,std::default_delete<mojo::core::Channel::Message> > > > > > >": {
            "offset": "0x1D9470"
        },
        "std::unordered_map<mojo::core::ports::PortName,scoped_refptr<mojo::core::ports::Port>,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > >::~unordered_map<mojo::core::ports::PortName,scoped_refptr<mojo::core::ports::Port>,std::hash<mojo::core::ports::PortName>,std::equal_to<mojo::core::ports::PortName>,std::allocator<std::pair<mojo::core::ports::PortName const ,scoped_refptr<mojo::core::ports::Port> > > >": {
            "offset": "0x1E9380"
        },
        "std::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(int)>,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,base::RepeatingCallback<void __cdecl(int)>,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,base::RepeatingCallback<void __cdecl(int)> > > >": {
            "offset": "0x9FAD0"
        },
        "std::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,int> > >": {
            "offset": "0x163EB0"
        },
        "std::unordered_map<unsigned int,mojo::core::HandleTable::Entry,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > >::~unordered_map<unsigned int,mojo::core::HandleTable::Entry,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,mojo::core::HandleTable::Entry> > >": {
            "offset": "0x1CFF00"
        },
        "std::unordered_map<void *,base::SamplingHeapProfiler::Sample,std::hash<void *>,std::equal_to<void *>,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> > >::~unordered_map<void *,base::SamplingHeapProfiler::Sample,std::hash<void *>,std::equal_to<void *>,std::allocator<std::pair<void * const,base::SamplingHeapProfiler::Sample> > >": {
            "offset": "0xC0B80"
        },
        "std::unordered_map<void *,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >,std::hash<void *>,std::equal_to<void *>,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > >::~unordered_map<void *,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> >,std::hash<void *>,std::equal_to<void *>,std::allocator<std::pair<void * const,std::unique_ptr<mojo::core::PlatformSharedMemoryMapping,std::default_delete<mojo::core::PlatformSharedMemoryMapping> > > > >": {
            "offset": "0x1C2BC0"
        },
        "std::unordered_set<base::BucketRanges const *,base::StatisticsRecorder::BucketRangesHash,base::StatisticsRecorder::BucketRangesEqual,std::allocator<base::BucketRanges const *> >::~unordered_set<base::BucketRanges const *,base::StatisticsRecorder::BucketRangesHash,base::StatisticsRecorder::BucketRangesEqual,std::allocator<base::BucketRanges const *> >": {
            "offset": "0x9FAE0"
        },
        "std::unordered_set<char const *,std::hash<char const *>,std::equal_to<char const *>,std::allocator<char const *> >::~unordered_set<char const *,std::hash<char const *>,std::equal_to<char const *>,std::allocator<char const *> >": {
            "offset": "0x9FAE0"
        },
        "std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x157350"
        },
        "std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x157FD0"
        },
        "std::unordered_set<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<unsigned long> >::unordered_set<unsigned long,std::hash<unsigned long>,std::equal_to<unsigned long>,std::allocator<unsigned long> >": {
            "offset": "0x157210"
        },
        "std::upper_bound<base::CheckedContiguousIterator<unsigned int const >,unsigned __int64,std::less<void> >": {
            "offset": "0xB19E0"
        },
        "std::uppercase": {
            "offset": "0x1E7970"
        },
        "std::use_facet<std::codecvt<char,char,_Mbstatet> >": {
            "offset": "0x4B990"
        },
        "std::use_facet<std::ctype<char> >": {
            "offset": "0x1306E0"
        },
        "swprintf": {
            "offset": "0xD7E40"
        },
        "trace_event_internal::AddMetadataEvent": {
            "offset": "0x164CA0"
        },
        "trace_event_internal::AddTraceEvent": {
            "offset": "0xE9480"
        },
        "trace_event_internal::AddTraceEventWithBindId": {
            "offset": "0x165710"
        },
        "trace_event_internal::AddTraceEventWithProcessId": {
            "offset": "0x1658A0"
        },
        "trace_event_internal::AddTraceEventWithThreadIdAndTimestamp": {
            "offset": "0x166250"
        },
        "trace_event_internal::GetNumTracesRecorded": {
            "offset": "0x169470"
        },
        "trace_event_internal::HeapProfilerScopedIgnore::HeapProfilerScopedIgnore": {
            "offset": "0x31C0"
        },
        "trace_event_internal::HeapProfilerScopedIgnore::~HeapProfilerScopedIgnore": {
            "offset": "0x3A10"
        },
        "trace_event_internal::HeapProfilerScopedStackFrame::~HeapProfilerScopedStackFrame": {
            "offset": "0xFCF00"
        },
        "trace_event_internal::HeapProfilerScopedTaskExecutionTracker::~HeapProfilerScopedTaskExecutionTracker": {
            "offset": "0xFCF40"
        },
        "trace_event_internal::ScopedTraceBinaryEfficient::ScopedTraceBinaryEfficient": {
            "offset": "0x163350"
        },
        "trace_event_internal::ScopedTraceBinaryEfficient::~ScopedTraceBinaryEfficient": {
            "offset": "0x1640B0"
        },
        "trace_event_internal::ScopedTracer::Initialize": {
            "offset": "0xAC10"
        },
        "trace_event_internal::ScopedTracer::ScopedTracer": {
            "offset": "0x30F0"
        },
        "trace_event_internal::ScopedTracer::~ScopedTracer": {
            "offset": "0x3BB0"
        },
        "trace_event_internal::TraceID::TraceID": {
            "offset": "0x3690"
        },
        "trace_event_internal::TraceID::has_prefix": {
            "offset": "0xD630"
        },
        "trace_event_internal::TraceID::id_flags": {
            "offset": "0xD680"
        },
        "trace_event_internal::TraceID::prefix": {
            "offset": "0xAAB0"
        },
        "trace_event_internal::TraceID::raw_id": {
            "offset": "0xD8F0"
        },
        "trace_event_internal::TraceID::scope": {
            "offset": "0xAB80"
        },
        "trace_event_internal::UpdateTraceEventDuration": {
            "offset": "0x16BBF0"
        },
        "trace_event_internal::UpdateTraceEventDurationExplicit": {
            "offset": "0x16C030"
        }
    }
}