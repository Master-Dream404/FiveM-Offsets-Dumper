{
    "nui-gsclient.dll": {
        "<lambda_11c5c011f2722fe5846e3ebc09b80519>::~<lambda_11c5c011f2722fe5846e3ebc09b80519>": {
            "offset": "0x1C650"
        },
        "<lambda_3c4da36579779a8aa59ffe6304652097>::~<lambda_3c4da36579779a8aa59ffe6304652097>": {
            "offset": "0x1C6D0"
        },
        "<lambda_41af1ba482b752c39807db2ef15caf48>::~<lambda_41af1ba482b752c39807db2ef15caf48>": {
            "offset": "0xA0C0"
        },
        "<lambda_47c7abed81b887d9b1f03e84be315afa>::~<lambda_47c7abed81b887d9b1f03e84be315afa>": {
            "offset": "0x1C730"
        },
        "<lambda_4bd345ce870bcb6a9dba57dde6595eaf>::<lambda_4bd345ce870bcb6a9dba57dde6595eaf>": {
            "offset": "0xEB60"
        },
        "<lambda_7604da78e8f33a312c72ae5a43f9b93b>::~<lambda_7604da78e8f33a312c72ae5a43f9b93b>": {
            "offset": "0x1C7E0"
        },
        "<lambda_7871d71d345db730e5e5ee19837ae8ba>::~<lambda_7871d71d345db730e5e5ee19837ae8ba>": {
            "offset": "0x1C810"
        },
        "<lambda_b5c74389bb0c23f2fc47efd332539dd8>::~<lambda_b5c74389bb0c23f2fc47efd332539dd8>": {
            "offset": "0x1C860"
        },
        "<lambda_c4854cf4b185a6bb580702f1ea495b0b>::<lambda_c4854cf4b185a6bb580702f1ea495b0b>": {
            "offset": "0x1B720"
        },
        "<lambda_c4854cf4b185a6bb580702f1ea495b0b>::~<lambda_c4854cf4b185a6bb580702f1ea495b0b>": {
            "offset": "0x1C8E0"
        },
        "<lambda_ce34850a21ec92d50ae707a6354bd250>::~<lambda_ce34850a21ec92d50ae707a6354bd250>": {
            "offset": "0x1C730"
        },
        "<lambda_f17ebabe33bc32be107ce6fff046b802>::~<lambda_f17ebabe33bc32be107ce6fff046b802>": {
            "offset": "0x1C7E0"
        },
        "CfxState::CfxState": {
            "offset": "0x2FBF0"
        },
        "Component::As": {
            "offset": "0xE080"
        },
        "Component::IsA": {
            "offset": "0xE140"
        },
        "Component::SetCommandLine": {
            "offset": "0x9FA0"
        },
        "Component::SetUserData": {
            "offset": "0xE150"
        },
        "ComponentInstance::DoGameLoad": {
            "offset": "0xE120"
        },
        "ComponentInstance::Initialize": {
            "offset": "0xE130"
        },
        "ComponentInstance::Shutdown": {
            "offset": "0xE150"
        },
        "ConVar<int>::ConVar<int>": {
            "offset": "0x1B7B0"
        },
        "ConVar<int>::~ConVar<int>": {
            "offset": "0x1CA20"
        },
        "ConsoleArgumentType<int,void>::Parse": {
            "offset": "0x27650"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_41af1ba482b752c39807db2ef15caf48> >": {
            "offset": "0xEB70"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_cd07e93ce4e084374db77c62c4f7d117> >": {
            "offset": "0xEDD0"
        },
        "ConsoleCommand::~ConsoleCommand": {
            "offset": "0x1D010"
        },
        "ConsoleFlagsToString": {
            "offset": "0x23C80"
        },
        "ContinueLanQuery": {
            "offset": "0x23FA0"
        },
        "CoreGetComponentRegistry": {
            "offset": "0x24370"
        },
        "CoreGetGlobalInstanceRegistry": {
            "offset": "0x24400"
        },
        "CreateComponent": {
            "offset": "0xE160"
        },
        "CreateVariableEntry<int>": {
            "offset": "0xFE50"
        },
        "DllMain": {
            "offset": "0x368EC"
        },
        "DoNtRaiseException": {
            "offset": "0x32080"
        },
        "FatalErrorNoExceptRealV": {
            "offset": "0xB670"
        },
        "FatalErrorRealV": {
            "offset": "0xB6A0"
        },
        "FormatErrorPickup<std::tuple<std::basic_string_view<char,std::char_traits<char> >,int,unsigned int> >": {
            "offset": "0x1DD0"
        },
        "GSClient_GetFavorites": {
            "offset": "0x24920"
        },
        "GSClient_HandleInfoResponse": {
            "offset": "0x24E00"
        },
        "GSClient_Init": {
            "offset": "0x25830"
        },
        "GSClient_Ping": {
            "offset": "0x258E0"
        },
        "GSClient_PollSocket": {
            "offset": "0x25EC0"
        },
        "GSClient_QueryOneServer": {
            "offset": "0x26150"
        },
        "GSClient_QueryOneServerWrap": {
            "offset": "0x270F0"
        },
        "GetAbsoluteCitPath": {
            "offset": "0x305B0"
        },
        "GlobalErrorHandler": {
            "offset": "0xB8E0"
        },
        "HookFunctionBase::RunAll": {
            "offset": "0x32EE0"
        },
        "HostSharedData<CfxState>::HostSharedData<CfxState>": {
            "offset": "0x2F820"
        },
        "HostSharedData<CfxState>::~HostSharedData<CfxState>": {
            "offset": "0x2FCB0"
        },
        "HttpRequestOptions::HttpRequestOptions": {
            "offset": "0x1C340"
        },
        "HttpRequestOptions::~HttpRequestOptions": {
            "offset": "0x1D0A0"
        },
        "Info_ValueForKey": {
            "offset": "0x272C0"
        },
        "InitFunction::Run": {
            "offset": "0xE190"
        },
        "InitFunctionBase::InitFunctionBase": {
            "offset": "0x31E90"
        },
        "InitFunctionBase::Register": {
            "offset": "0x321F0"
        },
        "InitFunctionBase::RunAll": {
            "offset": "0x32240"
        },
        "InitSocket": {
            "offset": "0x27400"
        },
        "Instance<HttpClient>::Get": {
            "offset": "0x27120"
        },
        "LoadInfoBlob<<lambda_c4854cf4b185a6bb580702f1ea495b0b> >": {
            "offset": "0x10940"
        },
        "MakeRelativeCitPath": {
            "offset": "0xBF80"
        },
        "RaiseDebugException": {
            "offset": "0x32160"
        },
        "RequestInfoBlob<<lambda_c4854cf4b185a6bb580702f1ea495b0b> >": {
            "offset": "0x12FB0"
        },
        "ScopedError::~ScopedError": {
            "offset": "0xA190"
        },
        "SysError": {
            "offset": "0xC500"
        },
        "ToNarrow": {
            "offset": "0x32270"
        },
        "ToWide": {
            "offset": "0x32360"
        },
        "TraceRealV": {
            "offset": "0x32670"
        },
        "Win32TrapAndJump64": {
            "offset": "0x32F10"
        },
        "_DllMainCRTStartup": {
            "offset": "0x362B0"
        },
        "_Init_thread_abort": {
            "offset": "0x355C4"
        },
        "_Init_thread_footer": {
            "offset": "0x355F4"
        },
        "_Init_thread_header": {
            "offset": "0x35654"
        },
        "_Init_thread_notify": {
            "offset": "0x356BC"
        },
        "_Init_thread_wait": {
            "offset": "0x35700"
        },
        "_RTC_Initialize": {
            "offset": "0x3693C"
        },
        "_RTC_Terminate": {
            "offset": "0x36978"
        },
        "_Smtx_lock_exclusive": {
            "offset": "0x354BC"
        },
        "_Smtx_unlock_exclusive": {
            "offset": "0x354C4"
        },
        "__ArrayUnwind": {
            "offset": "0x35EC4"
        },
        "__GSHandlerCheck": {
            "offset": "0x35CE0"
        },
        "__GSHandlerCheckCommon": {
            "offset": "0x35D00"
        },
        "__GSHandlerCheck_EH": {
            "offset": "0x35D5C"
        },
        "__GSHandlerCheck_SEH": {
            "offset": "0x3646C"
        },
        "__chkstk": {
            "offset": "0x35F40"
        },
        "__crt_debugger_hook": {
            "offset": "0x366B0"
        },
        "__dyn_tls_init": {
            "offset": "0x35B28"
        },
        "__dyn_tls_on_demand_init": {
            "offset": "0x35B90"
        },
        "__isa_available_init": {
            "offset": "0x36504"
        },
        "__local_stdio_printf_options": {
            "offset": "0xDF60"
        },
        "__local_stdio_scanf_options": {
            "offset": "0x36910"
        },
        "__raise_securityfailure": {
            "offset": "0x362F0"
        },
        "__report_gsfailure": {
            "offset": "0x36324"
        },
        "__scrt_acquire_startup_lock": {
            "offset": "0x357A8"
        },
        "__scrt_dllmain_after_initialize_c": {
            "offset": "0x357E4"
        },
        "__scrt_dllmain_before_initialize_c": {
            "offset": "0x35818"
        },
        "__scrt_dllmain_crt_thread_attach": {
            "offset": "0x35830"
        },
        "__scrt_dllmain_crt_thread_detach": {
            "offset": "0x35858"
        },
        "__scrt_dllmain_exception_filter": {
            "offset": "0x35870"
        },
        "__scrt_dllmain_uninitialize_c": {
            "offset": "0x358D0"
        },
        "__scrt_dllmain_uninitialize_critical": {
            "offset": "0x35900"
        },
        "__scrt_fastfail": {
            "offset": "0x366B8"
        },
        "__scrt_get_dyn_tls_init_callback": {
            "offset": "0x36934"
        },
        "__scrt_initialize_crt": {
            "offset": "0x35914"
        },
        "__scrt_initialize_default_local_stdio_options": {
            "offset": "0x36918"
        },
        "__scrt_initialize_onexit_tables": {
            "offset": "0x35960"
        },
        "__scrt_initialize_thread_safe_statics": {
            "offset": "0x354CC"
        },
        "__scrt_initialize_type_info": {
            "offset": "0x35E3C"
        },
        "__scrt_is_nonwritable_in_current_image": {
            "offset": "0x359EC"
        },
        "__scrt_is_nonwritable_in_current_image$filt$0": {
            "offset": "0x3827D"
        },
        "__scrt_is_ucrt_dll_in_use": {
            "offset": "0x36834"
        },
        "__scrt_release_startup_lock": {
            "offset": "0x35A84"
        },
        "__scrt_stub_for_acrt_initialize": {
            "offset": "0xE150"
        },
        "__scrt_stub_for_acrt_thread_attach": {
            "offset": "0xE150"
        },
        "__scrt_stub_for_acrt_thread_detach": {
            "offset": "0xE150"
        },
        "__scrt_stub_for_acrt_uninitialize": {
            "offset": "0xE150"
        },
        "__scrt_stub_for_acrt_uninitialize_critical": {
            "offset": "0xE150"
        },
        "__scrt_stub_for_is_c_termination_complete": {
            "offset": "0xE080"
        },
        "__scrt_throw_std_bad_alloc": {
            "offset": "0x36804"
        },
        "__scrt_throw_std_bad_array_new_length": {
            "offset": "0xCD00"
        },
        "__scrt_uninitialize_crt": {
            "offset": "0x35AA8"
        },
        "__scrt_uninitialize_thread_safe_statics": {
            "offset": "0x3559C"
        },
        "__scrt_uninitialize_type_info": {
            "offset": "0x35E4C"
        },
        "__security_check_cookie": {
            "offset": "0x35DF0"
        },
        "__security_init_cookie": {
            "offset": "0x36840"
        },
        "__std_find_trivial_1": {
            "offset": "0x35250"
        },
        "__std_find_trivial_2": {
            "offset": "0x35320"
        },
        "__std_init_once_link_alternate_names_and_abort": {
            "offset": "0x354B0"
        },
        "_get_startup_argv_mode": {
            "offset": "0x3682C"
        },
        "_guard_check_icall_nop": {
            "offset": "0x9FA0"
        },
        "_guard_dispatch_icall_nop": {
            "offset": "0x36AE0"
        },
        "_guard_xfg_dispatch_icall_nop": {
            "offset": "0x36B00"
        },
        "_onexit": {
            "offset": "0x35AD4"
        },
        "_snprintf": {
            "offset": "0x2A720"
        },
        "_wwassert": {
            "offset": "0x30930"
        },
        "`__ArrayUnwind'::`1'::filt$0": {
            "offset": "0x382C1"
        },
        "`dllmain_crt_process_attach'::`1'::fin$0": {
            "offset": "0x38320"
        },
        "`dllmain_crt_process_detach'::`1'::fin$0": {
            "offset": "0x38337"
        },
        "`dllmain_crt_process_detach'::`1'::fin$1": {
            "offset": "0x38350"
        },
        "`dllmain_dispatch'::`1'::filt$0": {
            "offset": "0x38364"
        },
        "`dynamic initializer for '_init_instance_0''": {
            "offset": "0x1210"
        },
        "`dynamic initializer for '_init_instance_1''": {
            "offset": "0x1240"
        },
        "`dynamic initializer for '_init_instance_2''": {
            "offset": "0x1270"
        },
        "`dynamic initializer for '_init_instance_3''": {
            "offset": "0x12A0"
        },
        "`dynamic initializer for '_init_instance_4''": {
            "offset": "0x12D0"
        },
        "`dynamic initializer for 'g_cls''": {
            "offset": "0x1300"
        },
        "`dynamic initializer for 'g_queryArg''": {
            "offset": "0x13D0"
        },
        "`dynamic initializer for 'g_queryArgMutex''": {
            "offset": "0x13E0"
        },
        "`dynamic initializer for 'g_queryArgOrig''": {
            "offset": "0x1410"
        },
        "`dynamic initializer for 'g_thisError''": {
            "offset": "0x1030"
        },
        "`dynamic initializer for 'initFunction''": {
            "offset": "0x1420"
        },
        "`dynamic initializer for 'initIoBuf''": {
            "offset": "0x1470"
        },
        "`dynamic initializer for 'tbb::detail::r1::concurrent_monitor_mutex::my_init_mutex''": {
            "offset": "0x1600"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>,<lambda_11c5c011f2722fe5846e3ebc09b80519> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D190"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>,<lambda_11c5c011f2722fe5846e3ebc09b80519> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D190"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1B0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1B0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>,<lambda_47c7abed81b887d9b1f03e84be315afa> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>,<lambda_47c7abed81b887d9b1f03e84be315afa> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>,<lambda_7604da78e8f33a312c72ae5a43f9b93b> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>,<lambda_b5c74389bb0c23f2fc47efd332539dd8> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1F0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>,<lambda_b5c74389bb0c23f2fc47efd332539dd8> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1F0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>,<lambda_ce34850a21ec92d50ae707a6354bd250> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>,<lambda_f17ebabe33bc32be107ce6fff046b802> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1D1D0"
        },
        "atexit": {
            "offset": "0x35B10"
        },
        "boost::optional<net::PeerAddress>::~optional<net::PeerAddress>": {
            "offset": "0x1CD20"
        },
        "capture_previous_context": {
            "offset": "0x363F8"
        },
        "console::DPrintfv": {
            "offset": "0x24490"
        },
        "console::PrintWarning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x12C40"
        },
        "console::Printfv": {
            "offset": "0x27720"
        },
        "dllmain_crt_dispatch": {
            "offset": "0x35F90"
        },
        "dllmain_crt_process_attach": {
            "offset": "0x35FE0"
        },
        "dllmain_crt_process_detach": {
            "offset": "0x360F8"
        },
        "dllmain_dispatch": {
            "offset": "0x3617C"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::grow": {
            "offset": "0xD340"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::~basic_memory_buffer<char,500,std::allocator<char> >": {
            "offset": "0xA060"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::grow": {
            "offset": "0x2F040"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::~basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >": {
            "offset": "0x2E3E0"
        },
        "fmt::v8::basic_memory_buffer<wchar_t,500,std::allocator<wchar_t> >::grow": {
            "offset": "0x28A20"
        },
        "fmt::v8::basic_memory_buffer<wchar_t,500,std::allocator<wchar_t> >::~basic_memory_buffer<wchar_t,500,std::allocator<wchar_t> >": {
            "offset": "0x1CC60"
        },
        "fmt::v8::detail::add_compare": {
            "offset": "0x2E7B0"
        },
        "fmt::v8::detail::assert_fail": {
            "offset": "0x2E8F0"
        },
        "fmt::v8::detail::bigint::assign_pow10": {
            "offset": "0x2E940"
        },
        "fmt::v8::detail::bigint::divmod_assign": {
            "offset": "0x2EB10"
        },
        "fmt::v8::detail::bigint::square": {
            "offset": "0x2F410"
        },
        "fmt::v8::detail::bigint::~bigint": {
            "offset": "0x2E3E0"
        },
        "fmt::v8::detail::buffer<char>::append<char>": {
            "offset": "0x2870"
        },
        "fmt::v8::detail::buffer<char>::try_resize": {
            "offset": "0x2F6D0"
        },
        "fmt::v8::detail::check_int_type_spec<fmt::v8::detail::error_handler &>": {
            "offset": "0x14B00"
        },
        "fmt::v8::detail::compare": {
            "offset": "0x2EA70"
        },
        "fmt::v8::detail::copy_str<wchar_t,char const *,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x14BC0"
        },
        "fmt::v8::detail::count_digits": {
            "offset": "0xD120"
        },
        "fmt::v8::detail::decimal_point_impl<char>": {
            "offset": "0x2AC80"
        },
        "fmt::v8::detail::decimal_point_impl<wchar_t>": {
            "offset": "0x2AD90"
        },
        "fmt::v8::detail::do_throw<fmt::v8::format_error>": {
            "offset": "0x2920"
        },
        "fmt::v8::detail::dragonbox::cache_accessor<double>::get_cached_power": {
            "offset": "0x2EF10"
        },
        "fmt::v8::detail::dragonbox::is_endpoint_integer<double>": {
            "offset": "0x2CC00"
        },
        "fmt::v8::detail::dragonbox::remove_trailing_zeros": {
            "offset": "0x2F1F0"
        },
        "fmt::v8::detail::dragonbox::shorter_interval_case<float>": {
            "offset": "0x2CC30"
        },
        "fmt::v8::detail::dragonbox::to_decimal<double>": {
            "offset": "0x2DA00"
        },
        "fmt::v8::detail::dragonbox::to_decimal<float>": {
            "offset": "0x2D5D0"
        },
        "fmt::v8::detail::error_handler::on_error": {
            "offset": "0x2F170"
        },
        "fmt::v8::detail::fallback_format<double>": {
            "offset": "0x2AE40"
        },
        "fmt::v8::detail::fallback_format<long double>": {
            "offset": "0x2AE40"
        },
        "fmt::v8::detail::fill<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>": {
            "offset": "0x14C90"
        },
        "fmt::v8::detail::fill_n<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64,wchar_t>": {
            "offset": "0x14D50"
        },
        "fmt::v8::detail::fmt_snprintf": {
            "offset": "0x2EEA0"
        },
        "fmt::v8::detail::for_each_codepoint<`fmt::v8::detail::compute_width'::`2'::count_code_points>": {
            "offset": "0x2950"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64,fmt::v8::appender,0>": {
            "offset": "0x2C2F0"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64>": {
            "offset": "0x2C20"
        },
        "fmt::v8::detail::format_decimal<char,unsigned int,fmt::v8::appender,0>": {
            "offset": "0x2C1D0"
        },
        "fmt::v8::detail::format_float<double>": {
            "offset": "0x2A790"
        },
        "fmt::v8::detail::format_float<long double>": {
            "offset": "0x2C430"
        },
        "fmt::v8::detail::format_uint<4,char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x2D00"
        },
        "fmt::v8::detail::format_uint<4,wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64>": {
            "offset": "0x14DD0"
        },
        "fmt::v8::detail::grisu_gen_digits<fmt::v8::detail::fixed_handler>": {
            "offset": "0x2C790"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,char>": {
            "offset": "0x2E20"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,wchar_t>": {
            "offset": "0x2E20"
        },
        "fmt::v8::detail::parse_header<char,<lambda_10b59f138e704e35b5296527d0235f76> >": {
            "offset": "0x2F80"
        },
        "fmt::v8::detail::parse_header<wchar_t,<lambda_9f149cc28ea8d29dc23928a98d99e4aa> >": {
            "offset": "0x154C0"
        },
        "fmt::v8::detail::parse_nonnegative_int<char>": {
            "offset": "0x31E0"
        },
        "fmt::v8::detail::parse_nonnegative_int<wchar_t>": {
            "offset": "0x15740"
        },
        "fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>::write_null_pointer": {
            "offset": "0xDEB0"
        },
        "fmt::v8::detail::printf_arg_formatter<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>::write_null_pointer": {
            "offset": "0x2A450"
        },
        "fmt::v8::detail::snprintf_float<double>": {
            "offset": "0x2CE40"
        },
        "fmt::v8::detail::snprintf_float<long double>": {
            "offset": "0x2D0C0"
        },
        "fmt::v8::detail::thousands_sep_impl<char>": {
            "offset": "0x2D350"
        },
        "fmt::v8::detail::thousands_sep_impl<wchar_t>": {
            "offset": "0x2D4C0"
        },
        "fmt::v8::detail::thousands_sep_result<char>::~thousands_sep_result<char>": {
            "offset": "0xA0C0"
        },
        "fmt::v8::detail::thousands_sep_result<wchar_t>::~thousands_sep_result<wchar_t>": {
            "offset": "0xA0C0"
        },
        "fmt::v8::detail::to_unsigned<int>": {
            "offset": "0x32B0"
        },
        "fmt::v8::detail::utf8_decode": {
            "offset": "0xDCF0"
        },
        "fmt::v8::detail::vprintf<char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x48B0"
        },
        "fmt::v8::detail::vprintf<wchar_t,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x16F50"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,double,0>": {
            "offset": "0x58B0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,float,0>": {
            "offset": "0x5460"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,long double,0>": {
            "offset": "0x5CF0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned __int64,0>": {
            "offset": "0x2E150"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned int,0>": {
            "offset": "0x2E030"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender>": {
            "offset": "0x5390"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x17B90"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,double,0>": {
            "offset": "0x180B0"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,float,0>": {
            "offset": "0x17C60"
        },
        "fmt::v8::detail::write<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,long double,0>": {
            "offset": "0x184F0"
        },
        "fmt::v8::detail::write_bytes<1,wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x18930"
        },
        "fmt::v8::detail::write_bytes<2,wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x18A70"
        },
        "fmt::v8::detail::write_char<char,fmt::v8::appender>": {
            "offset": "0x6130"
        },
        "fmt::v8::detail::write_char<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x18BB0"
        },
        "fmt::v8::detail::write_exponent<char,fmt::v8::appender>": {
            "offset": "0x6170"
        },
        "fmt::v8::detail::write_exponent<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> > >": {
            "offset": "0x18CA0"
        },
        "fmt::v8::detail::write_float<fmt::v8::appender,fmt::v8::detail::big_decimal_fp,char>": {
            "offset": "0x6300"
        },
        "fmt::v8::detail::write_float<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,fmt::v8::detail::big_decimal_fp,wchar_t>": {
            "offset": "0x18E50"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x6CC0"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned int>": {
            "offset": "0x66D0"
        },
        "fmt::v8::detail::write_int<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64>": {
            "offset": "0x19980"
        },
        "fmt::v8::detail::write_int<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned int>": {
            "offset": "0x19360"
        },
        "fmt::v8::detail::write_int_data<char>::write_int_data<char>": {
            "offset": "0x9C50"
        },
        "fmt::v8::detail::write_int_data<wchar_t>::write_int_data<wchar_t>": {
            "offset": "0x9C50"
        },
        "fmt::v8::detail::write_int_localized<fmt::v8::appender,unsigned __int64,char>": {
            "offset": "0x73F0"
        },
        "fmt::v8::detail::write_int_localized<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64,wchar_t>": {
            "offset": "0x19FA0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_051aec1ce4ed0271119623a7e83ac6a5> &>": {
            "offset": "0x7810"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_22cb150d85fca5a3ac6a96f517638e39> &>": {
            "offset": "0x79E0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_69652fb90da4a77ba8cf5fef5ea19cdd> >": {
            "offset": "0x7B80"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_fbd162939e03e0c955beb05a33c24f5e> &>": {
            "offset": "0x7B80"
        },
        "fmt::v8::detail::write_padded<1,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_2d1811023212e86d2b251f7d81404f23> &>": {
            "offset": "0x1A430"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_02a1634acea1c2868026d163185cc0d5> &>": {
            "offset": "0x7D10"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06b2adfe852a46c8d65fe26cc7c8ca5d> &>": {
            "offset": "0x7F30"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06f64a48a5b4f184684d74740837f1c7> &>": {
            "offset": "0x80B0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_2d30ec7f416bbcee3bc8a87df0c22c03> >": {
            "offset": "0x9840"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_33ba7a720adff5c90e1946d777cb5230> &>": {
            "offset": "0x8240"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_4ea56d52f8212d84933fa76e5a159b3f> &>": {
            "offset": "0x8460"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_514469ad4ff2f796c2a70ef6994dff64> &>": {
            "offset": "0x8700"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_596cc5dacf733e82dcb56ca6ee54b81f> &>": {
            "offset": "0x8920"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_686459aaae64d4cbdde6763d637485ac> &>": {
            "offset": "0x8AA0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_694eb9c30a49e7dae164c077f09b5a7f> &>": {
            "offset": "0x8CC0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_8cce229a1891be08a4c6e75623ca3fd6> &>": {
            "offset": "0x8EE0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_b9c069f91a736dafbdb5ba8344e9f4c8> &>": {
            "offset": "0x9060"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_cb4d4b26b782de201d2a0edc777aea57> &>": {
            "offset": "0x9280"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_de0fdbc03b7ebc9cd9291e836878da40> &>": {
            "offset": "0x9400"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_f811a0db88237a09377d34dce98c0f31> &>": {
            "offset": "0x9620"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_1cbc5ef94e0da3c5d5dd40b631e0f419> &>": {
            "offset": "0x1A5B0"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_1e1b2d68aea4f6de5c63992fd3822582> &>": {
            "offset": "0x1A750"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_33daaad348c2531f94f8e1b1abe8ee99> &>": {
            "offset": "0x1A8F0"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_52a8b5dd947b5cef974142c59166c05a> &>": {
            "offset": "0x1AA80"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_763961065246f6495121c1e2aec344a8> &>": {
            "offset": "0x1AC20"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_b202e369ba43dfec7f2889d27268a32c> &>": {
            "offset": "0x1ADC0"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_d4b206abad762a6e1fb6da24cad44b9d> &>": {
            "offset": "0x1AF60"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_e2af9d0326dec73bc6415570a60a8ec4> &>": {
            "offset": "0x1B110"
        },
        "fmt::v8::detail::write_padded<2,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t,<lambda_faccbf2d03fcb51dc39f5a676348a8a1> &>": {
            "offset": "0x1B2B0"
        },
        "fmt::v8::detail::write_ptr<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x99D0"
        },
        "fmt::v8::detail::write_ptr<wchar_t,std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,unsigned __int64>": {
            "offset": "0x1B450"
        },
        "fmt::v8::detail::write_significand<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>": {
            "offset": "0x1B640"
        },
        "fmt::v8::format_error::format_error": {
            "offset": "0x9E50"
        },
        "fmt::v8::format_error::~format_error": {
            "offset": "0xA1F0"
        },
        "fmt::v8::sprintf<char [43],std::basic_string_view<char,std::char_traits<char> >,char const *,char>": {
            "offset": "0x314C0"
        },
        "fmt::v8::sprintf<wchar_t [32],unsigned __int64,wchar_t>": {
            "offset": "0x15830"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3720"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x160E0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3500"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x15EB0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x33D0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x15DA0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x32E0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x15C70"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3720"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x160E0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x35F0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x15FB0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3850"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t>,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x16220"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x43B0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x16CD0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3DE0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<wchar_t>,fmt::v8::basic_printf_context<std::back_insert_iterator<fmt::v8::detail::buffer<wchar_t> >,wchar_t> >": {
            "offset": "0x16770"
        },
        "fmt::v8::vsprintf<fmt::v8::basic_string_view<char>,char>": {
            "offset": "0x17930"
        },
        "fmt::v8::vsprintf<std::basic_string_view<char,std::char_traits<char> >,char>": {
            "offset": "0x31D60"
        },
        "fprintf": {
            "offset": "0xDF70"
        },
        "fwEvent<wchar_t const *,wchar_t const *>::ConnectInternal": {
            "offset": "0x23AB0"
        },
        "fwPlatformString::fwPlatformString": {
            "offset": "0x1C580"
        },
        "fwPlatformString::~fwPlatformString": {
            "offset": "0xA210"
        },
        "fwRefCountable::AddRef": {
            "offset": "0x32EA0"
        },
        "fwRefCountable::Release": {
            "offset": "0x32EB0"
        },
        "fwRefCountable::~fwRefCountable": {
            "offset": "0x32E90"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::Call": {
            "offset": "0x23210"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0xFBE0"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(void)> >::Call": {
            "offset": "0x23440"
        },
        "internal::ConsoleVariableEntry<int>::ConsoleVariableEntry<int>": {
            "offset": "0x1B940"
        },
        "internal::ConsoleVariableEntry<int>::GetOfflineValue": {
            "offset": "0xE960"
        },
        "internal::ConsoleVariableEntry<int>::GetValue": {
            "offset": "0xE820"
        },
        "internal::ConsoleVariableEntry<int>::SaveOfflineValue": {
            "offset": "0xE980"
        },
        "internal::ConsoleVariableEntry<int>::SetRawValue": {
            "offset": "0x27970"
        },
        "internal::ConsoleVariableEntry<int>::SetValue": {
            "offset": "0xE860"
        },
        "internal::ConsoleVariableEntry<int>::UpdateTrackingVariable": {
            "offset": "0xE990"
        },
        "internal::Constraints<int,void>::Compare": {
            "offset": "0x236A0"
        },
        "internal::UnparseArgument<int>": {
            "offset": "0x13620"
        },
        "launch::IsSDKGuest": {
            "offset": "0x308B0"
        },
        "qwords": {
            "qword_0x0": {
                "address": "0x7FF8FABF0000",
                "current_value": "0x300905A4D",
                "resolved_name": "dtor_list_head",
                "rva": "0x0",
                "type": "TlsDtorNode"
            },
            "qword_0x36AE0": {
                "address": "0x7FF8FAC26AE0",
                "current_value": "0xCCCCCCCCCCCCE0FF",
                "resolved_name": "_guard_dispatch_icall_nop",
                "rva": "0x36AE0"
            },
            "qword_0x36B00": {
                "address": "0x7FF8FAC26B00",
                "current_value": "0xCCCC00002E9A25FF",
                "resolved_name": "_guard_xfg_dispatch_icall_nop",
                "rva": "0x36B00"
            },
            "qword_0x39990": {
                "address": "0x7FF8FAC29990",
                "current_value": "0x7FF8FABF9FA0",
                "resolved_name": "__guard_check_icall_fptr",
                "rva": "0x39990"
            },
            "qword_0x39998": {
                "address": "0x7FF8FAC29998",
                "current_value": "0x7FF8FABF9FA0",
                "resolved_name": "__guard_xfg_check_icall_fptr",
                "rva": "0x39998"
            },
            "qword_0x399A0": {
                "address": "0x7FF8FAC299A0",
                "current_value": "0x7FF8FAC26AE0",
                "resolved_name": "__guard_dispatch_icall_fptr",
                "rva": "0x399A0"
            },
            "qword_0x399A8": {
                "address": "0x7FF8FAC299A8",
                "current_value": "0x7FF8FAC26B00",
                "resolved_name": "__guard_xfg_dispatch_icall_fptr",
                "rva": "0x399A8"
            },
            "qword_0x399B0": {
                "address": "0x7FF8FAC299B0",
                "current_value": "0x7FF8FAC26B00",
                "resolved_name": "__guard_xfg_table_dispatch_icall_fptr",
                "rva": "0x399B0"
            },
            "qword_0x399B8": {
                "address": "0x7FF8FAC299B8",
                "current_value": "0x0",
                "resolved_name": "__castguard_check_failure_os_handled_fptr",
                "rva": "0x399B8"
            },
            "qword_0x399C0": {
                "address": "0x7FF8FAC299C0",
                "current_value": "0x7FF8FAC269F0",
                "resolved_name": "__guard_memcpy_fptr",
                "rva": "0x399C0"
            },
            "qword_0x399C8": {
                "address": "0x7FF8FAC299C8",
                "current_value": "0x0",
                "resolved_name": "__xc_a",
                "rva": "0x399C8",
                "type": ""
            },
            "qword_0x399D0": {
                "address": "0x7FF8FAC299D0",
                "current_value": "0x7FF8FABF1660",
                "resolved_name": "std::_Fac_tidy_reg$initializer$",
                "rva": "0x399D0"
            },
            "qword_0x399D8": {
                "address": "0x7FF8FAC299D8",
                "current_value": "0x7FF8FABF1000",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x399D8"
            },
            "qword_0x399E0": {
                "address": "0x7FF8FAC299E0",
                "current_value": "0x7FF8FABF1060",
                "resolved_name": "xbr::kGameBuildUniquifiers$initializer$",
                "rva": "0x399E0"
            },
            "qword_0x399E8": {
                "address": "0x7FF8FAC299E8",
                "current_value": "0x7FF8FABF11E0",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x399E8"
            },
            "qword_0x399F0": {
                "address": "0x7FF8FAC299F0",
                "current_value": "0x7FF8FABF1210",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x399F0"
            },
            "qword_0x399F8": {
                "address": "0x7FF8FAC299F8",
                "current_value": "0x7FF8FABF1240",
                "resolved_name": "_init_instance_1$initializer$",
                "rva": "0x399F8"
            },
            "qword_0x39A00": {
                "address": "0x7FF8FAC29A00",
                "current_value": "0x7FF8FABF1270",
                "resolved_name": "_init_instance_2$initializer$",
                "rva": "0x39A00"
            },
            "qword_0x39A08": {
                "address": "0x7FF8FAC29A08",
                "current_value": "0x7FF8FABF12A0",
                "resolved_name": "_init_instance_3$initializer$",
                "rva": "0x39A08"
            },
            "qword_0x39A10": {
                "address": "0x7FF8FAC29A10",
                "current_value": "0x7FF8FABF12D0",
                "resolved_name": "_init_instance_4$initializer$",
                "rva": "0x39A10"
            },
            "qword_0x39A18": {
                "address": "0x7FF8FAC29A18",
                "current_value": "0x7FF8FABF1300",
                "resolved_name": "g_cls$initializer$",
                "rva": "0x39A18"
            },
            "qword_0x39A20": {
                "address": "0x7FF8FAC29A20",
                "current_value": "0x7FF8FABF1460",
                "resolved_name": "ui_maxQueriesPerMinute$initializer$",
                "rva": "0x39A20"
            },
            "qword_0x39A28": {
                "address": "0x7FF8FAC29A28",
                "current_value": "0x7FF8FABF13E0",
                "resolved_name": "g_queryArgMutex$initializer$",
                "rva": "0x39A28"
            },
            "qword_0x39A30": {
                "address": "0x7FF8FAC29A30",
                "current_value": "0x7FF8FABF13D0",
                "resolved_name": "g_queryArg$initializer$",
                "rva": "0x39A30"
            },
            "qword_0x39A38": {
                "address": "0x7FF8FAC29A38",
                "current_value": "0x7FF8FABF1410",
                "resolved_name": "g_queryArgOrig$initializer$",
                "rva": "0x39A38"
            },
            "qword_0x39A40": {
                "address": "0x7FF8FAC29A40",
                "current_value": "0x7FF8FABF1420",
                "resolved_name": "initFunction$initializer$",
                "rva": "0x39A40"
            },
            "qword_0x39A48": {
                "address": "0x7FF8FAC29A48",
                "current_value": "0x7FF8FABF1470",
                "resolved_name": "initIoBuf$initializer$",
                "rva": "0x39A48"
            },
            "qword_0x39A50": {
                "address": "0x7FF8FAC29A50",
                "current_value": "0x7FF8FABF14C0",
                "resolved_name": "tbb::detail::r1::allowed_parallelism_ctl$initializer$",
                "rva": "0x39A50"
            },
            "qword_0x39A58": {
                "address": "0x7FF8FAC29A58",
                "current_value": "0x7FF8FABF1560",
                "resolved_name": "tbb::detail::r1::stack_size_ctl$initializer$",
                "rva": "0x39A58"
            },
            "qword_0x39A60": {
                "address": "0x7FF8FAC29A60",
                "current_value": "0x7FF8FABF15B0",
                "resolved_name": "tbb::detail::r1::terminate_on_exception_ctl$initializer$",
                "rva": "0x39A60"
            },
            "qword_0x39A68": {
                "address": "0x7FF8FAC29A68",
                "current_value": "0x7FF8FABF1510",
                "resolved_name": "tbb::detail::r1::lifetime_ctl$initializer$",
                "rva": "0x39A68"
            },
            "qword_0x39A70": {
                "address": "0x7FF8FAC29A70",
                "current_value": "0x7FF8FABF1600",
                "resolved_name": "??my_init_mutex$initializer$@concurrent_monitor_mutex@r1@detail@tbb@@0P6AXXZEA@@3P6AXXZEA",
                "rva": "0x39A70"
            },
            "qword_0x39A78": {
                "address": "0x7FF8FAC29A78",
                "current_value": "0x7FF8FABF1630",
                "resolved_name": "tbb::detail::r1::__TBB_InitOnceHiddenInstance$initializer$",
                "rva": "0x39A78"
            },
            "qword_0x39A80": {
                "address": "0x7FF8FAC29A80",
                "current_value": "0x0",
                "resolved_name": "__xc_z",
                "rva": "0x39A80",
                "type": ""
            },
            "qword_0x39A88": {
                "address": "0x7FF8FAC29A88",
                "current_value": "0x0",
                "resolved_name": "__xd_a",
                "rva": "0x39A88"
            },
            "qword_0x39A90": {
                "address": "0x7FF8FAC29A90",
                "current_value": "0x7FF8FABF1030",
                "resolved_name": "g_thisError$initializer$",
                "rva": "0x39A90"
            },
            "qword_0x39A98": {
                "address": "0x7FF8FAC29A98",
                "current_value": "0x0",
                "resolved_name": "__xd_z",
                "rva": "0x39A98"
            },
            "qword_0x39AA0": {
                "address": "0x7FF8FAC29AA0",
                "current_value": "0x0",
                "resolved_name": "__xi_a",
                "rva": "0x39AA0",
                "type": ""
            },
            "qword_0x39AA8": {
                "address": "0x7FF8FAC29AA8",
                "current_value": "0x7FF8FAC254CC",
                "resolved_name": "__scrt_initialize_tss_var",
                "rva": "0x39AA8"
            },
            "qword_0x39AB0": {
                "address": "0x7FF8FAC29AB0",
                "current_value": "0x0",
                "resolved_name": "__xi_z",
                "rva": "0x39AB0",
                "type": ""
            },
            "qword_0x39AB8": {
                "address": "0x7FF8FAC29AB8",
                "current_value": "0x0",
                "resolved_name": "__xl_a",
                "rva": "0x39AB8"
            },
            "qword_0x39AC0": {
                "address": "0x7FF8FAC29AC0",
                "current_value": "0x7FF8FAC25B28",
                "resolved_name": "__xl_c",
                "rva": "0x39AC0"
            },
            "qword_0x39AC8": {
                "address": "0x7FF8FAC29AC8",
                "current_value": "0x7FF8FAC25BA0",
                "resolved_name": "__xl_d",
                "rva": "0x39AC8"
            },
            "qword_0x39AD0": {
                "address": "0x7FF8FAC29AD0",
                "current_value": "0x0",
                "resolved_name": "__xl_z",
                "rva": "0x39AD0"
            },
            "qword_0x39AD8": {
                "address": "0x7FF8FAC29AD8",
                "current_value": "0x0",
                "resolved_name": "__xp_a",
                "rva": "0x39AD8",
                "type": ""
            },
            "qword_0x39AE0": {
                "address": "0x7FF8FAC29AE0",
                "current_value": "0x0",
                "resolved_name": "__xp_z",
                "rva": "0x39AE0",
                "type": ""
            },
            "qword_0x39AE8": {
                "address": "0x7FF8FAC29AE8",
                "current_value": "0x0",
                "resolved_name": "__xt_a",
                "rva": "0x39AE8",
                "type": ""
            },
            "qword_0x39AF0": {
                "address": "0x7FF8FAC29AF0",
                "current_value": "0x0",
                "resolved_name": "__xt_z",
                "rva": "0x39AF0",
                "type": ""
            },
            "qword_0x39EE0": {
                "address": "0x7FF8FAC29EE0",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::exception::`vftable'",
                "rva": "0x39EE0",
                "type": ""
            },
            "qword_0x39F10": {
                "address": "0x7FF8FAC29F10",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::bad_alloc::`vftable'",
                "rva": "0x39F10",
                "type": ""
            },
            "qword_0x39F28": {
                "address": "0x7FF8FAC29F28",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::bad_array_new_length::`vftable'",
                "rva": "0x39F28",
                "type": ""
            },
            "qword_0x39F68": {
                "address": "0x7FF8FAC29F68",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::runtime_error::`vftable'",
                "rva": "0x39F68",
                "type": ""
            },
            "qword_0x39FD8": {
                "address": "0x7FF8FAC29FD8",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "fmt::v8::format_error::`vftable'",
                "rva": "0x39FD8",
                "type": ""
            },
            "qword_0x39FF0": {
                "address": "0x7FF8FAC29FF0",
                "current_value": "0x3330323031303030",
                "resolved_name": "fmt::v8::detail::basic_data<void>::digits",
                "rva": "0x39FF0",
                "type": ""
            },
            "qword_0x3A0B8": {
                "address": "0x7FF8FAC2A0B8",
                "current_value": "0x3736353433323130",
                "resolved_name": "fmt::v8::detail::basic_data<void>::hex_digits",
                "rva": "0x3A0B8",
                "type": ""
            },
            "qword_0x3A0CC": {
                "address": "0x7FF8FAC2A0CC",
                "current_value": "0x202B2D00",
                "resolved_name": "fmt::v8::detail::basic_data<void>::signs",
                "rva": "0x3A0CC",
                "type": ""
            },
            "qword_0x3A0D0": {
                "address": "0x7FF8FAC2A0D0",
                "current_value": "0x0",
                "resolved_name": "fmt::v8::detail::basic_data<void>::prefixes",
                "rva": "0x3A0D0",
                "type": ""
            },
            "qword_0x3A0E0": {
                "address": "0x7FF8FAC2A0E0",
                "current_value": "0x1001F1F",
                "resolved_name": "fmt::v8::detail::basic_data<void>::left_padding_shifts",
                "rva": "0x3A0E0",
                "type": ""
            },
            "qword_0x3A0E8": {
                "address": "0x7FF8FAC2A0E8",
                "current_value": "0x1001F00",
                "resolved_name": "fmt::v8::detail::basic_data<void>::right_padding_shifts",
                "rva": "0x3A0E8",
                "type": ""
            },
            "qword_0x3A360": {
                "address": "0x7FF8FAC2A360",
                "current_value": "0x7FF8FABFD340",
                "resolved_name": "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::`vftable'",
                "rva": "0x3A360",
                "type": ""
            },
            "qword_0x3AAA8": {
                "address": "0x7FF8FAC2AAA8",
                "current_value": "0x0",
                "resolved_name": "rapidjson::GenericStringRef<char>::emptyString",
                "rva": "0x3AAA8",
                "type": ""
            },
            "qword_0x3ACF0": {
                "address": "0x7FF8FAC2ACF0",
                "current_value": "0x7FF8FABFE040",
                "resolved_name": "fwRefCountable::`vftable'",
                "rva": "0x3ACF0",
                "type": ""
            },
            "qword_0x3AD10": {
                "address": "0x7FF8FAC2AD10",
                "current_value": "0x7FF8FABFE040",
                "resolved_name": "ComponentInstance::`vftable'",
                "rva": "0x3AD10",
                "type": ""
            },
            "qword_0x3AD68": {
                "address": "0x7FF8FAC2AD68",
                "current_value": "0x7FF8FABFE190",
                "resolved_name": "InitFunction::`vftable'",
                "rva": "0x3AD68",
                "type": ""
            },
            "qword_0x3B270": {
                "address": "0x7FF8FAC2B270",
                "current_value": "0x7FF8FABFE1A0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::`vftable'",
                "rva": "0x3B270",
                "type": ""
            },
            "qword_0x3B2A8": {
                "address": "0x7FF8FAC2B2A8",
                "current_value": "0x7FF8FABFE2F0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::`vftable'",
                "rva": "0x3B2A8",
                "type": ""
            },
            "qword_0x3B4F8": {
                "address": "0x7FF8FAC2B4F8",
                "current_value": "0x7FF8FABFE3D0",
                "resolved_name": "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::`vftable'",
                "rva": "0x3B4F8",
                "type": ""
            },
            "qword_0x3B620": {
                "address": "0x7FF8FAC2B620",
                "current_value": "0x7FF8FABFE4D0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::`vftable'",
                "rva": "0x3B620",
                "type": ""
            },
            "qword_0x3B658": {
                "address": "0x7FF8FAC2B658",
                "current_value": "0x7FF8FABFE5D0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::`vftable'",
                "rva": "0x3B658",
                "type": ""
            },
            "qword_0x3B690": {
                "address": "0x7FF8FAC2B690",
                "current_value": "0x7FF8FABFE6F0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_7871d71d345db730e5e5ee19837ae8ba>,void,bool,char const *,unsigned __int64>::`vftable'",
                "rva": "0x3B690",
                "type": ""
            },
            "qword_0x3B6C8": {
                "address": "0x7FF8FAC2B6C8",
                "current_value": "0x7FF8FABFE820",
                "resolved_name": "internal::ConsoleVariableEntry<int>::`vftable'",
                "rva": "0x3B6C8",
                "type": ""
            },
            "qword_0x3B6F8": {
                "address": "0x7FF8FAC2B6F8",
                "current_value": "0x7FF8FABFE9B0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_7dc6a386b82acc3fef031832612a7a66>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::`vftable'",
                "rva": "0x3B6F8",
                "type": ""
            },
            "qword_0x3B730": {
                "address": "0x7FF8FAC2B730",
                "current_value": "0x7FF8FABFEAE0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_7f9830bd709697b0ba9177318203469a>,bool,wchar_t const *,wchar_t const *>::`vftable'",
                "rva": "0x3B730",
                "type": ""
            },
            "qword_0x3C758": {
                "address": "0x7FF8FAC2C758",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::bad_cast::`vftable'",
                "rva": "0x3C758",
                "type": ""
            },
            "qword_0x3C780": {
                "address": "0x7FF8FAC2C780",
                "current_value": "0x7FF8FAC18A20",
                "resolved_name": "fmt::v8::basic_memory_buffer<wchar_t,500,std::allocator<wchar_t> >::`vftable'",
                "rva": "0x3C780",
                "type": ""
            },
            "qword_0x3D240": {
                "address": "0x7FF8FAC2D240",
                "current_value": "0xE060A020C0408000",
                "resolved_name": "tbb::detail::d0::reverse<unsigned char>::byte_table",
                "rva": "0x3D240",
                "type": ""
            },
            "qword_0x3D710": {
                "address": "0x7FF8FAC2D710",
                "current_value": "0x7FF8FAC13020",
                "resolved_name": "std::basic_filebuf<char,std::char_traits<char> >::`vftable'",
                "rva": "0x3D710",
                "type": ""
            },
            "qword_0x3D790": {
                "address": "0x7FF8FAC2D790",
                "current_value": "0x7FF8FAC12FA4",
                "resolved_name": "std::basic_ifstream<char,std::char_traits<char> >::`vftable'",
                "rva": "0x3D790",
                "type": ""
            },
            "qword_0x3D7F0": {
                "address": "0x7FF8FAC2D7F0",
                "current_value": "0x7FF8FAC13060",
                "resolved_name": "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::`vftable'",
                "rva": "0x3D7F0",
                "type": ""
            },
            "qword_0x3D870": {
                "address": "0x7FF8FAC2D870",
                "current_value": "0x7FF8FAC12FB0",
                "resolved_name": "std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::`vftable'",
                "rva": "0x3D870",
                "type": ""
            },
            "qword_0x3DA18": {
                "address": "0x7FF8FAC2DA18",
                "current_value": "0x7FF8FAC18150",
                "resolved_name": "std::_Ref_count_obj2<std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,HttpIgnoreCaseLess,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::`vftable'",
                "rva": "0x3DA18",
                "type": ""
            },
            "qword_0x3DC00": {
                "address": "0x7FF8FAC2DC00",
                "current_value": "0x7FF8FAC18020",
                "resolved_name": "std::_Ref_count_obj2<gameserveritemext_t>::`vftable'",
                "rva": "0x3DC00",
                "type": ""
            },
            "qword_0x3DC28": {
                "address": "0x7FF8FAC2DC28",
                "current_value": "0x7FF8FAC17EF0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>::`vftable'",
                "rva": "0x3DC28",
                "type": ""
            },
            "qword_0x3DC60": {
                "address": "0x7FF8FAC2DC60",
                "current_value": "0x7FF8FAC17E00",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>::`vftable'",
                "rva": "0x3DC60",
                "type": ""
            },
            "qword_0x3DC98": {
                "address": "0x7FF8FAC2DC98",
                "current_value": "0x7FF8FAC17E70",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>::`vftable'",
                "rva": "0x3DC98",
                "type": ""
            },
            "qword_0x3DD60": {
                "address": "0x7FF8FAC2DD60",
                "current_value": "0x7FF8FAC17D80",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>::`vftable'",
                "rva": "0x3DD60",
                "type": ""
            },
            "qword_0x3E1A0": {
                "address": "0x7FF8FAC2E1A0",
                "current_value": "0x0",
                "resolved_name": "in6addr_any",
                "rva": "0x3E1A0",
                "type": "in6_addr"
            },
            "qword_0x3E378": {
                "address": "0x7FF8FAC2E378",
                "current_value": "0x7FF8FAC1E500",
                "resolved_name": "std::numpunct<char>::`vftable'",
                "rva": "0x3E378",
                "type": ""
            },
            "qword_0x3E3C0": {
                "address": "0x7FF8FAC2E3C0",
                "current_value": "0x7FF8FAC1E560",
                "resolved_name": "std::numpunct<wchar_t>::`vftable'",
                "rva": "0x3E3C0",
                "type": ""
            },
            "qword_0x3E798": {
                "address": "0x7FF8FAC2E798",
                "current_value": "0x7FF8FAC1F040",
                "resolved_name": "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::`vftable'",
                "rva": "0x3E798",
                "type": ""
            },
            "qword_0x3F258": {
                "address": "0x7FF8FAC2F258",
                "current_value": "0x7FF8FAC269C6",
                "resolved_name": "InitFunctionBase::`vftable'",
                "rva": "0x3F258",
                "type": ""
            },
            "qword_0x3F278": {
                "address": "0x7FF8FAC2F278",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "utf8::exception::`vftable'",
                "rva": "0x3F278",
                "type": ""
            },
            "qword_0x3F290": {
                "address": "0x7FF8FAC2F290",
                "current_value": "0x7FF8FAC22030",
                "resolved_name": "utf8::invalid_code_point::`vftable'",
                "rva": "0x3F290",
                "type": ""
            },
            "qword_0x3F2C0": {
                "address": "0x7FF8FAC2F2C0",
                "current_value": "0x7FF8FAC22030",
                "resolved_name": "utf8::invalid_utf8::`vftable'",
                "rva": "0x3F2C0",
                "type": ""
            },
            "qword_0x3F2E8": {
                "address": "0x7FF8FAC2F2E8",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "utf8::not_enough_room::`vftable'",
                "rva": "0x3F2E8",
                "type": ""
            },
            "qword_0x3F5D0": {
                "address": "0x7FF8FAC2F5D0",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::logic_error::`vftable'",
                "rva": "0x3F5D0",
                "type": ""
            },
            "qword_0x3F5E8": {
                "address": "0x7FF8FAC2F5E8",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::invalid_argument::`vftable'",
                "rva": "0x3F5E8",
                "type": ""
            },
            "qword_0x3F600": {
                "address": "0x7FF8FAC2F600",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::length_error::`vftable'",
                "rva": "0x3F600",
                "type": ""
            },
            "qword_0x3F618": {
                "address": "0x7FF8FAC2F618",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "std::out_of_range::`vftable'",
                "rva": "0x3F618",
                "type": ""
            },
            "qword_0x3F630": {
                "address": "0x7FF8FAC2F630",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "tbb::detail::r1::bad_last_alloc::`vftable'",
                "rva": "0x3F630",
                "type": ""
            },
            "qword_0x3F648": {
                "address": "0x7FF8FAC2F648",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "tbb::detail::r1::user_abort::`vftable'",
                "rva": "0x3F648",
                "type": ""
            },
            "qword_0x3F660": {
                "address": "0x7FF8FAC2F660",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "tbb::detail::r1::missing_wait::`vftable'",
                "rva": "0x3F660",
                "type": ""
            },
            "qword_0x3F678": {
                "address": "0x7FF8FAC2F678",
                "current_value": "0x7FF8FABFAFF0",
                "resolved_name": "tbb::detail::r1::unsafe_wait::`vftable'",
                "rva": "0x3F678",
                "type": ""
            },
            "qword_0x3F810": {
                "address": "0x7FF8FAC2F810",
                "current_value": "0x7FF8FAC2F850",
                "resolved_name": "tbb::detail::r1::MallocLinkTable",
                "rva": "0x3F810",
                "type": ""
            },
            "qword_0x3F8F8": {
                "address": "0x7FF8FAC2F8F8",
                "current_value": "0x7FF8FAC269C6",
                "resolved_name": "tbb::detail::r1::control_storage::`vftable'",
                "rva": "0x3F8F8",
                "type": ""
            },
            "qword_0x3F920": {
                "address": "0x7FF8FAC2F920",
                "current_value": "0x7FF8FAC23DB0",
                "resolved_name": "tbb::detail::r1::allowed_parallelism_control::`vftable'",
                "rva": "0x3F920",
                "type": ""
            },
            "qword_0x3F948": {
                "address": "0x7FF8FAC2F948",
                "current_value": "0x7FF8FAC23F50",
                "resolved_name": "tbb::detail::r1::stack_size_control::`vftable'",
                "rva": "0x3F948",
                "type": ""
            },
            "qword_0x3F970": {
                "address": "0x7FF8FAC2F970",
                "current_value": "0x7FF8FABFE080",
                "resolved_name": "tbb::detail::r1::terminate_on_exception_control::`vftable'",
                "rva": "0x3F970",
                "type": ""
            },
            "qword_0x3F998": {
                "address": "0x7FF8FAC2F998",
                "current_value": "0x7FF8FABFE080",
                "resolved_name": "tbb::detail::r1::lifetime_control::`vftable'",
                "rva": "0x3F998",
                "type": ""
            },
            "qword_0x3FAB0": {
                "address": "0x7FF8FAC2FAB0",
                "current_value": "0x3A424254656E6F00",
                "resolved_name": "tbb::detail::r1::VersionString",
                "rva": "0x3FAB0",
                "type": ""
            },
            "qword_0x3FB90": {
                "address": "0x7FF8FAC2FB90",
                "current_value": "0xFFFF",
                "resolved_name": "tbb::detail::r1::TBB_ALL_PROCESSOR_GROUPS",
                "rva": "0x3FB90"
            },
            "qword_0x3FBA0": {
                "address": "0x7FF8FAC2FBA0",
                "current_value": "0x7FF8FAC2FBE0",
                "resolved_name": "tbb::detail::r1::ProcessorGroupsApiLinkTable",
                "rva": "0x3FBA0",
                "type": ""
            },
            "qword_0x3FE10": {
                "address": "0x7FF8FAC2FE10",
                "current_value": "0x7FF8FAC2FE80",
                "resolved_name": "tbb::detail::r1::TbbBindLinkTable",
                "rva": "0x3FE10",
                "type": ""
            },
            "qword_0x40018": {
                "address": "0x7FF8FAC30018",
                "current_value": "0x1",
                "resolved_name": "tbb::detail::r1::small_object_pool_impl::dead_public_list",
                "rva": "0x40018"
            },
            "qword_0x40030": {
                "address": "0x7FF8FAC30030",
                "current_value": "0xFFFF",
                "resolved_name": "tbb::detail::d1::no_slot",
                "rva": "0x40030"
            },
            "qword_0x400E8": {
                "address": "0x7FF8FAC300E8",
                "current_value": "0x7FF8FAC25B28",
                "resolved_name": "__dyn_tls_init_callback",
                "rva": "0x400E8"
            },
            "qword_0x400F0": {
                "address": "0x7FF8FAC300F0",
                "current_value": "0x7FF8FAC25BA0",
                "resolved_name": "__dyn_tls_dtor_callback",
                "rva": "0x400F0"
            },
            "qword_0x40100": {
                "address": "0x7FF8FAC30100",
                "current_value": "0x7FF8FAC25E10",
                "resolved_name": "type_info::`vftable'",
                "rva": "0x40100",
                "type": ""
            },
            "qword_0x40108": {
                "address": "0x7FF8FAC30108",
                "current_value": "0x0",
                "resolved_name": "_pRawDllMain",
                "rva": "0x40108"
            },
            "qword_0x40110": {
                "address": "0x7FF8FAC30110",
                "current_value": "0x7FF8FAC46A20",
                "resolved_name": "GS_ExceptionPointers",
                "rva": "0x40110",
                "type": "_EXCEPTION_POINTERS"
            },
            "qword_0x40120": {
                "address": "0x7FF8FAC30120",
                "current_value": "0x140",
                "resolved_name": "_load_config_used",
                "rva": "0x40120",
                "type": "_RS5_IMAGE_LOAD_CONFIG_DIRECTORY64"
            },
            "qword_0x40300": {
                "address": "0x7FF8FAC30300",
                "current_value": "0x7FF8FAC330B0",
                "resolved_name": "_tls_used",
                "rva": "0x40300",
                "type": "_IMAGE_TLS_DIRECTORY64"
            },
            "qword_0x42634": {
                "address": "0x7FF8FAC32634",
                "current_value": "0x8002800200000018",
                "resolved_name": "__volatile_metadata",
                "rva": "0x42634"
            },
            "qword_0x43088": {
                "address": "0x7FF8FAC33088",
                "current_value": "0x0",
                "resolved_name": "__rtc_iaa",
                "rva": "0x43088",
                "type": ""
            },
            "qword_0x43090": {
                "address": "0x7FF8FAC33090",
                "current_value": "0x0",
                "resolved_name": "__rtc_izz",
                "rva": "0x43090",
                "type": ""
            },
            "qword_0x43098": {
                "address": "0x7FF8FAC33098",
                "current_value": "0x0",
                "resolved_name": "__rtc_taa",
                "rva": "0x43098",
                "type": ""
            },
            "qword_0x430A0": {
                "address": "0x7FF8FAC330A0",
                "current_value": "0x0",
                "resolved_name": "__rtc_tzz",
                "rva": "0x430A0",
                "type": ""
            },
            "qword_0x430B0": {
                "address": "0x7FF8FAC330B0",
                "current_value": "0x0",
                "resolved_name": "_tls_start",
                "rva": "0x430B0"
            },
            "qword_0x432D0": {
                "address": "0x7FF8FAC332D0",
                "current_value": "0x0",
                "resolved_name": "_tls_end",
                "rva": "0x432D0"
            },
            "qword_0x49080": {
                "address": "0x7FF8FAC39080",
                "current_value": "0x5181100000001",
                "resolved_name": "$xdatasym",
                "rva": "0x49080"
            },
            "qword_0x490D8": {
                "address": "0x7FF8FAC390D8",
                "current_value": "0x120400010401",
                "resolved_name": "$xdatasym",
                "rva": "0x490D8"
            },
            "qword_0x491E0": {
                "address": "0x7FF8FAC391E0",
                "current_value": "0x1",
                "resolved_name": "$xdatasym",
                "rva": "0x491E0"
            },
            "qword_0x491E8": {
                "address": "0x7FF8FAC391E8",
                "current_value": "0x1",
                "resolved_name": "$xdatasym",
                "rva": "0x491E8"
            },
            "qword_0x4D028": {
                "address": "0x7FF8FAC3D028",
                "current_value": "0x736F686C61636F6C",
                "resolved_name": "g_queryArg",
                "rva": "0x4D028",
                "type": "std::basic_string<char,std::char_traits<char>,std::allocator<char> >"
            },
            "qword_0x4D048": {
                "address": "0x7FF8FAC3D048",
                "current_value": "0x1ADA2D6C0E0",
                "resolved_name": "g_queryArgOrig",
                "rva": "0x4D048",
                "type": "std::basic_string<char,std::char_traits<char>,std::allocator<char> >"
            },
            "qword_0x4D2B8": {
                "address": "0x7FF8FAC3D2B8",
                "current_value": "0x7FF8FAC1A790",
                "resolved_name": "fmt::v8::instantiate_format_float",
                "rva": "0x4D2B8"
            },
            "qword_0x4D2C0": {
                "address": "0x7FF8FAC3D2C0",
                "current_value": "0x0",
                "resolved_name": "HostSharedData<CfxState>::m_fakeData",
                "rva": "0x4D2C0",
                "type": "CfxState"
            },
            "qword_0x50320": {
                "address": "0x7FF8FAC40320",
                "current_value": "0x7FF8FAC23CE0",
                "resolved_name": "tbb::detail::r1::cache_aligned_allocate_handler",
                "rva": "0x50320",
                "type": "std::atomic<void * (__cdecl*)(unsigned __int64,unsigned __int64)>"
            },
            "qword_0x50328": {
                "address": "0x7FF8FAC40328",
                "current_value": "0x7FFA22335E00",
                "resolved_name": "tbb::detail::r1::allocate_handler",
                "rva": "0x50328",
                "type": "std::atomic<void * (__cdecl*)(unsigned __int64)>"
            },
            "qword_0x50380": {
                "address": "0x7FF8FAC40380",
                "current_value": "0x7FF8FAC2F920",
                "resolved_name": "tbb::detail::r1::allowed_parallelism_ctl",
                "rva": "0x50380",
                "type": "tbb::detail::r1::allowed_parallelism_control"
            },
            "qword_0x50400": {
                "address": "0x7FF8FAC40400",
                "current_value": "0x7FF8FAC2F948",
                "resolved_name": "tbb::detail::r1::stack_size_ctl",
                "rva": "0x50400",
                "type": "tbb::detail::r1::stack_size_control"
            },
            "qword_0x50480": {
                "address": "0x7FF8FAC40480",
                "current_value": "0x7FF8FAC2F970",
                "resolved_name": "tbb::detail::r1::terminate_on_exception_ctl",
                "rva": "0x50480",
                "type": "tbb::detail::r1::terminate_on_exception_control"
            },
            "qword_0x50500": {
                "address": "0x7FF8FAC40500",
                "current_value": "0x7FF8FAC2F998",
                "resolved_name": "tbb::detail::r1::lifetime_ctl",
                "rva": "0x50500",
                "type": "tbb::detail::r1::lifetime_control"
            },
            "qword_0x50580": {
                "address": "0x7FF8FAC40580",
                "current_value": "0x7FF8FAC40380",
                "resolved_name": "tbb::detail::r1::controls",
                "rva": "0x50580",
                "type": ""
            },
            "qword_0x505A0": {
                "address": "0x7FF8FAC405A0",
                "current_value": "0x1",
                "resolved_name": "tbb::detail::r1::ProcessorGroupInfo::NumGroups",
                "rva": "0x505A0"
            },
            "qword_0x505A8": {
                "address": "0x7FF8FAC405A8",
                "current_value": "0x7FF8FABF9FA0",
                "resolved_name": "tbb::detail::r1::destroy_system_topology_ptr",
                "rva": "0x505A8"
            },
            "qword_0x505B0": {
                "address": "0x7FF8FAC405B0",
                "current_value": "0x7FF8FABFE080",
                "resolved_name": "tbb::detail::r1::allocate_binding_handler_ptr",
                "rva": "0x505B0"
            },
            "qword_0x505B8": {
                "address": "0x7FF8FAC405B8",
                "current_value": "0x7FF8FABF9FA0",
                "resolved_name": "tbb::detail::r1::deallocate_binding_handler_ptr",
                "rva": "0x505B8"
            },
            "qword_0x505C0": {
                "address": "0x7FF8FAC405C0",
                "current_value": "0x7FF8FABF9FA0",
                "resolved_name": "tbb::detail::r1::apply_affinity_ptr",
                "rva": "0x505C0"
            },
            "qword_0x505C8": {
                "address": "0x7FF8FAC405C8",
                "current_value": "0x7FF8FABF9FA0",
                "resolved_name": "tbb::detail::r1::restore_affinity_ptr",
                "rva": "0x505C8"
            },
            "qword_0x505D0": {
                "address": "0x7FF8FAC405D0",
                "current_value": "0x7FF8FAC24EE0",
                "resolved_name": "tbb::detail::r1::get_default_concurrency_ptr",
                "rva": "0x505D0"
            },
            "qword_0x505E0": {
                "address": "0x7FF8FAC405E0",
                "current_value": "0xFFFFFFFF8000000D",
                "resolved_name": "_Init_global_epoch",
                "rva": "0x505E0"
            },
            "qword_0x505E4": {
                "address": "0x7FF8FAC405E4",
                "current_value": "0xFFFFFFFF",
                "resolved_name": "__scrt_native_dllmain_reason",
                "rva": "0x505E4"
            },
            "qword_0x505F0": {
                "address": "0x7FF8FAC405F0",
                "current_value": "0xFFFFF90355E42820",
                "resolved_name": "__security_cookie_complement",
                "rva": "0x505F0"
            },
            "qword_0x505F8": {
                "address": "0x7FF8FAC405F8",
                "current_value": "0x6FCAA1BD7DF",
                "resolved_name": "__security_cookie",
                "rva": "0x505F8"
            },
            "qword_0x50600": {
                "address": "0x7FF8FAC40600",
                "current_value": "0x9875",
                "resolved_name": "_fltused",
                "rva": "0x50600"
            },
            "qword_0x50610": {
                "address": "0x7FF8FAC40610",
                "current_value": "0x2E00000005",
                "resolved_name": "__isa_available",
                "rva": "0x50610"
            },
            "qword_0x50614": {
                "address": "0x7FF8FAC40614",
                "current_value": "0x80000000002E",
                "resolved_name": "__isa_enabled",
                "rva": "0x50614"
            },
            "qword_0x50618": {
                "address": "0x7FF8FAC40618",
                "current_value": "0x8000",
                "resolved_name": "__memset_fast_string_threshold",
                "rva": "0x50618"
            },
            "qword_0x50620": {
                "address": "0x7FF8FAC40620",
                "current_value": "0xFFFFFFFFFFFFFFFF",
                "resolved_name": "__memset_nt_threshold",
                "rva": "0x50620"
            },
            "qword_0x50630": {
                "address": "0x7FF8FAC40630",
                "current_value": "0x1",
                "resolved_name": "__scrt_ucrt_dll_is_in_use",
                "rva": "0x50630"
            },
            "qword_0x51FE0": {
                "address": "0x7FF8FAC41FE0",
                "current_value": "0x0",
                "resolved_name": "Instance<ICoreGameInit>::ms_cachedInstance",
                "rva": "0x51FE0"
            },
            "qword_0x51FE8": {
                "address": "0x7FF8FAC41FE8",
                "current_value": "0x5",
                "resolved_name": "Instance<ICoreGameInit>::ms_id",
                "rva": "0x51FE8"
            },
            "qword_0x52020": {
                "address": "0x7FF8FAC42020",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x52020",
                "type": "ComponentRegistration"
            },
            "qword_0x52028": {
                "address": "0x7FF8FAC42028",
                "current_value": "0x1ACD1570590",
                "resolved_name": "xbr::kGameBuildUniquifiers",
                "rva": "0x52028",
                "type": "std::map<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >"
            },
            "qword_0x5204C": {
                "address": "0x7FF8FAC4204C",
                "current_value": "0x0",
                "resolved_name": "__@@_PchSym_@00@UtoUyfrowhUxucRurevnRAUOyfrowRxzxsvUyfrowUurevUlyqUivovzhvUmfrRthxorvmgUhgwrmxOlyq@4B2008FD98C1DD4",
                "rva": "0x5204C"
            },
            "qword_0x52050": {
                "address": "0x7FF8FAC42050",
                "current_value": "0x0",
                "resolved_name": "Instance<ComponentLoader>::ms_id",
                "rva": "0x52050"
            },
            "qword_0x52064": {
                "address": "0x7FF8FAC42064",
                "current_value": "0xDF941F5000000000",
                "resolved_name": "_init_instance_0",
                "rva": "0x52064",
                "type": "ComponentRegistration"
            },
            "qword_0x52068": {
                "address": "0x7FF8FAC42068",
                "current_value": "0x1ACDF941F50",
                "resolved_name": "Instance<HttpClient>::ms_cachedInstance",
                "rva": "0x52068"
            },
            "qword_0x52070": {
                "address": "0x7FF8FAC42070",
                "current_value": "0x11",
                "resolved_name": "Instance<HttpClient>::ms_id",
                "rva": "0x52070"
            },
            "qword_0x52078": {
                "address": "0x7FF8FAC42078",
                "current_value": "0x1",
                "resolved_name": "Instance<ConsoleCommandManager>::ms_id",
                "rva": "0x52078"
            },
            "qword_0x52080": {
                "address": "0x7FF8FAC42080",
                "current_value": "0x2",
                "resolved_name": "Instance<console::Context>::ms_id",
                "rva": "0x52080"
            },
            "qword_0x520B0": {
                "address": "0x7FF8FAC420B0",
                "current_value": "0x1ACCD92BD50",
                "resolved_name": "Instance<ConsoleVariableManager>::ms_cachedInstance",
                "rva": "0x520B0"
            },
            "qword_0x520B8": {
                "address": "0x7FF8FAC420B8",
                "current_value": "0x3",
                "resolved_name": "Instance<ConsoleVariableManager>::ms_id",
                "rva": "0x520B8"
            },
            "qword_0x520C0": {
                "address": "0x7FF8FAC420C0",
                "current_value": "0x7FF8FFB2F320",
                "resolved_name": "Instance<nui::RPCHandlerManager>::ms_cachedInstance",
                "rva": "0x520C0"
            },
            "qword_0x520C8": {
                "address": "0x7FF8FAC420C8",
                "current_value": "0x16",
                "resolved_name": "Instance<nui::RPCHandlerManager>::ms_id",
                "rva": "0x520C8"
            },
            "qword_0x520E0": {
                "address": "0x7FF8FAC420E0",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::ctype<char> >::_Psave",
                "rva": "0x520E0"
            },
            "qword_0x520F0": {
                "address": "0x7FF8FAC420F0",
                "current_value": "0x0",
                "resolved_name": "std::codecvt<unsigned int,char,_Mbstatet>::id",
                "rva": "0x520F0",
                "type": "std::locale::id"
            },
            "qword_0x52100": {
                "address": "0x7FF8FAC42100",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x52100",
                "type": "ComponentRegistration"
            },
            "qword_0x52101": {
                "address": "0x7FF8FAC42101",
                "current_value": "0xF000000000000000",
                "resolved_name": "_init_instance_1",
                "rva": "0x52101",
                "type": "ComponentRegistration"
            },
            "qword_0x52102": {
                "address": "0x7FF8FAC42102",
                "current_value": "0x88F0000000000000",
                "resolved_name": "_init_instance_2",
                "rva": "0x52102",
                "type": "ComponentRegistration"
            },
            "qword_0x52103": {
                "address": "0x7FF8FAC42103",
                "current_value": "0x8788F00000000000",
                "resolved_name": "_init_instance_3",
                "rva": "0x52103",
                "type": "ComponentRegistration"
            },
            "qword_0x52104": {
                "address": "0x7FF8FAC42104",
                "current_value": "0xD38788F000000000",
                "resolved_name": "boost::optional_ns::in_place_init",
                "rva": "0x52104",
                "type": "boost::optional_ns::in_place_init_t"
            },
            "qword_0x52105": {
                "address": "0x7FF8FAC42105",
                "current_value": "0xACD38788F0000000",
                "resolved_name": "boost::optional_ns::in_place_init_if",
                "rva": "0x52105",
                "type": "boost::optional_ns::in_place_init_if_t"
            },
            "qword_0x52106": {
                "address": "0x7FF8FAC42106",
                "current_value": "0x1ACD38788F00000",
                "resolved_name": "_init_instance_4",
                "rva": "0x52106",
                "type": "ComponentRegistration"
            },
            "qword_0x52107": {
                "address": "0x7FF8FAC42107",
                "current_value": "0x1ACD38788F000",
                "resolved_name": "g_inLanQuery",
                "rva": "0x52107"
            },
            "qword_0x52108": {
                "address": "0x7FF8FAC42108",
                "current_value": "0x1ACD38788F0",
                "resolved_name": "ui_maxQueriesPerMinute",
                "rva": "0x52108",
                "type": "std::unique_ptr<ConVar<int>,std::default_delete<ConVar<int> > >"
            },
            "qword_0x52110": {
                "address": "0x7FF8FAC42110",
                "current_value": "0x2E7C",
                "resolved_name": "g_cls",
                "rva": "0x52110",
                "type": "<unnamed-type-g_cls>"
            },
            "qword_0x52230": {
                "address": "0x7FF8FAC42230",
                "current_value": "0x2",
                "resolved_name": "g_queryArgMutex",
                "rva": "0x52230",
                "type": "std::mutex"
            },
            "qword_0x52280": {
                "address": "0x7FF8FAC42280",
                "current_value": "0x7FF8FAC2AD68",
                "resolved_name": "initFunction",
                "rva": "0x52280",
                "type": "InitFunction"
            },
            "qword_0x56308": {
                "address": "0x7FF8FAC46308",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::codecvt<wchar_t,char,_Mbstatet> >::_Psave",
                "rva": "0x56308"
            },
            "qword_0x56310": {
                "address": "0x7FF8FAC46310",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave",
                "rva": "0x56310"
            },
            "qword_0x56338": {
                "address": "0x7FF8FAC46338",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::numpunct<wchar_t> >::_Psave",
                "rva": "0x56338"
            },
            "qword_0x56340": {
                "address": "0x7FF8FAC46340",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::numpunct<char> >::_Psave",
                "rva": "0x56340"
            },
            "qword_0x563B8": {
                "address": "0x7FF8FAC463B8",
                "current_value": "0x7FF8FAC42280",
                "resolved_name": "g_initFunctions",
                "rva": "0x563B8"
            },
            "qword_0x563E0": {
                "address": "0x7FF8FAC463E0",
                "current_value": "0x0",
                "resolved_name": "initIoBuf",
                "rva": "0x563E0",
                "type": "InitIoBuf"
            },
            "qword_0x563E8": {
                "address": "0x7FF8FAC463E8",
                "current_value": "0x0",
                "resolved_name": "g_hookFunctions",
                "rva": "0x563E8"
            },
            "qword_0x563F0": {
                "address": "0x7FF8FAC463F0",
                "current_value": "0x0",
                "resolved_name": "g_runtimeHookFunctions",
                "rva": "0x563F0"
            },
            "qword_0x563F8": {
                "address": "0x7FF8FAC463F8",
                "current_value": "0x7FFA22335E00",
                "resolved_name": "tbb::detail::r1::allocate_handler_unsafe",
                "rva": "0x563F8"
            },
            "qword_0x56400": {
                "address": "0x7FF8FAC46400",
                "current_value": "0x7FFA22335DE0",
                "resolved_name": "tbb::detail::r1::deallocate_handler",
                "rva": "0x56400"
            },
            "qword_0x56408": {
                "address": "0x7FF8FAC46408",
                "current_value": "0x7FF8FAC23CE0",
                "resolved_name": "tbb::detail::r1::cache_aligned_allocate_handler_unsafe",
                "rva": "0x56408"
            },
            "qword_0x56410": {
                "address": "0x7FF8FAC46410",
                "current_value": "0x7FF8FAC23CF0",
                "resolved_name": "tbb::detail::r1::cache_aligned_deallocate_handler",
                "rva": "0x56410"
            },
            "qword_0x56418": {
                "address": "0x7FF8FAC46418",
                "current_value": "0x2",
                "resolved_name": "tbb::detail::r1::initialization_state",
                "rva": "0x56418",
                "type": "std::once_flag"
            },
            "qword_0x56430": {
                "address": "0x7FF8FAC46430",
                "current_value": "0x100",
                "resolved_name": "tbb::detail::r1::governor::cpu_features",
                "rva": "0x56430",
                "type": "tbb::detail::r1::cpu_features_type"
            },
            "qword_0x56432": {
                "address": "0x7FF8FAC46432",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::PrintVersionFlag",
                "rva": "0x56432"
            },
            "qword_0x56440": {
                "address": "0x7FF8FAC46440",
                "current_value": "0x2",
                "resolved_name": "tbb::detail::r1::concurrent_monitor_mutex::my_init_mutex",
                "rva": "0x56440",
                "type": "std::mutex"
            },
            "qword_0x56490": {
                "address": "0x7FF8FAC46490",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::assertion_state",
                "rva": "0x56490",
                "type": "std::atomic<enum tbb::detail::d0::do_once_state>"
            },
            "qword_0x56498": {
                "address": "0x7FF8FAC46498",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::market::theMarket",
                "rva": "0x56498"
            },
            "qword_0x564A0": {
                "address": "0x7FF8FAC464A0",
                "current_value": "0x31",
                "resolved_name": "tbb::detail::r1::governor::theTLS",
                "rva": "0x564A0",
                "type": "tbb::detail::r1::basic_tls<tbb::detail::r1::thread_data *>"
            },
            "qword_0x564A4": {
                "address": "0x7FF8FAC464A4",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::governor::UsePrivateRML",
                "rva": "0x564A4"
            },
            "qword_0x564A5": {
                "address": "0x7FF8FAC464A5",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::governor::is_rethrow_broken",
                "rva": "0x564A5"
            },
            "qword_0x564A6": {
                "address": "0x7FF8FAC464A6",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::__TBB_InitOnce::InitializationDone",
                "rva": "0x564A6",
                "type": "std::atomic<bool>"
            },
            "qword_0x564A8": {
                "address": "0x7FF8FAC464A8",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::governor::theRMLServerFactory",
                "rva": "0x564A8",
                "type": "tbb::detail::r1::rml::tbb_factory"
            },
            "qword_0x564C8": {
                "address": "0x7FF8FAC464C8",
                "current_value": "0x1",
                "resolved_name": "tbb::detail::r1::__TBB_InitOnce::count",
                "rva": "0x564C8",
                "type": "std::atomic<int>"
            },
            "qword_0x564CC": {
                "address": "0x7FF8FAC464CC",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::__TBB_InitOnce::InitializationLock",
                "rva": "0x564CC",
                "type": "std::atomic_flag"
            },
            "qword_0x564D0": {
                "address": "0x7FF8FAC464D0",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::the_context_state_propagation_epoch",
                "rva": "0x564D0",
                "type": "std::atomic<unsigned __int64>"
            },
            "qword_0x564D8": {
                "address": "0x7FF8FAC464D8",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::market::theMarketMutex",
                "rva": "0x564D8",
                "type": "tbb::detail::d1::spin_mutex"
            },
            "qword_0x564D9": {
                "address": "0x7FF8FAC464D9",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::the_context_state_propagation_mutex",
                "rva": "0x564D9",
                "type": "tbb::detail::d1::spin_mutex"
            },
            "qword_0x564DA": {
                "address": "0x7FF8FAC464DA",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::__TBB_InitOnceHiddenInstance",
                "rva": "0x564DA",
                "type": "tbb::detail::r1::__TBB_InitOnce"
            },
            "qword_0x564E0": {
                "address": "0x7FF8FAC464E0",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::ProcessorGroupInfo::HoleIndex",
                "rva": "0x564E0"
            },
            "qword_0x564F0": {
                "address": "0x7FF8FAC464F0",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::theProcessorGroups",
                "rva": "0x564F0",
                "type": ""
            },
            "qword_0x568F0": {
                "address": "0x7FF8FAC468F0",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::TBB_GetActiveProcessorCount",
                "rva": "0x568F0"
            },
            "qword_0x568F8": {
                "address": "0x7FF8FAC468F8",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::TBB_GetActiveProcessorGroupCount",
                "rva": "0x568F8"
            },
            "qword_0x56900": {
                "address": "0x7FF8FAC46900",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::TBB_SetThreadGroupAffinity",
                "rva": "0x56900"
            },
            "qword_0x56908": {
                "address": "0x7FF8FAC46908",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::TBB_GetThreadGroupAffinity",
                "rva": "0x56908"
            },
            "qword_0x56910": {
                "address": "0x7FF8FAC46910",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::hardware_concurrency_info",
                "rva": "0x56910",
                "type": "std::atomic<enum tbb::detail::d0::do_once_state>"
            },
            "qword_0x56918": {
                "address": "0x7FF8FAC46918",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::initialize_system_topology_ptr",
                "rva": "0x56918"
            },
            "qword_0x56920": {
                "address": "0x7FF8FAC46920",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::system_topology::initialization_state",
                "rva": "0x56920",
                "type": "std::atomic<enum tbb::detail::d0::do_once_state>"
            },
            "qword_0x56924": {
                "address": "0x7FF8FAC46924",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::system_topology::numa_nodes_count",
                "rva": "0x56924"
            },
            "qword_0x56928": {
                "address": "0x7FF8FAC46928",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::system_topology::numa_nodes_indexes",
                "rva": "0x56928"
            },
            "qword_0x56930": {
                "address": "0x7FF8FAC46930",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::system_topology::core_types_count",
                "rva": "0x56930"
            },
            "qword_0x56938": {
                "address": "0x7FF8FAC46938",
                "current_value": "0x0",
                "resolved_name": "tbb::detail::r1::system_topology::core_types_indexes",
                "rva": "0x56938"
            },
            "qword_0x56950": {
                "address": "0x7FF8FAC46950",
                "current_value": "0x0",
                "resolved_name": "std::_Fac_head",
                "rva": "0x56950"
            },
            "qword_0x56958": {
                "address": "0x7FF8FAC46958",
                "current_value": "0x0",
                "resolved_name": "std::_Fac_tidy_reg",
                "rva": "0x56958",
                "type": "std::_Fac_tidy_reg_t"
            },
            "qword_0x56960": {
                "address": "0x7FF8FAC46960",
                "current_value": "0x0",
                "resolved_name": "g_tss_cv",
                "rva": "0x56960",
                "type": "_RTL_CONDITION_VARIABLE"
            },
            "qword_0x56968": {
                "address": "0x7FF8FAC46968",
                "current_value": "0x0",
                "resolved_name": "g_tss_event",
                "rva": "0x56968"
            },
            "qword_0x56970": {
                "address": "0x7FF8FAC46970",
                "current_value": "0xFFFFFFFFFFFFFFFF",
                "resolved_name": "g_tss_mutex",
                "rva": "0x56970",
                "type": "_RTL_CRITICAL_SECTION"
            },
            "qword_0x56998": {
                "address": "0x7FF8FAC46998",
                "current_value": "0x7FFA228F8340",
                "resolved_name": "g_sleep_condition_variable_cs",
                "rva": "0x56998"
            },
            "qword_0x569A0": {
                "address": "0x7FF8FAC469A0",
                "current_value": "0x7FFA25026FD0",
                "resolved_name": "g_wake_all_condition_variable",
                "rva": "0x569A0"
            },
            "qword_0x569A8": {
                "address": "0x7FF8FAC469A8",
                "current_value": "0x2",
                "resolved_name": "__scrt_current_native_startup_state",
                "rva": "0x569A8",
                "type": "__scrt_native_startup_state"
            },
            "qword_0x569B0": {
                "address": "0x7FF8FAC469B0",
                "current_value": "0x0",
                "resolved_name": "__scrt_native_startup_lock",
                "rva": "0x569B0"
            },
            "qword_0x569B8": {
                "address": "0x7FF8FAC469B8",
                "current_value": "0x101",
                "resolved_name": "is_initialized_as_dll",
                "rva": "0x569B8"
            },
            "qword_0x569B9": {
                "address": "0x7FF8FAC469B9",
                "current_value": "0x4900000000000001",
                "resolved_name": "module_local_atexit_table_initialized",
                "rva": "0x569B9"
            },
            "qword_0x569C0": {
                "address": "0x7FF8FAC469C0",
                "current_value": "0x68AAFE8E919DD349",
                "resolved_name": "module_local_atexit_table",
                "rva": "0x569C0",
                "type": "_onexit_table_t"
            },
            "qword_0x569D8": {
                "address": "0x7FF8FAC469D8",
                "current_value": "0xD1E6919DD39F",
                "resolved_name": "module_local_at_quick_exit_table",
                "rva": "0x569D8",
                "type": "_onexit_table_t"
            },
            "qword_0x569F0": {
                "address": "0x7FF8FAC469F0",
                "current_value": "0x55",
                "resolved_name": "_tls_index",
                "rva": "0x569F0"
            },
            "qword_0x56A00": {
                "address": "0x7FF8FAC46A00",
                "current_value": "0x0",
                "resolved_name": "__type_info_root_node",
                "rva": "0x56A00",
                "type": "__type_info_node"
            },
            "qword_0x56A10": {
                "address": "0x7FF8FAC46A10",
                "current_value": "0x1",
                "resolved_name": "__proc_attached",
                "rva": "0x56A10"
            },
            "qword_0x56A20": {
                "address": "0x7FF8FAC46A20",
                "current_value": "0x0",
                "resolved_name": "GS_ExceptionRecord",
                "rva": "0x56A20",
                "type": "_EXCEPTION_RECORD"
            },
            "qword_0x56AC0": {
                "address": "0x7FF8FAC46AC0",
                "current_value": "0x0",
                "resolved_name": "GS_ContextRecord",
                "rva": "0x56AC0",
                "type": "_CONTEXT"
            },
            "qword_0x56F90": {
                "address": "0x7FF8FAC46F90",
                "current_value": "0x2",
                "resolved_name": "__favor",
                "rva": "0x56F90"
            },
            "qword_0x56F94": {
                "address": "0x7FF8FAC46F94",
                "current_value": "0x200000000",
                "resolved_name": "__scrt_debugger_hook_flag",
                "rva": "0x56F94"
            }
        },
        "rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>::Peek": {
            "offset": "0x276E0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::ClearStackOnExit::~ClearStackOnExit": {
            "offset": "0x1CFD0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::EndArray": {
            "offset": "0x24650"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::EndObject": {
            "offset": "0x24760"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::ParseStream<0,rapidjson::UTF8<char>,rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream> >": {
            "offset": "0x121C0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::String": {
            "offset": "0x27C10"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::~GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>": {
            "offset": "0x9ED0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ClearStackOnExit::~ClearStackOnExit": {
            "offset": "0x1D000"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::NumberStream<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,0,0>::Peek": {
            "offset": "0x27700"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseArray<0,rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x11020"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseHex4<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream> >": {
            "offset": "0x11270"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseNumber<0,rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x11340"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseObject<0,rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x11D40"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseStringToStream<0,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::StackStream<char> >": {
            "offset": "0x123D0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseValue<0,rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x127D0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::StackStream<char>::Put": {
            "offset": "0x278E0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0x9F70"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::GetString": {
            "offset": "0x271C0"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0x9F70"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Accept<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0> >": {
            "offset": "0x17E0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::AddMember": {
            "offset": "0xB040"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::FindMember<rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0x10130"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::GetInt": {
            "offset": "0x27180"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::GetString": {
            "offset": "0x27260"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::~GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0x9FA0"
        },
        "rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>::Malloc": {
            "offset": "0xC190"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Prefix": {
            "offset": "0xC250"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::String": {
            "offset": "0xC4C0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::WriteString": {
            "offset": "0xC960"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::~Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>": {
            "offset": "0x9FB0"
        },
        "rapidjson::internal::DigitGen": {
            "offset": "0xB2F0"
        },
        "rapidjson::internal::FastPath": {
            "offset": "0x24870"
        },
        "rapidjson::internal::Grisu2": {
            "offset": "0xBDA0"
        },
        "rapidjson::internal::Prettify": {
            "offset": "0xC300"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > >": {
            "offset": "0x12E90"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level>": {
            "offset": "0x2270"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Reserve<char>": {
            "offset": "0x2340"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::~Stack<rapidjson::CrtAllocator>": {
            "offset": "0x9F70"
        },
        "rapidjson::internal::WriteExponent": {
            "offset": "0xC8D0"
        },
        "rapidjson::internal::u32toa": {
            "offset": "0xD430"
        },
        "rapidjson::internal::u64toa": {
            "offset": "0xD6A0"
        },
        "se::Object::~Object": {
            "offset": "0xA0C0"
        },
        "seCheckPrivilege": {
            "offset": "0x29650"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<net::PeerAddress const ,std::shared_ptr<gameserveritemext_t> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<net::PeerAddress const ,std::shared_ptr<gameserveritemext_t> >,void *> > >": {
            "offset": "0x1CAD0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x1CA90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x9FE0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> >,void *> > >": {
            "offset": "0x1CAB0"
        },
        "std::_Destroy_range<std::allocator<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x138D0"
        },
        "std::_Facet_Register": {
            "offset": "0x3543C"
        },
        "std::_Func_class<bool,ConsoleExecutionContext &>::~_Func_class<bool,ConsoleExecutionContext &>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_class<bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~_Func_class<bool,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_class<bool,wchar_t const *,wchar_t const *>::~_Func_class<bool,wchar_t const *,wchar_t const *>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_class<void,ProgressInfo const &>::~_Func_class<void,ProgressInfo const &>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_class<void,bool,char const *,unsigned __int64>::~_Func_class<void,bool,char const *,unsigned __int64>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_class<void,int const &>::~_Func_class<void,int const &>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_class<void>::~_Func_class<void>": {
            "offset": "0x1C7E0"
        },
        "std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>::_Copy": {
            "offset": "0x27D80"
        },
        "std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>::_Delete_this": {
            "offset": "0x27F60"
        },
        "std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>::_Do_call": {
            "offset": "0x28180"
        },
        "std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>::_Move": {
            "offset": "0xE080"
        },
        "std::_Func_impl_no_alloc<<lambda_11c5c011f2722fe5846e3ebc09b80519>,void,bool,char const *,unsigned __int64>::_Target_type": {
            "offset": "0x28480"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Copy": {
            "offset": "0xE4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Delete_this": {
            "offset": "0xE550"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Do_call": {
            "offset": "0xE530"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Move": {
            "offset": "0xE080"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Target_type": {
            "offset": "0xE540"
        },
        "std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>::_Copy": {
            "offset": "0x27E00"
        },
        "std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>::_Delete_this": {
            "offset": "0x27FA0"
        },
        "std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>::_Do_call": {
            "offset": "0x281A0"
        },
        "std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>::_Move": {
            "offset": "0xE080"
        },
        "std::_Func_impl_no_alloc<<lambda_47c7abed81b887d9b1f03e84be315afa>,void,bool,char const *,unsigned __int64>::_Target_type": {
            "offset": "0x28490"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0xE2F0"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0xE290"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0xE370"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xE080"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0xE3C0"
        },
        "std::_Func_impl_no_alloc<<lambda_7871d71d345db730e5e5ee19837ae8ba>,void,bool,char const *,unsigned __int64>::_Copy": {
            "offset": "0xE6F0"
        },
        "std::_Func_impl_no_alloc<<lambda_7871d71d345db730e5e5ee19837ae8ba>,void,bool,char const *,unsigned __int64>::_Delete_this": {
            "offset": "0xE7A0"
        },
        "std::_Func_impl_no_alloc<<lambda_7871d71d345db730e5e5ee19837ae8ba>,void,bool,char const *,unsigned __int64>::_Do_call": {
            "offset": "0xE770"
        },
        "std::_Func_impl_no_alloc<<lambda_7871d71d345db730e5e5ee19837ae8ba>,void,bool,char const *,unsigned __int64>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_7871d71d345db730e5e5ee19837ae8ba>,void,bool,char const *,unsigned __int64>::_Move": {
            "offset": "0xE730"
        },
        "std::_Func_impl_no_alloc<<lambda_7871d71d345db730e5e5ee19837ae8ba>,void,bool,char const *,unsigned __int64>::_Target_type": {
            "offset": "0xE790"
        },
        "std::_Func_impl_no_alloc<<lambda_7dc6a386b82acc3fef031832612a7a66>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Copy": {
            "offset": "0xE9B0"
        },
        "std::_Func_impl_no_alloc<<lambda_7dc6a386b82acc3fef031832612a7a66>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Delete_this": {
            "offset": "0xE6E0"
        },
        "std::_Func_impl_no_alloc<<lambda_7dc6a386b82acc3fef031832612a7a66>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Do_call": {
            "offset": "0xE9C0"
        },
        "std::_Func_impl_no_alloc<<lambda_7dc6a386b82acc3fef031832612a7a66>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_7dc6a386b82acc3fef031832612a7a66>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Move": {
            "offset": "0xE9B0"
        },
        "std::_Func_impl_no_alloc<<lambda_7dc6a386b82acc3fef031832612a7a66>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Target_type": {
            "offset": "0xEAD0"
        },
        "std::_Func_impl_no_alloc<<lambda_7f9830bd709697b0ba9177318203469a>,bool,wchar_t const *,wchar_t const *>::_Copy": {
            "offset": "0xEAE0"
        },
        "std::_Func_impl_no_alloc<<lambda_7f9830bd709697b0ba9177318203469a>,bool,wchar_t const *,wchar_t const *>::_Delete_this": {
            "offset": "0xE6E0"
        },
        "std::_Func_impl_no_alloc<<lambda_7f9830bd709697b0ba9177318203469a>,bool,wchar_t const *,wchar_t const *>::_Do_call": {
            "offset": "0xEB00"
        },
        "std::_Func_impl_no_alloc<<lambda_7f9830bd709697b0ba9177318203469a>,bool,wchar_t const *,wchar_t const *>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_7f9830bd709697b0ba9177318203469a>,bool,wchar_t const *,wchar_t const *>::_Move": {
            "offset": "0xEAE0"
        },
        "std::_Func_impl_no_alloc<<lambda_7f9830bd709697b0ba9177318203469a>,bool,wchar_t const *,wchar_t const *>::_Target_type": {
            "offset": "0xEB20"
        },
        "std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>::_Copy": {
            "offset": "0x27E70"
        },
        "std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>::_Delete_this": {
            "offset": "0x27FE0"
        },
        "std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>::_Do_call": {
            "offset": "0x281C0"
        },
        "std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>::_Move": {
            "offset": "0xE080"
        },
        "std::_Func_impl_no_alloc<<lambda_b5c74389bb0c23f2fc47efd332539dd8>,void,bool,char const *,unsigned __int64>::_Target_type": {
            "offset": "0x284A0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Copy": {
            "offset": "0xE5D0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Delete_this": {
            "offset": "0xE6E0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Do_call": {
            "offset": "0xE5F0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Move": {
            "offset": "0xE5D0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Target_type": {
            "offset": "0xE6D0"
        },
        "std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>::_Copy": {
            "offset": "0x27EF0"
        },
        "std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>::_Delete_this": {
            "offset": "0x27FA0"
        },
        "std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>::_Do_call": {
            "offset": "0x281E0"
        },
        "std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>::_Move": {
            "offset": "0xE080"
        },
        "std::_Func_impl_no_alloc<<lambda_ce34850a21ec92d50ae707a6354bd250>,void,bool,char const *,unsigned __int64>::_Target_type": {
            "offset": "0x284B0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0xE1A0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0xE290"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0xE220"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0xE280"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xE080"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0xE270"
        },
        "std::_Init_once_completer::~_Init_once_completer": {
            "offset": "0x33B60"
        },
        "std::_Insert_string<char,std::char_traits<char>,unsigned __int64>": {
            "offset": "0x13DF0"
        },
        "std::_Maklocstr<char>": {
            "offset": "0xDFC0"
        },
        "std::_Maklocstr<wchar_t>": {
            "offset": "0x2AB70"
        },
        "std::_Ref_count_base::_Get_deleter": {
            "offset": "0xE080"
        },
        "std::_Ref_count_obj2<gameserveritemext_t>::_Delete_this": {
            "offset": "0xE480"
        },
        "std::_Ref_count_obj2<gameserveritemext_t>::_Destroy": {
            "offset": "0x28020"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Delete_this": {
            "offset": "0xE480"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Destroy": {
            "offset": "0xE3D0"
        },
        "std::_Ref_count_obj2<std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,HttpIgnoreCaseLess,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Delete_this": {
            "offset": "0xE480"
        },
        "std::_Ref_count_obj2<std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,HttpIgnoreCaseLess,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Destroy": {
            "offset": "0x28150"
        },
        "std::_String_val<std::_Simple_types<char> >::_Xran": {
            "offset": "0x285E0"
        },
        "std::_Throw_bad_array_new_length": {
            "offset": "0xCD00"
        },
        "std::_Throw_bad_cast": {
            "offset": "0x284C0"
        },
        "std::_Throw_tree_length_error": {
            "offset": "0xCD20"
        },
        "std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >": {
            "offset": "0x2E3A0"
        },
        "std::_Tidy_guard<std::numpunct<wchar_t> >::~_Tidy_guard<std::numpunct<wchar_t> >": {
            "offset": "0x2E3A0"
        },
        "std::_Traits_find<std::char_traits<char> >": {
            "offset": "0x14860"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,HttpIgnoreCaseLess,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x13D30"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Copy_nodes<0>": {
            "offset": "0x137E0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Getal": {
            "offset": "0x14F40"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_hint<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x2510"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_lower_bound<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x2790"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >": {
            "offset": "0xA000"
        },
        "std::_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >::~_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >": {
            "offset": "0x34140"
        },
        "std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >": {
            "offset": "0x1CB00"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> >,void *> > >": {
            "offset": "0x1CAB0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<net::PeerAddress const ,std::shared_ptr<gameserveritemext_t> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<net::PeerAddress const ,std::shared_ptr<gameserveritemext_t> >,void *> > >": {
            "offset": "0x13C80"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<net::PeerAddress const ,std::shared_ptr<gameserveritemext_t> > > >::_Insert_node": {
            "offset": "0xCAA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x13B80"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x13B80"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0xCAA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x24B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Insert_node": {
            "offset": "0xCAA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> >,void *> > >": {
            "offset": "0x13C00"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> > > >::_Insert_node": {
            "offset": "0xCAA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<tbb::detail::d1::global_control *> >::_Erase_tree<tbb::detail::d1::tbb_allocator<std::_Tree_node<tbb::detail::d1::global_control *,void *> > >": {
            "offset": "0x340D0"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Uninitialized_backout_al<std::allocator<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x1CB40"
        },
        "std::_Xlen_string": {
            "offset": "0xCD40"
        },
        "std::allocator<char>::allocate": {
            "offset": "0xCD60"
        },
        "std::allocator<char>::deallocate": {
            "offset": "0x32B10"
        },
        "std::allocator<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate": {
            "offset": "0x28600"
        },
        "std::allocator<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate": {
            "offset": "0x28940"
        },
        "std::allocator<unsigned char>::deallocate": {
            "offset": "0x32B10"
        },
        "std::allocator<wchar_t>::allocate": {
            "offset": "0xCDC0"
        },
        "std::bad_alloc::bad_alloc": {
            "offset": "0x332F0"
        },
        "std::bad_alloc::~bad_alloc": {
            "offset": "0xA1F0"
        },
        "std::bad_array_new_length::bad_array_new_length": {
            "offset": "0x9DE0"
        },
        "std::bad_array_new_length::~bad_array_new_length": {
            "offset": "0xA1F0"
        },
        "std::bad_cast::bad_cast": {
            "offset": "0x1C550"
        },
        "std::bad_cast::~bad_cast": {
            "offset": "0xA1F0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Endwrite": {
            "offset": "0x28200"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Lock": {
            "offset": "0x283E0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Reset_back": {
            "offset": "0x28400"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::_Unlock": {
            "offset": "0x285A0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::close": {
            "offset": "0x287E0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::imbue": {
            "offset": "0x28B40"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::overflow": {
            "offset": "0x28F30"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::pbackfail": {
            "offset": "0x29280"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::seekoff": {
            "offset": "0x29800"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::seekpos": {
            "offset": "0x299A0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::setbuf": {
            "offset": "0x29AE0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::sync": {
            "offset": "0x29C50"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::uflow": {
            "offset": "0x29DC0"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::underflow": {
            "offset": "0x2A350"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::xsgetn": {
            "offset": "0x2A500"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::xsputn": {
            "offset": "0x2A650"
        },
        "std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >": {
            "offset": "0x1CB80"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Endwrite": {
            "offset": "0x282F0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Lock": {
            "offset": "0x283E0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Reset_back": {
            "offset": "0x28440"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::_Unlock": {
            "offset": "0x285A0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::close": {
            "offset": "0x28890"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::imbue": {
            "offset": "0x28B90"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::overflow": {
            "offset": "0x290F0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::pbackfail": {
            "offset": "0x293A0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekoff": {
            "offset": "0x298D0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::seekpos": {
            "offset": "0x29A40"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::setbuf": {
            "offset": "0x29BC0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::sync": {
            "offset": "0x29CA0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::uflow": {
            "offset": "0x2A080"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::underflow": {
            "offset": "0x2A3D0"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsgetn": {
            "offset": "0x2A640"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::xsputn": {
            "offset": "0x2A710"
        },
        "std::basic_filebuf<wchar_t,std::char_traits<wchar_t> >::~basic_filebuf<wchar_t,std::char_traits<wchar_t> >": {
            "offset": "0x1CBF0"
        },
        "std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >": {
            "offset": "0x1BBC0"
        },
        "std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x1D210"
        },
        "std::basic_istream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x1D2D0"
        },
        "std::basic_ofstream<wchar_t,std::char_traits<wchar_t> >::basic_ofstream<wchar_t,std::char_traits<wchar_t> >": {
            "offset": "0x1BDD0"
        },
        "std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x1D210"
        },
        "std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x1D310"
        },
        "std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x1D250"
        },
        "std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry": {
            "offset": "0x1D360"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>": {
            "offset": "0x23F0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>": {
            "offset": "0x23F0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>": {
            "offset": "0x141E0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_55b0f89b53a0342680e40398a0d39887>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>": {
            "offset": "0x14350"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>": {
            "offset": "0x14520"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >": {
            "offset": "0x30C90"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>": {
            "offset": "0x146B0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append": {
            "offset": "0x28670"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign": {
            "offset": "0xCFB0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x9B80"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace": {
            "offset": "0x294B0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0xA0C0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>": {
            "offset": "0x13710"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append": {
            "offset": "0xCE30"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x1C580"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::push_back": {
            "offset": "0x32B50"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve": {
            "offset": "0x32CB0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0xA120"
        },
        "std::endl<char,std::char_traits<char> >": {
            "offset": "0x14C50"
        },
        "std::exception::exception": {
            "offset": "0x9E10"
        },
        "std::exception::what": {
            "offset": "0xDE90"
        },
        "std::function<bool __cdecl(ConsoleExecutionContext &)>::~function<bool __cdecl(ConsoleExecutionContext &)>": {
            "offset": "0x1C7E0"
        },
        "std::function<bool __cdecl(wchar_t const *,wchar_t const *)>::~function<bool __cdecl(wchar_t const *,wchar_t const *)>": {
            "offset": "0x1C7E0"
        },
        "std::function<void __cdecl(ProgressInfo const &)>::~function<void __cdecl(ProgressInfo const &)>": {
            "offset": "0x1C7E0"
        },
        "std::function<void __cdecl(bool,char const *,unsigned __int64)>::~function<void __cdecl(bool,char const *,unsigned __int64)>": {
            "offset": "0x1C7E0"
        },
        "std::function<void __cdecl(int const &)>::~function<void __cdecl(int const &)>": {
            "offset": "0x1C7E0"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x1BF90"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x1C7E0"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>::~function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>": {
            "offset": "0x1C7E0"
        },
        "std::function<void __cdecl(void)>::~function<void __cdecl(void)>": {
            "offset": "0x1C7E0"
        },
        "std::get<0,<lambda_59e2a1791af6bface35c61ef255959a3> >": {
            "offset": "0x14F40"
        },
        "std::invalid_argument::invalid_argument": {
            "offset": "0x333D0"
        },
        "std::invalid_argument::~invalid_argument": {
            "offset": "0xA1F0"
        },
        "std::invoke<<lambda_59e2a1791af6bface35c61ef255959a3> >": {
            "offset": "0x15410"
        },
        "std::length_error::length_error": {
            "offset": "0x33460"
        },
        "std::length_error::~length_error": {
            "offset": "0xA1F0"
        },
        "std::locale::~locale": {
            "offset": "0x1D290"
        },
        "std::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>": {
            "offset": "0x34700"
        },
        "std::logic_error::logic_error": {
            "offset": "0x334B0"
        },
        "std::make_shared<std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,HttpIgnoreCaseLess,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >": {
            "offset": "0x15420"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14930"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x1CCC0"
        },
        "std::map<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::shared_ptr<gameserveritemext_t>,std::less<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> > > >::~map<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::shared_ptr<gameserveritemext_t>,std::less<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> > > >": {
            "offset": "0x1CCF0"
        },
        "std::move<<lambda_59e2a1791af6bface35c61ef255959a3> &>": {
            "offset": "0x14F40"
        },
        "std::numpunct<char>::do_decimal_point": {
            "offset": "0x2ED20"
        },
        "std::numpunct<char>::do_falsename": {
            "offset": "0x2ED40"
        },
        "std::numpunct<char>::do_grouping": {
            "offset": "0x2EDC0"
        },
        "std::numpunct<char>::do_thousands_sep": {
            "offset": "0x2EE00"
        },
        "std::numpunct<char>::do_truename": {
            "offset": "0x2EE20"
        },
        "std::numpunct<char>::numpunct<char>": {
            "offset": "0x2E1F0"
        },
        "std::numpunct<wchar_t>::_Getcat": {
            "offset": "0x2E5C0"
        },
        "std::numpunct<wchar_t>::do_decimal_point": {
            "offset": "0x2ED30"
        },
        "std::numpunct<wchar_t>::do_falsename": {
            "offset": "0x2ED80"
        },
        "std::numpunct<wchar_t>::do_grouping": {
            "offset": "0x2EDC0"
        },
        "std::numpunct<wchar_t>::do_thousands_sep": {
            "offset": "0x2EE10"
        },
        "std::numpunct<wchar_t>::do_truename": {
            "offset": "0x2EE60"
        },
        "std::out_of_range::out_of_range": {
            "offset": "0x33590"
        },
        "std::out_of_range::~out_of_range": {
            "offset": "0xA1F0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1CD30"
        },
        "std::pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> >::~pair<std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::shared_ptr<gameserveritemext_t> >": {
            "offset": "0x1CDE0"
        },
        "std::recursive_mutex::~recursive_mutex": {
            "offset": "0x1D2C0"
        },
        "std::runtime_error::runtime_error": {
            "offset": "0x335E0"
        },
        "std::runtime_error::~runtime_error": {
            "offset": "0xA1F0"
        },
        "std::shared_ptr<gameserveritemext_t>::~shared_ptr<gameserveritemext_t>": {
            "offset": "0x1CE80"
        },
        "std::shared_ptr<int>::~shared_ptr<int>": {
            "offset": "0x1CE80"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<int> >::~shared_ptr<internal::ConsoleVariableEntry<int> >": {
            "offset": "0x1CE80"
        },
        "std::shared_ptr<internal::ConsoleVariableEntryBase>::~shared_ptr<internal::ConsoleVariableEntryBase>": {
            "offset": "0x1CE80"
        },
        "std::shared_ptr<std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,HttpIgnoreCaseLess,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~shared_ptr<std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,HttpIgnoreCaseLess,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >": {
            "offset": "0x1CE80"
        },
        "std::thread::_Invoke<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> >,0>": {
            "offset": "0x14060"
        },
        "std::thread::~thread": {
            "offset": "0x1D3B0"
        },
        "std::to_string": {
            "offset": "0x29D00"
        },
        "std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1C0E0"
        },
        "std::tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<int,net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1CED0"
        },
        "std::tuple<net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Less<net::PeerAddress,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x140A0"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xA0C0"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1CD30"
        },
        "std::unique_lock<std::mutex>::~unique_lock<std::mutex>": {
            "offset": "0x1CEE0"
        },
        "std::unique_lock<std::recursive_mutex>::~unique_lock<std::recursive_mutex>": {
            "offset": "0x1CEE0"
        },
        "std::unique_lock<std::shared_mutex>::~unique_lock<std::shared_mutex>": {
            "offset": "0x347E0"
        },
        "std::unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >::~unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >": {
            "offset": "0x1CF10"
        },
        "std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >": {
            "offset": "0x1CF40"
        },
        "std::unique_ptr<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> >,std::default_delete<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> > > >::get": {
            "offset": "0x28A10"
        },
        "std::unique_ptr<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> >,std::default_delete<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> > > >::unique_ptr<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> >,std::default_delete<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> > > ><std::default_delete<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> > >,0>": {
            "offset": "0xEB60"
        },
        "std::unique_ptr<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> >,std::default_delete<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> > > >::~unique_ptr<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> >,std::default_delete<std::tuple<<lambda_59e2a1791af6bface35c61ef255959a3> > > >": {
            "offset": "0x1CEF0"
        },
        "std::use_facet<std::codecvt<char,char,_Mbstatet> >": {
            "offset": "0x159A0"
        },
        "std::use_facet<std::codecvt<wchar_t,char,_Mbstatet> >": {
            "offset": "0x15A90"
        },
        "std::use_facet<std::ctype<char> >": {
            "offset": "0x15B80"
        },
        "std::use_facet<std::numpunct<char> >": {
            "offset": "0x2DDD0"
        },
        "std::use_facet<std::numpunct<wchar_t> >": {
            "offset": "0x2DF40"
        },
        "tbb::detail::d0::raii_guard<<lambda_34676882c90d3454845fd2efa3e5d7a7> >::~raii_guard<<lambda_34676882c90d3454845fd2efa3e5d7a7> >": {
            "offset": "0x1CE50"
        },
        "tbb::detail::d1::concurrent_unordered_base<tbb::detail::d1::concurrent_unordered_set_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,tbb::detail::d1::tbb_allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::destroy_node": {
            "offset": "0x28990"
        },
        "tbb::detail::d1::concurrent_unordered_base<tbb::detail::d1::concurrent_unordered_set_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,tbb::detail::d1::tbb_allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::init_bucket": {
            "offset": "0x28BE0"
        },
        "tbb::detail::d1::concurrent_unordered_base<tbb::detail::d1::concurrent_unordered_set_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,tbb::detail::d1::tbb_allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::internal_clear": {
            "offset": "0x28E70"
        },
        "tbb::detail::d1::concurrent_unordered_base<tbb::detail::d1::concurrent_unordered_set_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,tbb::detail::d1::tbb_allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::internal_find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14F50"
        },
        "tbb::detail::d1::concurrent_unordered_base<tbb::detail::d1::concurrent_unordered_set_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,tbb::detail::d1::tbb_allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::internal_insert<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,<lambda_14ef358a6050970295aca9b934844cc4> >": {
            "offset": "0x150E0"
        },
        "tbb::detail::d1::segment_table<std::atomic<tbb::detail::d1::list_node<unsigned __int64> *>,tbb::detail::d1::tbb_allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,tbb::detail::d1::concurrent_unordered_base<tbb::detail::d1::concurrent_unordered_set_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,tbb::detail::d1::tbb_allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::unordered_segment_table,63>::clear": {
            "offset": "0x28700"
        },
        "tbb::detail::d1::unique_scoped_lock<tbb::detail::d1::spin_mutex>::~unique_scoped_lock<tbb::detail::d1::spin_mutex>": {
            "offset": "0x341B0"
        },
        "tbb::detail::r1::AvailableHwConcurrency": {
            "offset": "0x34400"
        },
        "tbb::detail::r1::PrintExtraVersionInfo": {
            "offset": "0x34220"
        },
        "tbb::detail::r1::`dynamic initializer for '__TBB_InitOnceHiddenInstance''": {
            "offset": "0x1630"
        },
        "tbb::detail::r1::`dynamic initializer for 'allowed_parallelism_ctl''": {
            "offset": "0x14C0"
        },
        "tbb::detail::r1::`dynamic initializer for 'lifetime_ctl''": {
            "offset": "0x1510"
        },
        "tbb::detail::r1::`dynamic initializer for 'stack_size_ctl''": {
            "offset": "0x1560"
        },
        "tbb::detail::r1::`dynamic initializer for 'terminate_on_exception_ctl''": {
            "offset": "0x15B0"
        },
        "tbb::detail::r1::allocate_memory": {
            "offset": "0x33B90"
        },
        "tbb::detail::r1::allowed_parallelism_control::active_value": {
            "offset": "0x33E50"
        },
        "tbb::detail::r1::allowed_parallelism_control::apply_active": {
            "offset": "0x33E40"
        },
        "tbb::detail::r1::allowed_parallelism_control::default_value": {
            "offset": "0x33DB0"
        },
        "tbb::detail::r1::allowed_parallelism_control::is_first_arg_preferred": {
            "offset": "0x33E30"
        },
        "tbb::detail::r1::arena::has_enqueued_tasks": {
            "offset": "0x351F0"
        },
        "tbb::detail::r1::bad_last_alloc::bad_last_alloc": {
            "offset": "0x33360"
        },
        "tbb::detail::r1::bad_last_alloc::what": {
            "offset": "0x33AD0"
        },
        "tbb::detail::r1::bad_last_alloc::~bad_last_alloc": {
            "offset": "0xA1F0"
        },
        "tbb::detail::r1::clear_address_waiter_table": {
            "offset": "0x34F80"
        },
        "tbb::detail::r1::concurrent_monitor_mutex::get_semaphore": {
            "offset": "0x34970"
        },
        "tbb::detail::r1::control_storage::active_value": {
            "offset": "0x33D20"
        },
        "tbb::detail::r1::control_storage::apply_active": {
            "offset": "0x33D00"
        },
        "tbb::detail::r1::control_storage::is_first_arg_preferred": {
            "offset": "0x33D10"
        },
        "tbb::detail::r1::deallocate_memory": {
            "offset": "0x33BC0"
        },
        "tbb::detail::r1::detect_cpu_features": {
            "offset": "0x342F0"
        },
        "tbb::detail::r1::do_throw<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0x32F30"
        },
        "tbb::detail::r1::do_throw<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0x32F60"
        },
        "tbb::detail::r1::do_throw<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0x32F90"
        },
        "tbb::detail::r1::do_throw<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0x32FC0"
        },
        "tbb::detail::r1::do_throw<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0x32FF0"
        },
        "tbb::detail::r1::do_throw<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0x33020"
        },
        "tbb::detail::r1::do_throw<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0x33050"
        },
        "tbb::detail::r1::do_throw<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0x33080"
        },
        "tbb::detail::r1::do_throw<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0x330B0"
        },
        "tbb::detail::r1::do_throw<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0x330E0"
        },
        "tbb::detail::r1::do_throw<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0x33110"
        },
        "tbb::detail::r1::do_throw<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0x33140"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0x33170"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0x33190"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0x331B0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0x331D0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0x331F0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0x33210"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0x33230"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0x33250"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0x33270"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0x33290"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0x332B0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0x332D0"
        },
        "tbb::detail::r1::dummy_allocate_binding_handler": {
            "offset": "0xE080"
        },
        "tbb::detail::r1::dummy_apply_affinity": {
            "offset": "0x9FA0"
        },
        "tbb::detail::r1::dummy_deallocate_binding_handler": {
            "offset": "0x9FA0"
        },
        "tbb::detail::r1::dummy_destroy_system_topology": {
            "offset": "0x9FA0"
        },
        "tbb::detail::r1::dummy_get_default_concurrency": {
            "offset": "0x34EE0"
        },
        "tbb::detail::r1::dummy_restore_affinity": {
            "offset": "0x9FA0"
        },
        "tbb::detail::r1::dynamic_link": {
            "offset": "0x34210"
        },
        "tbb::detail::r1::dynamic_unlink": {
            "offset": "0x9FA0"
        },
        "tbb::detail::r1::dynamic_unlink_all": {
            "offset": "0x9FA0"
        },
        "tbb::detail::r1::gcc_rethrow_exception_broken": {
            "offset": "0xE140"
        },
        "tbb::detail::r1::get_address_waiter_table": {
            "offset": "0x35120"
        },
        "tbb::detail::r1::governor::acquire_resources": {
            "offset": "0x34EF0"
        },
        "tbb::detail::r1::governor::default_num_threads": {
            "offset": "0x348F0"
        },
        "tbb::detail::r1::governor::release_resources": {
            "offset": "0x34F40"
        },
        "tbb::detail::r1::handle_perror": {
            "offset": "0x33950"
        },
        "tbb::detail::r1::initialize_allocate_handler": {
            "offset": "0x33B00"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocate_handler": {
            "offset": "0x33B30"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocator": {
            "offset": "0x33BD0"
        },
        "tbb::detail::r1::initialize_hardware_concurrency_info": {
            "offset": "0x344C0"
        },
        "tbb::detail::r1::lifetime_control::apply_active": {
            "offset": "0x33F60"
        },
        "tbb::detail::r1::lifetime_control::default_value": {
            "offset": "0xE080"
        },
        "tbb::detail::r1::lifetime_control::is_first_arg_preferred": {
            "offset": "0xE140"
        },
        "tbb::detail::r1::market::add_ref_unsafe": {
            "offset": "0x347F0"
        },
        "tbb::detail::r1::market::app_parallelism_limit": {
            "offset": "0x341D0"
        },
        "tbb::detail::r1::market::release": {
            "offset": "0x34A10"
        },
        "tbb::detail::r1::market::set_active_num_workers": {
            "offset": "0x34B90"
        },
        "tbb::detail::r1::market::update_allotment": {
            "offset": "0x34DD0"
        },
        "tbb::detail::r1::missing_wait::missing_wait": {
            "offset": "0x33530"
        },
        "tbb::detail::r1::missing_wait::what": {
            "offset": "0x33AE0"
        },
        "tbb::detail::r1::missing_wait::~missing_wait": {
            "offset": "0xA1F0"
        },
        "tbb::detail::r1::runtime_warning": {
            "offset": "0x34340"
        },
        "tbb::detail::r1::stack_size_control::apply_active": {
            "offset": "0x33D00"
        },
        "tbb::detail::r1::stack_size_control::default_value": {
            "offset": "0x33F50"
        },
        "tbb::detail::r1::std_cache_aligned_allocate": {
            "offset": "0x33CE0"
        },
        "tbb::detail::r1::std_cache_aligned_deallocate": {
            "offset": "0x33CF0"
        },
        "tbb::detail::r1::terminate_on_exception": {
            "offset": "0x341F0"
        },
        "tbb::detail::r1::terminate_on_exception_control::default_value": {
            "offset": "0xE080"
        },
        "tbb::detail::r1::throw_exception": {
            "offset": "0x33A20"
        },
        "tbb::detail::r1::unsafe_wait::unsafe_wait": {
            "offset": "0x33670"
        },
        "tbb::detail::r1::unsafe_wait::~unsafe_wait": {
            "offset": "0xA1F0"
        },
        "tbb::detail::r1::user_abort::user_abort": {
            "offset": "0x33700"
        },
        "tbb::detail::r1::user_abort::what": {
            "offset": "0x33AF0"
        },
        "tbb::detail::r1::user_abort::~user_abort": {
            "offset": "0xA1F0"
        },
        "utf8::exception::exception": {
            "offset": "0x31EB0"
        },
        "utf8::internal::append<std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,char>": {
            "offset": "0x30F30"
        },
        "utf8::internal::validate_next<std::_String_view_iterator<std::char_traits<char> > >": {
            "offset": "0x31860"
        },
        "utf8::invalid_code_point::invalid_code_point": {
            "offset": "0x31F40"
        },
        "utf8::invalid_code_point::what": {
            "offset": "0x32E60"
        },
        "utf8::invalid_code_point::~invalid_code_point": {
            "offset": "0xA1F0"
        },
        "utf8::invalid_utf8::invalid_utf8": {
            "offset": "0x31FB0"
        },
        "utf8::invalid_utf8::what": {
            "offset": "0x32E70"
        },
        "utf8::invalid_utf8::~invalid_utf8": {
            "offset": "0xA1F0"
        },
        "utf8::not_enough_room::not_enough_room": {
            "offset": "0x32010"
        },
        "utf8::not_enough_room::what": {
            "offset": "0x32E80"
        },
        "utf8::not_enough_room::~not_enough_room": {
            "offset": "0xA1F0"
        },
        "va_impl<char,fmt::v8::basic_format_args<fmt::v8::basic_printf_context<fmt::v8::appender,char> > >": {
            "offset": "0x31640"
        },
        "vva": {
            "offset": "0x32E40"
        },
        "xbr::`dynamic initializer for 'kGameBuildUniquifiers''": {
            "offset": "0x1060"
        }
    }
}