{
    "nui-resources.dll": {
        "<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>::~<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>": {
            "offset": "0x12130"
        },
        "<lambda_4b5991f435073e3c82f6aa21eef9cb28>::~<lambda_4b5991f435073e3c82f6aa21eef9cb28>": {
            "offset": "0x1EB10"
        },
        "<lambda_7563642f228337b5e4d62922b583c158>::~<lambda_7563642f228337b5e4d62922b583c158>": {
            "offset": "0x1EB40"
        },
        "<lambda_77ed9a324e4b2abd68f43d246a32c7f7>::<lambda_77ed9a324e4b2abd68f43d246a32c7f7>": {
            "offset": "0x14790"
        },
        "<lambda_77ed9a324e4b2abd68f43d246a32c7f7>::~<lambda_77ed9a324e4b2abd68f43d246a32c7f7>": {
            "offset": "0x14C20"
        },
        "<lambda_a3e97fbfaf2498451df291433411d41d>::~<lambda_a3e97fbfaf2498451df291433411d41d>": {
            "offset": "0x1EB10"
        },
        "<lambda_edbaec5da03210d3627a1fabcf18376a>::~<lambda_edbaec5da03210d3627a1fabcf18376a>": {
            "offset": "0x1EB40"
        },
        "<lambda_eedc40a2521921f3ba689555a00d36bc>::~<lambda_eedc40a2521921f3ba689555a00d36bc>": {
            "offset": "0x2B200"
        },
        "??@c4078e551752f79e991c64c10607d245@": {
            "offset": "0x15270"
        },
        "CefAddCrossOriginWhitelistEntry": {
            "offset": "0x37F50"
        },
        "CefBaseRefCounted::~CefBaseRefCounted": {
            "offset": "0x125F0"
        },
        "CefParseURL": {
            "offset": "0x38090"
        },
        "CefResourceHandler::Open": {
            "offset": "0x10F40"
        },
        "CefResourceHandler::ProcessRequest": {
            "offset": "0x10FA0"
        },
        "CefResourceHandler::Read": {
            "offset": "0x11040"
        },
        "CefResourceHandler::ReadResponse": {
            "offset": "0x11080"
        },
        "CefResourceHandler::Skip": {
            "offset": "0x11000"
        },
        "CefStringBase<CefStringTraitsUTF16>::CefStringBase<CefStringTraitsUTF16>": {
            "offset": "0x11FA0"
        },
        "CefStringBase<CefStringTraitsUTF16>::ToString": {
            "offset": "0x12E10"
        },
        "CefStringBase<CefStringTraitsUTF16>::compare": {
            "offset": "0x13090"
        },
        "CefStringBase<CefStringTraitsUTF16>::~CefStringBase<CefStringTraitsUTF16>": {
            "offset": "0x12190"
        },
        "CefStructBase<CefMouseEventTraits>::~CefStructBase<CefMouseEventTraits>": {
            "offset": "0x2B260"
        },
        "CefStructBase<CefURLPartsTraits>::~CefStructBase<CefURLPartsTraits>": {
            "offset": "0x121E0"
        },
        "CfxState::CfxState": {
            "offset": "0x34940"
        },
        "CleanURL": {
            "offset": "0x2D8B0"
        },
        "Component::As": {
            "offset": "0xE4D0"
        },
        "Component::IsA": {
            "offset": "0xE590"
        },
        "Component::SetCommandLine": {
            "offset": "0xA3F0"
        },
        "Component::SetUserData": {
            "offset": "0xE5A0"
        },
        "ComponentInstance::DoGameLoad": {
            "offset": "0xE570"
        },
        "ComponentInstance::Initialize": {
            "offset": "0xE580"
        },
        "ComponentInstance::Shutdown": {
            "offset": "0xE5A0"
        },
        "ConvertToJSON": {
            "offset": "0x20CD0"
        },
        "ConvertToMsgPack": {
            "offset": "0x21760"
        },
        "CoreGetComponentRegistry": {
            "offset": "0xB620"
        },
        "CoreGetGlobalInstanceRegistry": {
            "offset": "0xB6B0"
        },
        "CreateComponent": {
            "offset": "0xE5B0"
        },
        "DllMain": {
            "offset": "0x396EC"
        },
        "DloadAcquireSectionWriteAccess": {
            "offset": "0x398BC"
        },
        "DloadGetSRWLockFunctionPointers": {
            "offset": "0x39968"
        },
        "DloadMakePermanentImageCommit": {
            "offset": "0x39A08"
        },
        "DloadObtainSection": {
            "offset": "0x39AA0"
        },
        "DloadProtectSection": {
            "offset": "0x39B3C"
        },
        "DloadReleaseSectionWriteAccess": {
            "offset": "0x39BCC"
        },
        "DoNtRaiseException": {
            "offset": "0x36E50"
        },
        "FatalErrorNoExceptRealV": {
            "offset": "0xBAC0"
        },
        "FatalErrorRealV": {
            "offset": "0xBAF0"
        },
        "FormatErrorPickup<std::tuple<std::basic_string_view<char,std::char_traits<char> >,int,unsigned int> >": {
            "offset": "0x2220"
        },
        "GetAbsoluteCitPath": {
            "offset": "0x351E0"
        },
        "GlobalErrorHandler": {
            "offset": "0xBD30"
        },
        "Header::~Header": {
            "offset": "0x1EC90"
        },
        "HookFunctionBase::RunAll": {
            "offset": "0x37C70"
        },
        "HostSharedData<CfxState>::HostSharedData<CfxState>": {
            "offset": "0x344A0"
        },
        "HostSharedData<CfxState>::~HostSharedData<CfxState>": {
            "offset": "0x34A00"
        },
        "HostSharedData<ReverseGameData>::HostSharedData<ReverseGameData>": {
            "offset": "0x2A7C0"
        },
        "IScriptRuntimeHandler::GetIID": {
            "offset": "0x22390"
        },
        "InitFunction::Run": {
            "offset": "0xE5E0"
        },
        "InitFunctionBase::InitFunctionBase": {
            "offset": "0x36BB0"
        },
        "InitFunctionBase::Register": {
            "offset": "0x36FC0"
        },
        "InitFunctionBase::RunAll": {
            "offset": "0x37010"
        },
        "MakeRelativeCitPath": {
            "offset": "0xC3D0"
        },
        "MakeUICallback": {
            "offset": "0x22510"
        },
        "RPCResourceHandler::AddRef": {
            "offset": "0x12A60"
        },
        "RPCResourceHandler::Cancel": {
            "offset": "0xA3F0"
        },
        "RPCResourceHandler::GetResponseHeaders": {
            "offset": "0x10160"
        },
        "RPCResourceHandler::HasAtLeastOneRef": {
            "offset": "0x12D60"
        },
        "RPCResourceHandler::HasOneRef": {
            "offset": "0x12D90"
        },
        "RPCResourceHandler::ProcessRequest": {
            "offset": "0xE5F0"
        },
        "RPCResourceHandler::RPCResourceHandler": {
            "offset": "0x12020"
        },
        "RPCResourceHandler::ReadResponse": {
            "offset": "0x10DD0"
        },
        "RPCResourceHandler::Release": {
            "offset": "0x12DB0"
        },
        "RaiseDebugException": {
            "offset": "0x36F30"
        },
        "RegisterNuiCallback<0>": {
            "offset": "0x1C410"
        },
        "RegisterNuiCallback<1>": {
            "offset": "0x1C1B0"
        },
        "RequestWrap::~RequestWrap": {
            "offset": "0x25220"
        },
        "ResourceUI::AddCallback": {
            "offset": "0x16A70"
        },
        "ResourceUI::Create": {
            "offset": "0x16CC0"
        },
        "ResourceUI::Destroy": {
            "offset": "0x182F0"
        },
        "ResourceUI::HasCallbacks": {
            "offset": "0x12D70"
        },
        "ResourceUI::HasFrame": {
            "offset": "0x12D80"
        },
        "ResourceUI::InvokeCallback": {
            "offset": "0x18320"
        },
        "ResourceUI::IsDead": {
            "offset": "0x12DA0"
        },
        "ResourceUI::RemoveCallback": {
            "offset": "0x18EC0"
        },
        "ResourceUI::ResourceUI": {
            "offset": "0x14BB0"
        },
        "ResourceUI::SetHasCallbacks": {
            "offset": "0x12E00"
        },
        "ResourceUI::SignalPoll": {
            "offset": "0x18F00"
        },
        "ResourceUI::~ResourceUI": {
            "offset": "0x15200"
        },
        "ReverseGameData::ReverseGameData": {
            "offset": "0x2B100"
        },
        "ScopedError::~ScopedError": {
            "offset": "0xA5E0"
        },
        "SysError": {
            "offset": "0xC950"
        },
        "ToNarrow": {
            "offset": "0x37040"
        },
        "ToWide": {
            "offset": "0x37130"
        },
        "TraceRealV": {
            "offset": "0x37440"
        },
        "Win32TrapAndJump64": {
            "offset": "0x37D10"
        },
        "_DllMainCRTStartup": {
            "offset": "0x390C0"
        },
        "_Init_thread_abort": {
            "offset": "0x383E0"
        },
        "_Init_thread_footer": {
            "offset": "0x38410"
        },
        "_Init_thread_header": {
            "offset": "0x38470"
        },
        "_Init_thread_notify": {
            "offset": "0x384D8"
        },
        "_Init_thread_wait": {
            "offset": "0x3851C"
        },
        "_RTC_Initialize": {
            "offset": "0x39758"
        },
        "_RTC_Terminate": {
            "offset": "0x39794"
        },
        "__ArrayUnwind": {
            "offset": "0x38CC8"
        },
        "__GSHandlerCheck": {
            "offset": "0x38AFC"
        },
        "__GSHandlerCheckCommon": {
            "offset": "0x38B1C"
        },
        "__GSHandlerCheck_EH": {
            "offset": "0x38B78"
        },
        "__GSHandlerCheck_SEH": {
            "offset": "0x3927C"
        },
        "__chkstk": {
            "offset": "0x38D50"
        },
        "__crt_debugger_hook": {
            "offset": "0x394B8"
        },
        "__delayLoadHelper2": {
            "offset": "0x39C60"
        },
        "__dyn_tls_init": {
            "offset": "0x38944"
        },
        "__dyn_tls_on_demand_init": {
            "offset": "0x389AC"
        },
        "__isa_available_init": {
            "offset": "0x3930C"
        },
        "__local_stdio_printf_options": {
            "offset": "0xE3B0"
        },
        "__local_stdio_scanf_options": {
            "offset": "0x3972C"
        },
        "__raise_securityfailure": {
            "offset": "0x39100"
        },
        "__report_gsfailure": {
            "offset": "0x39134"
        },
        "__scrt_acquire_startup_lock": {
            "offset": "0x385C4"
        },
        "__scrt_dllmain_after_initialize_c": {
            "offset": "0x38600"
        },
        "__scrt_dllmain_before_initialize_c": {
            "offset": "0x38634"
        },
        "__scrt_dllmain_crt_thread_attach": {
            "offset": "0x3864C"
        },
        "__scrt_dllmain_crt_thread_detach": {
            "offset": "0x38674"
        },
        "__scrt_dllmain_exception_filter": {
            "offset": "0x3868C"
        },
        "__scrt_dllmain_uninitialize_c": {
            "offset": "0x386EC"
        },
        "__scrt_dllmain_uninitialize_critical": {
            "offset": "0x3871C"
        },
        "__scrt_fastfail": {
            "offset": "0x394C0"
        },
        "__scrt_get_dyn_tls_init_callback": {
            "offset": "0x39750"
        },
        "__scrt_initialize_crt": {
            "offset": "0x38730"
        },
        "__scrt_initialize_default_local_stdio_options": {
            "offset": "0x39734"
        },
        "__scrt_initialize_onexit_tables": {
            "offset": "0x3877C"
        },
        "__scrt_initialize_thread_safe_statics": {
            "offset": "0x382E8"
        },
        "__scrt_initialize_type_info": {
            "offset": "0x39710"
        },
        "__scrt_is_nonwritable_in_current_image": {
            "offset": "0x38808"
        },
        "__scrt_is_nonwritable_in_current_image$filt$0": {
            "offset": "0x3BEDC"
        },
        "__scrt_is_ucrt_dll_in_use": {
            "offset": "0x39634"
        },
        "__scrt_release_startup_lock": {
            "offset": "0x388A0"
        },
        "__scrt_stub_for_acrt_initialize": {
            "offset": "0xE5A0"
        },
        "__scrt_stub_for_acrt_thread_attach": {
            "offset": "0xE5A0"
        },
        "__scrt_stub_for_acrt_thread_detach": {
            "offset": "0xE5A0"
        },
        "__scrt_stub_for_acrt_uninitialize": {
            "offset": "0xE5A0"
        },
        "__scrt_stub_for_acrt_uninitialize_critical": {
            "offset": "0xE5A0"
        },
        "__scrt_stub_for_is_c_termination_complete": {
            "offset": "0xE4D0"
        },
        "__scrt_throw_std_bad_alloc": {
            "offset": "0x3960C"
        },
        "__scrt_throw_std_bad_array_new_length": {
            "offset": "0xD150"
        },
        "__scrt_uninitialize_crt": {
            "offset": "0x388C4"
        },
        "__scrt_uninitialize_thread_safe_statics": {
            "offset": "0x383B8"
        },
        "__scrt_uninitialize_type_info": {
            "offset": "0x39720"
        },
        "__security_check_cookie": {
            "offset": "0x38C10"
        },
        "__security_init_cookie": {
            "offset": "0x39640"
        },
        "__std_find_trivial_1": {
            "offset": "0x38160"
        },
        "_get_startup_argv_mode": {
            "offset": "0x3962C"
        },
        "_guard_check_icall_nop": {
            "offset": "0xA3F0"
        },
        "_guard_dispatch_icall_nop": {
            "offset": "0x39F70"
        },
        "_guard_xfg_dispatch_icall_nop": {
            "offset": "0x39F90"
        },
        "_onexit": {
            "offset": "0x388F0"
        },
        "_wwassert": {
            "offset": "0x354E0"
        },
        "`__ArrayUnwind'::`1'::filt$0": {
            "offset": "0x3BF20"
        },
        "`dllmain_crt_process_attach'::`1'::fin$0": {
            "offset": "0x3BF7F"
        },
        "`dllmain_crt_process_detach'::`1'::fin$0": {
            "offset": "0x3BF96"
        },
        "`dllmain_crt_process_detach'::`1'::fin$1": {
            "offset": "0x3BFAF"
        },
        "`dllmain_dispatch'::`1'::filt$0": {
            "offset": "0x3BFC3"
        },
        "`dynamic initializer for 'HostSharedData<ReverseGameData>::m_fakeData''": {
            "offset": "0x1810"
        },
        "`dynamic initializer for '_init_instance_0''": {
            "offset": "0x1000"
        },
        "`dynamic initializer for '_init_instance_24''": {
            "offset": "0x1310"
        },
        "`dynamic initializer for '_init_instance_25''": {
            "offset": "0x1340"
        },
        "`dynamic initializer for '_init_instance_26''": {
            "offset": "0x1370"
        },
        "`dynamic initializer for '_init_instance_27''": {
            "offset": "0x13A0"
        },
        "`dynamic initializer for '_init_instance_28''": {
            "offset": "0x13D0"
        },
        "`dynamic initializer for '_init_instance_29''": {
            "offset": "0x1640"
        },
        "`dynamic initializer for '_init_instance_30''": {
            "offset": "0x1670"
        },
        "`dynamic initializer for '_init_instance_31''": {
            "offset": "0x1400"
        },
        "`dynamic initializer for 'g_nuiCallbackMutex''": {
            "offset": "0x1430"
        },
        "`dynamic initializer for 'g_nuiCallbackQueue''": {
            "offset": "0x1460"
        },
        "`dynamic initializer for 'g_thisError''": {
            "offset": "0x1030"
        },
        "`dynamic initializer for 'httpInitFunction''": {
            "offset": "0x14A0"
        },
        "`dynamic initializer for 'initFunction''": {
            "offset": "0x14E0"
        },
        "`dynamic initializer for 'initIoBuf''": {
            "offset": "0x1A70"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>,<lambda_4b5991f435073e3c82f6aa21eef9cb28> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EE60"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >,<lambda_7563642f228337b5e4d62922b583c158> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EE80"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >,<lambda_7563642f228337b5e4d62922b583c158> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EE80"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>,<lambda_77ed9a324e4b2abd68f43d246a32c7f7> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x15250"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>,<lambda_77ed9a324e4b2abd68f43d246a32c7f7> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x15250"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>,<lambda_a3e97fbfaf2498451df291433411d41d> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EE60"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >,<lambda_edbaec5da03210d3627a1fabcf18376a> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EE80"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >,<lambda_edbaec5da03210d3627a1fabcf18376a> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x1EE80"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >,<lambda_eedc40a2521921f3ba689555a00d36bc> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2B490"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >,<lambda_eedc40a2521921f3ba689555a00d36bc> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2B490"
        },
        "atexit": {
            "offset": "0x3892C"
        },
        "boost::algorithm::to_lower_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x24FB0"
        },
        "capture_previous_context": {
            "offset": "0x39208"
        },
        "cef::logging::LogMessage::LogMessage": {
            "offset": "0x37DE0"
        },
        "cef::logging::LogMessage::~LogMessage": {
            "offset": "0x37E40"
        },
        "debug::Alias": {
            "offset": "0xA3F0"
        },
        "dllmain_crt_dispatch": {
            "offset": "0x38DA0"
        },
        "dllmain_crt_process_attach": {
            "offset": "0x38DF0"
        },
        "dllmain_crt_process_detach": {
            "offset": "0x38F08"
        },
        "dllmain_dispatch": {
            "offset": "0x38F8C"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::grow": {
            "offset": "0xD790"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::~basic_memory_buffer<char,500,std::allocator<char> >": {
            "offset": "0xA4B0"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::grow": {
            "offset": "0x33CC0"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::~basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >": {
            "offset": "0x33370"
        },
        "fmt::v8::detail::add_compare": {
            "offset": "0x334F0"
        },
        "fmt::v8::detail::assert_fail": {
            "offset": "0x33630"
        },
        "fmt::v8::detail::bigint::assign_pow10": {
            "offset": "0x33680"
        },
        "fmt::v8::detail::bigint::divmod_assign": {
            "offset": "0x33850"
        },
        "fmt::v8::detail::bigint::square": {
            "offset": "0x34090"
        },
        "fmt::v8::detail::bigint::~bigint": {
            "offset": "0x33370"
        },
        "fmt::v8::detail::buffer<char>::append<char>": {
            "offset": "0x2CC0"
        },
        "fmt::v8::detail::buffer<char>::try_resize": {
            "offset": "0x34350"
        },
        "fmt::v8::detail::compare": {
            "offset": "0x337B0"
        },
        "fmt::v8::detail::count_digits": {
            "offset": "0xD570"
        },
        "fmt::v8::detail::decimal_point_impl<char>": {
            "offset": "0x2FEC0"
        },
        "fmt::v8::detail::do_throw<fmt::v8::format_error>": {
            "offset": "0x2D70"
        },
        "fmt::v8::detail::dragonbox::cache_accessor<double>::get_cached_power": {
            "offset": "0x33B90"
        },
        "fmt::v8::detail::dragonbox::is_endpoint_integer<double>": {
            "offset": "0x31D90"
        },
        "fmt::v8::detail::dragonbox::remove_trailing_zeros": {
            "offset": "0x33E70"
        },
        "fmt::v8::detail::dragonbox::shorter_interval_case<float>": {
            "offset": "0x31DC0"
        },
        "fmt::v8::detail::dragonbox::to_decimal<double>": {
            "offset": "0x32A80"
        },
        "fmt::v8::detail::dragonbox::to_decimal<float>": {
            "offset": "0x32650"
        },
        "fmt::v8::detail::error_handler::on_error": {
            "offset": "0x33DF0"
        },
        "fmt::v8::detail::fallback_format<double>": {
            "offset": "0x2FFD0"
        },
        "fmt::v8::detail::fallback_format<long double>": {
            "offset": "0x2FFD0"
        },
        "fmt::v8::detail::fmt_snprintf": {
            "offset": "0x33B20"
        },
        "fmt::v8::detail::for_each_codepoint<`fmt::v8::detail::compute_width'::`2'::count_code_points>": {
            "offset": "0x2DA0"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64,fmt::v8::appender,0>": {
            "offset": "0x31480"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64>": {
            "offset": "0x3070"
        },
        "fmt::v8::detail::format_decimal<char,unsigned int,fmt::v8::appender,0>": {
            "offset": "0x31360"
        },
        "fmt::v8::detail::format_float<double>": {
            "offset": "0x2FA10"
        },
        "fmt::v8::detail::format_float<long double>": {
            "offset": "0x315C0"
        },
        "fmt::v8::detail::format_uint<4,char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x3150"
        },
        "fmt::v8::detail::grisu_gen_digits<fmt::v8::detail::fixed_handler>": {
            "offset": "0x31920"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,char>": {
            "offset": "0x3270"
        },
        "fmt::v8::detail::parse_header<char,<lambda_10b59f138e704e35b5296527d0235f76> >": {
            "offset": "0x33D0"
        },
        "fmt::v8::detail::parse_nonnegative_int<char>": {
            "offset": "0x3630"
        },
        "fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>::write_null_pointer": {
            "offset": "0xE300"
        },
        "fmt::v8::detail::snprintf_float<double>": {
            "offset": "0x31FD0"
        },
        "fmt::v8::detail::snprintf_float<long double>": {
            "offset": "0x32250"
        },
        "fmt::v8::detail::thousands_sep_impl<char>": {
            "offset": "0x324E0"
        },
        "fmt::v8::detail::thousands_sep_result<char>::~thousands_sep_result<char>": {
            "offset": "0xA510"
        },
        "fmt::v8::detail::to_unsigned<int>": {
            "offset": "0x3700"
        },
        "fmt::v8::detail::utf8_decode": {
            "offset": "0xE140"
        },
        "fmt::v8::detail::vprintf<char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4D00"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,double,0>": {
            "offset": "0x5D00"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,float,0>": {
            "offset": "0x58B0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,long double,0>": {
            "offset": "0x6140"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned __int64,0>": {
            "offset": "0x330E0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned int,0>": {
            "offset": "0x32FC0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender>": {
            "offset": "0x57E0"
        },
        "fmt::v8::detail::write_char<char,fmt::v8::appender>": {
            "offset": "0x6580"
        },
        "fmt::v8::detail::write_exponent<char,fmt::v8::appender>": {
            "offset": "0x65C0"
        },
        "fmt::v8::detail::write_float<fmt::v8::appender,fmt::v8::detail::big_decimal_fp,char>": {
            "offset": "0x6750"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x7110"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned int>": {
            "offset": "0x6B20"
        },
        "fmt::v8::detail::write_int_data<char>::write_int_data<char>": {
            "offset": "0xA0A0"
        },
        "fmt::v8::detail::write_int_localized<fmt::v8::appender,unsigned __int64,char>": {
            "offset": "0x7840"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_051aec1ce4ed0271119623a7e83ac6a5> &>": {
            "offset": "0x7C60"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_22cb150d85fca5a3ac6a96f517638e39> &>": {
            "offset": "0x7E30"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_69652fb90da4a77ba8cf5fef5ea19cdd> >": {
            "offset": "0x7FD0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_fbd162939e03e0c955beb05a33c24f5e> &>": {
            "offset": "0x7FD0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_02a1634acea1c2868026d163185cc0d5> &>": {
            "offset": "0x8160"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06b2adfe852a46c8d65fe26cc7c8ca5d> &>": {
            "offset": "0x8380"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06f64a48a5b4f184684d74740837f1c7> &>": {
            "offset": "0x8500"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_2d30ec7f416bbcee3bc8a87df0c22c03> >": {
            "offset": "0x9C90"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_33ba7a720adff5c90e1946d777cb5230> &>": {
            "offset": "0x8690"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_4ea56d52f8212d84933fa76e5a159b3f> &>": {
            "offset": "0x88B0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_514469ad4ff2f796c2a70ef6994dff64> &>": {
            "offset": "0x8B50"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_596cc5dacf733e82dcb56ca6ee54b81f> &>": {
            "offset": "0x8D70"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_686459aaae64d4cbdde6763d637485ac> &>": {
            "offset": "0x8EF0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_694eb9c30a49e7dae164c077f09b5a7f> &>": {
            "offset": "0x9110"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_8cce229a1891be08a4c6e75623ca3fd6> &>": {
            "offset": "0x9330"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_b9c069f91a736dafbdb5ba8344e9f4c8> &>": {
            "offset": "0x94B0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_cb4d4b26b782de201d2a0edc777aea57> &>": {
            "offset": "0x96D0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_de0fdbc03b7ebc9cd9291e836878da40> &>": {
            "offset": "0x9850"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_f811a0db88237a09377d34dce98c0f31> &>": {
            "offset": "0x9A70"
        },
        "fmt::v8::detail::write_ptr<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x9E20"
        },
        "fmt::v8::format_error::format_error": {
            "offset": "0xA2A0"
        },
        "fmt::v8::format_error::~format_error": {
            "offset": "0xA640"
        },
        "fmt::v8::sprintf<char [43],std::basic_string_view<char,std::char_traits<char> >,char const *,char>": {
            "offset": "0x361E0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3B70"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3950"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3820"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3730"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3B70"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3A40"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x3CA0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4800"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4230"
        },
        "fmt::v8::vsprintf<fmt::v8::basic_string_view<char>,char>": {
            "offset": "0x2A6A0"
        },
        "fmt::v8::vsprintf<std::basic_string_view<char,std::char_traits<char> >,char>": {
            "offset": "0x36A80"
        },
        "fprintf": {
            "offset": "0xE3C0"
        },
        "fwEvent<>::ConnectInternal": {
            "offset": "0x12A70"
        },
        "fwEvent<char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::ConnectInternal": {
            "offset": "0x12A70"
        },
        "fwEvent<fx::Resource *>::ConnectInternal": {
            "offset": "0x12A70"
        },
        "fwEvent<fx::ResourceManager *>::ConnectInternal": {
            "offset": "0x12A70"
        },
        "fwEvent<std::function<void __cdecl(bool,char const *,unsigned __int64)> >::ConnectInternal": {
            "offset": "0x12A70"
        },
        "fwPlatformString::~fwPlatformString": {
            "offset": "0xA660"
        },
        "fwRefContainer<InstanceRegistryBase<fwRefContainer<fwRefCountable> > >::~fwRefContainer<InstanceRegistryBase<fwRefContainer<fwRefCountable> > >": {
            "offset": "0x12370"
        },
        "fwRefContainer<ResourceUI>::~fwRefContainer<ResourceUI>": {
            "offset": "0x12370"
        },
        "fwRefContainer<fwRefCountable>::~fwRefContainer<fwRefCountable>": {
            "offset": "0x12370"
        },
        "fwRefContainer<fx::Resource>::~fwRefContainer<fx::Resource>": {
            "offset": "0x12370"
        },
        "fwRefContainer<fx::ResourceCallbackComponent>::~fwRefContainer<fx::ResourceCallbackComponent>": {
            "offset": "0x12370"
        },
        "fwRefContainer<fx::ResourceEventComponent>::~fwRefContainer<fx::ResourceEventComponent>": {
            "offset": "0x12370"
        },
        "fwRefContainer<fx::ResourceMetaDataComponent>::~fwRefContainer<fx::ResourceMetaDataComponent>": {
            "offset": "0x12370"
        },
        "fwRefCountable::AddRef": {
            "offset": "0x37C30"
        },
        "fwRefCountable::Release": {
            "offset": "0x37C40"
        },
        "fwRefCountable::~fwRefCountable": {
            "offset": "0x37C20"
        },
        "fx::GetCurrentScriptRuntime<IScriptRuntime>": {
            "offset": "0x1A390"
        },
        "fx::OMPtr<IScriptRuntime>::~OMPtr<IScriptRuntime>": {
            "offset": "0x1EBF0"
        },
        "fx::ResourceCallbackComponent::CallbackRef::~CallbackRef": {
            "offset": "0xA510"
        },
        "fx::ResourceEventComponent::QueueEvent2<msgpack::v2::object,fx::ResourceCallbackComponent::CallbackRef>": {
            "offset": "0x1BE40"
        },
        "fx::ResourceManager::CallReferenceUnpacked<void,RequestWrap,fx::ResourceCallbackComponent::CallbackRef>": {
            "offset": "0x23DD0"
        },
        "fx::ResourceManager::CallReferenceUnpacked<void,msgpack::v2::object,fx::ResourceCallbackComponent::CallbackRef>": {
            "offset": "0x1A050"
        },
        "fx::ScriptContext::CheckArgument<char const *>": {
            "offset": "0x1A310"
        },
        "fxCreateObjectInstance": {
            "offset": "0x37CA0"
        },
        "launch::IsSDKGuest": {
            "offset": "0x2E630"
        },
        "msgpack::v1::adaptor::object_with_zone<msgpack::v2::object,void>::object_with_zone_visitor::~object_with_zone_visitor": {
            "offset": "0x1EDC0"
        },
        "msgpack::v1::container_size_overflow::container_size_overflow": {
            "offset": "0x1EA40"
        },
        "msgpack::v1::container_size_overflow::~container_size_overflow": {
            "offset": "0xA640"
        },
        "msgpack::v1::object::as<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1D230"
        },
        "msgpack::v1::object::as<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,msgpack::v2::object,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object> > > >": {
            "offset": "0x24940"
        },
        "msgpack::v1::object::convert<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1D2C0"
        },
        "msgpack::v1::object_pack_visitor<msgpack::v1::sbuffer>::visit_boolean": {
            "offset": "0x23970"
        },
        "msgpack::v1::object_parser::parse<msgpack::v1::adaptor::object_with_zone<msgpack::v2::object,void>::object_with_zone_visitor>": {
            "offset": "0x1E380"
        },
        "msgpack::v1::object_parser::parse<msgpack::v1::object_pack_visitor<msgpack::v1::sbuffer> >": {
            "offset": "0x1DD70"
        },
        "msgpack::v1::object_parser::~object_parser": {
            "offset": "0x1EEA0"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x249D0"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_array": {
            "offset": "0x22B60"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_bin": {
            "offset": "0x22D80"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_ext": {
            "offset": "0x22FB0"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_imp_int64<__int64>": {
            "offset": "0x1D470"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_imp_uint64<unsigned __int64>": {
            "offset": "0x1D9E0"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_map": {
            "offset": "0x23480"
        },
        "msgpack::v1::packer<msgpack::v1::sbuffer>::pack_str": {
            "offset": "0x236A0"
        },
        "msgpack::v1::sbuffer::write": {
            "offset": "0x23AB0"
        },
        "msgpack::v1::sbuffer::~sbuffer": {
            "offset": "0x1EEB0"
        },
        "msgpack::v1::type_error::type_error": {
            "offset": "0x1EAE0"
        },
        "msgpack::v1::type_error::~type_error": {
            "offset": "0xA640"
        },
        "msgpack::v1::zone::allocate_align": {
            "offset": "0x22910"
        },
        "msgpack::v1::zone::allocate_expand": {
            "offset": "0x229D0"
        },
        "msgpack::v1::zone::get_aligned": {
            "offset": "0x22AF0"
        },
        "msgpack::v1::zone::~zone": {
            "offset": "0x1EEC0"
        },
        "msgpack::v2::object::object<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x19FA0"
        },
        "qwords": {
            "qword_0x0": {
                "address": "0x7FFA37260000",
                "current_value": "0x300905A4D",
                "resolved_name": "dtor_list_head",
                "rva": "0x0",
                "type": "TlsDtorNode"
            },
            "qword_0x39F70": {
                "address": "0x7FFA37299F70",
                "current_value": "0xCCCCCCCCCCCCE0FF",
                "resolved_name": "_guard_dispatch_icall_nop",
                "rva": "0x39F70"
            },
            "qword_0x39F90": {
                "address": "0x7FFA37299F90",
                "current_value": "0xCCCC0000373225FF",
                "resolved_name": "_guard_xfg_dispatch_icall_nop",
                "rva": "0x39F90"
            },
            "qword_0x3D6B8": {
                "address": "0x7FFA3729D6B8",
                "current_value": "0x7FFA3726A3F0",
                "resolved_name": "__guard_check_icall_fptr",
                "rva": "0x3D6B8"
            },
            "qword_0x3D6C0": {
                "address": "0x7FFA3729D6C0",
                "current_value": "0x7FFA3726A3F0",
                "resolved_name": "__guard_xfg_check_icall_fptr",
                "rva": "0x3D6C0"
            },
            "qword_0x3D6C8": {
                "address": "0x7FFA3729D6C8",
                "current_value": "0x7FFA37299F70",
                "resolved_name": "__guard_dispatch_icall_fptr",
                "rva": "0x3D6C8"
            },
            "qword_0x3D6D0": {
                "address": "0x7FFA3729D6D0",
                "current_value": "0x7FFA37299F90",
                "resolved_name": "__guard_xfg_dispatch_icall_fptr",
                "rva": "0x3D6D0"
            },
            "qword_0x3D6D8": {
                "address": "0x7FFA3729D6D8",
                "current_value": "0x7FFA37299F90",
                "resolved_name": "__guard_xfg_table_dispatch_icall_fptr",
                "rva": "0x3D6D8"
            },
            "qword_0x3D6E0": {
                "address": "0x7FFA3729D6E0",
                "current_value": "0x0",
                "resolved_name": "__castguard_check_failure_os_handled_fptr",
                "rva": "0x3D6E0"
            },
            "qword_0x3D6E8": {
                "address": "0x7FFA3729D6E8",
                "current_value": "0x7FFA372997FA",
                "resolved_name": "__guard_memcpy_fptr",
                "rva": "0x3D6E8"
            },
            "qword_0x3D6F0": {
                "address": "0x7FFA3729D6F0",
                "current_value": "0x0",
                "resolved_name": "__xc_a",
                "rva": "0x3D6F0",
                "type": ""
            },
            "qword_0x3D6F8": {
                "address": "0x7FFA3729D6F8",
                "current_value": "0x7FFA37261AB4",
                "resolved_name": "std::_Fac_tidy_reg$initializer$",
                "rva": "0x3D6F8"
            },
            "qword_0x3D700": {
                "address": "0x7FFA3729D700",
                "current_value": "0x7FFA37261000",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x3D700"
            },
            "qword_0x3D708": {
                "address": "0x7FFA3729D708",
                "current_value": "0x7FFA37261060",
                "resolved_name": "xbr::kGameBuildUniquifiers$initializer$",
                "rva": "0x3D708"
            },
            "qword_0x3D710": {
                "address": "0x7FFA3729D710",
                "current_value": "0x7FFA372611E0",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x3D710"
            },
            "qword_0x3D718": {
                "address": "0x7FFA3729D718",
                "current_value": "0x7FFA37261210",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x3D718"
            },
            "qword_0x3D720": {
                "address": "0x7FFA3729D720",
                "current_value": "0x7FFA37261240",
                "resolved_name": "_init_instance_24$initializer$",
                "rva": "0x3D720"
            },
            "qword_0x3D728": {
                "address": "0x7FFA3729D728",
                "current_value": "0x7FFA37261270",
                "resolved_name": "_init_instance_25$initializer$",
                "rva": "0x3D728"
            },
            "qword_0x3D730": {
                "address": "0x7FFA3729D730",
                "current_value": "0x7FFA372612A0",
                "resolved_name": "initFunction$initializer$",
                "rva": "0x3D730"
            },
            "qword_0x3D738": {
                "address": "0x7FFA3729D738",
                "current_value": "0x7FFA372612E0",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x3D738"
            },
            "qword_0x3D740": {
                "address": "0x7FFA3729D740",
                "current_value": "0x7FFA37261310",
                "resolved_name": "_init_instance_24$initializer$",
                "rva": "0x3D740"
            },
            "qword_0x3D748": {
                "address": "0x7FFA3729D748",
                "current_value": "0x7FFA37261340",
                "resolved_name": "_init_instance_25$initializer$",
                "rva": "0x3D748"
            },
            "qword_0x3D750": {
                "address": "0x7FFA3729D750",
                "current_value": "0x7FFA37261370",
                "resolved_name": "_init_instance_26$initializer$",
                "rva": "0x3D750"
            },
            "qword_0x3D758": {
                "address": "0x7FFA3729D758",
                "current_value": "0x7FFA372613A0",
                "resolved_name": "_init_instance_27$initializer$",
                "rva": "0x3D758"
            },
            "qword_0x3D760": {
                "address": "0x7FFA3729D760",
                "current_value": "0x7FFA372613D0",
                "resolved_name": "_init_instance_28$initializer$",
                "rva": "0x3D760"
            },
            "qword_0x3D768": {
                "address": "0x7FFA3729D768",
                "current_value": "0x7FFA37261430",
                "resolved_name": "g_nuiCallbackMutex$initializer$",
                "rva": "0x3D768"
            },
            "qword_0x3D770": {
                "address": "0x7FFA3729D770",
                "current_value": "0x7FFA37261460",
                "resolved_name": "g_nuiCallbackQueue$initializer$",
                "rva": "0x3D770"
            },
            "qword_0x3D778": {
                "address": "0x7FFA3729D778",
                "current_value": "0x7FFA372614E0",
                "resolved_name": "initFunction$initializer$",
                "rva": "0x3D778"
            },
            "qword_0x3D780": {
                "address": "0x7FFA3729D780",
                "current_value": "0x7FFA37261400",
                "resolved_name": "_init_instance_31$initializer$",
                "rva": "0x3D780"
            },
            "qword_0x3D788": {
                "address": "0x7FFA3729D788",
                "current_value": "0x7FFA372614A0",
                "resolved_name": "httpInitFunction$initializer$",
                "rva": "0x3D788"
            },
            "qword_0x3D790": {
                "address": "0x7FFA3729D790",
                "current_value": "0x7FFA37261520",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x3D790"
            },
            "qword_0x3D798": {
                "address": "0x7FFA3729D798",
                "current_value": "0x7FFA37261550",
                "resolved_name": "_init_instance_24$initializer$",
                "rva": "0x3D798"
            },
            "qword_0x3D7A0": {
                "address": "0x7FFA3729D7A0",
                "current_value": "0x7FFA37261580",
                "resolved_name": "_init_instance_25$initializer$",
                "rva": "0x3D7A0"
            },
            "qword_0x3D7A8": {
                "address": "0x7FFA3729D7A8",
                "current_value": "0x7FFA372615B0",
                "resolved_name": "_init_instance_26$initializer$",
                "rva": "0x3D7A8"
            },
            "qword_0x3D7B0": {
                "address": "0x7FFA3729D7B0",
                "current_value": "0x7FFA372615E0",
                "resolved_name": "_init_instance_27$initializer$",
                "rva": "0x3D7B0"
            },
            "qword_0x3D7B8": {
                "address": "0x7FFA3729D7B8",
                "current_value": "0x7FFA37261610",
                "resolved_name": "_init_instance_28$initializer$",
                "rva": "0x3D7B8"
            },
            "qword_0x3D7C0": {
                "address": "0x7FFA3729D7C0",
                "current_value": "0x7FFA37261640",
                "resolved_name": "_init_instance_29$initializer$",
                "rva": "0x3D7C0"
            },
            "qword_0x3D7C8": {
                "address": "0x7FFA3729D7C8",
                "current_value": "0x7FFA37261670",
                "resolved_name": "_init_instance_30$initializer$",
                "rva": "0x3D7C8"
            },
            "qword_0x3D7D0": {
                "address": "0x7FFA3729D7D0",
                "current_value": "0x7FFA372616A0",
                "resolved_name": "_init_instance_31$initializer$",
                "rva": "0x3D7D0"
            },
            "qword_0x3D7D8": {
                "address": "0x7FFA3729D7D8",
                "current_value": "0x7FFA372616D0",
                "resolved_name": "initFunction$initializer$",
                "rva": "0x3D7D8"
            },
            "qword_0x3D7E0": {
                "address": "0x7FFA3729D7E0",
                "current_value": "0x7FFA37261710",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x3D7E0"
            },
            "qword_0x3D7E8": {
                "address": "0x7FFA3729D7E8",
                "current_value": "0x7FFA37261740",
                "resolved_name": "_init_instance_24$initializer$",
                "rva": "0x3D7E8"
            },
            "qword_0x3D7F0": {
                "address": "0x7FFA3729D7F0",
                "current_value": "0x7FFA37261770",
                "resolved_name": "_init_instance_25$initializer$",
                "rva": "0x3D7F0"
            },
            "qword_0x3D7F8": {
                "address": "0x7FFA3729D7F8",
                "current_value": "0x7FFA372617A0",
                "resolved_name": "_init_instance_26$initializer$",
                "rva": "0x3D7F8"
            },
            "qword_0x3D800": {
                "address": "0x7FFA3729D800",
                "current_value": "0x7FFA372617D0",
                "resolved_name": "initFunction$initializer$",
                "rva": "0x3D800"
            },
            "qword_0x3D808": {
                "address": "0x7FFA3729D808",
                "current_value": "0x7FFA37261820",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x3D808"
            },
            "qword_0x3D810": {
                "address": "0x7FFA3729D810",
                "current_value": "0x7FFA37261850",
                "resolved_name": "_init_instance_24$initializer$",
                "rva": "0x3D810"
            },
            "qword_0x3D818": {
                "address": "0x7FFA3729D818",
                "current_value": "0x7FFA37261880",
                "resolved_name": "_init_instance_25$initializer$",
                "rva": "0x3D818"
            },
            "qword_0x3D820": {
                "address": "0x7FFA3729D820",
                "current_value": "0x7FFA372618F0",
                "resolved_name": "xbr::kGameBuildUniquifiers$initializer$",
                "rva": "0x3D820"
            },
            "qword_0x3D828": {
                "address": "0x7FFA3729D828",
                "current_value": "0x7FFA37261810",
                "resolved_name": "??m_fakeData$initializer$@?$HostSharedData@UReverseGameData@@@@0P6AXXZEA@@3P6AXXZEA",
                "rva": "0x3D828"
            },
            "qword_0x3D830": {
                "address": "0x7FFA3729D830",
                "current_value": "0x7FFA372618B0",
                "resolved_name": "initFunction$initializer$",
                "rva": "0x3D830"
            },
            "qword_0x3D838": {
                "address": "0x7FFA3729D838",
                "current_value": "0x7FFA37261A70",
                "resolved_name": "initIoBuf$initializer$",
                "rva": "0x3D838"
            },
            "qword_0x3D840": {
                "address": "0x7FFA3729D840",
                "current_value": "0x0",
                "resolved_name": "__xc_z",
                "rva": "0x3D840",
                "type": ""
            },
            "qword_0x3D848": {
                "address": "0x7FFA3729D848",
                "current_value": "0x0",
                "resolved_name": "__xd_a",
                "rva": "0x3D848"
            },
            "qword_0x3D850": {
                "address": "0x7FFA3729D850",
                "current_value": "0x7FFA37261030",
                "resolved_name": "g_thisError$initializer$",
                "rva": "0x3D850"
            },
            "qword_0x3D858": {
                "address": "0x7FFA3729D858",
                "current_value": "0x0",
                "resolved_name": "__xd_z",
                "rva": "0x3D858"
            },
            "qword_0x3D860": {
                "address": "0x7FFA3729D860",
                "current_value": "0x0",
                "resolved_name": "__xi_a",
                "rva": "0x3D860",
                "type": ""
            },
            "qword_0x3D868": {
                "address": "0x7FFA3729D868",
                "current_value": "0x7FFA372982E8",
                "resolved_name": "__scrt_initialize_tss_var",
                "rva": "0x3D868"
            },
            "qword_0x3D870": {
                "address": "0x7FFA3729D870",
                "current_value": "0x0",
                "resolved_name": "__xi_z",
                "rva": "0x3D870",
                "type": ""
            },
            "qword_0x3D878": {
                "address": "0x7FFA3729D878",
                "current_value": "0x0",
                "resolved_name": "__xl_a",
                "rva": "0x3D878"
            },
            "qword_0x3D880": {
                "address": "0x7FFA3729D880",
                "current_value": "0x7FFA37298944",
                "resolved_name": "__xl_c",
                "rva": "0x3D880"
            },
            "qword_0x3D888": {
                "address": "0x7FFA3729D888",
                "current_value": "0x7FFA372989BC",
                "resolved_name": "__xl_d",
                "rva": "0x3D888"
            },
            "qword_0x3D890": {
                "address": "0x7FFA3729D890",
                "current_value": "0x0",
                "resolved_name": "__xl_z",
                "rva": "0x3D890"
            },
            "qword_0x3D898": {
                "address": "0x7FFA3729D898",
                "current_value": "0x0",
                "resolved_name": "__xp_a",
                "rva": "0x3D898",
                "type": ""
            },
            "qword_0x3D8A0": {
                "address": "0x7FFA3729D8A0",
                "current_value": "0x0",
                "resolved_name": "__xp_z",
                "rva": "0x3D8A0",
                "type": ""
            },
            "qword_0x3D8A8": {
                "address": "0x7FFA3729D8A8",
                "current_value": "0x0",
                "resolved_name": "__xt_a",
                "rva": "0x3D8A8",
                "type": ""
            },
            "qword_0x3D8B0": {
                "address": "0x7FFA3729D8B0",
                "current_value": "0x0",
                "resolved_name": "__xt_z",
                "rva": "0x3D8B0",
                "type": ""
            },
            "qword_0x3DCA0": {
                "address": "0x7FFA3729DCA0",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "std::exception::`vftable'",
                "rva": "0x3DCA0",
                "type": ""
            },
            "qword_0x3DCD0": {
                "address": "0x7FFA3729DCD0",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "std::bad_alloc::`vftable'",
                "rva": "0x3DCD0",
                "type": ""
            },
            "qword_0x3DCE8": {
                "address": "0x7FFA3729DCE8",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "std::bad_array_new_length::`vftable'",
                "rva": "0x3DCE8",
                "type": ""
            },
            "qword_0x3DD28": {
                "address": "0x7FFA3729DD28",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "std::runtime_error::`vftable'",
                "rva": "0x3DD28",
                "type": ""
            },
            "qword_0x3DD98": {
                "address": "0x7FFA3729DD98",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "fmt::v8::format_error::`vftable'",
                "rva": "0x3DD98",
                "type": ""
            },
            "qword_0x3DDB0": {
                "address": "0x7FFA3729DDB0",
                "current_value": "0x3330323031303030",
                "resolved_name": "fmt::v8::detail::basic_data<void>::digits",
                "rva": "0x3DDB0",
                "type": ""
            },
            "qword_0x3DE78": {
                "address": "0x7FFA3729DE78",
                "current_value": "0x3736353433323130",
                "resolved_name": "fmt::v8::detail::basic_data<void>::hex_digits",
                "rva": "0x3DE78",
                "type": ""
            },
            "qword_0x3DE8C": {
                "address": "0x7FFA3729DE8C",
                "current_value": "0x202B2D00",
                "resolved_name": "fmt::v8::detail::basic_data<void>::signs",
                "rva": "0x3DE8C",
                "type": ""
            },
            "qword_0x3DE90": {
                "address": "0x7FFA3729DE90",
                "current_value": "0x0",
                "resolved_name": "fmt::v8::detail::basic_data<void>::prefixes",
                "rva": "0x3DE90",
                "type": ""
            },
            "qword_0x3DEA0": {
                "address": "0x7FFA3729DEA0",
                "current_value": "0x1001F1F",
                "resolved_name": "fmt::v8::detail::basic_data<void>::left_padding_shifts",
                "rva": "0x3DEA0",
                "type": ""
            },
            "qword_0x3DEA8": {
                "address": "0x7FFA3729DEA8",
                "current_value": "0x1001F00",
                "resolved_name": "fmt::v8::detail::basic_data<void>::right_padding_shifts",
                "rva": "0x3DEA8",
                "type": ""
            },
            "qword_0x3E120": {
                "address": "0x7FFA3729E120",
                "current_value": "0x7FFA3726D790",
                "resolved_name": "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::`vftable'",
                "rva": "0x3E120",
                "type": ""
            },
            "qword_0x3E868": {
                "address": "0x7FFA3729E868",
                "current_value": "0x0",
                "resolved_name": "rapidjson::GenericStringRef<char>::emptyString",
                "rva": "0x3E868",
                "type": ""
            },
            "qword_0x3EAB0": {
                "address": "0x7FFA3729EAB0",
                "current_value": "0x7FFA3726E490",
                "resolved_name": "fwRefCountable::`vftable'",
                "rva": "0x3EAB0",
                "type": ""
            },
            "qword_0x3EAD0": {
                "address": "0x7FFA3729EAD0",
                "current_value": "0x7FFA3726E490",
                "resolved_name": "ComponentInstance::`vftable'",
                "rva": "0x3EAD0",
                "type": ""
            },
            "qword_0x3EB28": {
                "address": "0x7FFA3729EB28",
                "current_value": "0x7FFA3726E5E0",
                "resolved_name": "InitFunction::`vftable'",
                "rva": "0x3EB28",
                "type": ""
            },
            "qword_0x3EB60": {
                "address": "0x7FFA3729EB60",
                "current_value": "0x7FFA37270F40",
                "resolved_name": "RPCResourceHandler::`vftable'",
                "rva": "0x3EB60",
                "type": ""
            },
            "qword_0x3EBA0": {
                "address": "0x7FFA3729EBA0",
                "current_value": "0x7FFA37270F04",
                "resolved_name": "RPCResourceHandler::`vftable'",
                "rva": "0x3EBA0",
                "type": ""
            },
            "qword_0x3EBF0": {
                "address": "0x7FFA3729EBF0",
                "current_value": "0x7FFA37270ED0",
                "resolved_name": "CefStructBase<CefURLPartsTraits>::`vftable'",
                "rva": "0x3EBF0",
                "type": ""
            },
            "qword_0x3EC18": {
                "address": "0x7FFA3729EC18",
                "current_value": "0x7FFA37270F40",
                "resolved_name": "CefResourceHandler::`vftable'",
                "rva": "0x3EC18",
                "type": ""
            },
            "qword_0x3EC58": {
                "address": "0x7FFA3729EC58",
                "current_value": "0x7FFA372997D0",
                "resolved_name": "CefResourceHandler::`vftable'",
                "rva": "0x3EC58",
                "type": ""
            },
            "qword_0x3EDE0": {
                "address": "0x7FFA3729EDE0",
                "current_value": "0x7FFA372710F0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_2d048217d148e8d4ee446306febeb985>,void,fwRefContainer<fx::Resource> const &>::`vftable'",
                "rva": "0x3EDE0",
                "type": ""
            },
            "qword_0x3EE18": {
                "address": "0x7FFA3729EE18",
                "current_value": "0x7FFA372711C0",
                "resolved_name": "CefStringBase<CefStringTraitsUTF16>::`vftable'",
                "rva": "0x3EE18",
                "type": ""
            },
            "qword_0x3EE28": {
                "address": "0x7FFA3729EE28",
                "current_value": "0x7FFA372997D0",
                "resolved_name": "CefBaseRefCounted::`vftable'",
                "rva": "0x3EE28",
                "type": ""
            },
            "qword_0x3EE58": {
                "address": "0x7FFA3729EE58",
                "current_value": "0x7FFA37271260",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>,void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::`vftable'",
                "rva": "0x3EE58",
                "type": ""
            },
            "qword_0x3EE90": {
                "address": "0x7FFA3729EE90",
                "current_value": "0x7FFA372713C0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_697ddd1039544c889b8c597e07737af6>,bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::`vftable'",
                "rva": "0x3EE90",
                "type": ""
            },
            "qword_0x3F370": {
                "address": "0x7FFA3729F370",
                "current_value": "0x7FFA372736A0",
                "resolved_name": "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'",
                "rva": "0x3F370",
                "type": ""
            },
            "qword_0x3F470": {
                "address": "0x7FFA3729F470",
                "current_value": "0x7FFA372736E0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_1ef028ec87bf57f7455cb3caafc0b566>,bool>::`vftable'",
                "rva": "0x3F470",
                "type": ""
            },
            "qword_0x3F4A8": {
                "address": "0x7FFA3729F4A8",
                "current_value": "0x7FFA37273730",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_2272712a9a9471030629799e626768b4>,void,fwRefContainer<fx::Resource> const &>::`vftable'",
                "rva": "0x3F4A8",
                "type": ""
            },
            "qword_0x3F4E0": {
                "address": "0x7FFA3729F4E0",
                "current_value": "0x7FFA37273130",
                "resolved_name": "std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'",
                "rva": "0x3F4E0",
                "type": ""
            },
            "qword_0x3F518": {
                "address": "0x7FFA3729F518",
                "current_value": "0x7FFA372737E0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_aa12eb467c6f5d6527dc540d272acebb>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::`vftable'",
                "rva": "0x3F518",
                "type": ""
            },
            "qword_0x3F550": {
                "address": "0x7FFA3729F550",
                "current_value": "0x7FFA37273830",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_6d9c29b0ad89b6a3803ec61ae61cf467>,bool,fx::ResourceManager *>::`vftable'",
                "rva": "0x3F550",
                "type": ""
            },
            "qword_0x3F588": {
                "address": "0x7FFA3729F588",
                "current_value": "0x7FFA37273880",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_3a5822e41399948849dc8b70b56e0e35>,bool>::`vftable'",
                "rva": "0x3F588",
                "type": ""
            },
            "qword_0x3F5C0": {
                "address": "0x7FFA3729F5C0",
                "current_value": "0x7FFA37273910",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_1b9b882442f4f0238f0ad6db27cfb677>,bool>::`vftable'",
                "rva": "0x3F5C0",
                "type": ""
            },
            "qword_0x3F5F8": {
                "address": "0x7FFA3729F5F8",
                "current_value": "0x7FFA372739C0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_209372ef5ac4289acb2d2b25aad41cbf>,bool>::`vftable'",
                "rva": "0x3F5F8",
                "type": ""
            },
            "qword_0x3F630": {
                "address": "0x7FFA3729F630",
                "current_value": "0x7FFA372739F0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_2f9205b6252d6e868aeec98f84dc9977>,bool,fx::Resource *>::`vftable'",
                "rva": "0x3F630",
                "type": ""
            },
            "qword_0x3F668": {
                "address": "0x7FFA3729F668",
                "current_value": "0x7FFA37273A40",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_f8c6d8b7450f57f5c1bc51417673baef>,bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::`vftable'",
                "rva": "0x3F668",
                "type": ""
            },
            "qword_0x3FA78": {
                "address": "0x7FFA3729FA78",
                "current_value": "0x7FFA37276900",
                "resolved_name": "ResourceUI::`vftable'",
                "rva": "0x3FA78",
                "type": ""
            },
            "qword_0x3FC58": {
                "address": "0x7FFA3729FC58",
                "current_value": "0x7FFA37278F30",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>::`vftable'",
                "rva": "0x3FC58",
                "type": ""
            },
            "qword_0x3FCD0": {
                "address": "0x7FFA3729FCD0",
                "current_value": "0x4C027556C41E7194",
                "resolved_name": "CLSID_ScriptRuntimeHandler",
                "rva": "0x3FCD0",
                "type": "guid_t"
            },
            "qword_0x40FC0": {
                "address": "0x7FFA372A0FC0",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "std::bad_cast::`vftable'",
                "rva": "0x40FC0",
                "type": ""
            },
            "qword_0x41058": {
                "address": "0x7FFA372A1058",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "msgpack::v1::type_error::`vftable'",
                "rva": "0x41058",
                "type": ""
            },
            "qword_0x410E0": {
                "address": "0x7FFA372A10E0",
                "current_value": "0x7FFA37279CA0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>::`vftable'",
                "rva": "0x410E0",
                "type": ""
            },
            "qword_0x411D0": {
                "address": "0x7FFA372A11D0",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "msgpack::v1::container_size_overflow::`vftable'",
                "rva": "0x411D0",
                "type": ""
            },
            "qword_0x412A0": {
                "address": "0x7FFA372A12A0",
                "current_value": "0x7FFA37279DE0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::`vftable'",
                "rva": "0x412A0",
                "type": ""
            },
            "qword_0x41310": {
                "address": "0x7FFA372A1310",
                "current_value": "0x7FFA37279F30",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_c57fd4becbc8c61ef1a54cc8a4316a45>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x41310",
                "type": ""
            },
            "qword_0x41348": {
                "address": "0x7FFA372A1348",
                "current_value": "0x7FFA37279F60",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_d6f333238b397f19edd9dbda7f324f1c>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x41348",
                "type": ""
            },
            "qword_0x41940": {
                "address": "0x7FFA372A1940",
                "current_value": "0x4C027556C41E7194",
                "resolved_name": "CLSID_ScriptRuntimeHandler",
                "rva": "0x41940",
                "type": "guid_t"
            },
            "qword_0x419B0": {
                "address": "0x7FFA372A19B0",
                "current_value": "0x7FFA37283BB0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>::`vftable'",
                "rva": "0x419B0",
                "type": ""
            },
            "qword_0x419E8": {
                "address": "0x7FFA372A19E8",
                "current_value": "0x7FFA37283C50",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::`vftable'",
                "rva": "0x419E8",
                "type": ""
            },
            "qword_0x41A20": {
                "address": "0x7FFA372A1A20",
                "current_value": "0x7FFA37283D60",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_2cb33fa2674c5206284536a778aeb0f8>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x41A20",
                "type": ""
            },
            "qword_0x41A58": {
                "address": "0x7FFA372A1A58",
                "current_value": "0x7FFA37283D90",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_fd2d4218559059e714d322301bfd6193>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x41A58",
                "type": ""
            },
            "qword_0x41CE8": {
                "address": "0x7FFA372A1CE8",
                "current_value": "0x7FFA37287390",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_d9dc7e42be4822cf4fb980837face461>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x41CE8",
                "type": ""
            },
            "qword_0x41D20": {
                "address": "0x7FFA372A1D20",
                "current_value": "0x7FFA37287430",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_70e5c8711fa1dc312bc9291bcf8a8650>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x41D20",
                "type": ""
            },
            "qword_0x41EB8": {
                "address": "0x7FFA372A1EB8",
                "current_value": "0x7FFA372874D0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_b51dd76e073ec4069e232056e1c5aadc>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x41EB8",
                "type": ""
            },
            "qword_0x41F18": {
                "address": "0x7FFA372A1F18",
                "current_value": "0x4C027556C41E7194",
                "resolved_name": "CLSID_ScriptRuntimeHandler",
                "rva": "0x41F18",
                "type": "guid_t"
            },
            "qword_0x42128": {
                "address": "0x7FFA372A2128",
                "current_value": "0x7FFA37287600",
                "resolved_name": "scrBindPointerT<`<lambda_3c492d8c71a57ca07835201e5724c2cd>::operator()'::`2'::NUIWindowWrapper,`<lambda_3c492d8c71a57ca07835201e5724c2cd>::operator()'::`2'::NUIWindowWrapper,void>::`vftable'",
                "rva": "0x42128",
                "type": ""
            },
            "qword_0x422C8": {
                "address": "0x7FFA372A22C8",
                "current_value": "0x7FFA37287680",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >::`vftable'",
                "rva": "0x422C8",
                "type": ""
            },
            "qword_0x42300": {
                "address": "0x7FFA372A2300",
                "current_value": "0x7FFA37287850",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_f51514d50e9e4767c296248047b7f3ef>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x42300",
                "type": ""
            },
            "qword_0x42340": {
                "address": "0x7FFA372A2340",
                "current_value": "0x7FFA37287880",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_663c07207a48b8b02cbbf2e8fb52507b>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x42340",
                "type": ""
            },
            "qword_0x42378": {
                "address": "0x7FFA372A2378",
                "current_value": "0x7FFA372878B0",
                "resolved_name": "rage::ioPad::`vftable'",
                "rva": "0x42378",
                "type": ""
            },
            "qword_0x42388": {
                "address": "0x7FFA372A2388",
                "current_value": "0x7FFA372878E0",
                "resolved_name": "std::_Ref_count_obj2<`<lambda_3c492d8c71a57ca07835201e5724c2cd>::operator()'::`2'::NUIWindowWrapper>::`vftable'",
                "rva": "0x42388",
                "type": ""
            },
            "qword_0x423D0": {
                "address": "0x7FFA372A23D0",
                "current_value": "0x7FFA372879B0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_c5e061e95a5ce06248167f82dbaf6607>,bool>::`vftable'",
                "rva": "0x423D0",
                "type": ""
            },
            "qword_0x42408": {
                "address": "0x7FFA372A2408",
                "current_value": "0x7FFA37287A00",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_bcebb1b22551d8ca5a3fa8c7a2e14ac3>,bool,fx::Resource *>::`vftable'",
                "rva": "0x42408",
                "type": ""
            },
            "qword_0x42440": {
                "address": "0x7FFA372A2440",
                "current_value": "0x7FFA37287A70",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_757628b7b6924cacbf89fa9e92d29d88>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x42440",
                "type": ""
            },
            "qword_0x424B8": {
                "address": "0x7FFA372A24B8",
                "current_value": "0x7FFA37287AC0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_e338dfdf3eea5b416ea5865fde6f9d72>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x424B8",
                "type": ""
            },
            "qword_0x424F0": {
                "address": "0x7FFA372A24F0",
                "current_value": "0x7FFA37287B10",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_6602a925a2729d5b96abf852f85b99cc>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x424F0",
                "type": ""
            },
            "qword_0x42528": {
                "address": "0x7FFA372A2528",
                "current_value": "0x7FFA37287B40",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_c5b20abf4c18bd0d48268536d9bb26fc>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x42528",
                "type": ""
            },
            "qword_0x42560": {
                "address": "0x7FFA372A2560",
                "current_value": "0x7FFA37287B70",
                "resolved_name": "CefStructBase<CefMouseEventTraits>::`vftable'",
                "rva": "0x42560",
                "type": ""
            },
            "qword_0x42570": {
                "address": "0x7FFA372A2570",
                "current_value": "0x7FFA37287BA0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_b254a3b12b5bc22a22c86e6b8b93c099>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x42570",
                "type": ""
            },
            "qword_0x425A8": {
                "address": "0x7FFA372A25A8",
                "current_value": "0x7FFA37287BD0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_35e9b35287634c6ab41fa6822086d68e>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x425A8",
                "type": ""
            },
            "qword_0x425E0": {
                "address": "0x7FFA372A25E0",
                "current_value": "0x7FFA37287C00",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_0d398998f5cf0baaed61f903f8d807d3>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x425E0",
                "type": ""
            },
            "qword_0x42660": {
                "address": "0x7FFA372A2660",
                "current_value": "0x7FFA37287C30",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_148aacf61cb8421e260645f33a06413c>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x42660",
                "type": ""
            },
            "qword_0x426B0": {
                "address": "0x7FFA372A26B0",
                "current_value": "0x7FFA37287CD0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_fff0c35a08c2a2e6231c76f764418c4c>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x426B0",
                "type": ""
            },
            "qword_0x426E8": {
                "address": "0x7FFA372A26E8",
                "current_value": "0x7FFA37287E60",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_a26a4900fb9a0d8b27ddae8e47bda41b>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x426E8",
                "type": ""
            },
            "qword_0x42720": {
                "address": "0x7FFA372A2720",
                "current_value": "0x7FFA37287F00",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_26f148efe7cdfc9b780265b03ae127d6>,void,fx::ScriptContext &>::`vftable'",
                "rva": "0x42720",
                "type": ""
            },
            "qword_0x42E60": {
                "address": "0x7FFA372A2E60",
                "current_value": "0x7FFA37293490",
                "resolved_name": "std::numpunct<char>::`vftable'",
                "rva": "0x42E60",
                "type": ""
            },
            "qword_0x43238": {
                "address": "0x7FFA372A3238",
                "current_value": "0x7FFA37293CC0",
                "resolved_name": "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::`vftable'",
                "rva": "0x43238",
                "type": ""
            },
            "qword_0x43CA0": {
                "address": "0x7FFA372A3CA0",
                "current_value": "0x7FFA372997D0",
                "resolved_name": "InitFunctionBase::`vftable'",
                "rva": "0x43CA0",
                "type": ""
            },
            "qword_0x43CC0": {
                "address": "0x7FFA372A3CC0",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "utf8::exception::`vftable'",
                "rva": "0x43CC0",
                "type": ""
            },
            "qword_0x43CD8": {
                "address": "0x7FFA372A3CD8",
                "current_value": "0x7FFA37296E00",
                "resolved_name": "utf8::invalid_code_point::`vftable'",
                "rva": "0x43CD8",
                "type": ""
            },
            "qword_0x43D08": {
                "address": "0x7FFA372A3D08",
                "current_value": "0x7FFA37296E00",
                "resolved_name": "utf8::invalid_utf8::`vftable'",
                "rva": "0x43D08",
                "type": ""
            },
            "qword_0x43D30": {
                "address": "0x7FFA372A3D30",
                "current_value": "0x7FFA3726B440",
                "resolved_name": "utf8::not_enough_room::`vftable'",
                "rva": "0x43D30",
                "type": ""
            },
            "qword_0x43DD0": {
                "address": "0x7FFA372A3DD0",
                "current_value": "0x7FFA37296D54",
                "resolved_name": "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'",
                "rva": "0x43DD0",
                "type": ""
            },
            "qword_0x44088": {
                "address": "0x7FFA372A4088",
                "current_value": "0x7FFA37298944",
                "resolved_name": "__dyn_tls_init_callback",
                "rva": "0x44088"
            },
            "qword_0x44090": {
                "address": "0x7FFA372A4090",
                "current_value": "0x7FFA372989BC",
                "resolved_name": "__dyn_tls_dtor_callback",
                "rva": "0x44090"
            },
            "qword_0x440A0": {
                "address": "0x7FFA372A40A0",
                "current_value": "0x7FFA37298C30",
                "resolved_name": "type_info::`vftable'",
                "rva": "0x440A0",
                "type": ""
            },
            "qword_0x440A8": {
                "address": "0x7FFA372A40A8",
                "current_value": "0x0",
                "resolved_name": "_pRawDllMain",
                "rva": "0x440A8"
            },
            "qword_0x440B0": {
                "address": "0x7FFA372A40B0",
                "current_value": "0x7FFA372BA200",
                "resolved_name": "GS_ExceptionPointers",
                "rva": "0x440B0",
                "type": "_EXCEPTION_POINTERS"
            },
            "qword_0x44110": {
                "address": "0x7FFA372A4110",
                "current_value": "0x0",
                "resolved_name": "__pfnDliNotifyHook2",
                "rva": "0x44110"
            },
            "qword_0x44118": {
                "address": "0x7FFA372A4118",
                "current_value": "0x0",
                "resolved_name": "__pfnDliFailureHook2",
                "rva": "0x44118"
            },
            "qword_0x44120": {
                "address": "0x7FFA372A4120",
                "current_value": "0x140",
                "resolved_name": "_load_config_used",
                "rva": "0x44120",
                "type": "_RS5_IMAGE_LOAD_CONFIG_DIRECTORY64"
            },
            "qword_0x44300": {
                "address": "0x7FFA372A4300",
                "current_value": "0x7FFA372A7BB0",
                "resolved_name": "_tls_used",
                "rva": "0x44300",
                "type": "_IMAGE_TLS_DIRECTORY64"
            },
            "qword_0x47444": {
                "address": "0x7FFA372A7444",
                "current_value": "0x8002800200000018",
                "resolved_name": "__volatile_metadata",
                "rva": "0x47444"
            },
            "qword_0x47B88": {
                "address": "0x7FFA372A7B88",
                "current_value": "0x0",
                "resolved_name": "__rtc_iaa",
                "rva": "0x47B88",
                "type": ""
            },
            "qword_0x47B90": {
                "address": "0x7FFA372A7B90",
                "current_value": "0x0",
                "resolved_name": "__rtc_izz",
                "rva": "0x47B90",
                "type": ""
            },
            "qword_0x47B98": {
                "address": "0x7FFA372A7B98",
                "current_value": "0x0",
                "resolved_name": "__rtc_taa",
                "rva": "0x47B98",
                "type": ""
            },
            "qword_0x47BA0": {
                "address": "0x7FFA372A7BA0",
                "current_value": "0x0",
                "resolved_name": "__rtc_tzz",
                "rva": "0x47BA0",
                "type": ""
            },
            "qword_0x47BB0": {
                "address": "0x7FFA372A7BB0",
                "current_value": "0x0",
                "resolved_name": "_tls_start",
                "rva": "0x47BB0"
            },
            "qword_0x47DD0": {
                "address": "0x7FFA372A7DD0",
                "current_value": "0x0",
                "resolved_name": "_tls_end",
                "rva": "0x47DD0"
            },
            "qword_0x4E7E0": {
                "address": "0x7FFA372AE7E0",
                "current_value": "0x5181100000001",
                "resolved_name": "$xdatasym",
                "rva": "0x4E7E0"
            },
            "qword_0x4E848": {
                "address": "0x7FFA372AE848",
                "current_value": "0x120400010401",
                "resolved_name": "$xdatasym",
                "rva": "0x4E848"
            },
            "qword_0x4E950": {
                "address": "0x7FFA372AE950",
                "current_value": "0x1",
                "resolved_name": "$xdatasym",
                "rva": "0x4E950"
            },
            "qword_0x4E958": {
                "address": "0x7FFA372AE958",
                "current_value": "0x60F0100000001",
                "resolved_name": "$xdatasym",
                "rva": "0x4E958"
            },
            "qword_0x53030": {
                "address": "0x7FFA372B3030",
                "current_value": "0x0",
                "resolved_name": "HostSharedData<ReverseGameData>::m_fakeData",
                "rva": "0x53030",
                "type": "ReverseGameData"
            },
            "qword_0x53220": {
                "address": "0x7FFA372B3220",
                "current_value": "0x7FFA3728FA10",
                "resolved_name": "fmt::v8::instantiate_format_float",
                "rva": "0x53220"
            },
            "qword_0x53230": {
                "address": "0x7FFA372B3230",
                "current_value": "0x0",
                "resolved_name": "HostSharedData<CfxState>::m_fakeData",
                "rva": "0x53230",
                "type": "CfxState"
            },
            "qword_0x56290": {
                "address": "0x7FFA372B6290",
                "current_value": "0xFFFFFFFF8000000E",
                "resolved_name": "_Init_global_epoch",
                "rva": "0x56290"
            },
            "qword_0x56294": {
                "address": "0x7FFA372B6294",
                "current_value": "0xFFFFFFFF",
                "resolved_name": "__scrt_native_dllmain_reason",
                "rva": "0x56294"
            },
            "qword_0x562A0": {
                "address": "0x7FFA372B62A0",
                "current_value": "0xFFFF4B1D55C2214A",
                "resolved_name": "__security_cookie_complement",
                "rva": "0x562A0"
            },
            "qword_0x562A8": {
                "address": "0x7FFA372B62A8",
                "current_value": "0xB4E2AA3DDEB5",
                "resolved_name": "__security_cookie",
                "rva": "0x562A8"
            },
            "qword_0x562B0": {
                "address": "0x7FFA372B62B0",
                "current_value": "0x9875",
                "resolved_name": "_fltused",
                "rva": "0x562B0"
            },
            "qword_0x562C0": {
                "address": "0x7FFA372B62C0",
                "current_value": "0x2E00000005",
                "resolved_name": "__isa_available",
                "rva": "0x562C0"
            },
            "qword_0x562C4": {
                "address": "0x7FFA372B62C4",
                "current_value": "0x80000000002E",
                "resolved_name": "__isa_enabled",
                "rva": "0x562C4"
            },
            "qword_0x562C8": {
                "address": "0x7FFA372B62C8",
                "current_value": "0x8000",
                "resolved_name": "__memset_fast_string_threshold",
                "rva": "0x562C8"
            },
            "qword_0x562D0": {
                "address": "0x7FFA372B62D0",
                "current_value": "0xFFFFFFFFFFFFFFFF",
                "resolved_name": "__memset_nt_threshold",
                "rva": "0x562D0"
            },
            "qword_0x562E0": {
                "address": "0x7FFA372B62E0",
                "current_value": "0x1",
                "resolved_name": "__scrt_ucrt_dll_is_in_use",
                "rva": "0x562E0"
            },
            "qword_0x59C40": {
                "address": "0x7FFA372B9C40",
                "current_value": "0x0",
                "resolved_name": "Instance<ICoreGameInit>::ms_cachedInstance",
                "rva": "0x59C40"
            },
            "qword_0x59C48": {
                "address": "0x7FFA372B9C48",
                "current_value": "0x5",
                "resolved_name": "Instance<ICoreGameInit>::ms_id",
                "rva": "0x59C48"
            },
            "qword_0x59C80": {
                "address": "0x7FFA372B9C80",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x59C80",
                "type": "ComponentRegistration"
            },
            "qword_0x59C88": {
                "address": "0x7FFA372B9C88",
                "current_value": "0x1FD07C0FAA0",
                "resolved_name": "xbr::kGameBuildUniquifiers",
                "rva": "0x59C88",
                "type": "std::map<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >"
            },
            "qword_0x59CAC": {
                "address": "0x7FFA372B9CAC",
                "current_value": "0x0",
                "resolved_name": "__@@_PchSym_@00@UtoUyfrowhUxucRurevnRAUOyfrowRxzxsvUyfrowUurevUlyqUivovzhvUmfrRivhlfixvhUhgwrmxOlyq@4B2008FD98C1DD4",
                "rva": "0x59CAC"
            },
            "qword_0x59CB0": {
                "address": "0x7FFA372B9CB0",
                "current_value": "0x0",
                "resolved_name": "Instance<ComponentLoader>::ms_id",
                "rva": "0x59CB0"
            },
            "qword_0x59CC4": {
                "address": "0x7FFA372B9CC4",
                "current_value": "0x2500000000",
                "resolved_name": "_init_instance_0",
                "rva": "0x59CC4",
                "type": "ComponentRegistration"
            },
            "qword_0x59CC8": {
                "address": "0x7FFA372B9CC8",
                "current_value": "0x25",
                "resolved_name": "Instance<ResourceUI>::ms_id",
                "rva": "0x59CC8"
            },
            "qword_0x59CD0": {
                "address": "0x7FFA372B9CD0",
                "current_value": "0xA",
                "resolved_name": "Instance<fx::ResourceMounter>::ms_id",
                "rva": "0x59CD0"
            },
            "qword_0x59CF8": {
                "address": "0x7FFA372B9CF8",
                "current_value": "0x0",
                "resolved_name": "Instance<fx::ResourceManager>::ms_cachedInstance",
                "rva": "0x59CF8"
            },
            "qword_0x59D00": {
                "address": "0x7FFA372B9D00",
                "current_value": "0xB",
                "resolved_name": "Instance<fx::ResourceManager>::ms_id",
                "rva": "0x59D00"
            },
            "qword_0x59D08": {
                "address": "0x7FFA372B9D08",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x59D08",
                "type": "ComponentRegistration"
            },
            "qword_0x59D09": {
                "address": "0x7FFA372B9D09",
                "current_value": "0x2800000000000000",
                "resolved_name": "boost::optional_ns::in_place_init",
                "rva": "0x59D09",
                "type": "boost::optional_ns::in_place_init_t"
            },
            "qword_0x59D0A": {
                "address": "0x7FFA372B9D0A",
                "current_value": "0xEB28000000000000",
                "resolved_name": "boost::optional_ns::in_place_init_if",
                "rva": "0x59D0A",
                "type": "boost::optional_ns::in_place_init_if_t"
            },
            "qword_0x59D0B": {
                "address": "0x7FFA372B9D0B",
                "current_value": "0x29EB280000000000",
                "resolved_name": "_init_instance_24",
                "rva": "0x59D0B",
                "type": "ComponentRegistration"
            },
            "qword_0x59D0C": {
                "address": "0x7FFA372B9D0C",
                "current_value": "0x3729EB2800000000",
                "resolved_name": "_init_instance_25",
                "rva": "0x59D0C",
                "type": "ComponentRegistration"
            },
            "qword_0x59D10": {
                "address": "0x7FFA372B9D10",
                "current_value": "0x7FFA3729EB28",
                "resolved_name": "initFunction",
                "rva": "0x59D10",
                "type": "InitFunction"
            },
            "qword_0x59D30": {
                "address": "0x7FFA372B9D30",
                "current_value": "0xE",
                "resolved_name": "Instance<fx::ResourceMetaDataComponent>::ms_id",
                "rva": "0x59D30"
            },
            "qword_0x59D38": {
                "address": "0x7FFA372B9D38",
                "current_value": "0x23",
                "resolved_name": "Instance<fx::ResourceGameLifetimeEvents>::ms_id",
                "rva": "0x59D38"
            },
            "qword_0x59D50": {
                "address": "0x7FFA372B9D50",
                "current_value": "0x1FD0B1E1F10",
                "resolved_name": "Instance<HttpClient>::ms_cachedInstance",
                "rva": "0x59D50"
            },
            "qword_0x59D58": {
                "address": "0x7FFA372B9D58",
                "current_value": "0x11",
                "resolved_name": "Instance<HttpClient>::ms_id",
                "rva": "0x59D58"
            },
            "qword_0x59D60": {
                "address": "0x7FFA372B9D60",
                "current_value": "0x0",
                "resolved_name": "Instance<NUISchemeHandlerFactory>::ms_cachedInstance",
                "rva": "0x59D60"
            },
            "qword_0x59D68": {
                "address": "0x7FFA372B9D68",
                "current_value": "0x17",
                "resolved_name": "Instance<NUISchemeHandlerFactory>::ms_id",
                "rva": "0x59D68"
            },
            "qword_0x59D80": {
                "address": "0x7FFA372B9D80",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x59D80",
                "type": "ComponentRegistration"
            },
            "qword_0x59D81": {
                "address": "0x7FFA372B9D81",
                "current_value": "0x7000000000000000",
                "resolved_name": "boost::optional_ns::in_place_init",
                "rva": "0x59D81",
                "type": "boost::optional_ns::in_place_init_t"
            },
            "qword_0x59D82": {
                "address": "0x7FFA372B9D82",
                "current_value": "0x5B70000000000000",
                "resolved_name": "boost::optional_ns::in_place_init_if",
                "rva": "0x59D82",
                "type": "boost::optional_ns::in_place_init_if_t"
            },
            "qword_0x59D83": {
                "address": "0x7FFA372B9D83",
                "current_value": "0xB55B700000000000",
                "resolved_name": "_init_instance_24",
                "rva": "0x59D83",
                "type": "ComponentRegistration"
            },
            "qword_0x59D84": {
                "address": "0x7FFA372B9D84",
                "current_value": "0x7B55B7000000000",
                "resolved_name": "_init_instance_25",
                "rva": "0x59D84",
                "type": "ComponentRegistration"
            },
            "qword_0x59D85": {
                "address": "0x7FFA372B9D85",
                "current_value": "0xFD07B55B70000000",
                "resolved_name": "_init_instance_26",
                "rva": "0x59D85",
                "type": "ComponentRegistration"
            },
            "qword_0x59D86": {
                "address": "0x7FFA372B9D86",
                "current_value": "0x1FD07B55B700000",
                "resolved_name": "_init_instance_27",
                "rva": "0x59D86",
                "type": "ComponentRegistration"
            },
            "qword_0x59D87": {
                "address": "0x7FFA372B9D87",
                "current_value": "0x1FD07B55B7000",
                "resolved_name": "_init_instance_28",
                "rva": "0x59D87",
                "type": "ComponentRegistration"
            },
            "qword_0x59D88": {
                "address": "0x7FFA372B9D88",
                "current_value": "0x1FD07B55B70",
                "resolved_name": "g_nuiCallbackQueue",
                "rva": "0x59D88",
                "type": "std::queue<std::function<void __cdecl(void)>,std::deque<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >"
            },
            "qword_0x59DB0": {
                "address": "0x7FFA372B9DB0",
                "current_value": "0x2",
                "resolved_name": "g_nuiCallbackMutex",
                "rva": "0x59DB0",
                "type": "std::mutex"
            },
            "qword_0x59E00": {
                "address": "0x7FFA372B9E00",
                "current_value": "0x7FFA3729EB28",
                "resolved_name": "initFunction",
                "rva": "0x59E00",
                "type": "InitFunction"
            },
            "qword_0x59E20": {
                "address": "0x7FFA372B9E20",
                "current_value": "0x0",
                "resolved_name": "_init_instance_31",
                "rva": "0x59E20",
                "type": "ComponentRegistration"
            },
            "qword_0x59E28": {
                "address": "0x7FFA372B9E28",
                "current_value": "0x7FFA3729EB28",
                "resolved_name": "httpInitFunction",
                "rva": "0x59E28",
                "type": "InitFunction"
            },
            "qword_0x59E48": {
                "address": "0x7FFA372B9E48",
                "current_value": "0x18",
                "resolved_name": "Instance<fx::ResourceCallbackComponent>::ms_id",
                "rva": "0x59E48"
            },
            "qword_0x59E60": {
                "address": "0x7FFA372B9E60",
                "current_value": "0xC",
                "resolved_name": "Instance<fx::ResourceEventComponent>::ms_id",
                "rva": "0x59E60"
            },
            "qword_0x59E68": {
                "address": "0x7FFA372B9E68",
                "current_value": "0xD",
                "resolved_name": "Instance<fx::ResourceEventManagerComponent>::ms_id",
                "rva": "0x59E68"
            },
            "qword_0x59E70": {
                "address": "0x7FFA372B9E70",
                "current_value": "0x19",
                "resolved_name": "Instance<fx::ResourceScriptingComponent>::ms_id",
                "rva": "0x59E70"
            },
            "qword_0x59E78": {
                "address": "0x7FFA372B9E78",
                "current_value": "0x1A",
                "resolved_name": "Instance<fx::ScriptMetaDataComponent>::ms_id",
                "rva": "0x59E78"
            },
            "qword_0x59E90": {
                "address": "0x7FFA372B9E90",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x59E90",
                "type": "ComponentRegistration"
            },
            "qword_0x59E91": {
                "address": "0x7FFA372B9E91",
                "current_value": "0x0",
                "resolved_name": "boost::optional_ns::in_place_init",
                "rva": "0x59E91",
                "type": "boost::optional_ns::in_place_init_t"
            },
            "qword_0x59E92": {
                "address": "0x7FFA372B9E92",
                "current_value": "0x0",
                "resolved_name": "boost::optional_ns::in_place_init_if",
                "rva": "0x59E92",
                "type": "boost::optional_ns::in_place_init_if_t"
            },
            "qword_0x59E93": {
                "address": "0x7FFA372B9E93",
                "current_value": "0x0",
                "resolved_name": "_init_instance_24",
                "rva": "0x59E93",
                "type": "ComponentRegistration"
            },
            "qword_0x59E94": {
                "address": "0x7FFA372B9E94",
                "current_value": "0x0",
                "resolved_name": "_init_instance_25",
                "rva": "0x59E94",
                "type": "ComponentRegistration"
            },
            "qword_0x59E95": {
                "address": "0x7FFA372B9E95",
                "current_value": "0x0",
                "resolved_name": "_init_instance_26",
                "rva": "0x59E95",
                "type": "ComponentRegistration"
            },
            "qword_0x59E96": {
                "address": "0x7FFA372B9E96",
                "current_value": "0x0",
                "resolved_name": "_init_instance_27",
                "rva": "0x59E96",
                "type": "ComponentRegistration"
            },
            "qword_0x59E97": {
                "address": "0x7FFA372B9E97",
                "current_value": "0x0",
                "resolved_name": "_init_instance_28",
                "rva": "0x59E97",
                "type": "ComponentRegistration"
            },
            "qword_0x59E98": {
                "address": "0x7FFA372B9E98",
                "current_value": "0x0",
                "resolved_name": "_init_instance_29",
                "rva": "0x59E98",
                "type": "ComponentRegistration"
            },
            "qword_0x59E99": {
                "address": "0x7FFA372B9E99",
                "current_value": "0x2800000000000000",
                "resolved_name": "_init_instance_30",
                "rva": "0x59E99",
                "type": "ComponentRegistration"
            },
            "qword_0x59E9A": {
                "address": "0x7FFA372B9E9A",
                "current_value": "0xEB28000000000000",
                "resolved_name": "_init_instance_31",
                "rva": "0x59E9A",
                "type": "ComponentRegistration"
            },
            "qword_0x59EA0": {
                "address": "0x7FFA372B9EA0",
                "current_value": "0x7FFA3729EB28",
                "resolved_name": "initFunction",
                "rva": "0x59EA0",
                "type": "InitFunction"
            },
            "qword_0x59EC0": {
                "address": "0x7FFA372B9EC0",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::ctype<char> >::_Psave",
                "rva": "0x59EC0"
            },
            "qword_0x59ED8": {
                "address": "0x7FFA372B9ED8",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x59ED8",
                "type": "ComponentRegistration"
            },
            "qword_0x59ED9": {
                "address": "0x7FFA372B9ED9",
                "current_value": "0x2800000000000000",
                "resolved_name": "boost::optional_ns::in_place_init",
                "rva": "0x59ED9",
                "type": "boost::optional_ns::in_place_init_t"
            },
            "qword_0x59EDA": {
                "address": "0x7FFA372B9EDA",
                "current_value": "0xEB28000000000000",
                "resolved_name": "boost::optional_ns::in_place_init_if",
                "rva": "0x59EDA",
                "type": "boost::optional_ns::in_place_init_if_t"
            },
            "qword_0x59EDB": {
                "address": "0x7FFA372B9EDB",
                "current_value": "0x29EB280000000000",
                "resolved_name": "_init_instance_24",
                "rva": "0x59EDB",
                "type": "ComponentRegistration"
            },
            "qword_0x59EDC": {
                "address": "0x7FFA372B9EDC",
                "current_value": "0x3729EB2800000000",
                "resolved_name": "_init_instance_25",
                "rva": "0x59EDC",
                "type": "ComponentRegistration"
            },
            "qword_0x59EDD": {
                "address": "0x7FFA372B9EDD",
                "current_value": "0xFA3729EB28000000",
                "resolved_name": "_init_instance_26",
                "rva": "0x59EDD",
                "type": "ComponentRegistration"
            },
            "qword_0x59EE0": {
                "address": "0x7FFA372B9EE0",
                "current_value": "0x7FFA3729EB28",
                "resolved_name": "initFunction",
                "rva": "0x59EE0",
                "type": "InitFunction"
            },
            "qword_0x5A068": {
                "address": "0x7FFA372BA068",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x5A068",
                "type": "ComponentRegistration"
            },
            "qword_0x5A069": {
                "address": "0x7FFA372BA069",
                "current_value": "0x7000000000000000",
                "resolved_name": "boost::optional_ns::in_place_init",
                "rva": "0x5A069",
                "type": "boost::optional_ns::in_place_init_t"
            },
            "qword_0x5A06A": {
                "address": "0x7FFA372BA06A",
                "current_value": "0xF370000000000000",
                "resolved_name": "boost::optional_ns::in_place_init_if",
                "rva": "0x5A06A",
                "type": "boost::optional_ns::in_place_init_if_t"
            },
            "qword_0x5A06B": {
                "address": "0x7FFA372BA06B",
                "current_value": "0xC0F3700000000000",
                "resolved_name": "_init_instance_24",
                "rva": "0x5A06B",
                "type": "ComponentRegistration"
            },
            "qword_0x5A06C": {
                "address": "0x7FFA372BA06C",
                "current_value": "0x7C0F37000000000",
                "resolved_name": "_init_instance_25",
                "rva": "0x5A06C",
                "type": "ComponentRegistration"
            },
            "qword_0x5A070": {
                "address": "0x7FFA372BA070",
                "current_value": "0x1FD07C0F370",
                "resolved_name": "xbr::kGameBuildUniquifiers",
                "rva": "0x5A070",
                "type": "std::map<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >"
            },
            "qword_0x5A080": {
                "address": "0x7FFA372BA080",
                "current_value": "0x7FFA3729EB28",
                "resolved_name": "initFunction",
                "rva": "0x5A080",
                "type": "InitFunction"
            },
            "qword_0x5A0A8": {
                "address": "0x7FFA372BA0A8",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::numpunct<char> >::_Psave",
                "rva": "0x5A0A8"
            },
            "qword_0x5A108": {
                "address": "0x7FFA372BA108",
                "current_value": "0x7FFA372B9D10",
                "resolved_name": "g_initFunctions",
                "rva": "0x5A108"
            },
            "qword_0x5A130": {
                "address": "0x7FFA372BA130",
                "current_value": "0x0",
                "resolved_name": "initIoBuf",
                "rva": "0x5A130",
                "type": "InitIoBuf"
            },
            "qword_0x5A138": {
                "address": "0x7FFA372BA138",
                "current_value": "0x0",
                "resolved_name": "g_hookFunctions",
                "rva": "0x5A138"
            },
            "qword_0x5A140": {
                "address": "0x7FFA372BA140",
                "current_value": "0x0",
                "resolved_name": "g_runtimeHookFunctions",
                "rva": "0x5A140"
            },
            "qword_0x5A150": {
                "address": "0x7FFA372BA150",
                "current_value": "0x0",
                "resolved_name": "shutdown_checker::g_cef_shutdown",
                "rva": "0x5A150",
                "type": "std::atomic<bool>"
            },
            "qword_0x5A158": {
                "address": "0x7FFA372BA158",
                "current_value": "0x0",
                "resolved_name": "std::_Fac_head",
                "rva": "0x5A158"
            },
            "qword_0x5A160": {
                "address": "0x7FFA372BA160",
                "current_value": "0x0",
                "resolved_name": "std::_Fac_tidy_reg",
                "rva": "0x5A160",
                "type": "std::_Fac_tidy_reg_t"
            },
            "qword_0x5A168": {
                "address": "0x7FFA372BA168",
                "current_value": "0x0",
                "resolved_name": "g_tss_cv",
                "rva": "0x5A168",
                "type": "_RTL_CONDITION_VARIABLE"
            },
            "qword_0x5A170": {
                "address": "0x7FFA372BA170",
                "current_value": "0x0",
                "resolved_name": "g_tss_event",
                "rva": "0x5A170"
            },
            "qword_0x5A178": {
                "address": "0x7FFA372BA178",
                "current_value": "0xFFFFFFFFFFFFFFFF",
                "resolved_name": "g_tss_mutex",
                "rva": "0x5A178",
                "type": "_RTL_CRITICAL_SECTION"
            },
            "qword_0x5A1A0": {
                "address": "0x7FFA372BA1A0",
                "current_value": "0x7FFB01768340",
                "resolved_name": "g_sleep_condition_variable_cs",
                "rva": "0x5A1A0"
            },
            "qword_0x5A1A8": {
                "address": "0x7FFA372BA1A8",
                "current_value": "0x7FFB04486FD0",
                "resolved_name": "g_wake_all_condition_variable",
                "rva": "0x5A1A8"
            },
            "qword_0x5A1B0": {
                "address": "0x7FFA372BA1B0",
                "current_value": "0x2",
                "resolved_name": "__scrt_current_native_startup_state",
                "rva": "0x5A1B0",
                "type": "__scrt_native_startup_state"
            },
            "qword_0x5A1B8": {
                "address": "0x7FFA372BA1B8",
                "current_value": "0x0",
                "resolved_name": "__scrt_native_startup_lock",
                "rva": "0x5A1B8"
            },
            "qword_0x5A1C0": {
                "address": "0x7FFA372BA1C0",
                "current_value": "0x101",
                "resolved_name": "is_initialized_as_dll",
                "rva": "0x5A1C0"
            },
            "qword_0x5A1C1": {
                "address": "0x7FFA372BA1C1",
                "current_value": "0x8800000000000001",
                "resolved_name": "module_local_atexit_table_initialized",
                "rva": "0x5A1C1"
            },
            "qword_0x5A1C8": {
                "address": "0x7FFA372BA1C8",
                "current_value": "0x1CF27C7430B88",
                "resolved_name": "module_local_atexit_table",
                "rva": "0x5A1C8",
                "type": "_onexit_table_t"
            },
            "qword_0x5A1E0": {
                "address": "0x7FFA372BA1E0",
                "current_value": "0x32207349FB88",
                "resolved_name": "module_local_at_quick_exit_table",
                "rva": "0x5A1E0",
                "type": "_onexit_table_t"
            },
            "qword_0x5A1F8": {
                "address": "0x7FFA372BA1F8",
                "current_value": "0x100000044",
                "resolved_name": "_tls_index",
                "rva": "0x5A1F8"
            },
            "qword_0x5A1FC": {
                "address": "0x7FFA372BA1FC",
                "current_value": "0x1",
                "resolved_name": "__proc_attached",
                "rva": "0x5A1FC"
            },
            "qword_0x5A200": {
                "address": "0x7FFA372BA200",
                "current_value": "0x0",
                "resolved_name": "GS_ExceptionRecord",
                "rva": "0x5A200",
                "type": "_EXCEPTION_RECORD"
            },
            "qword_0x5A2A0": {
                "address": "0x7FFA372BA2A0",
                "current_value": "0x0",
                "resolved_name": "GS_ContextRecord",
                "rva": "0x5A2A0",
                "type": "_CONTEXT"
            },
            "qword_0x5A770": {
                "address": "0x7FFA372BA770",
                "current_value": "0x2",
                "resolved_name": "__favor",
                "rva": "0x5A770"
            },
            "qword_0x5A774": {
                "address": "0x7FFA372BA774",
                "current_value": "0x0",
                "resolved_name": "__scrt_debugger_hook_flag",
                "rva": "0x5A774"
            },
            "qword_0x5A780": {
                "address": "0x7FFA372BA780",
                "current_value": "0x0",
                "resolved_name": "__type_info_root_node",
                "rva": "0x5A780",
                "type": "__type_info_node"
            },
            "qword_0x5A798": {
                "address": "0x7FFA372BA798",
                "current_value": "0x0",
                "resolved_name": "DloadKernel32",
                "rva": "0x5A798"
            },
            "qword_0x5A7A0": {
                "address": "0x7FFA372BA7A0",
                "current_value": "0x0",
                "resolved_name": "DloadAcquireSRWLockExclusive",
                "rva": "0x5A7A0"
            },
            "qword_0x5A7A8": {
                "address": "0x7FFA372BA7A8",
                "current_value": "0x0",
                "resolved_name": "DloadReleaseSRWLockExclusive",
                "rva": "0x5A7A8"
            },
            "qword_0x5A7B0": {
                "address": "0x7FFA372BA7B0",
                "current_value": "0x0",
                "resolved_name": "DloadSrwLock",
                "rva": "0x5A7B0"
            },
            "qword_0x5A7B8": {
                "address": "0x7FFA372BA7B8",
                "current_value": "0x0",
                "resolved_name": "DloadSectionLockCount",
                "rva": "0x5A7B8"
            },
            "qword_0x5A7BC": {
                "address": "0x7FFA372BA7BC",
                "current_value": "0x0",
                "resolved_name": "DloadSectionOldProtection",
                "rva": "0x5A7BC"
            },
            "qword_0x5A7C0": {
                "address": "0x7FFA372BA7C0",
                "current_value": "0x0",
                "resolved_name": "DloadSectionCommitPermanent",
                "rva": "0x5A7C0"
            }
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::ClearStackOnExit::~ClearStackOnExit": {
            "offset": "0x1EE20"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::EndArray": {
            "offset": "0x220C0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::EndObject": {
            "offset": "0x221D0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::ParseStream<0,rapidjson::UTF8<char>,rapidjson::GenericStringStream<rapidjson::UTF8<char> > >": {
            "offset": "0x1B3E0"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::~GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>": {
            "offset": "0xA320"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ClearStackOnExit::~ClearStackOnExit": {
            "offset": "0x1EE50"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseArray<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x1A4C0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseHex4<rapidjson::GenericStringStream<rapidjson::UTF8<char> > >": {
            "offset": "0x1A6F0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseNumber<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x1A7A0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseObject<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x1AFE0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseStringToStream<0,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::StackStream<char> >": {
            "offset": "0x1B5C0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::ParseValue<0,rapidjson::GenericStringStream<rapidjson::UTF8<char> >,rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator> >": {
            "offset": "0x1B940"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::StackStream<char>::Put": {
            "offset": "0x225E0"
        },
        "rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0xA3C0"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::GetString": {
            "offset": "0x223B0"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0xA3C0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Accept<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0> >": {
            "offset": "0x1C30"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::AddMember": {
            "offset": "0xB490"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Begin": {
            "offset": "0x20C90"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::GetString": {
            "offset": "0x22450"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::GetStringLength": {
            "offset": "0x224B0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::SetStringRaw": {
            "offset": "0x22740"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::~GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0xA3F0"
        },
        "rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>::Malloc": {
            "offset": "0xC5E0"
        },
        "rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>::Realloc": {
            "offset": "0x22670"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Prefix": {
            "offset": "0xC6A0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::String": {
            "offset": "0xC910"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::WriteString": {
            "offset": "0xCDB0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::~Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>": {
            "offset": "0xA400"
        },
        "rapidjson::internal::DigitGen": {
            "offset": "0xB740"
        },
        "rapidjson::internal::FastPath": {
            "offset": "0x222E0"
        },
        "rapidjson::internal::Grisu2": {
            "offset": "0xC1F0"
        },
        "rapidjson::internal::Prettify": {
            "offset": "0xC750"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > >": {
            "offset": "0x1BD20"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level>": {
            "offset": "0x26C0"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Reserve<char>": {
            "offset": "0x2790"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::~Stack<rapidjson::CrtAllocator>": {
            "offset": "0xA3C0"
        },
        "rapidjson::internal::StreamLocalCopy<rapidjson::GenericStringStream<rapidjson::UTF8<char> >,1>::~StreamLocalCopy<rapidjson::GenericStringStream<rapidjson::UTF8<char> >,1>": {
            "offset": "0x1EC30"
        },
        "rapidjson::internal::WriteExponent": {
            "offset": "0xCD20"
        },
        "rapidjson::internal::u32toa": {
            "offset": "0xD880"
        },
        "rapidjson::internal::u64toa": {
            "offset": "0xDAF0"
        },
        "scoped_refptr<CefBrowserHost>::~scoped_refptr<CefBrowserHost>": {
            "offset": "0x124A0"
        },
        "scoped_refptr<CefCallback>::~scoped_refptr<CefCallback>": {
            "offset": "0x124A0"
        },
        "scoped_refptr<CefPostData>::~scoped_refptr<CefPostData>": {
            "offset": "0x124A0"
        },
        "scoped_refptr<CefRequest>::~scoped_refptr<CefRequest>": {
            "offset": "0x124A0"
        },
        "scoped_refptr<CefResponse>::~scoped_refptr<CefResponse>": {
            "offset": "0x124A0"
        },
        "scoped_refptr<RPCResourceHandler>::~scoped_refptr<RPCResourceHandler>": {
            "offset": "0x124A0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x2B290"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >": {
            "offset": "0x2B270"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >": {
            "offset": "0x2B270"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > >": {
            "offset": "0x12280"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,msgpack::v2::object>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,msgpack::v2::object>,void *> > >": {
            "offset": "0xA430"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object>,void *> > >": {
            "offset": "0x1EC40"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x122A0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >,void *> > >": {
            "offset": "0x14DB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0xA430"
        },
        "std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x11E60"
        },
        "std::_Destroy_in_place<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xA510"
        },
        "std::_Destroy_range<std::allocator<Header> >": {
            "offset": "0x24320"
        },
        "std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x13E70"
        },
        "std::_Destroy_range<std::allocator<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > >": {
            "offset": "0x13F00"
        },
        "std::_Facet_Register": {
            "offset": "0x38298"
        },
        "std::_Func_class<bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::~_Func_class<bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>": {
            "offset": "0x122C0"
        },
        "std::_Func_class<bool,fx::Resource *>::~_Func_class<bool,fx::Resource *>": {
            "offset": "0x122C0"
        },
        "std::_Func_class<bool,fx::ResourceManager *>::~_Func_class<bool,fx::ResourceManager *>": {
            "offset": "0x122C0"
        },
        "std::_Func_class<bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::~_Func_class<bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >": {
            "offset": "0x122C0"
        },
        "std::_Func_class<bool>::~_Func_class<bool>": {
            "offset": "0x122C0"
        },
        "std::_Func_class<void,bool,char const *,unsigned __int64>::~_Func_class<void,bool,char const *,unsigned __int64>": {
            "offset": "0x122C0"
        },
        "std::_Func_class<void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~_Func_class<void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x122C0"
        },
        "std::_Func_class<void,msgpack::v1::object_handle const &>::~_Func_class<void,msgpack::v1::object_handle const &>": {
            "offset": "0x122C0"
        },
        "std::_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::~_Func_class<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >": {
            "offset": "0x122C0"
        },
        "std::_Func_class<void,std::basic_string_view<char,std::char_traits<char> > >::~_Func_class<void,std::basic_string_view<char,std::char_traits<char> > >": {
            "offset": "0x122C0"
        },
        "std::_Func_class<void>::~_Func_class<void>": {
            "offset": "0x122C0"
        },
        "std::_Func_impl_no_alloc<<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>,void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Copy": {
            "offset": "0x11260"
        },
        "std::_Func_impl_no_alloc<<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>,void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Delete_this": {
            "offset": "0x11340"
        },
        "std::_Func_impl_no_alloc<<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>,void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Do_call": {
            "offset": "0x11320"
        },
        "std::_Func_impl_no_alloc<<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>,void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>,void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Move": {
            "offset": "0x112F0"
        },
        "std::_Func_impl_no_alloc<<lambda_0b99ff1a0f6576430fe4d38d6f2f578c>,void,int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Target_type": {
            "offset": "0x11330"
        },
        "std::_Func_impl_no_alloc<<lambda_0d398998f5cf0baaed61f903f8d807d3>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27C00"
        },
        "std::_Func_impl_no_alloc<<lambda_0d398998f5cf0baaed61f903f8d807d3>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_0d398998f5cf0baaed61f903f8d807d3>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27C10"
        },
        "std::_Func_impl_no_alloc<<lambda_0d398998f5cf0baaed61f903f8d807d3>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_0d398998f5cf0baaed61f903f8d807d3>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27C00"
        },
        "std::_Func_impl_no_alloc<<lambda_0d398998f5cf0baaed61f903f8d807d3>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27C20"
        },
        "std::_Func_impl_no_alloc<<lambda_148aacf61cb8421e260645f33a06413c>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27C30"
        },
        "std::_Func_impl_no_alloc<<lambda_148aacf61cb8421e260645f33a06413c>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_148aacf61cb8421e260645f33a06413c>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27C50"
        },
        "std::_Func_impl_no_alloc<<lambda_148aacf61cb8421e260645f33a06413c>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_148aacf61cb8421e260645f33a06413c>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27C30"
        },
        "std::_Func_impl_no_alloc<<lambda_148aacf61cb8421e260645f33a06413c>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27CC0"
        },
        "std::_Func_impl_no_alloc<<lambda_1b9b882442f4f0238f0ad6db27cfb677>,bool>::_Copy": {
            "offset": "0x13910"
        },
        "std::_Func_impl_no_alloc<<lambda_1b9b882442f4f0238f0ad6db27cfb677>,bool>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_1b9b882442f4f0238f0ad6db27cfb677>,bool>::_Do_call": {
            "offset": "0x13930"
        },
        "std::_Func_impl_no_alloc<<lambda_1b9b882442f4f0238f0ad6db27cfb677>,bool>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_1b9b882442f4f0238f0ad6db27cfb677>,bool>::_Move": {
            "offset": "0x13910"
        },
        "std::_Func_impl_no_alloc<<lambda_1b9b882442f4f0238f0ad6db27cfb677>,bool>::_Target_type": {
            "offset": "0x139B0"
        },
        "std::_Func_impl_no_alloc<<lambda_1ef028ec87bf57f7455cb3caafc0b566>,bool>::_Copy": {
            "offset": "0x136E0"
        },
        "std::_Func_impl_no_alloc<<lambda_1ef028ec87bf57f7455cb3caafc0b566>,bool>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_1ef028ec87bf57f7455cb3caafc0b566>,bool>::_Do_call": {
            "offset": "0x13700"
        },
        "std::_Func_impl_no_alloc<<lambda_1ef028ec87bf57f7455cb3caafc0b566>,bool>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_1ef028ec87bf57f7455cb3caafc0b566>,bool>::_Move": {
            "offset": "0x136E0"
        },
        "std::_Func_impl_no_alloc<<lambda_1ef028ec87bf57f7455cb3caafc0b566>,bool>::_Target_type": {
            "offset": "0x13720"
        },
        "std::_Func_impl_no_alloc<<lambda_209372ef5ac4289acb2d2b25aad41cbf>,bool>::_Copy": {
            "offset": "0x139C0"
        },
        "std::_Func_impl_no_alloc<<lambda_209372ef5ac4289acb2d2b25aad41cbf>,bool>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_209372ef5ac4289acb2d2b25aad41cbf>,bool>::_Do_call": {
            "offset": "0x13930"
        },
        "std::_Func_impl_no_alloc<<lambda_209372ef5ac4289acb2d2b25aad41cbf>,bool>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_209372ef5ac4289acb2d2b25aad41cbf>,bool>::_Move": {
            "offset": "0x139C0"
        },
        "std::_Func_impl_no_alloc<<lambda_209372ef5ac4289acb2d2b25aad41cbf>,bool>::_Target_type": {
            "offset": "0x139E0"
        },
        "std::_Func_impl_no_alloc<<lambda_2272712a9a9471030629799e626768b4>,void,fwRefContainer<fx::Resource> const &>::_Copy": {
            "offset": "0x13730"
        },
        "std::_Func_impl_no_alloc<<lambda_2272712a9a9471030629799e626768b4>,void,fwRefContainer<fx::Resource> const &>::_Delete_this": {
            "offset": "0x111B0"
        },
        "std::_Func_impl_no_alloc<<lambda_2272712a9a9471030629799e626768b4>,void,fwRefContainer<fx::Resource> const &>::_Do_call": {
            "offset": "0x13750"
        },
        "std::_Func_impl_no_alloc<<lambda_2272712a9a9471030629799e626768b4>,void,fwRefContainer<fx::Resource> const &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_2272712a9a9471030629799e626768b4>,void,fwRefContainer<fx::Resource> const &>::_Move": {
            "offset": "0x13730"
        },
        "std::_Func_impl_no_alloc<<lambda_2272712a9a9471030629799e626768b4>,void,fwRefContainer<fx::Resource> const &>::_Target_type": {
            "offset": "0x137D0"
        },
        "std::_Func_impl_no_alloc<<lambda_26f148efe7cdfc9b780265b03ae127d6>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27F00"
        },
        "std::_Func_impl_no_alloc<<lambda_26f148efe7cdfc9b780265b03ae127d6>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_26f148efe7cdfc9b780265b03ae127d6>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27F20"
        },
        "std::_Func_impl_no_alloc<<lambda_26f148efe7cdfc9b780265b03ae127d6>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_26f148efe7cdfc9b780265b03ae127d6>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27F00"
        },
        "std::_Func_impl_no_alloc<<lambda_26f148efe7cdfc9b780265b03ae127d6>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27FB0"
        },
        "std::_Func_impl_no_alloc<<lambda_2cb33fa2674c5206284536a778aeb0f8>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x23D60"
        },
        "std::_Func_impl_no_alloc<<lambda_2cb33fa2674c5206284536a778aeb0f8>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_2cb33fa2674c5206284536a778aeb0f8>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x23D70"
        },
        "std::_Func_impl_no_alloc<<lambda_2cb33fa2674c5206284536a778aeb0f8>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_2cb33fa2674c5206284536a778aeb0f8>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x23D60"
        },
        "std::_Func_impl_no_alloc<<lambda_2cb33fa2674c5206284536a778aeb0f8>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x23D80"
        },
        "std::_Func_impl_no_alloc<<lambda_2d048217d148e8d4ee446306febeb985>,void,fwRefContainer<fx::Resource> const &>::_Copy": {
            "offset": "0x110F0"
        },
        "std::_Func_impl_no_alloc<<lambda_2d048217d148e8d4ee446306febeb985>,void,fwRefContainer<fx::Resource> const &>::_Delete_this": {
            "offset": "0x111B0"
        },
        "std::_Func_impl_no_alloc<<lambda_2d048217d148e8d4ee446306febeb985>,void,fwRefContainer<fx::Resource> const &>::_Do_call": {
            "offset": "0x11110"
        },
        "std::_Func_impl_no_alloc<<lambda_2d048217d148e8d4ee446306febeb985>,void,fwRefContainer<fx::Resource> const &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_2d048217d148e8d4ee446306febeb985>,void,fwRefContainer<fx::Resource> const &>::_Move": {
            "offset": "0x110F0"
        },
        "std::_Func_impl_no_alloc<<lambda_2d048217d148e8d4ee446306febeb985>,void,fwRefContainer<fx::Resource> const &>::_Target_type": {
            "offset": "0x11190"
        },
        "std::_Func_impl_no_alloc<<lambda_2f9205b6252d6e868aeec98f84dc9977>,bool,fx::Resource *>::_Copy": {
            "offset": "0x139F0"
        },
        "std::_Func_impl_no_alloc<<lambda_2f9205b6252d6e868aeec98f84dc9977>,bool,fx::Resource *>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_2f9205b6252d6e868aeec98f84dc9977>,bool,fx::Resource *>::_Do_call": {
            "offset": "0x13A10"
        },
        "std::_Func_impl_no_alloc<<lambda_2f9205b6252d6e868aeec98f84dc9977>,bool,fx::Resource *>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_2f9205b6252d6e868aeec98f84dc9977>,bool,fx::Resource *>::_Move": {
            "offset": "0x139F0"
        },
        "std::_Func_impl_no_alloc<<lambda_2f9205b6252d6e868aeec98f84dc9977>,bool,fx::Resource *>::_Target_type": {
            "offset": "0x13A30"
        },
        "std::_Func_impl_no_alloc<<lambda_35e9b35287634c6ab41fa6822086d68e>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27BD0"
        },
        "std::_Func_impl_no_alloc<<lambda_35e9b35287634c6ab41fa6822086d68e>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_35e9b35287634c6ab41fa6822086d68e>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27BE0"
        },
        "std::_Func_impl_no_alloc<<lambda_35e9b35287634c6ab41fa6822086d68e>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_35e9b35287634c6ab41fa6822086d68e>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27BD0"
        },
        "std::_Func_impl_no_alloc<<lambda_35e9b35287634c6ab41fa6822086d68e>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27BF0"
        },
        "std::_Func_impl_no_alloc<<lambda_3a5822e41399948849dc8b70b56e0e35>,bool>::_Copy": {
            "offset": "0x13880"
        },
        "std::_Func_impl_no_alloc<<lambda_3a5822e41399948849dc8b70b56e0e35>,bool>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_3a5822e41399948849dc8b70b56e0e35>,bool>::_Do_call": {
            "offset": "0x138A0"
        },
        "std::_Func_impl_no_alloc<<lambda_3a5822e41399948849dc8b70b56e0e35>,bool>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_3a5822e41399948849dc8b70b56e0e35>,bool>::_Move": {
            "offset": "0x13880"
        },
        "std::_Func_impl_no_alloc<<lambda_3a5822e41399948849dc8b70b56e0e35>,bool>::_Target_type": {
            "offset": "0x13900"
        },
        "std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>::_Copy": {
            "offset": "0x19CA0"
        },
        "std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>::_Delete_this": {
            "offset": "0x19D40"
        },
        "std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>::_Do_call": {
            "offset": "0x19D20"
        },
        "std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>::_Move": {
            "offset": "0xE4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_4b5991f435073e3c82f6aa21eef9cb28>,void,msgpack::v1::object_handle const &>::_Target_type": {
            "offset": "0x19D30"
        },
        "std::_Func_impl_no_alloc<<lambda_6602a925a2729d5b96abf852f85b99cc>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27B10"
        },
        "std::_Func_impl_no_alloc<<lambda_6602a925a2729d5b96abf852f85b99cc>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_6602a925a2729d5b96abf852f85b99cc>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27B20"
        },
        "std::_Func_impl_no_alloc<<lambda_6602a925a2729d5b96abf852f85b99cc>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_6602a925a2729d5b96abf852f85b99cc>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27B10"
        },
        "std::_Func_impl_no_alloc<<lambda_6602a925a2729d5b96abf852f85b99cc>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27B30"
        },
        "std::_Func_impl_no_alloc<<lambda_663c07207a48b8b02cbbf2e8fb52507b>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27880"
        },
        "std::_Func_impl_no_alloc<<lambda_663c07207a48b8b02cbbf2e8fb52507b>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_663c07207a48b8b02cbbf2e8fb52507b>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27890"
        },
        "std::_Func_impl_no_alloc<<lambda_663c07207a48b8b02cbbf2e8fb52507b>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_663c07207a48b8b02cbbf2e8fb52507b>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27880"
        },
        "std::_Func_impl_no_alloc<<lambda_663c07207a48b8b02cbbf2e8fb52507b>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x278A0"
        },
        "std::_Func_impl_no_alloc<<lambda_697ddd1039544c889b8c597e07737af6>,bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::_Copy": {
            "offset": "0x113C0"
        },
        "std::_Func_impl_no_alloc<<lambda_697ddd1039544c889b8c597e07737af6>,bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_697ddd1039544c889b8c597e07737af6>,bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::_Do_call": {
            "offset": "0x113E0"
        },
        "std::_Func_impl_no_alloc<<lambda_697ddd1039544c889b8c597e07737af6>,bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_697ddd1039544c889b8c597e07737af6>,bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::_Move": {
            "offset": "0x113C0"
        },
        "std::_Func_impl_no_alloc<<lambda_697ddd1039544c889b8c597e07737af6>,bool,char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &>::_Target_type": {
            "offset": "0x11510"
        },
        "std::_Func_impl_no_alloc<<lambda_6d9c29b0ad89b6a3803ec61ae61cf467>,bool,fx::ResourceManager *>::_Copy": {
            "offset": "0x13830"
        },
        "std::_Func_impl_no_alloc<<lambda_6d9c29b0ad89b6a3803ec61ae61cf467>,bool,fx::ResourceManager *>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_6d9c29b0ad89b6a3803ec61ae61cf467>,bool,fx::ResourceManager *>::_Do_call": {
            "offset": "0x13850"
        },
        "std::_Func_impl_no_alloc<<lambda_6d9c29b0ad89b6a3803ec61ae61cf467>,bool,fx::ResourceManager *>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_6d9c29b0ad89b6a3803ec61ae61cf467>,bool,fx::ResourceManager *>::_Move": {
            "offset": "0x13830"
        },
        "std::_Func_impl_no_alloc<<lambda_6d9c29b0ad89b6a3803ec61ae61cf467>,bool,fx::ResourceManager *>::_Target_type": {
            "offset": "0x13870"
        },
        "std::_Func_impl_no_alloc<<lambda_70e5c8711fa1dc312bc9291bcf8a8650>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27430"
        },
        "std::_Func_impl_no_alloc<<lambda_70e5c8711fa1dc312bc9291bcf8a8650>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_70e5c8711fa1dc312bc9291bcf8a8650>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27450"
        },
        "std::_Func_impl_no_alloc<<lambda_70e5c8711fa1dc312bc9291bcf8a8650>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_70e5c8711fa1dc312bc9291bcf8a8650>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27430"
        },
        "std::_Func_impl_no_alloc<<lambda_70e5c8711fa1dc312bc9291bcf8a8650>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x274C0"
        },
        "std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Copy": {
            "offset": "0x23C50"
        },
        "std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Delete_this": {
            "offset": "0x19EF0"
        },
        "std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Do_call": {
            "offset": "0x23CD0"
        },
        "std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Move": {
            "offset": "0xE4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_7563642f228337b5e4d62922b583c158>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Target_type": {
            "offset": "0x23D50"
        },
        "std::_Func_impl_no_alloc<<lambda_757628b7b6924cacbf89fa9e92d29d88>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27A70"
        },
        "std::_Func_impl_no_alloc<<lambda_757628b7b6924cacbf89fa9e92d29d88>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_757628b7b6924cacbf89fa9e92d29d88>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27A80"
        },
        "std::_Func_impl_no_alloc<<lambda_757628b7b6924cacbf89fa9e92d29d88>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_757628b7b6924cacbf89fa9e92d29d88>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27A70"
        },
        "std::_Func_impl_no_alloc<<lambda_757628b7b6924cacbf89fa9e92d29d88>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27AB0"
        },
        "std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>::_Copy": {
            "offset": "0x18F30"
        },
        "std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>::_Delete_this": {
            "offset": "0x18F80"
        },
        "std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>::_Do_call": {
            "offset": "0x18FC0"
        },
        "std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>::_Move": {
            "offset": "0xE4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,void>::_Target_type": {
            "offset": "0x198F0"
        },
        "std::_Func_impl_no_alloc<<lambda_a26a4900fb9a0d8b27ddae8e47bda41b>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27E60"
        },
        "std::_Func_impl_no_alloc<<lambda_a26a4900fb9a0d8b27ddae8e47bda41b>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_a26a4900fb9a0d8b27ddae8e47bda41b>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27E80"
        },
        "std::_Func_impl_no_alloc<<lambda_a26a4900fb9a0d8b27ddae8e47bda41b>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_a26a4900fb9a0d8b27ddae8e47bda41b>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27E60"
        },
        "std::_Func_impl_no_alloc<<lambda_a26a4900fb9a0d8b27ddae8e47bda41b>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27EF0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>::_Copy": {
            "offset": "0x23BB0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>::_Delete_this": {
            "offset": "0x19D40"
        },
        "std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>::_Do_call": {
            "offset": "0x23C30"
        },
        "std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>::_Move": {
            "offset": "0xE4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_a3e97fbfaf2498451df291433411d41d>,void,msgpack::v1::object_handle const &>::_Target_type": {
            "offset": "0x23C40"
        },
        "std::_Func_impl_no_alloc<<lambda_aa12eb467c6f5d6527dc540d272acebb>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Copy": {
            "offset": "0x137E0"
        },
        "std::_Func_impl_no_alloc<<lambda_aa12eb467c6f5d6527dc540d272acebb>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_aa12eb467c6f5d6527dc540d272acebb>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Do_call": {
            "offset": "0x13800"
        },
        "std::_Func_impl_no_alloc<<lambda_aa12eb467c6f5d6527dc540d272acebb>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_aa12eb467c6f5d6527dc540d272acebb>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Move": {
            "offset": "0x137E0"
        },
        "std::_Func_impl_no_alloc<<lambda_aa12eb467c6f5d6527dc540d272acebb>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Target_type": {
            "offset": "0x13820"
        },
        "std::_Func_impl_no_alloc<<lambda_b254a3b12b5bc22a22c86e6b8b93c099>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27BA0"
        },
        "std::_Func_impl_no_alloc<<lambda_b254a3b12b5bc22a22c86e6b8b93c099>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_b254a3b12b5bc22a22c86e6b8b93c099>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27BB0"
        },
        "std::_Func_impl_no_alloc<<lambda_b254a3b12b5bc22a22c86e6b8b93c099>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_b254a3b12b5bc22a22c86e6b8b93c099>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27BA0"
        },
        "std::_Func_impl_no_alloc<<lambda_b254a3b12b5bc22a22c86e6b8b93c099>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27BC0"
        },
        "std::_Func_impl_no_alloc<<lambda_b51dd76e073ec4069e232056e1c5aadc>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x274D0"
        },
        "std::_Func_impl_no_alloc<<lambda_b51dd76e073ec4069e232056e1c5aadc>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_b51dd76e073ec4069e232056e1c5aadc>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x274F0"
        },
        "std::_Func_impl_no_alloc<<lambda_b51dd76e073ec4069e232056e1c5aadc>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_b51dd76e073ec4069e232056e1c5aadc>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x274D0"
        },
        "std::_Func_impl_no_alloc<<lambda_b51dd76e073ec4069e232056e1c5aadc>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27560"
        },
        "std::_Func_impl_no_alloc<<lambda_bcebb1b22551d8ca5a3fa8c7a2e14ac3>,bool,fx::Resource *>::_Copy": {
            "offset": "0x27A00"
        },
        "std::_Func_impl_no_alloc<<lambda_bcebb1b22551d8ca5a3fa8c7a2e14ac3>,bool,fx::Resource *>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_bcebb1b22551d8ca5a3fa8c7a2e14ac3>,bool,fx::Resource *>::_Do_call": {
            "offset": "0x27A20"
        },
        "std::_Func_impl_no_alloc<<lambda_bcebb1b22551d8ca5a3fa8c7a2e14ac3>,bool,fx::Resource *>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_bcebb1b22551d8ca5a3fa8c7a2e14ac3>,bool,fx::Resource *>::_Move": {
            "offset": "0x27A00"
        },
        "std::_Func_impl_no_alloc<<lambda_bcebb1b22551d8ca5a3fa8c7a2e14ac3>,bool,fx::Resource *>::_Target_type": {
            "offset": "0x27A60"
        },
        "std::_Func_impl_no_alloc<<lambda_c57fd4becbc8c61ef1a54cc8a4316a45>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x19F30"
        },
        "std::_Func_impl_no_alloc<<lambda_c57fd4becbc8c61ef1a54cc8a4316a45>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_c57fd4becbc8c61ef1a54cc8a4316a45>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x19F40"
        },
        "std::_Func_impl_no_alloc<<lambda_c57fd4becbc8c61ef1a54cc8a4316a45>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_c57fd4becbc8c61ef1a54cc8a4316a45>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x19F30"
        },
        "std::_Func_impl_no_alloc<<lambda_c57fd4becbc8c61ef1a54cc8a4316a45>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x19F50"
        },
        "std::_Func_impl_no_alloc<<lambda_c5b20abf4c18bd0d48268536d9bb26fc>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27B40"
        },
        "std::_Func_impl_no_alloc<<lambda_c5b20abf4c18bd0d48268536d9bb26fc>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_c5b20abf4c18bd0d48268536d9bb26fc>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27B50"
        },
        "std::_Func_impl_no_alloc<<lambda_c5b20abf4c18bd0d48268536d9bb26fc>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_c5b20abf4c18bd0d48268536d9bb26fc>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27B40"
        },
        "std::_Func_impl_no_alloc<<lambda_c5b20abf4c18bd0d48268536d9bb26fc>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27B60"
        },
        "std::_Func_impl_no_alloc<<lambda_c5e061e95a5ce06248167f82dbaf6607>,bool>::_Copy": {
            "offset": "0x279B0"
        },
        "std::_Func_impl_no_alloc<<lambda_c5e061e95a5ce06248167f82dbaf6607>,bool>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_c5e061e95a5ce06248167f82dbaf6607>,bool>::_Do_call": {
            "offset": "0x279D0"
        },
        "std::_Func_impl_no_alloc<<lambda_c5e061e95a5ce06248167f82dbaf6607>,bool>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_c5e061e95a5ce06248167f82dbaf6607>,bool>::_Move": {
            "offset": "0x279B0"
        },
        "std::_Func_impl_no_alloc<<lambda_c5e061e95a5ce06248167f82dbaf6607>,bool>::_Target_type": {
            "offset": "0x279F0"
        },
        "std::_Func_impl_no_alloc<<lambda_d6f333238b397f19edd9dbda7f324f1c>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x19F60"
        },
        "std::_Func_impl_no_alloc<<lambda_d6f333238b397f19edd9dbda7f324f1c>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_d6f333238b397f19edd9dbda7f324f1c>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x19F70"
        },
        "std::_Func_impl_no_alloc<<lambda_d6f333238b397f19edd9dbda7f324f1c>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_d6f333238b397f19edd9dbda7f324f1c>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x19F60"
        },
        "std::_Func_impl_no_alloc<<lambda_d6f333238b397f19edd9dbda7f324f1c>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x19F80"
        },
        "std::_Func_impl_no_alloc<<lambda_d9dc7e42be4822cf4fb980837face461>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27390"
        },
        "std::_Func_impl_no_alloc<<lambda_d9dc7e42be4822cf4fb980837face461>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_d9dc7e42be4822cf4fb980837face461>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x273B0"
        },
        "std::_Func_impl_no_alloc<<lambda_d9dc7e42be4822cf4fb980837face461>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_d9dc7e42be4822cf4fb980837face461>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27390"
        },
        "std::_Func_impl_no_alloc<<lambda_d9dc7e42be4822cf4fb980837face461>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27420"
        },
        "std::_Func_impl_no_alloc<<lambda_e338dfdf3eea5b416ea5865fde6f9d72>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27AC0"
        },
        "std::_Func_impl_no_alloc<<lambda_e338dfdf3eea5b416ea5865fde6f9d72>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_e338dfdf3eea5b416ea5865fde6f9d72>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27AD0"
        },
        "std::_Func_impl_no_alloc<<lambda_e338dfdf3eea5b416ea5865fde6f9d72>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_e338dfdf3eea5b416ea5865fde6f9d72>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27AC0"
        },
        "std::_Func_impl_no_alloc<<lambda_e338dfdf3eea5b416ea5865fde6f9d72>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27B00"
        },
        "std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Copy": {
            "offset": "0x19DE0"
        },
        "std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Delete_this": {
            "offset": "0x19EF0"
        },
        "std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Do_call": {
            "offset": "0x19E60"
        },
        "std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Move": {
            "offset": "0xE4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_edbaec5da03210d3627a1fabcf18376a>,void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)> >::_Target_type": {
            "offset": "0x19EE0"
        },
        "std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >::_Copy": {
            "offset": "0x27680"
        },
        "std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >::_Delete_this": {
            "offset": "0x277D0"
        },
        "std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >::_Do_call": {
            "offset": "0x276D0"
        },
        "std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >::_Move": {
            "offset": "0xE4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_eedc40a2521921f3ba689555a00d36bc>,void,std::basic_string_view<char,std::char_traits<char> > >::_Target_type": {
            "offset": "0x277C0"
        },
        "std::_Func_impl_no_alloc<<lambda_f51514d50e9e4767c296248047b7f3ef>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27850"
        },
        "std::_Func_impl_no_alloc<<lambda_f51514d50e9e4767c296248047b7f3ef>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_f51514d50e9e4767c296248047b7f3ef>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27860"
        },
        "std::_Func_impl_no_alloc<<lambda_f51514d50e9e4767c296248047b7f3ef>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_f51514d50e9e4767c296248047b7f3ef>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27850"
        },
        "std::_Func_impl_no_alloc<<lambda_f51514d50e9e4767c296248047b7f3ef>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27870"
        },
        "std::_Func_impl_no_alloc<<lambda_f8c6d8b7450f57f5c1bc51417673baef>,bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::_Copy": {
            "offset": "0x13A40"
        },
        "std::_Func_impl_no_alloc<<lambda_f8c6d8b7450f57f5c1bc51417673baef>,bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_f8c6d8b7450f57f5c1bc51417673baef>,bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::_Do_call": {
            "offset": "0x13A60"
        },
        "std::_Func_impl_no_alloc<<lambda_f8c6d8b7450f57f5c1bc51417673baef>,bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_f8c6d8b7450f57f5c1bc51417673baef>,bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::_Move": {
            "offset": "0x13A40"
        },
        "std::_Func_impl_no_alloc<<lambda_f8c6d8b7450f57f5c1bc51417673baef>,bool,std::function<void __cdecl(bool,char const *,unsigned __int64)> >::_Target_type": {
            "offset": "0x13A80"
        },
        "std::_Func_impl_no_alloc<<lambda_fd2d4218559059e714d322301bfd6193>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x23D90"
        },
        "std::_Func_impl_no_alloc<<lambda_fd2d4218559059e714d322301bfd6193>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_fd2d4218559059e714d322301bfd6193>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x23DA0"
        },
        "std::_Func_impl_no_alloc<<lambda_fd2d4218559059e714d322301bfd6193>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_fd2d4218559059e714d322301bfd6193>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x23D90"
        },
        "std::_Func_impl_no_alloc<<lambda_fd2d4218559059e714d322301bfd6193>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x23DB0"
        },
        "std::_Func_impl_no_alloc<<lambda_fff0c35a08c2a2e6231c76f764418c4c>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x27CD0"
        },
        "std::_Func_impl_no_alloc<<lambda_fff0c35a08c2a2e6231c76f764418c4c>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x11520"
        },
        "std::_Func_impl_no_alloc<<lambda_fff0c35a08c2a2e6231c76f764418c4c>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x27CF0"
        },
        "std::_Func_impl_no_alloc<<lambda_fff0c35a08c2a2e6231c76f764418c4c>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x111A0"
        },
        "std::_Func_impl_no_alloc<<lambda_fff0c35a08c2a2e6231c76f764418c4c>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x27CD0"
        },
        "std::_Func_impl_no_alloc<<lambda_fff0c35a08c2a2e6231c76f764418c4c>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x27E50"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::_Forced_rehash": {
            "offset": "0x2EEE0"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::_Forced_rehash": {
            "offset": "0x2F1A0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x297D0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Forced_rehash": {
            "offset": "0x2F490"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x29F70"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase": {
            "offset": "0x2F7F0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::find<void>": {
            "offset": "0x2A610"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x2E830"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >": {
            "offset": "0x2B2D0"
        },
        "std::_Insert_string<char,std::char_traits<char>,unsigned __int64>": {
            "offset": "0x29A20"
        },
        "std::_Integral_to_string<char,int>": {
            "offset": "0x1CF90"
        },
        "std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x298A0"
        },
        "std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Freenode<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x29940"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x2B380"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >": {
            "offset": "0x2B330"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >": {
            "offset": "0x2B270"
        },
        "std::_Maklocstr<char>": {
            "offset": "0xE410"
        },
        "std::_Optional_construct_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Optional_construct_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14DD0"
        },
        "std::_Optional_destruct_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>::~_Optional_destruct_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>": {
            "offset": "0x14DE0"
        },
        "std::_Ref_count_base::_Get_deleter": {
            "offset": "0xE4D0"
        },
        "std::_String_val<std::_Simple_types<char> >::_Xran": {
            "offset": "0x13070"
        },
        "std::_Throw_bad_array_new_length": {
            "offset": "0xD150"
        },
        "std::_Throw_bad_cast": {
            "offset": "0x272B0"
        },
        "std::_Throw_tree_length_error": {
            "offset": "0xD170"
        },
        "std::_Tidy_deallocate_guard<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~_Tidy_deallocate_guard<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x25160"
        },
        "std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >": {
            "offset": "0x33330"
        },
        "std::_Tree<std::_Tmap_traits<CefStringBase<CefStringTraitsUTF16>,CefStringBase<CefStringTraitsUTF16>,std::less<CefStringBase<CefStringTraitsUTF16> >,std::allocator<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > >,1> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>": {
            "offset": "0x118D0"
        },
        "std::_Tree<std::_Tmap_traits<CefStringBase<CefStringTraitsUTF16>,CefStringBase<CefStringTraitsUTF16>,std::less<CefStringBase<CefStringTraitsUTF16> >,std::allocator<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > >,1> >::_Emplace<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > >": {
            "offset": "0x11A30"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,msgpack::v2::object,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1CDF0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Copy_nodes<0>": {
            "offset": "0x117E0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x11B90"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x24360"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x293E0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14180"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Find_hint<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1CC50"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1CDF0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Find_upper_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1CEC0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::_Getal": {
            "offset": "0x13040"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1> >": {
            "offset": "0x123E0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14180"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > >,0> >::_Erase": {
            "offset": "0x190D0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_hint<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x2960"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_lower_bound<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x2BE0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >": {
            "offset": "0xA450"
        },
        "std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >": {
            "offset": "0x14E60"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > >": {
            "offset": "0x122F0"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x12330"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > >": {
            "offset": "0x12280"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object>,void *> > >": {
            "offset": "0x1EC40"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x122A0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >,void *> > >": {
            "offset": "0x14DB0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >,void *> > >": {
            "offset": "0x11D60"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > >::_Insert_node": {
            "offset": "0xCEF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,msgpack::v2::object> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,msgpack::v2::object>,void *> > >": {
            "offset": "0x2900"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,msgpack::v2::object> > >::_Insert_node": {
            "offset": "0xCEF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object>,void *> > >": {
            "offset": "0x1CB90"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object> > >::_Insert_node": {
            "offset": "0xCEF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x11DE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x11DE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0xCEF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >,void *> > >": {
            "offset": "0x14310"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > > >::_Extract": {
            "offset": "0x19280"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > > >::_Insert_node": {
            "offset": "0xCEF0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > > >::_Lrotate": {
            "offset": "0x19830"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > > >::_Rrotate": {
            "offset": "0x19890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x2900"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Insert_node": {
            "offset": "0xCEF0"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > >::~_Uninitialized_backout_al<std::allocator<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> > >": {
            "offset": "0x14EA0"
        },
        "std::_Uninitialized_move<Header *,std::allocator<Header> >": {
            "offset": "0x248A0"
        },
        "std::_Xlen_string": {
            "offset": "0xD190"
        },
        "std::allocator<Header>::allocate": {
            "offset": "0x199D0"
        },
        "std::allocator<Header>::deallocate": {
            "offset": "0x19AD0"
        },
        "std::allocator<char>::allocate": {
            "offset": "0xD1B0"
        },
        "std::allocator<char>::deallocate": {
            "offset": "0x130F0"
        },
        "std::allocator<msgpack::v1::adaptor::object_with_zone<msgpack::v2::object,void>::object_with_zone_visitor::elem>::deallocate": {
            "offset": "0x22AA0"
        },
        "std::allocator<msgpack::v1::object_parser::elem>::deallocate": {
            "offset": "0x22A50"
        },
        "std::allocator<msgpack::v2::object>::allocate": {
            "offset": "0x22890"
        },
        "std::allocator<msgpack::v2::object>::deallocate": {
            "offset": "0x22A50"
        },
        "std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >::allocate": {
            "offset": "0x272D0"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate": {
            "offset": "0x27340"
        },
        "std::allocator<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >::allocate": {
            "offset": "0x199D0"
        },
        "std::allocator<std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >::deallocate": {
            "offset": "0x19AD0"
        },
        "std::allocator<unsigned char>::deallocate": {
            "offset": "0x130F0"
        },
        "std::allocator<wchar_t>::allocate": {
            "offset": "0xD210"
        },
        "std::bad_alloc::bad_alloc": {
            "offset": "0xA1B0"
        },
        "std::bad_alloc::~bad_alloc": {
            "offset": "0xA640"
        },
        "std::bad_array_new_length::bad_array_new_length": {
            "offset": "0xA230"
        },
        "std::bad_array_new_length::~bad_array_new_length": {
            "offset": "0xA640"
        },
        "std::bad_cast::bad_cast": {
            "offset": "0x19C20"
        },
        "std::bad_cast::~bad_cast": {
            "offset": "0xA640"
        },
        "std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x12600"
        },
        "std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x12640"
        },
        "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x37D30"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>": {
            "offset": "0x2840"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_from_iter<boost::iterators::transform_iterator<boost::algorithm::detail::to_lowerF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::use_default,boost::use_default>,boost::iterators::transform_iterator<boost::algorithm::detail::to_lowerF<char>,std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >,boost::use_default,boost::use_default>,std::nullptr_t>": {
            "offset": "0x24130"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>": {
            "offset": "0x35840"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>": {
            "offset": "0x14390"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >": {
            "offset": "0x359B0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate": {
            "offset": "0xA510"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append": {
            "offset": "0x19A40"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign": {
            "offset": "0xD400"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x9FD0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find": {
            "offset": "0x2F8E0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0xA510"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>": {
            "offset": "0x2FDF0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append": {
            "offset": "0xD280"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x34870"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::push_back": {
            "offset": "0x378E0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve": {
            "offset": "0x37A40"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0xA570"
        },
        "std::basic_string_view<char,std::char_traits<char> >::basic_string_view<char,std::char_traits<char> >": {
            "offset": "0x1E8A0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow": {
            "offset": "0x13140"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail": {
            "offset": "0x132B0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff": {
            "offset": "0x13410"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos": {
            "offset": "0x13590"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str": {
            "offset": "0x19B20"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow": {
            "offset": "0x13340"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x14F00"
        },
        "std::deque<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Growmap": {
            "offset": "0x19650"
        },
        "std::deque<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Xlen": {
            "offset": "0x199B0"
        },
        "std::deque<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~deque<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >": {
            "offset": "0x14FD0"
        },
        "std::distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >": {
            "offset": "0x14520"
        },
        "std::exception::exception": {
            "offset": "0xA260"
        },
        "std::exception::what": {
            "offset": "0xE2E0"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> >": {
            "offset": "0x2A580"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > > > > >": {
            "offset": "0x2A580"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,scrBindPointer *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,scrBindPointer *> > > > >": {
            "offset": "0x2A580"
        },
        "std::function<bool __cdecl(char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &)>::~function<bool __cdecl(char const *,scoped_refptr<CefRequest>,scoped_refptr<CefResourceHandler> &)>": {
            "offset": "0x122C0"
        },
        "std::function<bool __cdecl(fx::Resource *)>::~function<bool __cdecl(fx::Resource *)>": {
            "offset": "0x122C0"
        },
        "std::function<bool __cdecl(fx::ResourceManager *)>::~function<bool __cdecl(fx::ResourceManager *)>": {
            "offset": "0x122C0"
        },
        "std::function<bool __cdecl(std::function<void __cdecl(bool,char const *,unsigned __int64)>)>::~function<bool __cdecl(std::function<void __cdecl(bool,char const *,unsigned __int64)>)>": {
            "offset": "0x122C0"
        },
        "std::function<bool __cdecl(void)>::~function<bool __cdecl(void)>": {
            "offset": "0x122C0"
        },
        "std::function<std::basic_string<char,std::char_traits<char>,std::allocator<char> > __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~function<std::basic_string<char,std::char_traits<char>,std::allocator<char> > __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(bool,char const *,unsigned __int64)>::~function<void __cdecl(bool,char const *,unsigned __int64)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(fwRefContainer<fx::Resource> const &)>::~function<void __cdecl(fwRefContainer<fx::Resource> const &)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(fx::ScriptContext &)>::~function<void __cdecl(fx::ScriptContext &)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x14A60"
        },
        "std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(msgpack::v1::object_handle const &)>::~function<void __cdecl(msgpack::v1::object_handle const &)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>": {
            "offset": "0x14A60"
        },
        "std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>::~function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(std::basic_string_view<char,std::char_traits<char> >)>::~function<void __cdecl(std::basic_string_view<char,std::char_traits<char> >)>": {
            "offset": "0x122C0"
        },
        "std::function<void __cdecl(void)>::function<void __cdecl(void)>": {
            "offset": "0x14A60"
        },
        "std::function<void __cdecl(void)>::function<void __cdecl(void)><<lambda_77ed9a324e4b2abd68f43d246a32c7f7>,0>": {
            "offset": "0x13AE0"
        },
        "std::function<void __cdecl(void)>::~function<void __cdecl(void)>": {
            "offset": "0x122C0"
        },
        "std::invoke<<lambda_a42a420bbf43ca5819d2955dc9976395> const &,std::function<void __cdecl(bool,char const *,unsigned __int64)> &>": {
            "offset": "0x14590"
        },
        "std::list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x2B410"
        },
        "std::locale::~locale": {
            "offset": "0x25360"
        },
        "std::map<int,msgpack::v2::object,std::less<int>,std::allocator<std::pair<int const ,msgpack::v2::object> > >::~map<int,msgpack::v2::object,std::less<int>,std::allocator<std::pair<int const ,msgpack::v2::object> > >": {
            "offset": "0xA450"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,msgpack::v2::object,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,msgpack::v2::object,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object> > >": {
            "offset": "0x1EC60"
        },
        "std::multimap<CefStringBase<CefStringTraitsUTF16>,CefStringBase<CefStringTraitsUTF16>,std::less<CefStringBase<CefStringTraitsUTF16> >,std::allocator<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > >::~multimap<CefStringBase<CefStringTraitsUTF16>,CefStringBase<CefStringTraitsUTF16>,std::less<CefStringBase<CefStringTraitsUTF16> >,std::allocator<std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> > > >": {
            "offset": "0x123B0"
        },
        "std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x14AE0"
        },
        "std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x123E0"
        },
        "std::numpunct<char>::do_decimal_point": {
            "offset": "0x12D80"
        },
        "std::numpunct<char>::do_falsename": {
            "offset": "0x33A60"
        },
        "std::numpunct<char>::do_grouping": {
            "offset": "0x33AA0"
        },
        "std::numpunct<char>::do_thousands_sep": {
            "offset": "0x12DA0"
        },
        "std::numpunct<char>::do_truename": {
            "offset": "0x33AE0"
        },
        "std::numpunct<char>::numpunct<char>": {
            "offset": "0x33180"
        },
        "std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x14DD0"
        },
        "std::pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >::~pair<CefStringBase<CefStringTraitsUTF16> const ,CefStringBase<CefStringTraitsUTF16> >": {
            "offset": "0x12410"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,msgpack::v2::object>": {
            "offset": "0xA510"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x1EC90"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::function<void __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::optional<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::function<void __cdecl(int,std::multimap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>)> >": {
            "offset": "0x150F0"
        },
        "std::runtime_error::runtime_error": {
            "offset": "0xA2E0"
        },
        "std::runtime_error::~runtime_error": {
            "offset": "0xA640"
        },
        "std::unique_lock<std::mutex>::~unique_lock<std::mutex>": {
            "offset": "0x124D0"
        },
        "std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >": {
            "offset": "0x25170"
        },
        "std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x2AAE0"
        },
        "std::use_facet<std::ctype<char> >": {
            "offset": "0x25040"
        },
        "std::use_facet<std::numpunct<char> >": {
            "offset": "0x32E50"
        },
        "utf8::exception::exception": {
            "offset": "0x36BD0"
        },
        "utf8::internal::append<std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,char>": {
            "offset": "0x35C50"
        },
        "utf8::internal::validate_next<std::_String_view_iterator<std::char_traits<char> > >": {
            "offset": "0x36580"
        },
        "utf8::invalid_code_point::invalid_code_point": {
            "offset": "0x36C60"
        },
        "utf8::invalid_code_point::what": {
            "offset": "0x37BF0"
        },
        "utf8::invalid_code_point::~invalid_code_point": {
            "offset": "0xA640"
        },
        "utf8::invalid_utf8::invalid_utf8": {
            "offset": "0x36CD0"
        },
        "utf8::invalid_utf8::what": {
            "offset": "0x37C00"
        },
        "utf8::invalid_utf8::~invalid_utf8": {
            "offset": "0xA640"
        },
        "utf8::not_enough_room::not_enough_room": {
            "offset": "0x36D30"
        },
        "utf8::not_enough_room::what": {
            "offset": "0x37C10"
        },
        "utf8::not_enough_room::~not_enough_room": {
            "offset": "0xA640"
        },
        "va<int>": {
            "offset": "0x1E830"
        },
        "va_impl<char,fmt::v8::basic_format_args<fmt::v8::basic_printf_context<fmt::v8::appender,char> > >": {
            "offset": "0x36360"
        },
        "vva": {
            "offset": "0x37BD0"
        },
        "xbr::`dynamic initializer for 'kGameBuildUniquifiers''": {
            "offset": "0x1060"
        }
    }
}