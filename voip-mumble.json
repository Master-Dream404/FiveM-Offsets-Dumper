{
    "voip-mumble.dll": {
        "<lambda_0286c8cc0bbcd4326c0acf741a57c87b>::~<lambda_0286c8cc0bbcd4326c0acf741a57c87b>": {
            "offset": "0x2E740"
        },
        "<lambda_23c0cf0acdfc3519856bf56e1453e954>::~<lambda_23c0cf0acdfc3519856bf56e1453e954>": {
            "offset": "0x4B5F0"
        },
        "<lambda_38fba74436ecf3bf78c454676fcd3443>::~<lambda_38fba74436ecf3bf78c454676fcd3443>": {
            "offset": "0x2E740"
        },
        "<lambda_41af1ba482b752c39807db2ef15caf48>::~<lambda_41af1ba482b752c39807db2ef15caf48>": {
            "offset": "0xAEB0"
        },
        "<lambda_4bd345ce870bcb6a9dba57dde6595eaf>::<lambda_4bd345ce870bcb6a9dba57dde6595eaf>": {
            "offset": "0x36C80"
        },
        "<lambda_661cf946c44d564d9d8328428eebf5b3>::~<lambda_661cf946c44d564d9d8328428eebf5b3>": {
            "offset": "0x4B5F0"
        },
        "<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>::~<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>": {
            "offset": "0x2E740"
        },
        "<lambda_72ae5b0e2f813e08b01a5e2876e67561>::~<lambda_72ae5b0e2f813e08b01a5e2876e67561>": {
            "offset": "0x2E500"
        },
        "<lambda_7604da78e8f33a312c72ae5a43f9b93b>::~<lambda_7604da78e8f33a312c72ae5a43f9b93b>": {
            "offset": "0x2E500"
        },
        "<lambda_814d5e0b3a45fa1dd158672480f6c4ca>::~<lambda_814d5e0b3a45fa1dd158672480f6c4ca>": {
            "offset": "0x2E500"
        },
        "<lambda_a69309e0c823914011e2aae155f1013a>::~<lambda_a69309e0c823914011e2aae155f1013a>": {
            "offset": "0x39C40"
        },
        "<lambda_ae1820e88319543fcdff312802cf5054>::~<lambda_ae1820e88319543fcdff312802cf5054>": {
            "offset": "0x4B5F0"
        },
        "<lambda_bcb7b37d4c55e20bb9d3e908315e846e>::~<lambda_bcb7b37d4c55e20bb9d3e908315e846e>": {
            "offset": "0x39C40"
        },
        "<lambda_be3e5d9dce35d2c8dbfa8485373731d5>::~<lambda_be3e5d9dce35d2c8dbfa8485373731d5>": {
            "offset": "0x39C40"
        },
        "<lambda_bf7610c50ebb1884e5917f6a81016c78>::~<lambda_bf7610c50ebb1884e5917f6a81016c78>": {
            "offset": "0xAEB0"
        },
        "<lambda_f01dba74b8b10791d3f7ed2797e705be>::~<lambda_f01dba74b8b10791d3f7ed2797e705be>": {
            "offset": "0x2E740"
        },
        "<lambda_f17ebabe33bc32be107ce6fff046b802>::~<lambda_f17ebabe33bc32be107ce6fff046b802>": {
            "offset": "0x2E500"
        },
        "<lambda_f25c37099038263181b5186a3fa41b37>::~<lambda_f25c37099038263181b5186a3fa41b37>": {
            "offset": "0x4B640"
        },
        "<lambda_fddefaf59461a546e03abd3f44b4cb16>::~<lambda_fddefaf59461a546e03abd3f44b4cb16>": {
            "offset": "0x4B5F0"
        },
        "AnalysisUpdateC": {
            "offset": "0x172F20"
        },
        "BinarySpectrumFix": {
            "offset": "0x159FC0"
        },
        "BinarySpectrumFloat": {
            "offset": "0x15A3D0"
        },
        "BitCountComparison": {
            "offset": "0x1685E0"
        },
        "CalcLinearEnergiesC": {
            "offset": "0x16F0B0"
        },
        "CfxState::CfxState": {
            "offset": "0x63440"
        },
        "CmpFloat": {
            "offset": "0x13E7C0"
        },
        "ComfortNoise": {
            "offset": "0x13E7E0"
        },
        "Component::As": {
            "offset": "0xF770"
        },
        "Component::IsA": {
            "offset": "0xF830"
        },
        "Component::SetCommandLine": {
            "offset": "0xAD90"
        },
        "Component::SetUserData": {
            "offset": "0xF840"
        },
        "ComponentInstance::DoGameLoad": {
            "offset": "0xF810"
        },
        "ComponentInstance::Initialize": {
            "offset": "0xF820"
        },
        "ComponentInstance::Shutdown": {
            "offset": "0xF840"
        },
        "ConVar<bool>::ConVar<bool>": {
            "offset": "0x2DD40"
        },
        "ConVar<bool>::~ConVar<bool>": {
            "offset": "0x2E530"
        },
        "ConVar<int>::ConVar<int>": {
            "offset": "0x2DBB0"
        },
        "ConVar<int>::~ConVar<int>": {
            "offset": "0x2E530"
        },
        "Concurrency::cancellation_token::~cancellation_token": {
            "offset": "0x4CEE0"
        },
        "Concurrency::concurrent_queue<std::tuple<unsigned int,std::array<float,3> >,std::allocator<std::tuple<unsigned int,std::array<float,3> > > >::_Allocate_page": {
            "offset": "0x549E0"
        },
        "Concurrency::concurrent_queue<std::tuple<unsigned int,std::array<float,3> >,std::allocator<std::tuple<unsigned int,std::array<float,3> > > >::_Assign_and_destroy_item": {
            "offset": "0x54A70"
        },
        "Concurrency::concurrent_queue<std::tuple<unsigned int,std::array<float,3> >,std::allocator<std::tuple<unsigned int,std::array<float,3> > > >::_Copy_item": {
            "offset": "0x55650"
        },
        "Concurrency::concurrent_queue<std::tuple<unsigned int,std::array<float,3> >,std::allocator<std::tuple<unsigned int,std::array<float,3> > > >::_Deallocate_page": {
            "offset": "0x55AE0"
        },
        "Concurrency::concurrent_queue<std::tuple<unsigned int,std::array<float,3> >,std::allocator<std::tuple<unsigned int,std::array<float,3> > > >::_Move_item": {
            "offset": "0x55650"
        },
        "Concurrency::concurrent_queue<std::tuple<unsigned int,std::array<float,3> >,std::allocator<std::tuple<unsigned int,std::array<float,3> > > >::~concurrent_queue<std::tuple<unsigned int,std::array<float,3> >,std::allocator<std::tuple<unsigned int,std::array<float,3> > > >": {
            "offset": "0x4BED0"
        },
        "Concurrency::details::_CancellationTokenCallback<<lambda_be3e5d9dce35d2c8dbfa8485373731d5> >::_Exec": {
            "offset": "0x56AA0"
        },
        "Concurrency::details::_CancellationTokenRegistration::_Invoke": {
            "offset": "0x570C0"
        },
        "Concurrency::details::_CancellationTokenState::_DeregisterCallback": {
            "offset": "0x55D50"
        },
        "Concurrency::details::_CancellationTokenState::_RegisterCallback": {
            "offset": "0x57510"
        },
        "Concurrency::details::_ContextCallback::~_ContextCallback": {
            "offset": "0x4CC10"
        },
        "Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore::_Callback": {
            "offset": "0x54B00"
        },
        "Concurrency::details::_DefaultPPLTaskScheduler::schedule": {
            "offset": "0x599B0"
        },
        "Concurrency::details::_ExceptionHolder::~_ExceptionHolder": {
            "offset": "0x4CC30"
        },
        "Concurrency::details::_RefCounter::_Destroy": {
            "offset": "0x11E50"
        },
        "Concurrency::details::_ScheduleFuncWithAutoInline": {
            "offset": "0x57BC0"
        },
        "Concurrency::details::_TaskCollectionBaseImpl::_Complete": {
            "offset": "0x55080"
        },
        "Concurrency::details::_TaskCollectionBaseImpl::~_TaskCollectionBaseImpl": {
            "offset": "0x4CD10"
        },
        "Concurrency::details::_TaskCreationCallstack::_TaskCreationCallstack": {
            "offset": "0x4B3A0"
        },
        "Concurrency::details::_TaskCreationCallstack::~_TaskCreationCallstack": {
            "offset": "0x4CD80"
        },
        "Concurrency::details::_TaskProcHandle::_RunChoreBridge": {
            "offset": "0x579C0"
        },
        "Concurrency::details::_TaskProcThunk::_Bridge": {
            "offset": "0x54AA0"
        },
        "Concurrency::details::_TaskProcThunk::_Holder::~_Holder": {
            "offset": "0x4CCC0"
        },
        "Concurrency::details::_Task_impl<MumbleConnectionInfo *>::_CancelAndRunContinuations": {
            "offset": "0x54CE0"
        },
        "Concurrency::details::_Task_impl<MumbleConnectionInfo *>::_FinalizeAndRunContinuations": {
            "offset": "0x57000"
        },
        "Concurrency::details::_Task_impl<unsigned char>::_CancelAndRunContinuations": {
            "offset": "0x54B40"
        },
        "Concurrency::details::_Task_impl<unsigned char>::_FinalizeAndRunContinuations": {
            "offset": "0x56F40"
        },
        "Concurrency::details::_Task_impl_base::_CancelWithException": {
            "offset": "0x54E80"
        },
        "Concurrency::details::_Task_impl_base::_RegisterCancellation": {
            "offset": "0x575E0"
        },
        "Concurrency::details::_Task_impl_base::_RunTaskContinuations": {
            "offset": "0x57A00"
        },
        "Concurrency::details::_Task_impl_base::_ScheduleContinuationTask": {
            "offset": "0x57B10"
        },
        "Concurrency::details::_Task_impl_base::_ScheduleTask": {
            "offset": "0x57D10"
        },
        "Concurrency::details::_Task_impl_base::_Task_impl_base": {
            "offset": "0x4B460"
        },
        "Concurrency::details::_Task_impl_base::~_Task_impl_base": {
            "offset": "0x4CDE0"
        },
        "Concurrency::get_ambient_scheduler": {
            "offset": "0x58AB0"
        },
        "Concurrency::scheduler_ptr::~scheduler_ptr": {
            "offset": "0x2E740"
        },
        "Concurrency::task<MumbleConnectionInfo *>::_CreateImpl": {
            "offset": "0x558B0"
        },
        "Concurrency::task<MumbleConnectionInfo *>::task<MumbleConnectionInfo *><Concurrency::task_completion_event<MumbleConnectionInfo *> >": {
            "offset": "0x44520"
        },
        "Concurrency::task<unsigned char>::_CreateImpl": {
            "offset": "0x55680"
        },
        "Concurrency::task<unsigned char>::~task<unsigned char>": {
            "offset": "0x2E740"
        },
        "Concurrency::task<void>::task<void><Concurrency::task_completion_event<void> >": {
            "offset": "0x44760"
        },
        "Concurrency::task_completion_event<MumbleConnectionInfo *>::_RegisterTask": {
            "offset": "0x57850"
        },
        "Concurrency::task_completion_event<MumbleConnectionInfo *>::set": {
            "offset": "0x5A1C0"
        },
        "Concurrency::task_completion_event<MumbleConnectionInfo *>::task_completion_event<MumbleConnectionInfo *>": {
            "offset": "0x4AD80"
        },
        "Concurrency::task_completion_event<MumbleConnectionInfo *>::~task_completion_event<MumbleConnectionInfo *>": {
            "offset": "0x2E740"
        },
        "Concurrency::task_completion_event<unsigned char>::_RegisterTask": {
            "offset": "0x57740"
        },
        "Concurrency::task_completion_event<unsigned char>::set": {
            "offset": "0x5A000"
        },
        "Concurrency::task_completion_event<void>::~task_completion_event<void>": {
            "offset": "0x2E740"
        },
        "Concurrency::task_options::~task_options": {
            "offset": "0x4CF30"
        },
        "ConsoleArgumentType<bool,void>::Parse": {
            "offset": "0x33610"
        },
        "ConsoleArgumentType<int,void>::Parse": {
            "offset": "0x33580"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_2729e31fb8c726b5ef153dd449ae69e5> >": {
            "offset": "0x2B670"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_41af1ba482b752c39807db2ef15caf48> >": {
            "offset": "0x2B850"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_bf7610c50ebb1884e5917f6a81016c78> >": {
            "offset": "0x2BAB0"
        },
        "ConsoleCommand::ConsoleCommand<<lambda_cd07e93ce4e084374db77c62c4f7d117> >": {
            "offset": "0x2BD10"
        },
        "ConsoleCommand::~ConsoleCommand": {
            "offset": "0x2E940"
        },
        "ConsoleFlagsToString": {
            "offset": "0x30EF0"
        },
        "ConvertLikelihood": {
            "offset": "0x31210"
        },
        "CoreGetComponentRegistry": {
            "offset": "0xBFC0"
        },
        "CoreGetGlobalInstanceRegistry": {
            "offset": "0xC050"
        },
        "CreateComponent": {
            "offset": "0xF850"
        },
        "CreateMumbleClient": {
            "offset": "0x51840"
        },
        "CreateVariableEntry<bool>": {
            "offset": "0x2CB20"
        },
        "CreateVariableEntry<int>": {
            "offset": "0x2C840"
        },
        "Dbfs2Loudness": {
            "offset": "0x16CA30"
        },
        "DenormalizeC": {
            "offset": "0x172FF0"
        },
        "DllMain": {
            "offset": "0x1B1AD4"
        },
        "DoNtRaiseException": {
            "offset": "0x65D00"
        },
        "DuckingOptOut": {
            "offset": "0xEE60"
        },
        "DuckingOptOutInner": {
            "offset": "0xEEA0"
        },
        "DuckingOptOutOuter": {
            "offset": "0xEFA0"
        },
        "EstBufDelayExtended": {
            "offset": "0x15F2F0"
        },
        "EstBufDelayNormal": {
            "offset": "0x15F420"
        },
        "EstimateSkew": {
            "offset": "0x16E7D0"
        },
        "FatalErrorNoExceptRealV": {
            "offset": "0xC460"
        },
        "FatalErrorRealV": {
            "offset": "0xC490"
        },
        "FilterAdaptation": {
            "offset": "0x140150"
        },
        "FilterAdaptationSSE2": {
            "offset": "0x1568C0"
        },
        "FilterFar": {
            "offset": "0x140A90"
        },
        "FilterFarSSE2": {
            "offset": "0x156AD0"
        },
        "FilterFrame": {
            "offset": "0x1866C0"
        },
        "FilterSegment": {
            "offset": "0x186B60"
        },
        "FormatErrorPickup<std::tuple<std::basic_string_view<char,std::char_traits<char> >,int,unsigned int> >": {
            "offset": "0x2BC0"
        },
        "GetAbsoluteCitPath": {
            "offset": "0x63E00"
        },
        "GetCPUInfo": {
            "offset": "0x15AFA0"
        },
        "GetCPUInfoNoASM": {
            "offset": "0xF770"
        },
        "GetMMDeviceFromGUID": {
            "offset": "0xEFB0"
        },
        "GetStringProp": {
            "offset": "0xF5B0"
        },
        "GetSubframesPitchParameters": {
            "offset": "0x178390"
        },
        "GlobalErrorHandler": {
            "offset": "0xC6D0"
        },
        "GmmProbability": {
            "offset": "0x1763A0"
        },
        "HookFunctionBase::RunAll": {
            "offset": "0x67080"
        },
        "HostSharedData<CfxState>::HostSharedData<CfxState>": {
            "offset": "0x62FA0"
        },
        "HostSharedData<CfxState>::~HostSharedData<CfxState>": {
            "offset": "0x63500"
        },
        "IMumbleClient::~IMumbleClient": {
            "offset": "0x4C3B0"
        },
        "InitDefaultsscc_info_ACL_ChanACL_Mumble_2eproto": {
            "offset": "0xF8C0"
        },
        "InitDefaultsscc_info_ACL_ChanGroup_Mumble_2eproto": {
            "offset": "0xF900"
        },
        "InitDefaultsscc_info_ACL_Mumble_2eproto": {
            "offset": "0xF880"
        },
        "InitDefaultsscc_info_Authenticate_Mumble_2eproto": {
            "offset": "0xF940"
        },
        "InitDefaultsscc_info_BanList_BanEntry_Mumble_2eproto": {
            "offset": "0xFA20"
        },
        "InitDefaultsscc_info_BanList_Mumble_2eproto": {
            "offset": "0xF980"
        },
        "InitDefaultsscc_info_ChannelRemove_Mumble_2eproto": {
            "offset": "0xFA60"
        },
        "InitDefaultsscc_info_ChannelState_Mumble_2eproto": {
            "offset": "0xFAC0"
        },
        "InitDefaultsscc_info_CodecVersion_Mumble_2eproto": {
            "offset": "0xFB00"
        },
        "InitDefaultsscc_info_ContextActionModify_Mumble_2eproto": {
            "offset": "0xFC00"
        },
        "InitDefaultsscc_info_ContextAction_Mumble_2eproto": {
            "offset": "0xFB60"
        },
        "InitDefaultsscc_info_CryptSetup_Mumble_2eproto": {
            "offset": "0xFC40"
        },
        "InitDefaultsscc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD71E0"
        },
        "InitDefaultsscc_info_DescriptorProto_ReservedRange_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7280"
        },
        "InitDefaultsscc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7190"
        },
        "InitDefaultsscc_info_EnumDescriptorProto_EnumReservedRange_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7330"
        },
        "InitDefaultsscc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD72E0"
        },
        "InitDefaultsscc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7390"
        },
        "InitDefaultsscc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD73D0"
        },
        "InitDefaultsscc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7420"
        },
        "InitDefaultsscc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7460"
        },
        "InitDefaultsscc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD74A0"
        },
        "InitDefaultsscc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD74F0"
        },
        "InitDefaultsscc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7530"
        },
        "InitDefaultsscc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7590"
        },
        "InitDefaultsscc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7620"
        },
        "InitDefaultsscc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7740"
        },
        "InitDefaultsscc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD76B0"
        },
        "InitDefaultsscc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7780"
        },
        "InitDefaultsscc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD77C0"
        },
        "InitDefaultsscc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7810"
        },
        "InitDefaultsscc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7850"
        },
        "InitDefaultsscc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD78A0"
        },
        "InitDefaultsscc_info_PermissionDenied_Mumble_2eproto": {
            "offset": "0xFCE0"
        },
        "InitDefaultsscc_info_PermissionQuery_Mumble_2eproto": {
            "offset": "0xFD20"
        },
        "InitDefaultsscc_info_Ping_Mumble_2eproto": {
            "offset": "0xFD80"
        },
        "InitDefaultsscc_info_QueryUsers_Mumble_2eproto": {
            "offset": "0xFDF0"
        },
        "InitDefaultsscc_info_Reject_Mumble_2eproto": {
            "offset": "0xFE30"
        },
        "InitDefaultsscc_info_RequestBlob_Mumble_2eproto": {
            "offset": "0xFE70"
        },
        "InitDefaultsscc_info_ServerConfig_Mumble_2eproto": {
            "offset": "0xFF00"
        },
        "InitDefaultsscc_info_ServerSync_Mumble_2eproto": {
            "offset": "0xFF40"
        },
        "InitDefaultsscc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD78E0"
        },
        "InitDefaultsscc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7930"
        },
        "InitDefaultsscc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7A00"
        },
        "InitDefaultsscc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7970"
        },
        "InitDefaultsscc_info_SuggestConfig_Mumble_2eproto": {
            "offset": "0xFFE0"
        },
        "InitDefaultsscc_info_TextMessage_Mumble_2eproto": {
            "offset": "0x10040"
        },
        "InitDefaultsscc_info_UDPTunnel_Mumble_2eproto": {
            "offset": "0x10080"
        },
        "InitDefaultsscc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7A80"
        },
        "InitDefaultsscc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto": {
            "offset": "0xD7A40"
        },
        "InitDefaultsscc_info_UserList_Mumble_2eproto": {
            "offset": "0x10110"
        },
        "InitDefaultsscc_info_UserList_User_Mumble_2eproto": {
            "offset": "0x101A0"
        },
        "InitDefaultsscc_info_UserRemove_Mumble_2eproto": {
            "offset": "0x101E0"
        },
        "InitDefaultsscc_info_UserState_Mumble_2eproto": {
            "offset": "0x10220"
        },
        "InitDefaultsscc_info_UserStats_Mumble_2eproto": {
            "offset": "0x10260"
        },
        "InitDefaultsscc_info_UserStats_Stats_Mumble_2eproto": {
            "offset": "0x102C0"
        },
        "InitDefaultsscc_info_Version_Mumble_2eproto": {
            "offset": "0x10320"
        },
        "InitDefaultsscc_info_VoiceTarget_Mumble_2eproto": {
            "offset": "0x10360"
        },
        "InitDefaultsscc_info_VoiceTarget_Target_Mumble_2eproto": {
            "offset": "0x103A0"
        },
        "InitFunction::Run": {
            "offset": "0x2B4C0"
        },
        "InitFunctionBase::InitFunctionBase": {
            "offset": "0x658F0"
        },
        "InitFunctionBase::Register": {
            "offset": "0x65E70"
        },
        "InitFunctionBase::RunAll": {
            "offset": "0x65EC0"
        },
        "InitMetrics": {
            "offset": "0x140E80"
        },
        "InverseFFTAndWindow": {
            "offset": "0x1815F0"
        },
        "IsWindows8Point1OrGreater": {
            "offset": "0x3F810"
        },
        "LabSoundAssertLog": {
            "offset": "0x192C50"
        },
        "Linear2Loudness": {
            "offset": "0x16CA50"
        },
        "LogOfEnergy": {
            "offset": "0x184E70"
        },
        "Loudness2Db": {
            "offset": "0x16CA80"
        },
        "MakeRelativeCitPath": {
            "offset": "0xCD70"
        },
        "Microsoft::WRL::ComPtr<IAudioCaptureClient>::~ComPtr<IAudioCaptureClient>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IAudioClient>::~ComPtr<IAudioClient>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IAudioSessionControl2>::~ComPtr<IAudioSessionControl2>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IAudioSessionControl>::~ComPtr<IAudioSessionControl>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IAudioSessionManager2>::~ComPtr<IAudioSessionManager2>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IMMDevice>::~ComPtr<IMMDevice>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IMMDeviceCollection>::~ComPtr<IMMDeviceCollection>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IMMDeviceEnumerator>::~ComPtr<IMMDeviceEnumerator>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IPropertyStore>::~ComPtr<IPropertyStore>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<ISimpleAudioVolume>::~ComPtr<ISimpleAudioVolume>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IXAudio2>::~ComPtr<IXAudio2>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<IXAudio2Legacy>::~ComPtr<IXAudio2Legacy>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::ComPtr<XAudio2DownlevelWrap>::~ComPtr<XAudio2DownlevelWrap>": {
            "offset": "0xEE30"
        },
        "Microsoft::WRL::Details::MakeAllocator<XAudio2DownlevelWrap>::~MakeAllocator<XAudio2DownlevelWrap>": {
            "offset": "0x39C60"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IXAudio2>::AddRef": {
            "offset": "0x3BF00"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IXAudio2>::QueryInterface": {
            "offset": "0x411F0"
        },
        "Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,1,IXAudio2>::Release": {
            "offset": "0x412A0"
        },
        "Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IXAudio2>::~RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IXAudio2>": {
            "offset": "0x39C80"
        },
        "MumbleAudioInput::Enable": {
            "offset": "0x31520"
        },
        "MumbleAudioInput::HandleData": {
            "offset": "0x31670"
        },
        "MumbleAudioInput::Initialize": {
            "offset": "0x320D0"
        },
        "MumbleAudioInput::InitializeAudioDevice": {
            "offset": "0x32370"
        },
        "MumbleAudioInput::MumbleAudioInput": {
            "offset": "0x2E3D0"
        },
        "MumbleAudioInput::SendQueuedOpusPackets": {
            "offset": "0x338E0"
        },
        "MumbleAudioInput::SetActivationLikelihood": {
            "offset": "0x33C10"
        },
        "MumbleAudioInput::SetActivationMode": {
            "offset": "0x33C20"
        },
        "MumbleAudioInput::SetAudioDevice": {
            "offset": "0x33C30"
        },
        "MumbleAudioInput::SetPTTButtonState": {
            "offset": "0x33C50"
        },
        "MumbleAudioInput::ThreadFunc": {
            "offset": "0x34210"
        },
        "MumbleAudioInput::ThreadStart": {
            "offset": "0x34630"
        },
        "MumbleAudioInput::~MumbleAudioInput": {
            "offset": "0x4C3C0"
        },
        "MumbleAudioOutput::BaseAudioState::AfterConstruct": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::BaseAudioState::HandleVoiceData": {
            "offset": "0x3E020"
        },
        "MumbleAudioOutput::BaseAudioState::IsTalking": {
            "offset": "0x3F660"
        },
        "MumbleAudioOutput::BaseAudioState::PushPosition": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::BaseAudioState::PushSound": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::BaseAudioState::SetInnerState": {
            "offset": "0x41550"
        },
        "MumbleAudioOutput::BaseAudioState::ShouldManagePoll": {
            "offset": "0xF830"
        },
        "MumbleAudioOutput::BaseAudioState::Valid": {
            "offset": "0xF840"
        },
        "MumbleAudioOutput::BaseAudioState::~BaseAudioState": {
            "offset": "0x3A230"
        },
        "MumbleAudioOutput::ClientAudioState::OnBufferEnd": {
            "offset": "0x3F8D0"
        },
        "MumbleAudioOutput::ClientAudioState::OnBufferStart": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::ClientAudioState::OnLoopEnd": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::ClientAudioState::OnStreamEnd": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::ClientAudioState::OnVoiceError": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::ClientAudioState::OnVoiceProcessingPassEnd": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::ClientAudioState::OnVoiceProcessingPassStart": {
            "offset": "0xAD90"
        },
        "MumbleAudioOutput::ClientAudioState::PushPosition": {
            "offset": "0x406C0"
        },
        "MumbleAudioOutput::ClientAudioState::PushSound": {
            "offset": "0x40EB0"
        },
        "MumbleAudioOutput::ClientAudioState::PushSoundInternal": {
            "offset": "0x411A0"
        },
        "MumbleAudioOutput::ClientAudioState::ShouldManagePoll": {
            "offset": "0xF840"
        },
        "MumbleAudioOutput::ClientAudioState::Valid": {
            "offset": "0x41890"
        },
        "MumbleAudioOutput::ClientAudioState::~ClientAudioState": {
            "offset": "0x3A2B0"
        },
        "MumbleAudioOutput::ClientAudioStateBase::PollAudio": {
            "offset": "0x3F9E0"
        },
        "MumbleAudioOutput::ExternalAudioState::AfterConstruct": {
            "offset": "0x3BF30"
        },
        "MumbleAudioOutput::ExternalAudioState::IsTalking": {
            "offset": "0x3F730"
        },
        "MumbleAudioOutput::ExternalAudioState::PushPosition": {
            "offset": "0x40D70"
        },
        "MumbleAudioOutput::ExternalAudioState::PushSound": {
            "offset": "0x41140"
        },
        "MumbleAudioOutput::ExternalAudioState::Valid": {
            "offset": "0x41940"
        },
        "MumbleAudioOutput::GetAudioContext": {
            "offset": "0x3CB00"
        },
        "MumbleAudioOutput::GetDistance": {
            "offset": "0x3CED0"
        },
        "MumbleAudioOutput::GetTalkers": {
            "offset": "0x3CEF0"
        },
        "MumbleAudioOutput::HandleClientConnect": {
            "offset": "0x3CFC0"
        },
        "MumbleAudioOutput::HandleClientDisconnect": {
            "offset": "0x3D9C0"
        },
        "MumbleAudioOutput::HandleClientDistance": {
            "offset": "0x3DA80"
        },
        "MumbleAudioOutput::HandleClientPosition": {
            "offset": "0x3DBD0"
        },
        "MumbleAudioOutput::HandleClientVoiceData": {
            "offset": "0x3DD40"
        },
        "MumbleAudioOutput::HandleClientVolumeOverride": {
            "offset": "0x3DED0"
        },
        "MumbleAudioOutput::Initialize": {
            "offset": "0x3E320"
        },
        "MumbleAudioOutput::InitializeAudioDevice": {
            "offset": "0x3E770"
        },
        "MumbleAudioOutput::MumbleAudioOutput": {
            "offset": "0x4AE20"
        },
        "MumbleAudioOutput::SetAudioDevice": {
            "offset": "0x41330"
        },
        "MumbleAudioOutput::SetDistance": {
            "offset": "0x41540"
        },
        "MumbleAudioOutput::SetMatrix": {
            "offset": "0x41620"
        },
        "MumbleAudioOutput::SetVolume": {
            "offset": "0x417D0"
        },
        "MumbleAudioOutput::~MumbleAudioOutput": {
            "offset": "0x4C5A0"
        },
        "MumbleChannel::UpdateChannel": {
            "offset": "0x5B360"
        },
        "MumbleChannel::~MumbleChannel": {
            "offset": "0x5AC80"
        },
        "MumbleClient::AddListenChannel": {
            "offset": "0x51420"
        },
        "MumbleClient::ConnectAsync": {
            "offset": "0x51490"
        },
        "MumbleClient::DisconnectAsync": {
            "offset": "0x518C0"
        },
        "MumbleClient::DoesChannelExist": {
            "offset": "0x51CC0"
        },
        "MumbleClient::GetAudioContext": {
            "offset": "0x52000"
        },
        "MumbleClient::GetAudioDistance": {
            "offset": "0x52020"
        },
        "MumbleClient::GetConnectionInfo": {
            "offset": "0x52030"
        },
        "MumbleClient::GetCurrent": {
            "offset": "0x52040"
        },
        "MumbleClient::GetInputAudioLevel": {
            "offset": "0x52080"
        },
        "MumbleClient::GetPlayerNameFromServerId": {
            "offset": "0x52090"
        },
        "MumbleClient::GetTalkers": {
            "offset": "0x52150"
        },
        "MumbleClient::GetVoiceChannelFromServerId": {
            "offset": "0x525C0"
        },
        "MumbleClient::HandlePing": {
            "offset": "0x526A0"
        },
        "MumbleClient::HandleUDP": {
            "offset": "0x52B70"
        },
        "MumbleClient::HandleVoice": {
            "offset": "0x52E80"
        },
        "MumbleClient::Initialize": {
            "offset": "0x53520"
        },
        "MumbleClient::IsAnyoneTalking": {
            "offset": "0x53720"
        },
        "MumbleClient::MarkConnected": {
            "offset": "0x537B0"
        },
        "MumbleClient::MumbleClient": {
            "offset": "0x4AFA0"
        },
        "MumbleClient::OnActivated": {
            "offset": "0x537C0"
        },
        "MumbleClient::OnHandshake": {
            "offset": "0x53BB0"
        },
        "MumbleClient::RemoveListenChannel": {
            "offset": "0x53DF0"
        },
        "MumbleClient::RunFrame": {
            "offset": "0x53E70"
        },
        "MumbleClient::Send": {
            "offset": "0x54140"
        },
        "MumbleClient::Send<MumbleProto::UserState>": {
            "offset": "0x45060"
        },
        "MumbleClient::SendUDP": {
            "offset": "0x54260"
        },
        "MumbleClient::SendVoice": {
            "offset": "0x54490"
        },
        "MumbleClient::SetActivationLikelihood": {
            "offset": "0x544B0"
        },
        "MumbleClient::SetActivationMode": {
            "offset": "0x544C0"
        },
        "MumbleClient::SetAudioDistance": {
            "offset": "0x544F0"
        },
        "MumbleClient::SetAudioInputDistance": {
            "offset": "0x54510"
        },
        "MumbleClient::SetAudioOutputDistance": {
            "offset": "0x54520"
        },
        "MumbleClient::SetChannel": {
            "offset": "0x54530"
        },
        "MumbleClient::SetClientVolumeOverride": {
            "offset": "0x545F0"
        },
        "MumbleClient::SetClientVolumeOverrideByServerId": {
            "offset": "0x54690"
        },
        "MumbleClient::SetInputDevice": {
            "offset": "0x54730"
        },
        "MumbleClient::SetListenerMatrix": {
            "offset": "0x54740"
        },
        "MumbleClient::SetOutputDevice": {
            "offset": "0x547E0"
        },
        "MumbleClient::SetOutputVolume": {
            "offset": "0x547F0"
        },
        "MumbleClient::SetPTTButtonState": {
            "offset": "0x54800"
        },
        "MumbleClient::SetPositionHook": {
            "offset": "0x54810"
        },
        "MumbleClient::SetVoiceTarget": {
            "offset": "0x54820"
        },
        "MumbleClient::UpdateVoiceTarget": {
            "offset": "0x54830"
        },
        "MumbleClient::tls_alert": {
            "offset": "0x5A930"
        },
        "MumbleClient::tls_emit_data": {
            "offset": "0x5AA90"
        },
        "MumbleClient::tls_record_received": {
            "offset": "0x5AC00"
        },
        "MumbleClient::tls_session_activated": {
            "offset": "0x5AC40"
        },
        "MumbleClient::tls_session_established": {
            "offset": "0x5AC50"
        },
        "MumbleClient::tls_verify_cert_chain": {
            "offset": "0xAD90"
        },
        "MumbleClient::~MumbleClient": {
            "offset": "0x4C680"
        },
        "MumbleClientState::ForAllUsers": {
            "offset": "0x51F20"
        },
        "MumbleClientState::GetUser": {
            "offset": "0x52500"
        },
        "MumbleClientState::ProcessChannelState": {
            "offset": "0x5AE10"
        },
        "MumbleClientState::ProcessRemoveChannel": {
            "offset": "0x5B2C0"
        },
        "MumbleClientState::ProcessRemoveUser": {
            "offset": "0x5B690"
        },
        "MumbleClientState::ProcessUserState": {
            "offset": "0x5B820"
        },
        "MumbleClientState::~MumbleClientState": {
            "offset": "0x4CA50"
        },
        "MumbleConnectionInfo::~MumbleConnectionInfo": {
            "offset": "0x4CB00"
        },
        "MumbleCredentialsManager::verify_certificate_chain": {
            "offset": "0xAD90"
        },
        "MumbleCrypto::Decrypt": {
            "offset": "0x5C8A0"
        },
        "MumbleCrypto::Encrypt": {
            "offset": "0x5CC30"
        },
        "MumbleCrypto::IsInitialized": {
            "offset": "0x5CFD0"
        },
        "MumbleCrypto::OCBDecrypt": {
            "offset": "0x5CFE0"
        },
        "MumbleCrypto::SetKey": {
            "offset": "0x5D310"
        },
        "MumbleDataHandler::HandleIncomingData": {
            "offset": "0x5D520"
        },
        "MumbleDataHandler::Reset": {
            "offset": "0x5D630"
        },
        "MumbleDataHandler::~MumbleDataHandler": {
            "offset": "0x4CB70"
        },
        "MumbleMessageHandler::HandleMessage": {
            "offset": "0x5D6B0"
        },
        "MumbleMessageHandlerBase::GetHandlerFor": {
            "offset": "0x5D690"
        },
        "MumbleMessageHandlerBase::MumbleMessageHandlerBase": {
            "offset": "0x5D670"
        },
        "MumbleProto::ACL::ACL": {
            "offset": "0x11E90"
        },
        "MumbleProto::ACL::ByteSizeLong": {
            "offset": "0x14520"
        },
        "MumbleProto::ACL::Clear": {
            "offset": "0x169A0"
        },
        "MumbleProto::ACL::CopyFrom": {
            "offset": "0x17C60"
        },
        "MumbleProto::ACL::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ACL::GetMetadata": {
            "offset": "0x191B0"
        },
        "MumbleProto::ACL::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x197B0"
        },
        "MumbleProto::ACL::IsInitialized": {
            "offset": "0x1CF90"
        },
        "MumbleProto::ACL::MergeFrom": {
            "offset": "0x1DA40"
        },
        "MumbleProto::ACL::New": {
            "offset": "0x225B0"
        },
        "MumbleProto::ACL::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ACL::_InternalParse": {
            "offset": "0x237A0"
        },
        "MumbleProto::ACL_ChanACL::ACL_ChanACL": {
            "offset": "0x11F00"
        },
        "MumbleProto::ACL_ChanACL::ByteSizeLong": {
            "offset": "0x14790"
        },
        "MumbleProto::ACL_ChanACL::Clear": {
            "offset": "0x16B30"
        },
        "MumbleProto::ACL_ChanACL::CopyFrom": {
            "offset": "0x17CD0"
        },
        "MumbleProto::ACL_ChanACL::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ACL_ChanACL::GetMetadata": {
            "offset": "0x191E0"
        },
        "MumbleProto::ACL_ChanACL::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x19AD0"
        },
        "MumbleProto::ACL_ChanACL::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::ACL_ChanACL::MergeFrom": {
            "offset": "0x1DCB0"
        },
        "MumbleProto::ACL_ChanACL::New": {
            "offset": "0x225D0"
        },
        "MumbleProto::ACL_ChanACL::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ACL_ChanACL::_InternalParse": {
            "offset": "0x23C50"
        },
        "MumbleProto::ACL_ChanGroup::ACL_ChanGroup": {
            "offset": "0x11F70"
        },
        "MumbleProto::ACL_ChanGroup::ByteSizeLong": {
            "offset": "0x14880"
        },
        "MumbleProto::ACL_ChanGroup::Clear": {
            "offset": "0x16B90"
        },
        "MumbleProto::ACL_ChanGroup::CopyFrom": {
            "offset": "0x17D40"
        },
        "MumbleProto::ACL_ChanGroup::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ACL_ChanGroup::GetMetadata": {
            "offset": "0x19210"
        },
        "MumbleProto::ACL_ChanGroup::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x19C70"
        },
        "MumbleProto::ACL_ChanGroup::IsInitialized": {
            "offset": "0x1D0E0"
        },
        "MumbleProto::ACL_ChanGroup::MergeFrom": {
            "offset": "0x1DF20"
        },
        "MumbleProto::ACL_ChanGroup::New": {
            "offset": "0x225F0"
        },
        "MumbleProto::ACL_ChanGroup::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ACL_ChanGroup::_InternalParse": {
            "offset": "0x240F0"
        },
        "MumbleProto::Authenticate::Authenticate": {
            "offset": "0x11FF0"
        },
        "MumbleProto::Authenticate::ByteSizeLong": {
            "offset": "0x14990"
        },
        "MumbleProto::Authenticate::Clear": {
            "offset": "0x16C20"
        },
        "MumbleProto::Authenticate::CopyFrom": {
            "offset": "0x17DB0"
        },
        "MumbleProto::Authenticate::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::Authenticate::GetMetadata": {
            "offset": "0x19240"
        },
        "MumbleProto::Authenticate::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x19F40"
        },
        "MumbleProto::Authenticate::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::Authenticate::MergeFrom": {
            "offset": "0x1E1A0"
        },
        "MumbleProto::Authenticate::New": {
            "offset": "0x22610"
        },
        "MumbleProto::Authenticate::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::Authenticate::_InternalParse": {
            "offset": "0x245E0"
        },
        "MumbleProto::Authenticate::~Authenticate": {
            "offset": "0x12B20"
        },
        "MumbleProto::BanList::BanList": {
            "offset": "0x12070"
        },
        "MumbleProto::BanList::ByteSizeLong": {
            "offset": "0x14AC0"
        },
        "MumbleProto::BanList::Clear": {
            "offset": "0x16CB0"
        },
        "MumbleProto::BanList::CopyFrom": {
            "offset": "0x17E20"
        },
        "MumbleProto::BanList::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::BanList::GetMetadata": {
            "offset": "0x19270"
        },
        "MumbleProto::BanList::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1A1B0"
        },
        "MumbleProto::BanList::IsInitialized": {
            "offset": "0x1D0F0"
        },
        "MumbleProto::BanList::MergeFrom": {
            "offset": "0x1E390"
        },
        "MumbleProto::BanList::New": {
            "offset": "0x22630"
        },
        "MumbleProto::BanList::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::BanList::_InternalParse": {
            "offset": "0x249D0"
        },
        "MumbleProto::BanList_BanEntry::BanList_BanEntry": {
            "offset": "0x120D0"
        },
        "MumbleProto::BanList_BanEntry::ByteSizeLong": {
            "offset": "0x14B60"
        },
        "MumbleProto::BanList_BanEntry::Clear": {
            "offset": "0x16DC0"
        },
        "MumbleProto::BanList_BanEntry::CopyFrom": {
            "offset": "0x17E90"
        },
        "MumbleProto::BanList_BanEntry::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::BanList_BanEntry::GetMetadata": {
            "offset": "0x192A0"
        },
        "MumbleProto::BanList_BanEntry::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1A2D0"
        },
        "MumbleProto::BanList_BanEntry::IsInitialized": {
            "offset": "0x1D240"
        },
        "MumbleProto::BanList_BanEntry::MergeFrom": {
            "offset": "0x1E6B0"
        },
        "MumbleProto::BanList_BanEntry::New": {
            "offset": "0x22650"
        },
        "MumbleProto::BanList_BanEntry::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::BanList_BanEntry::SharedDtor": {
            "offset": "0x22A90"
        },
        "MumbleProto::BanList_BanEntry::_InternalParse": {
            "offset": "0x24C80"
        },
        "MumbleProto::ChannelRemove::ByteSizeLong": {
            "offset": "0x14D20"
        },
        "MumbleProto::ChannelRemove::ChannelRemove": {
            "offset": "0x12140"
        },
        "MumbleProto::ChannelRemove::Clear": {
            "offset": "0x16E90"
        },
        "MumbleProto::ChannelRemove::CopyFrom": {
            "offset": "0x17F00"
        },
        "MumbleProto::ChannelRemove::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ChannelRemove::GetMetadata": {
            "offset": "0x192D0"
        },
        "MumbleProto::ChannelRemove::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1A4A0"
        },
        "MumbleProto::ChannelRemove::IsInitialized": {
            "offset": "0x1D0E0"
        },
        "MumbleProto::ChannelRemove::MergeFrom": {
            "offset": "0x1E890"
        },
        "MumbleProto::ChannelRemove::New": {
            "offset": "0x22670"
        },
        "MumbleProto::ChannelRemove::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ChannelRemove::_InternalParse": {
            "offset": "0x25110"
        },
        "MumbleProto::ChannelRemove::~ChannelRemove": {
            "offset": "0x12C50"
        },
        "MumbleProto::ChannelState::ByteSizeLong": {
            "offset": "0x14D60"
        },
        "MumbleProto::ChannelState::ChannelState": {
            "offset": "0x12160"
        },
        "MumbleProto::ChannelState::Clear": {
            "offset": "0x16EC0"
        },
        "MumbleProto::ChannelState::CopyFrom": {
            "offset": "0x17FA0"
        },
        "MumbleProto::ChannelState::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ChannelState::GetMetadata": {
            "offset": "0x19300"
        },
        "MumbleProto::ChannelState::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1A510"
        },
        "MumbleProto::ChannelState::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::ChannelState::MergeFrom": {
            "offset": "0x1EBB0"
        },
        "MumbleProto::ChannelState::New": {
            "offset": "0x22690"
        },
        "MumbleProto::ChannelState::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ChannelState::SharedDtor": {
            "offset": "0x22CC0"
        },
        "MumbleProto::ChannelState::_InternalParse": {
            "offset": "0x25290"
        },
        "MumbleProto::ChannelState::~ChannelState": {
            "offset": "0x12C80"
        },
        "MumbleProto::CodecVersion::ByteSizeLong": {
            "offset": "0x14F70"
        },
        "MumbleProto::CodecVersion::Clear": {
            "offset": "0x16F90"
        },
        "MumbleProto::CodecVersion::CopyFrom": {
            "offset": "0x18010"
        },
        "MumbleProto::CodecVersion::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::CodecVersion::GetMetadata": {
            "offset": "0x19330"
        },
        "MumbleProto::CodecVersion::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1A8F0"
        },
        "MumbleProto::CodecVersion::IsInitialized": {
            "offset": "0x1D250"
        },
        "MumbleProto::CodecVersion::MergeFrom": {
            "offset": "0x1EDB0"
        },
        "MumbleProto::CodecVersion::New": {
            "offset": "0x226B0"
        },
        "MumbleProto::CodecVersion::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::CodecVersion::_InternalParse": {
            "offset": "0x25A50"
        },
        "MumbleProto::ContextAction::ByteSizeLong": {
            "offset": "0x15070"
        },
        "MumbleProto::ContextAction::Clear": {
            "offset": "0x16FD0"
        },
        "MumbleProto::ContextAction::ContextAction": {
            "offset": "0x121F0"
        },
        "MumbleProto::ContextAction::CopyFrom": {
            "offset": "0x180B0"
        },
        "MumbleProto::ContextAction::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ContextAction::GetMetadata": {
            "offset": "0x19360"
        },
        "MumbleProto::ContextAction::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1A9F0"
        },
        "MumbleProto::ContextAction::IsInitialized": {
            "offset": "0x1D0E0"
        },
        "MumbleProto::ContextAction::MergeFrom": {
            "offset": "0x1EFE0"
        },
        "MumbleProto::ContextAction::New": {
            "offset": "0x226D0"
        },
        "MumbleProto::ContextAction::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ContextAction::_InternalParse": {
            "offset": "0x25D30"
        },
        "MumbleProto::ContextActionModify::ByteSizeLong": {
            "offset": "0x15120"
        },
        "MumbleProto::ContextActionModify::Clear": {
            "offset": "0x17030"
        },
        "MumbleProto::ContextActionModify::ContextActionModify": {
            "offset": "0x12250"
        },
        "MumbleProto::ContextActionModify::CopyFrom": {
            "offset": "0x18170"
        },
        "MumbleProto::ContextActionModify::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ContextActionModify::GetMetadata": {
            "offset": "0x19390"
        },
        "MumbleProto::ContextActionModify::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1AAE0"
        },
        "MumbleProto::ContextActionModify::IsInitialized": {
            "offset": "0x1D0E0"
        },
        "MumbleProto::ContextActionModify::MergeFrom": {
            "offset": "0x1F250"
        },
        "MumbleProto::ContextActionModify::New": {
            "offset": "0x226F0"
        },
        "MumbleProto::ContextActionModify::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ContextActionModify::_InternalParse": {
            "offset": "0x26020"
        },
        "MumbleProto::CryptSetup::ByteSizeLong": {
            "offset": "0x15210"
        },
        "MumbleProto::CryptSetup::Clear": {
            "offset": "0x170A0"
        },
        "MumbleProto::CryptSetup::CopyFrom": {
            "offset": "0x181E0"
        },
        "MumbleProto::CryptSetup::CryptSetup": {
            "offset": "0x122C0"
        },
        "MumbleProto::CryptSetup::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::CryptSetup::GetMetadata": {
            "offset": "0x193C0"
        },
        "MumbleProto::CryptSetup::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1AC10"
        },
        "MumbleProto::CryptSetup::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::CryptSetup::MergeFrom": {
            "offset": "0x1F4E0"
        },
        "MumbleProto::CryptSetup::New": {
            "offset": "0x22710"
        },
        "MumbleProto::CryptSetup::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::CryptSetup::SharedDtor": {
            "offset": "0x22E30"
        },
        "MumbleProto::CryptSetup::_InternalParse": {
            "offset": "0x263B0"
        },
        "MumbleProto::CryptSetup::~CryptSetup": {
            "offset": "0x12CD0"
        },
        "MumbleProto::PermissionDenied::ByteSizeLong": {
            "offset": "0x152D0"
        },
        "MumbleProto::PermissionDenied::Clear": {
            "offset": "0x17120"
        },
        "MumbleProto::PermissionDenied::CopyFrom": {
            "offset": "0x18250"
        },
        "MumbleProto::PermissionDenied::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::PermissionDenied::GetMetadata": {
            "offset": "0x193F0"
        },
        "MumbleProto::PermissionDenied::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1ACC0"
        },
        "MumbleProto::PermissionDenied::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::PermissionDenied::MergeFrom": {
            "offset": "0x1F770"
        },
        "MumbleProto::PermissionDenied::New": {
            "offset": "0x22730"
        },
        "MumbleProto::PermissionDenied::PermissionDenied": {
            "offset": "0x12320"
        },
        "MumbleProto::PermissionDenied::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::PermissionDenied::_InternalParse": {
            "offset": "0x26570"
        },
        "MumbleProto::PermissionQuery::ByteSizeLong": {
            "offset": "0x15410"
        },
        "MumbleProto::PermissionQuery::Clear": {
            "offset": "0x17190"
        },
        "MumbleProto::PermissionQuery::CopyFrom": {
            "offset": "0x182C0"
        },
        "MumbleProto::PermissionQuery::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::PermissionQuery::GetMetadata": {
            "offset": "0x19420"
        },
        "MumbleProto::PermissionQuery::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1AE40"
        },
        "MumbleProto::PermissionQuery::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::PermissionQuery::MergeFrom": {
            "offset": "0x1F970"
        },
        "MumbleProto::PermissionQuery::New": {
            "offset": "0x22750"
        },
        "MumbleProto::PermissionQuery::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::PermissionQuery::_InternalParse": {
            "offset": "0x26AA0"
        },
        "MumbleProto::Ping::ByteSizeLong": {
            "offset": "0x15490"
        },
        "MumbleProto::Ping::Clear": {
            "offset": "0x171C0"
        },
        "MumbleProto::Ping::CopyFrom": {
            "offset": "0x18360"
        },
        "MumbleProto::Ping::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::Ping::GetMetadata": {
            "offset": "0x19450"
        },
        "MumbleProto::Ping::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1AF10"
        },
        "MumbleProto::Ping::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::Ping::MergeFrom": {
            "offset": "0x1FBD0"
        },
        "MumbleProto::Ping::New": {
            "offset": "0x22770"
        },
        "MumbleProto::Ping::Ping": {
            "offset": "0x12390"
        },
        "MumbleProto::Ping::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::Ping::_InternalParse": {
            "offset": "0x26D20"
        },
        "MumbleProto::Ping::~Ping": {
            "offset": "0x12D30"
        },
        "MumbleProto::QueryUsers::ByteSizeLong": {
            "offset": "0x15600"
        },
        "MumbleProto::QueryUsers::Clear": {
            "offset": "0x17210"
        },
        "MumbleProto::QueryUsers::CopyFrom": {
            "offset": "0x18420"
        },
        "MumbleProto::QueryUsers::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::QueryUsers::GetMetadata": {
            "offset": "0x19480"
        },
        "MumbleProto::QueryUsers::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1B130"
        },
        "MumbleProto::QueryUsers::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::QueryUsers::MergeFrom": {
            "offset": "0x1FDC0"
        },
        "MumbleProto::QueryUsers::New": {
            "offset": "0x22790"
        },
        "MumbleProto::QueryUsers::QueryUsers": {
            "offset": "0x123C0"
        },
        "MumbleProto::QueryUsers::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::QueryUsers::_InternalParse": {
            "offset": "0x27250"
        },
        "MumbleProto::Reject::ByteSizeLong": {
            "offset": "0x156C0"
        },
        "MumbleProto::Reject::Clear": {
            "offset": "0x17260"
        },
        "MumbleProto::Reject::CopyFrom": {
            "offset": "0x184C0"
        },
        "MumbleProto::Reject::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::Reject::GetMetadata": {
            "offset": "0x194B0"
        },
        "MumbleProto::Reject::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1B2D0"
        },
        "MumbleProto::Reject::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::Reject::MergeFrom": {
            "offset": "0x1FFE0"
        },
        "MumbleProto::Reject::New": {
            "offset": "0x227B0"
        },
        "MumbleProto::Reject::Reject": {
            "offset": "0x12430"
        },
        "MumbleProto::Reject::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::Reject::_InternalParse": {
            "offset": "0x274F0"
        },
        "MumbleProto::RequestBlob::ByteSizeLong": {
            "offset": "0x15740"
        },
        "MumbleProto::RequestBlob::Clear": {
            "offset": "0x172B0"
        },
        "MumbleProto::RequestBlob::CopyFrom": {
            "offset": "0x18580"
        },
        "MumbleProto::RequestBlob::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::RequestBlob::GetMetadata": {
            "offset": "0x194E0"
        },
        "MumbleProto::RequestBlob::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1B390"
        },
        "MumbleProto::RequestBlob::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::RequestBlob::MergeFrom": {
            "offset": "0x201D0"
        },
        "MumbleProto::RequestBlob::New": {
            "offset": "0x227D0"
        },
        "MumbleProto::RequestBlob::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::RequestBlob::_InternalParse": {
            "offset": "0x277F0"
        },
        "MumbleProto::ServerConfig::ByteSizeLong": {
            "offset": "0x157F0"
        },
        "MumbleProto::ServerConfig::Clear": {
            "offset": "0x17300"
        },
        "MumbleProto::ServerConfig::CopyFrom": {
            "offset": "0x18630"
        },
        "MumbleProto::ServerConfig::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ServerConfig::GetMetadata": {
            "offset": "0x19510"
        },
        "MumbleProto::ServerConfig::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1B5A0"
        },
        "MumbleProto::ServerConfig::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::ServerConfig::MergeFrom": {
            "offset": "0x20430"
        },
        "MumbleProto::ServerConfig::New": {
            "offset": "0x227F0"
        },
        "MumbleProto::ServerConfig::ServerConfig": {
            "offset": "0x12490"
        },
        "MumbleProto::ServerConfig::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ServerConfig::_InternalParse": {
            "offset": "0x27AF0"
        },
        "MumbleProto::ServerSync::ByteSizeLong": {
            "offset": "0x15900"
        },
        "MumbleProto::ServerSync::Clear": {
            "offset": "0x17360"
        },
        "MumbleProto::ServerSync::CopyFrom": {
            "offset": "0x186A0"
        },
        "MumbleProto::ServerSync::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::ServerSync::GetMetadata": {
            "offset": "0x19540"
        },
        "MumbleProto::ServerSync::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1B710"
        },
        "MumbleProto::ServerSync::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::ServerSync::MergeFrom": {
            "offset": "0x20670"
        },
        "MumbleProto::ServerSync::New": {
            "offset": "0x22810"
        },
        "MumbleProto::ServerSync::ServerSync": {
            "offset": "0x12500"
        },
        "MumbleProto::ServerSync::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::ServerSync::_InternalParse": {
            "offset": "0x27F40"
        },
        "MumbleProto::ServerSync::~ServerSync": {
            "offset": "0x12D60"
        },
        "MumbleProto::SuggestConfig::ByteSizeLong": {
            "offset": "0x159D0"
        },
        "MumbleProto::SuggestConfig::Clear": {
            "offset": "0x173C0"
        },
        "MumbleProto::SuggestConfig::CopyFrom": {
            "offset": "0x18760"
        },
        "MumbleProto::SuggestConfig::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::SuggestConfig::GetMetadata": {
            "offset": "0x19570"
        },
        "MumbleProto::SuggestConfig::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1B830"
        },
        "MumbleProto::SuggestConfig::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::SuggestConfig::MergeFrom": {
            "offset": "0x20870"
        },
        "MumbleProto::SuggestConfig::New": {
            "offset": "0x22830"
        },
        "MumbleProto::SuggestConfig::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::SuggestConfig::_InternalParse": {
            "offset": "0x28280"
        },
        "MumbleProto::TextMessage::ByteSizeLong": {
            "offset": "0x15A30"
        },
        "MumbleProto::TextMessage::Clear": {
            "offset": "0x173F0"
        },
        "MumbleProto::TextMessage::CopyFrom": {
            "offset": "0x18800"
        },
        "MumbleProto::TextMessage::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::TextMessage::GetMetadata": {
            "offset": "0x195A0"
        },
        "MumbleProto::TextMessage::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1B900"
        },
        "MumbleProto::TextMessage::IsInitialized": {
            "offset": "0x1D0E0"
        },
        "MumbleProto::TextMessage::MergeFrom": {
            "offset": "0x20AC0"
        },
        "MumbleProto::TextMessage::New": {
            "offset": "0x22850"
        },
        "MumbleProto::TextMessage::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::TextMessage::TextMessage": {
            "offset": "0x12560"
        },
        "MumbleProto::TextMessage::_InternalParse": {
            "offset": "0x284F0"
        },
        "MumbleProto::UDPTunnel::ByteSizeLong": {
            "offset": "0x15B30"
        },
        "MumbleProto::UDPTunnel::Clear": {
            "offset": "0x17470"
        },
        "MumbleProto::UDPTunnel::CopyFrom": {
            "offset": "0x18870"
        },
        "MumbleProto::UDPTunnel::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::UDPTunnel::GetMetadata": {
            "offset": "0x195D0"
        },
        "MumbleProto::UDPTunnel::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1BB70"
        },
        "MumbleProto::UDPTunnel::IsInitialized": {
            "offset": "0x1D0E0"
        },
        "MumbleProto::UDPTunnel::MergeFrom": {
            "offset": "0x20CD0"
        },
        "MumbleProto::UDPTunnel::New": {
            "offset": "0x22870"
        },
        "MumbleProto::UDPTunnel::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::UDPTunnel::UDPTunnel": {
            "offset": "0x125E0"
        },
        "MumbleProto::UDPTunnel::_InternalParse": {
            "offset": "0x28920"
        },
        "MumbleProto::UserList::ByteSizeLong": {
            "offset": "0x15B80"
        },
        "MumbleProto::UserList::Clear": {
            "offset": "0x174C0"
        },
        "MumbleProto::UserList::CopyFrom": {
            "offset": "0x18920"
        },
        "MumbleProto::UserList::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::UserList::GetMetadata": {
            "offset": "0x19600"
        },
        "MumbleProto::UserList::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1BBD0"
        },
        "MumbleProto::UserList::IsInitialized": {
            "offset": "0x1D260"
        },
        "MumbleProto::UserList::MergeFrom": {
            "offset": "0x20EB0"
        },
        "MumbleProto::UserList::New": {
            "offset": "0x22890"
        },
        "MumbleProto::UserList::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::UserList::UserList": {
            "offset": "0x12640"
        },
        "MumbleProto::UserList::_InternalParse": {
            "offset": "0x28A70"
        },
        "MumbleProto::UserList_User::ByteSizeLong": {
            "offset": "0x15D00"
        },
        "MumbleProto::UserList_User::Clear": {
            "offset": "0x17030"
        },
        "MumbleProto::UserList_User::CopyFrom": {
            "offset": "0x18990"
        },
        "MumbleProto::UserList_User::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::UserList_User::GetMetadata": {
            "offset": "0x19630"
        },
        "MumbleProto::UserList_User::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1BCC0"
        },
        "MumbleProto::UserList_User::IsInitialized": {
            "offset": "0x1D3B0"
        },
        "MumbleProto::UserList_User::MergeFrom": {
            "offset": "0x21120"
        },
        "MumbleProto::UserList_User::New": {
            "offset": "0x228B0"
        },
        "MumbleProto::UserList_User::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::UserList_User::UserList_User": {
            "offset": "0x126A0"
        },
        "MumbleProto::UserList_User::_InternalParse": {
            "offset": "0x28CA0"
        },
        "MumbleProto::UserRemove::ByteSizeLong": {
            "offset": "0x15DE0"
        },
        "MumbleProto::UserRemove::Clear": {
            "offset": "0x175C0"
        },
        "MumbleProto::UserRemove::CopyFrom": {
            "offset": "0x18A00"
        },
        "MumbleProto::UserRemove::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::UserRemove::GetMetadata": {
            "offset": "0x19660"
        },
        "MumbleProto::UserRemove::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1BDF0"
        },
        "MumbleProto::UserRemove::IsInitialized": {
            "offset": "0x1D3C0"
        },
        "MumbleProto::UserRemove::MergeFrom": {
            "offset": "0x21360"
        },
        "MumbleProto::UserRemove::New": {
            "offset": "0x228D0"
        },
        "MumbleProto::UserRemove::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::UserRemove::UserRemove": {
            "offset": "0x12710"
        },
        "MumbleProto::UserRemove::_InternalParse": {
            "offset": "0x28FE0"
        },
        "MumbleProto::UserRemove::~UserRemove": {
            "offset": "0x12E90"
        },
        "MumbleProto::UserState::ByteSizeLong": {
            "offset": "0x15EA0"
        },
        "MumbleProto::UserState::Clear": {
            "offset": "0x17620"
        },
        "MumbleProto::UserState::CopyFrom": {
            "offset": "0x18AC0"
        },
        "MumbleProto::UserState::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::UserState::GetMetadata": {
            "offset": "0x19690"
        },
        "MumbleProto::UserState::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1BF10"
        },
        "MumbleProto::UserState::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::UserState::MergeFrom": {
            "offset": "0x21830"
        },
        "MumbleProto::UserState::New": {
            "offset": "0x228F0"
        },
        "MumbleProto::UserState::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::UserState::SharedDtor": {
            "offset": "0x22FA0"
        },
        "MumbleProto::UserState::UserState": {
            "offset": "0x12770"
        },
        "MumbleProto::UserState::_InternalParse": {
            "offset": "0x29300"
        },
        "MumbleProto::UserState::~UserState": {
            "offset": "0x12F40"
        },
        "MumbleProto::UserStats::ByteSizeLong": {
            "offset": "0x16210"
        },
        "MumbleProto::UserStats::Clear": {
            "offset": "0x177A0"
        },
        "MumbleProto::UserStats::CopyFrom": {
            "offset": "0x18B30"
        },
        "MumbleProto::UserStats::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::UserStats::GetMetadata": {
            "offset": "0x196C0"
        },
        "MumbleProto::UserStats::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1C4E0"
        },
        "MumbleProto::UserStats::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::UserStats::MergeFrom": {
            "offset": "0x21BD0"
        },
        "MumbleProto::UserStats::New": {
            "offset": "0x22910"
        },
        "MumbleProto::UserStats::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::UserStats::UserStats": {
            "offset": "0x12830"
        },
        "MumbleProto::UserStats::_InternalParse": {
            "offset": "0x29EE0"
        },
        "MumbleProto::UserStats_Stats::ByteSizeLong": {
            "offset": "0x16580"
        },
        "MumbleProto::UserStats_Stats::Clear": {
            "offset": "0x17A20"
        },
        "MumbleProto::UserStats_Stats::CopyFrom": {
            "offset": "0x18BA0"
        },
        "MumbleProto::UserStats_Stats::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::UserStats_Stats::GetMetadata": {
            "offset": "0x196F0"
        },
        "MumbleProto::UserStats_Stats::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1C970"
        },
        "MumbleProto::UserStats_Stats::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::UserStats_Stats::MergeFrom": {
            "offset": "0x21DD0"
        },
        "MumbleProto::UserStats_Stats::New": {
            "offset": "0x22930"
        },
        "MumbleProto::UserStats_Stats::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::UserStats_Stats::_InternalParse": {
            "offset": "0x2A770"
        },
        "MumbleProto::Version::ByteSizeLong": {
            "offset": "0x16640"
        },
        "MumbleProto::Version::Clear": {
            "offset": "0x17A50"
        },
        "MumbleProto::Version::CopyFrom": {
            "offset": "0x18C40"
        },
        "MumbleProto::Version::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::Version::GetMetadata": {
            "offset": "0x19720"
        },
        "MumbleProto::Version::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1CA70"
        },
        "MumbleProto::Version::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::Version::MergeFrom": {
            "offset": "0x22070"
        },
        "MumbleProto::Version::New": {
            "offset": "0x22950"
        },
        "MumbleProto::Version::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::Version::SharedDtor": {
            "offset": "0x22E30"
        },
        "MumbleProto::Version::Version": {
            "offset": "0x128C0"
        },
        "MumbleProto::Version::_InternalParse": {
            "offset": "0x2AA70"
        },
        "MumbleProto::Version::~Version": {
            "offset": "0x12F90"
        },
        "MumbleProto::VoiceTarget::ByteSizeLong": {
            "offset": "0x16720"
        },
        "MumbleProto::VoiceTarget::Clear": {
            "offset": "0x17AE0"
        },
        "MumbleProto::VoiceTarget::CopyFrom": {
            "offset": "0x18CB0"
        },
        "MumbleProto::VoiceTarget::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::VoiceTarget::GetMetadata": {
            "offset": "0x19750"
        },
        "MumbleProto::VoiceTarget::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1CBB0"
        },
        "MumbleProto::VoiceTarget::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::VoiceTarget::MergeFrom": {
            "offset": "0x22260"
        },
        "MumbleProto::VoiceTarget::New": {
            "offset": "0x22970"
        },
        "MumbleProto::VoiceTarget::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::VoiceTarget::VoiceTarget": {
            "offset": "0x12930"
        },
        "MumbleProto::VoiceTarget::_InternalParse": {
            "offset": "0x2ADB0"
        },
        "MumbleProto::VoiceTarget::~VoiceTarget": {
            "offset": "0x12FD0"
        },
        "MumbleProto::VoiceTarget_Target::ByteSizeLong": {
            "offset": "0x168C0"
        },
        "MumbleProto::VoiceTarget_Target::Clear": {
            "offset": "0x17BF0"
        },
        "MumbleProto::VoiceTarget_Target::CopyFrom": {
            "offset": "0x18D20"
        },
        "MumbleProto::VoiceTarget_Target::GetCachedSize": {
            "offset": "0x19190"
        },
        "MumbleProto::VoiceTarget_Target::GetMetadata": {
            "offset": "0x19780"
        },
        "MumbleProto::VoiceTarget_Target::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x1CDD0"
        },
        "MumbleProto::VoiceTarget_Target::IsInitialized": {
            "offset": "0xF840"
        },
        "MumbleProto::VoiceTarget_Target::MergeFrom": {
            "offset": "0x224B0"
        },
        "MumbleProto::VoiceTarget_Target::New": {
            "offset": "0x22990"
        },
        "MumbleProto::VoiceTarget_Target::SetCachedSize": {
            "offset": "0x22A80"
        },
        "MumbleProto::VoiceTarget_Target::VoiceTarget_Target": {
            "offset": "0x129A0"
        },
        "MumbleProto::VoiceTarget_Target::_InternalParse": {
            "offset": "0x2B070"
        },
        "MumbleProtoMessageHandler<MumbleProto::ChannelRemove>::HandleMessage": {
            "offset": "0x44320"
        },
        "MumbleProtoMessageHandler<MumbleProto::ChannelState>::HandleMessage": {
            "offset": "0x44290"
        },
        "MumbleProtoMessageHandler<MumbleProto::CryptSetup>::HandleMessage": {
            "offset": "0x5C1C0"
        },
        "MumbleProtoMessageHandler<MumbleProto::Ping>::HandleMessage": {
            "offset": "0x5D990"
        },
        "MumbleProtoMessageHandler<MumbleProto::ServerSync>::HandleMessage": {
            "offset": "0x5D910"
        },
        "MumbleProtoMessageHandler<MumbleProto::UserRemove>::HandleMessage": {
            "offset": "0x5D890"
        },
        "MumbleProtoMessageHandler<MumbleProto::UserState>::HandleMessage": {
            "offset": "0x5D800"
        },
        "MumbleProtoMessageHandler<MumbleProto::Version>::HandleMessage": {
            "offset": "0x5DE40"
        },
        "MumbleTLSPolicy::acceptable_ciphersuite": {
            "offset": "0x580E0"
        },
        "MumbleTLSPolicy::acceptable_protocol_version": {
            "offset": "0xF840"
        },
        "MumbleTLSPolicy::allowed_key_exchange_methods": {
            "offset": "0x581A0"
        },
        "MumbleTLSPolicy::~MumbleTLSPolicy": {
            "offset": "0x4CB80"
        },
        "MumbleUser::UpdateUser": {
            "offset": "0x5BC60"
        },
        "NoiseEstimationC": {
            "offset": "0x1730A0"
        },
        "NonLinearProcessing": {
            "offset": "0x141010"
        },
        "NormalizeRealBufferC": {
            "offset": "0x173490"
        },
        "OverdriveAndSuppress": {
            "offset": "0x142D70"
        },
        "OverdriveAndSuppressSSE2": {
            "offset": "0x156F30"
        },
        "PCorr": {
            "offset": "0x17C6A0"
        },
        "PartitionDelay": {
            "offset": "0x1571E0"
        },
        "PrepareSpectrumC": {
            "offset": "0x1734E0"
        },
        "ProcessBlock": {
            "offset": "0x1433F0"
        },
        "ProcessNormal": {
            "offset": "0x15F540"
        },
        "RaiseDebugException": {
            "offset": "0x65DE0"
        },
        "ResetAdaptiveChannelC": {
            "offset": "0x16F510"
        },
        "SafeCallX3DA": {
            "offset": "0x41310"
        },
        "ScaleErrorSignal": {
            "offset": "0x145550"
        },
        "ScaleErrorSignalSSE2": {
            "offset": "0x1573B0"
        },
        "ScopedError::~ScopedError": {
            "offset": "0xAF80"
        },
        "SetThreadName": {
            "offset": "0x64180"
        },
        "SmoothedPSD": {
            "offset": "0x1578D0"
        },
        "SplitFilter": {
            "offset": "0x184FB0"
        },
        "StoreAdaptiveChannelC": {
            "offset": "0x16F620"
        },
        "StoreAsComplex": {
            "offset": "0x145C50"
        },
        "SubbandCoherence": {
            "offset": "0x145E40"
        },
        "SubbandCoherenceSSE2": {
            "offset": "0x157EC0"
        },
        "SynthesisUpdateC": {
            "offset": "0x1735F0"
        },
        "SysError": {
            "offset": "0xD2F0"
        },
        "TimeToFrequency": {
            "offset": "0x1461E0"
        },
        "TimeToFrequencyDomain": {
            "offset": "0x181D00"
        },
        "ToNarrow": {
            "offset": "0x65EF0"
        },
        "ToWide": {
            "offset": "0x65FE0"
        },
        "TraceRealV": {
            "offset": "0x662F0"
        },
        "UpdateDelayMetrics": {
            "offset": "0x1467B0"
        },
        "UpdateLevel": {
            "offset": "0x146B10"
        },
        "UpdateMetrics": {
            "offset": "0x146EF0"
        },
        "UpdateNoiseEstimate": {
            "offset": "0x173760"
        },
        "UpdateRobustValidationStatistics": {
            "offset": "0x168880"
        },
        "WebRtcAec_BufferFarend": {
            "offset": "0x15F820"
        },
        "WebRtcAec_BufferFarendPartition": {
            "offset": "0x147270"
        },
        "WebRtcAec_Create": {
            "offset": "0x15F990"
        },
        "WebRtcAec_CreateAec": {
            "offset": "0x147430"
        },
        "WebRtcAec_CreateResampler": {
            "offset": "0x16ED30"
        },
        "WebRtcAec_Free": {
            "offset": "0x15FA20"
        },
        "WebRtcAec_FreeAec": {
            "offset": "0x147620"
        },
        "WebRtcAec_FreeResampler": {
            "offset": "0x3A890"
        },
        "WebRtcAec_GetDelayMetrics": {
            "offset": "0x15FA60"
        },
        "WebRtcAec_GetDelayMetricsCore": {
            "offset": "0x1476C0"
        },
        "WebRtcAec_GetEchoStats": {
            "offset": "0x147740"
        },
        "WebRtcAec_GetMetrics": {
            "offset": "0x15FAD0"
        },
        "WebRtcAec_GetSkew": {
            "offset": "0x16ED40"
        },
        "WebRtcAec_Init": {
            "offset": "0x15FC90"
        },
        "WebRtcAec_InitAec": {
            "offset": "0x1477B0"
        },
        "WebRtcAec_InitAec_SSE2": {
            "offset": "0x1584F0"
        },
        "WebRtcAec_InitResampler": {
            "offset": "0x16EDD0"
        },
        "WebRtcAec_MoveFarReadPtr": {
            "offset": "0x1482C0"
        },
        "WebRtcAec_Process": {
            "offset": "0x15FE70"
        },
        "WebRtcAec_ProcessFrames": {
            "offset": "0x148310"
        },
        "WebRtcAec_ResampleLinear": {
            "offset": "0x16EE30"
        },
        "WebRtcAec_SetConfigCore": {
            "offset": "0x1486B0"
        },
        "WebRtcAec_SetSystemDelay": {
            "offset": "0x148710"
        },
        "WebRtcAec_aec_core": {
            "offset": "0x160050"
        },
        "WebRtcAec_delay_agnostic_enabled": {
            "offset": "0x148720"
        },
        "WebRtcAec_echo_state": {
            "offset": "0x148730"
        },
        "WebRtcAec_enable_delay_agnostic": {
            "offset": "0x148740"
        },
        "WebRtcAec_enable_extended_filter": {
            "offset": "0x148750"
        },
        "WebRtcAec_extended_filter_enabled": {
            "offset": "0x148780"
        },
        "WebRtcAec_get_echo_status": {
            "offset": "0x160060"
        },
        "WebRtcAec_get_error_code": {
            "offset": "0x1600B0"
        },
        "WebRtcAec_set_config": {
            "offset": "0x1600C0"
        },
        "WebRtcAec_system_delay": {
            "offset": "0x148790"
        },
        "WebRtcAecm_AlignedFarend": {
            "offset": "0x16F780"
        },
        "WebRtcAecm_BufferFarend": {
            "offset": "0x160130"
        },
        "WebRtcAecm_CalcEnergies": {
            "offset": "0x16F7B0"
        },
        "WebRtcAecm_CalcStepSize": {
            "offset": "0x16FDA0"
        },
        "WebRtcAecm_CalcSuppressionGain": {
            "offset": "0x16FE20"
        },
        "WebRtcAecm_Create": {
            "offset": "0x160270"
        },
        "WebRtcAecm_CreateCore": {
            "offset": "0x16FEE0"
        },
        "WebRtcAecm_Free": {
            "offset": "0x160320"
        },
        "WebRtcAecm_FreeCore": {
            "offset": "0x1700B0"
        },
        "WebRtcAecm_GetEchoPath": {
            "offset": "0x160360"
        },
        "WebRtcAecm_Init": {
            "offset": "0x160410"
        },
        "WebRtcAecm_InitCore": {
            "offset": "0x170120"
        },
        "WebRtcAecm_InitEchoPath": {
            "offset": "0x160510"
        },
        "WebRtcAecm_InitEchoPathCore": {
            "offset": "0x170720"
        },
        "WebRtcAecm_Process": {
            "offset": "0x160580"
        },
        "WebRtcAecm_ProcessBlock": {
            "offset": "0x181E90"
        },
        "WebRtcAecm_ProcessFrame": {
            "offset": "0x170920"
        },
        "WebRtcAecm_UpdateChannel": {
            "offset": "0x170C70"
        },
        "WebRtcAecm_UpdateFarHistory": {
            "offset": "0x171290"
        },
        "WebRtcAecm_echo_path_size_bytes": {
            "offset": "0x160B40"
        },
        "WebRtcAecm_get_error_code": {
            "offset": "0x160B50"
        },
        "WebRtcAecm_set_config": {
            "offset": "0x160B70"
        },
        "WebRtcAgc_AddFarend": {
            "offset": "0x160E20"
        },
        "WebRtcAgc_AddFarendToDigital": {
            "offset": "0x171A50"
        },
        "WebRtcAgc_AddMic": {
            "offset": "0x160E70"
        },
        "WebRtcAgc_CalculateGainTable": {
            "offset": "0x171A70"
        },
        "WebRtcAgc_Create": {
            "offset": "0x161270"
        },
        "WebRtcAgc_Free": {
            "offset": "0x3A890"
        },
        "WebRtcAgc_Init": {
            "offset": "0x161290"
        },
        "WebRtcAgc_InitDigital": {
            "offset": "0x171DE0"
        },
        "WebRtcAgc_InitVad": {
            "offset": "0x171EB0"
        },
        "WebRtcAgc_Process": {
            "offset": "0x161640"
        },
        "WebRtcAgc_ProcessAnalog": {
            "offset": "0x1617B0"
        },
        "WebRtcAgc_ProcessDigital": {
            "offset": "0x171EF0"
        },
        "WebRtcAgc_ProcessVad": {
            "offset": "0x1725F0"
        },
        "WebRtcAgc_VirtualMic": {
            "offset": "0x162090"
        },
        "WebRtcAgc_set_config": {
            "offset": "0x162330"
        },
        "WebRtcIsac_AllPoleFilter": {
            "offset": "0x17B430"
        },
        "WebRtcIsac_AutoCorr": {
            "offset": "0x17B640"
        },
        "WebRtcIsac_DecimateAllpass": {
            "offset": "0x17B760"
        },
        "WebRtcIsac_Highpass": {
            "offset": "0x17B950"
        },
        "WebRtcIsac_InitPitchAnalysis": {
            "offset": "0x178C00"
        },
        "WebRtcIsac_InitPreFilterbank": {
            "offset": "0x179090"
        },
        "WebRtcIsac_InitializePitch": {
            "offset": "0x17CCD0"
        },
        "WebRtcIsac_LevDurb": {
            "offset": "0x17C2E0"
        },
        "WebRtcIsac_PitchAnalysis": {
            "offset": "0x17F280"
        },
        "WebRtcIsac_PitchfilterPre": {
            "offset": "0x187030"
        },
        "WebRtcIsac_PitchfilterPre_gains": {
            "offset": "0x187070"
        },
        "WebRtcIsac_PitchfilterPre_la": {
            "offset": "0x1870A0"
        },
        "WebRtcIsac_SplitAndFilterFloat": {
            "offset": "0x179320"
        },
        "WebRtcIsac_WeightingFilter": {
            "offset": "0x17BB50"
        },
        "WebRtcNsx_ComputeSpectralDifference": {
            "offset": "0x173850"
        },
        "WebRtcNsx_ComputeSpectralFlatness": {
            "offset": "0x173A40"
        },
        "WebRtcNsx_Create": {
            "offset": "0x164120"
        },
        "WebRtcNsx_DataAnalysis": {
            "offset": "0x173BF0"
        },
        "WebRtcNsx_DataSynthesis": {
            "offset": "0x174170"
        },
        "WebRtcNsx_FeatureParameterExtraction": {
            "offset": "0x174390"
        },
        "WebRtcNsx_Free": {
            "offset": "0x164160"
        },
        "WebRtcNsx_Init": {
            "offset": "0x164190"
        },
        "WebRtcNsx_InitCore": {
            "offset": "0x174750"
        },
        "WebRtcNsx_Process": {
            "offset": "0x1641A0"
        },
        "WebRtcNsx_ProcessCore": {
            "offset": "0x174B20"
        },
        "WebRtcNsx_SpeechNoiseProb": {
            "offset": "0x1845C0"
        },
        "WebRtcNsx_set_policy": {
            "offset": "0x1641B0"
        },
        "WebRtcNsx_set_policy_core": {
            "offset": "0x175AA0"
        },
        "WebRtcSpl_AllPassQMF": {
            "offset": "0x16D8D0"
        },
        "WebRtcSpl_AnalysisQMF": {
            "offset": "0x16DB60"
        },
        "WebRtcSpl_ComplexBitReverse": {
            "offset": "0x1841A0"
        },
        "WebRtcSpl_ComplexFFT": {
            "offset": "0x1839C0"
        },
        "WebRtcSpl_ComplexIFFT": {
            "offset": "0x183DB0"
        },
        "WebRtcSpl_CreateRealFFT": {
            "offset": "0x172CF0"
        },
        "WebRtcSpl_CrossCorrelationC": {
            "offset": "0x181020"
        },
        "WebRtcSpl_DivU32U16": {
            "offset": "0x171430"
        },
        "WebRtcSpl_DivW32W16": {
            "offset": "0x171450"
        },
        "WebRtcSpl_DivW32W16ResW16": {
            "offset": "0x171470"
        },
        "WebRtcSpl_DotProdIntToInt": {
            "offset": "0x1777C0"
        },
        "WebRtcSpl_DotProdIntToShort": {
            "offset": "0x177910"
        },
        "WebRtcSpl_DotProductWithScale": {
            "offset": "0x171490"
        },
        "WebRtcSpl_DownBy2IntToShort": {
            "offset": "0x185B50"
        },
        "WebRtcSpl_DownBy2ShortToInt": {
            "offset": "0x185D20"
        },
        "WebRtcSpl_DownsampleBy2": {
            "offset": "0x1716A0"
        },
        "WebRtcSpl_DownsampleFastC": {
            "offset": "0x181210"
        },
        "WebRtcSpl_Energy": {
            "offset": "0x184490"
        },
        "WebRtcSpl_FreeRealFFT": {
            "offset": "0x172D20"
        },
        "WebRtcSpl_GetScalingSquare": {
            "offset": "0x1870E0"
        },
        "WebRtcSpl_Init": {
            "offset": "0x16EFF0"
        },
        "WebRtcSpl_LPBy2IntToInt": {
            "offset": "0x185EA0"
        },
        "WebRtcSpl_LPBy2ShortToInt": {
            "offset": "0x186120"
        },
        "WebRtcSpl_MaxAbsValueW16C": {
            "offset": "0x1809C0"
        },
        "WebRtcSpl_MaxAbsValueW32C": {
            "offset": "0x180A80"
        },
        "WebRtcSpl_MaxValueW16C": {
            "offset": "0x180B40"
        },
        "WebRtcSpl_MaxValueW32C": {
            "offset": "0x180BF0"
        },
        "WebRtcSpl_MemSetW16": {
            "offset": "0x162480"
        },
        "WebRtcSpl_MemSetW32": {
            "offset": "0x1624B0"
        },
        "WebRtcSpl_MinValueW16C": {
            "offset": "0x180CA0"
        },
        "WebRtcSpl_MinValueW32C": {
            "offset": "0x180D50"
        },
        "WebRtcSpl_NormU32": {
            "offset": "0x171340"
        },
        "WebRtcSpl_NormW16": {
            "offset": "0x175B30"
        },
        "WebRtcSpl_NormW32": {
            "offset": "0x1713B0"
        },
        "WebRtcSpl_RandU": {
            "offset": "0x158990"
        },
        "WebRtcSpl_RandUArray": {
            "offset": "0x1589B0"
        },
        "WebRtcSpl_RealForwardFFT": {
            "offset": "0x172D30"
        },
        "WebRtcSpl_RealInverseFFT": {
            "offset": "0x172E20"
        },
        "WebRtcSpl_ResampDotProduct": {
            "offset": "0x1777C0"
        },
        "WebRtcSpl_Resample16khzTo22khz": {
            "offset": "0x177A50"
        },
        "WebRtcSpl_Resample16khzTo48khz": {
            "offset": "0x178130"
        },
        "WebRtcSpl_Resample22khzTo16khz": {
            "offset": "0x177C40"
        },
        "WebRtcSpl_Resample22khzTo8khz": {
            "offset": "0x177D60"
        },
        "WebRtcSpl_Resample32khzTo24khz": {
            "offset": "0x185850"
        },
        "WebRtcSpl_Resample44khzTo32khz": {
            "offset": "0x185960"
        },
        "WebRtcSpl_Resample48khzTo16khz": {
            "offset": "0x1781C0"
        },
        "WebRtcSpl_Resample48khzTo32khz": {
            "offset": "0x185A80"
        },
        "WebRtcSpl_Resample48khzTo8khz": {
            "offset": "0x178250"
        },
        "WebRtcSpl_Resample8khzTo22khz": {
            "offset": "0x177E80"
        },
        "WebRtcSpl_ResetResample16khzTo22khz": {
            "offset": "0x178070"
        },
        "WebRtcSpl_ResetResample16khzTo48khz": {
            "offset": "0x178300"
        },
        "WebRtcSpl_ResetResample22khzTo16khz": {
            "offset": "0x1780A0"
        },
        "WebRtcSpl_ResetResample22khzTo8khz": {
            "offset": "0x1780E0"
        },
        "WebRtcSpl_ResetResample48khzTo16khz": {
            "offset": "0x178320"
        },
        "WebRtcSpl_ResetResample48khzTo8khz": {
            "offset": "0x178350"
        },
        "WebRtcSpl_ResetResample8khzTo22khz": {
            "offset": "0x1780A0"
        },
        "WebRtcSpl_Sqrt": {
            "offset": "0x183840"
        },
        "WebRtcSpl_SqrtFloor": {
            "offset": "0x184290"
        },
        "WebRtcSpl_SynthesisQMF": {
            "offset": "0x16DCC0"
        },
        "WebRtcSpl_UpBy2IntToShort": {
            "offset": "0x1863D0"
        },
        "WebRtcSpl_UpBy2ShortToInt": {
            "offset": "0x186560"
        },
        "WebRtcSpl_UpsampleBy2": {
            "offset": "0x171870"
        },
        "WebRtcSpl_ZerosArrayW16": {
            "offset": "0x1624E0"
        },
        "WebRtcVad_CalcVad16khz": {
            "offset": "0x176DB0"
        },
        "WebRtcVad_CalcVad32khz": {
            "offset": "0x176E40"
        },
        "WebRtcVad_CalcVad48khz": {
            "offset": "0x176EF0"
        },
        "WebRtcVad_CalcVad8khz": {
            "offset": "0x177000"
        },
        "WebRtcVad_CalculateFeatures": {
            "offset": "0x185160"
        },
        "WebRtcVad_Create": {
            "offset": "0x1667F0"
        },
        "WebRtcVad_Downsampling": {
            "offset": "0x185520"
        },
        "WebRtcVad_FindMinimum": {
            "offset": "0x1855D0"
        },
        "WebRtcVad_Free": {
            "offset": "0x3A890"
        },
        "WebRtcVad_GaussianProbability": {
            "offset": "0x185460"
        },
        "WebRtcVad_Init": {
            "offset": "0x166820"
        },
        "WebRtcVad_InitCore": {
            "offset": "0x177060"
        },
        "WebRtcVad_Process": {
            "offset": "0x166830"
        },
        "WebRtcVad_set_mode": {
            "offset": "0x166960"
        },
        "WebRtcVad_set_mode_core": {
            "offset": "0x1774E0"
        },
        "WebRtc_AddBinaryFarSpectrum": {
            "offset": "0x1689D0"
        },
        "WebRtc_AddFarSpectrumFix": {
            "offset": "0x15AAC0"
        },
        "WebRtc_AddFarSpectrumFloat": {
            "offset": "0x15AB20"
        },
        "WebRtc_AllocateFarendBufferMemory": {
            "offset": "0x168A70"
        },
        "WebRtc_CreateBinaryDelayEstimator": {
            "offset": "0x168B10"
        },
        "WebRtc_CreateBinaryDelayEstimatorFarend": {
            "offset": "0x168CC0"
        },
        "WebRtc_CreateBuffer": {
            "offset": "0x158540"
        },
        "WebRtc_CreateDelayEstimator": {
            "offset": "0x15AB70"
        },
        "WebRtc_CreateDelayEstimatorFarend": {
            "offset": "0x15AC40"
        },
        "WebRtc_DelayEstimatorProcessFix": {
            "offset": "0x15AD00"
        },
        "WebRtc_DelayEstimatorProcessFloat": {
            "offset": "0x15AD60"
        },
        "WebRtc_FreeBinaryDelayEstimator": {
            "offset": "0x168D50"
        },
        "WebRtc_FreeBinaryDelayEstimatorFarend": {
            "offset": "0x168DC0"
        },
        "WebRtc_FreeBuffer": {
            "offset": "0x1585F0"
        },
        "WebRtc_FreeDelayEstimator": {
            "offset": "0x15ADB0"
        },
        "WebRtc_FreeDelayEstimatorFarend": {
            "offset": "0x15ADF0"
        },
        "WebRtc_InitBinaryDelayEstimator": {
            "offset": "0x168E00"
        },
        "WebRtc_InitBinaryDelayEstimatorFarend": {
            "offset": "0x168E90"
        },
        "WebRtc_InitBuffer": {
            "offset": "0x158620"
        },
        "WebRtc_InitDelayEstimator": {
            "offset": "0x15AE30"
        },
        "WebRtc_InitDelayEstimatorFarend": {
            "offset": "0x15AE80"
        },
        "WebRtc_MeanEstimatorFix": {
            "offset": "0x168ED0"
        },
        "WebRtc_MoveReadPtr": {
            "offset": "0x158640"
        },
        "WebRtc_ProcessBinarySpectrum": {
            "offset": "0x168F00"
        },
        "WebRtc_ReadBuffer": {
            "offset": "0x1586E0"
        },
        "WebRtc_SoftResetBinaryDelayEstimator": {
            "offset": "0x1691E0"
        },
        "WebRtc_SoftResetBinaryDelayEstimatorFarend": {
            "offset": "0x169210"
        },
        "WebRtc_SoftResetDelayEstimator": {
            "offset": "0x15AED0"
        },
        "WebRtc_SoftResetDelayEstimatorFarend": {
            "offset": "0x15AEE0"
        },
        "WebRtc_WriteBuffer": {
            "offset": "0x158840"
        },
        "WebRtc_available_read": {
            "offset": "0x158930"
        },
        "WebRtc_available_write": {
            "offset": "0x158960"
        },
        "WebRtc_binary_last_delay": {
            "offset": "0x169300"
        },
        "WebRtc_binary_last_delay_quality": {
            "offset": "0x169310"
        },
        "WebRtc_enable_robust_validation": {
            "offset": "0x15AEF0"
        },
        "WebRtc_last_delay": {
            "offset": "0x15AF10"
        },
        "WebRtc_last_delay_quality": {
            "offset": "0x15AF30"
        },
        "WebRtc_lookahead": {
            "offset": "0x15AF40"
        },
        "WebRtc_rdft": {
            "offset": "0x1641C0"
        },
        "WebRtc_set_allowed_offset": {
            "offset": "0x15AF50"
        },
        "WebRtc_set_lookahead": {
            "offset": "0x15AF70"
        },
        "Win32TrapAndJump64": {
            "offset": "0x670B0"
        },
        "WindowAndFFT": {
            "offset": "0x182E90"
        },
        "WindowData": {
            "offset": "0x1487A0"
        },
        "XA2DestinationNode::Poll": {
            "offset": "0x3F9D0"
        },
        "XA2DestinationNode::PollReal": {
            "offset": "0x40190"
        },
        "XA2DestinationNode::startRendering": {
            "offset": "0xAD90"
        },
        "XA2DestinationNode::uninitialize": {
            "offset": "0x43D50"
        },
        "XAudio2DownlevelWrap::CommitChanges": {
            "offset": "0x3C130"
        },
        "XAudio2DownlevelWrap::CreateMasteringVoice": {
            "offset": "0x3C260"
        },
        "XAudio2DownlevelWrap::CreateSourceVoice": {
            "offset": "0x3C280"
        },
        "XAudio2DownlevelWrap::CreateSubmixVoice": {
            "offset": "0x3C290"
        },
        "XAudio2DownlevelWrap::GetPerformanceData": {
            "offset": "0x3CEE0"
        },
        "XAudio2DownlevelWrap::RegisterForCallbacks": {
            "offset": "0x41290"
        },
        "XAudio2DownlevelWrap::SetDebugConfiguration": {
            "offset": "0x41530"
        },
        "XAudio2DownlevelWrap::StartEngine": {
            "offset": "0x41860"
        },
        "XAudio2DownlevelWrap::StopEngine": {
            "offset": "0x41870"
        },
        "XAudio2DownlevelWrap::UnregisterForCallbacks": {
            "offset": "0x41880"
        },
        "_01forward": {
            "offset": "0x19EC00"
        },
        "_01inverse": {
            "offset": "0x19EFD0"
        },
        "_DllMainCRTStartup": {
            "offset": "0x1B1320"
        },
        "_Init_thread_abort": {
            "offset": "0x1B0618"
        },
        "_Init_thread_footer": {
            "offset": "0x1B0648"
        },
        "_Init_thread_header": {
            "offset": "0x1B06A8"
        },
        "_Init_thread_notify": {
            "offset": "0x1B0710"
        },
        "_Init_thread_wait": {
            "offset": "0x1B0754"
        },
        "_RTC_Initialize": {
            "offset": "0x1B1B24"
        },
        "_RTC_Terminate": {
            "offset": "0x1B1B60"
        },
        "_Smtx_lock_exclusive": {
            "offset": "0x1B03E4"
        },
        "_Smtx_lock_shared": {
            "offset": "0x1B03EC"
        },
        "_Smtx_unlock_exclusive": {
            "offset": "0x1B03F4"
        },
        "_Smtx_unlock_shared": {
            "offset": "0x1B03FC"
        },
        "__ArrayUnwind": {
            "offset": "0x1B0EF8"
        },
        "__GSHandlerCheck": {
            "offset": "0x1B0D34"
        },
        "__GSHandlerCheckCommon": {
            "offset": "0x1B0D54"
        },
        "__GSHandlerCheck_EH": {
            "offset": "0x1B0DB0"
        },
        "__GSHandlerCheck_SEH": {
            "offset": "0x1B15FC"
        },
        "__chkstk": {
            "offset": "0x1B0F80"
        },
        "__crt_debugger_hook": {
            "offset": "0x1B18A8"
        },
        "__dyn_tls_init": {
            "offset": "0x1B0B7C"
        },
        "__dyn_tls_on_demand_init": {
            "offset": "0x1B0BE4"
        },
        "__isa_available_init": {
            "offset": "0x1B1684"
        },
        "__local_stdio_printf_options": {
            "offset": "0xED50"
        },
        "__local_stdio_scanf_options": {
            "offset": "0x1B1AF8"
        },
        "__raise_securityfailure": {
            "offset": "0x1B1360"
        },
        "__report_gsfailure": {
            "offset": "0x1B1394"
        },
        "__report_rangecheckfailure": {
            "offset": "0x1B1468"
        },
        "__report_securityfailure": {
            "offset": "0x1B147C"
        },
        "__scrt_acquire_startup_lock": {
            "offset": "0x1B07FC"
        },
        "__scrt_dllmain_after_initialize_c": {
            "offset": "0x1B0838"
        },
        "__scrt_dllmain_before_initialize_c": {
            "offset": "0x1B086C"
        },
        "__scrt_dllmain_crt_thread_attach": {
            "offset": "0x1B0884"
        },
        "__scrt_dllmain_crt_thread_detach": {
            "offset": "0x1B08AC"
        },
        "__scrt_dllmain_exception_filter": {
            "offset": "0x1B08C4"
        },
        "__scrt_dllmain_uninitialize_c": {
            "offset": "0x1B0924"
        },
        "__scrt_dllmain_uninitialize_critical": {
            "offset": "0x1B0954"
        },
        "__scrt_fastfail": {
            "offset": "0x1B18B0"
        },
        "__scrt_get_dyn_tls_init_callback": {
            "offset": "0x1B1B1C"
        },
        "__scrt_initialize_crt": {
            "offset": "0x1B0968"
        },
        "__scrt_initialize_default_local_stdio_options": {
            "offset": "0x1B1B00"
        },
        "__scrt_initialize_onexit_tables": {
            "offset": "0x1B09B4"
        },
        "__scrt_initialize_thread_safe_statics": {
            "offset": "0x1B0520"
        },
        "__scrt_initialize_type_info": {
            "offset": "0x1B0FD0"
        },
        "__scrt_is_nonwritable_in_current_image": {
            "offset": "0x1B0A40"
        },
        "__scrt_is_nonwritable_in_current_image$filt$0": {
            "offset": "0x1B9F0C"
        },
        "__scrt_is_ucrt_dll_in_use": {
            "offset": "0x1B1A1C"
        },
        "__scrt_release_startup_lock": {
            "offset": "0x1B0AD8"
        },
        "__scrt_stub_for_acrt_initialize": {
            "offset": "0xF840"
        },
        "__scrt_stub_for_acrt_thread_attach": {
            "offset": "0xF840"
        },
        "__scrt_stub_for_acrt_thread_detach": {
            "offset": "0xF840"
        },
        "__scrt_stub_for_acrt_uninitialize": {
            "offset": "0xF840"
        },
        "__scrt_stub_for_acrt_uninitialize_critical": {
            "offset": "0xF840"
        },
        "__scrt_stub_for_is_c_termination_complete": {
            "offset": "0xF770"
        },
        "__scrt_throw_std_bad_alloc": {
            "offset": "0x1B19FC"
        },
        "__scrt_throw_std_bad_array_new_length": {
            "offset": "0xDAF0"
        },
        "__scrt_uninitialize_crt": {
            "offset": "0x1B0AFC"
        },
        "__scrt_uninitialize_thread_safe_statics": {
            "offset": "0x1B05F0"
        },
        "__scrt_uninitialize_type_info": {
            "offset": "0x1B0FE0"
        },
        "__security_check_cookie": {
            "offset": "0x1B0E40"
        },
        "__security_init_cookie": {
            "offset": "0x1B1A28"
        },
        "__std_find_trivial_1": {
            "offset": "0x1B01D0"
        },
        "__std_init_once_link_alternate_names_and_abort": {
            "offset": "0x1B0440"
        },
        "__std_reverse_trivially_swappable_8": {
            "offset": "0x1B02A0"
        },
        "_celt_autocorr": {
            "offset": "0x1216B0"
        },
        "_celt_lpc": {
            "offset": "0x121A30"
        },
        "_encodepart": {
            "offset": "0x19F300"
        },
        "_get_startup_argv_mode": {
            "offset": "0x154700"
        },
        "_guard_check_icall_nop": {
            "offset": "0xAD90"
        },
        "_guard_dispatch_icall_nop": {
            "offset": "0x1B1D60"
        },
        "_guard_xfg_dispatch_icall_nop": {
            "offset": "0x1B1D80"
        },
        "_onexit": {
            "offset": "0x1B0B28"
        },
        "_ov_header_fseek_wrap": {
            "offset": "0x198B00"
        },
        "_snprintf": {
            "offset": "0x6A510"
        },
        "_speex_fatal": {
            "offset": "0x1A9E50"
        },
        "_vorbis_apply_window": {
            "offset": "0x19F3B0"
        },
        "_vorbis_block_alloc": {
            "offset": "0x19F680"
        },
        "_vp_couple_quantize_normalize": {
            "offset": "0x19F700"
        },
        "_vp_noisemask": {
            "offset": "0x1A0680"
        },
        "_vp_offset_and_mix": {
            "offset": "0x1A0C90"
        },
        "_vp_tonemask": {
            "offset": "0x1A0FD0"
        },
        "_wwassert": {
            "offset": "0x64370"
        },
        "`MumbleAudioOutput::InitializeAudioDevice'::`2'::Unlocker::~Unlocker": {
            "offset": "0x3A710"
        },
        "`__ArrayUnwind'::`1'::filt$0": {
            "offset": "0x1B9F50"
        },
        "`anonymous namespace'::AddFrames": {
            "offset": "0x16E0D0"
        },
        "`anonymous namespace'::ApplyWindow": {
            "offset": "0x16E2B0"
        },
        "`dllmain_crt_process_attach'::`1'::fin$0": {
            "offset": "0x1B9FCD"
        },
        "`dllmain_crt_process_detach'::`1'::fin$0": {
            "offset": "0x1B9FE4"
        },
        "`dllmain_crt_process_detach'::`1'::fin$1": {
            "offset": "0x1B9FFD"
        },
        "`dllmain_dispatch'::`1'::filt$0": {
            "offset": "0x1BA011"
        },
        "`dynamic initializer for 'OV_CALLBACKS_DEFAULT''": {
            "offset": "0x23D0"
        },
        "`dynamic initializer for 'OV_CALLBACKS_NOCLOSE''": {
            "offset": "0x2400"
        },
        "`dynamic initializer for 'OV_CALLBACKS_STREAMONLY''": {
            "offset": "0x2420"
        },
        "`dynamic initializer for 'OV_CALLBACKS_STREAMONLY_NOCLOSE''": {
            "offset": "0x2440"
        },
        "`dynamic initializer for 'OnGetMumbleAudioSink''": {
            "offset": "0x13B0"
        },
        "`dynamic initializer for 'OnSetMumbleVolume''": {
            "offset": "0x13C0"
        },
        "`dynamic initializer for '_init_instance_0''": {
            "offset": "0x1050"
        },
        "`dynamic initializer for '_init_instance_1''": {
            "offset": "0x12E0"
        },
        "`dynamic initializer for '_init_instance_2''": {
            "offset": "0x1310"
        },
        "`dynamic initializer for '_init_instance_3''": {
            "offset": "0x1340"
        },
        "`dynamic initializer for 'dynamic_init_dummy_Mumble_2eproto''": {
            "offset": "0x1290"
        },
        "`dynamic initializer for 'dynamic_init_dummy_google_2fprotobuf_2fdescriptor_2eproto''": {
            "offset": "0x22C0"
        },
        "`dynamic initializer for 'g_audioToClients''": {
            "offset": "0x1460"
        },
        "`dynamic initializer for 'g_mmDeviceMutex''": {
            "offset": "0x1230"
        },
        "`dynamic initializer for 'g_thisError''": {
            "offset": "0x1080"
        },
        "`dynamic initializer for 'google::protobuf::util::Status::CANCELLED''": {
            "offset": "0x2200"
        },
        "`dynamic initializer for 'google::protobuf::util::Status::OK''": {
            "offset": "0x2250"
        },
        "`dynamic initializer for 'google::protobuf::util::Status::UNKNOWN''": {
            "offset": "0x2260"
        },
        "`dynamic initializer for 'handler''": {
            "offset": "0x1AD0"
        },
        "`dynamic initializer for 'handler_ChannelRemove''": {
            "offset": "0x15C0"
        },
        "`dynamic initializer for 'handler_ChannelState''": {
            "offset": "0x1670"
        },
        "`dynamic initializer for 'handler_CryptSetup''": {
            "offset": "0x1990"
        },
        "`dynamic initializer for 'handler_Ping''": {
            "offset": "0x1C10"
        },
        "`dynamic initializer for 'handler_ServerSync''": {
            "offset": "0x1CC0"
        },
        "`dynamic initializer for 'handler_UserRemove''": {
            "offset": "0x1D70"
        },
        "`dynamic initializer for 'handler_UserState''": {
            "offset": "0x1E20"
        },
        "`dynamic initializer for 'handler_Version''": {
            "offset": "0x1F60"
        },
        "`dynamic initializer for 'initFunction''": {
            "offset": "0x1370"
        },
        "`dynamic initializer for 'initFunctionScript''": {
            "offset": "0x14A0"
        },
        "`dynamic initializer for 'initIoBuf''": {
            "offset": "0x2010"
        },
        "`dynamic initializer for 'tbb::detail::r1::concurrent_monitor_mutex::my_init_mutex''": {
            "offset": "0x21A0"
        },
        "`google::protobuf::Message::_InternalParse'::`2'::ReflectiveFieldParser::Field": {
            "offset": "0x7C090"
        },
        "`google::protobuf::Message::_InternalParse'::`2'::ReflectiveFieldParser::ParseGroup": {
            "offset": "0x7CA20"
        },
        "`google::protobuf::Message::_InternalParse'::`2'::ReflectiveFieldParser::ReflectiveFieldParser": {
            "offset": "0x7B960"
        },
        "`google::protobuf::Message::_InternalParse'::`2'::ReflectiveFieldParser::~ReflectiveFieldParser": {
            "offset": "0x7BD00"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>,<lambda_41af1ba482b752c39807db2ef15caf48> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>,<lambda_72ae5b0e2f813e08b01a5e2876e67561> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9F0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>,<lambda_7604da78e8f33a312c72ae5a43f9b93b> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9F0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>,<lambda_814d5e0b3a45fa1dd158672480f6c4ca> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9F0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>,<lambda_bf7610c50ebb1884e5917f6a81016c78> &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>,<lambda_bf7610c50ebb1884e5917f6a81016c78> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>,<lambda_f17ebabe33bc32be107ce6fff046b802> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x2E9F0"
        },
        "accumulate_fit": {
            "offset": "0x1A1280"
        },
        "aec_rdft_forward_128": {
            "offset": "0x1589F0"
        },
        "aec_rdft_init": {
            "offset": "0x158A40"
        },
        "aec_rdft_init_sse2": {
            "offset": "0x167D50"
        },
        "aec_rdft_inverse_128": {
            "offset": "0x158AC0"
        },
        "alg_quant": {
            "offset": "0x122480"
        },
        "alg_unquant": {
            "offset": "0x1225B0"
        },
        "alloc_trim_analysis": {
            "offset": "0xFCB50"
        },
        "amp2Log2": {
            "offset": "0x11A820"
        },
        "anti_collapse": {
            "offset": "0x115B00"
        },
        "apply_window": {
            "offset": "0x1AAE30"
        },
        "apsort": {
            "offset": "0x1A1490"
        },
        "atexit": {
            "offset": "0x1B0B64"
        },
        "bark_noise_hybridmp": {
            "offset": "0x1A14C0"
        },
        "biquad": {
            "offset": "0x1AB050"
        },
        "bitexact_log2tan": {
            "offset": "0x115EA0"
        },
        "bitrv2": {
            "offset": "0x164730"
        },
        "bitrv2_128_C": {
            "offset": "0x158B10"
        },
        "can_seek": {
            "offset": "0x19A980"
        },
        "capture_current_context": {
            "offset": "0x1B1518"
        },
        "capture_previous_context": {
            "offset": "0x1B1588"
        },
        "celt_decode_lost": {
            "offset": "0x10B630"
        },
        "celt_decode_with_ec": {
            "offset": "0x10C9A0"
        },
        "celt_decoder_get_size": {
            "offset": "0x10E080"
        },
        "celt_decoder_init": {
            "offset": "0x10E0C0"
        },
        "celt_encode_with_ec": {
            "offset": "0xFD6A0"
        },
        "celt_encoder_get_size": {
            "offset": "0x1004C0"
        },
        "celt_encoder_init": {
            "offset": "0x100500"
        },
        "celt_fir5": {
            "offset": "0x112DE0"
        },
        "celt_fir_c": {
            "offset": "0x121CF0"
        },
        "celt_iir": {
            "offset": "0x121FA0"
        },
        "celt_inner_prod_c": {
            "offset": "0xF5E80"
        },
        "celt_lcg_rand": {
            "offset": "0x115F40"
        },
        "celt_maxabs16": {
            "offset": "0x100610"
        },
        "celt_pitch_xcorr_c": {
            "offset": "0x113070"
        },
        "celt_plc_pitch_search": {
            "offset": "0x10E1A0"
        },
        "celt_preemphasis": {
            "offset": "0x1006F0"
        },
        "celt_synthesis": {
            "offset": "0x10E240"
        },
        "cft1st": {
            "offset": "0x164BF0"
        },
        "cft1st_128_C": {
            "offset": "0x158CE0"
        },
        "cft1st_128_SSE2": {
            "offset": "0x167D90"
        },
        "cftbsub": {
            "offset": "0x1650E0"
        },
        "cftbsub_128_C": {
            "offset": "0x1591A0"
        },
        "cftfsub": {
            "offset": "0x165340"
        },
        "cftfsub_128_C": {
            "offset": "0x159560"
        },
        "cftmdl": {
            "offset": "0x165580"
        },
        "cftmdl_128_C": {
            "offset": "0x159900"
        },
        "cftmdl_128_SSE2": {
            "offset": "0x167EB0"
        },
        "check_control_input": {
            "offset": "0x11CB90"
        },
        "check_init": {
            "offset": "0x1AB310"
        },
        "close_stream": {
            "offset": "0x19AA60"
        },
        "clt_compute_allocation": {
            "offset": "0x114A80"
        },
        "clt_mdct_backward_c": {
            "offset": "0x111060"
        },
        "clt_mdct_forward_c": {
            "offset": "0x111A90"
        },
        "comb_filter": {
            "offset": "0x112640"
        },
        "comb_filter_const_c": {
            "offset": "0x112A10"
        },
        "compute_band_corr": {
            "offset": "0x1AB500"
        },
        "compute_band_energies": {
            "offset": "0x115F50"
        },
        "compute_band_energy": {
            "offset": "0x1AB890"
        },
        "compute_bitrev_table": {
            "offset": "0x1ADF00"
        },
        "compute_dense": {
            "offset": "0x120470"
        },
        "compute_equiv_rate": {
            "offset": "0xF5F30"
        },
        "compute_frame_features": {
            "offset": "0x1ABBD0"
        },
        "compute_gru": {
            "offset": "0x1209B0"
        },
        "compute_mdcts": {
            "offset": "0x100C60"
        },
        "compute_opt_delay": {
            "offset": "0x1A9EA0"
        },
        "compute_redundancy_bytes": {
            "offset": "0xF6020"
        },
        "compute_rnn": {
            "offset": "0x1AE7A0"
        },
        "compute_silk_rate_for_hybrid": {
            "offset": "0xF60C0"
        },
        "compute_stereo_width": {
            "offset": "0xF61D0"
        },
        "compute_theta": {
            "offset": "0x116110"
        },
        "compute_vbr": {
            "offset": "0x101050"
        },
        "console::DPrintf<>": {
            "offset": "0x44A10"
        },
        "console::DPrintf<char const *>": {
            "offset": "0x44B00"
        },
        "console::DPrintfv": {
            "offset": "0x31360"
        },
        "console::PrintError<>": {
            "offset": "0x5C270"
        },
        "console::PrintWarning<>": {
            "offset": "0x44C00"
        },
        "console::PrintWarning<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2CE00"
        },
        "console::Printf<>": {
            "offset": "0x44E30"
        },
        "console::Printf<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2D050"
        },
        "console::Printfv": {
            "offset": "0x33700"
        },
        "createBiquadFilterNode": {
            "offset": "0x42B20"
        },
        "createWaveShaperNode": {
            "offset": "0x42B40"
        },
        "cwrsi": {
            "offset": "0x129460"
        },
        "dc_reject": {
            "offset": "0xF6560"
        },
        "dct": {
            "offset": "0x1AC9A0"
        },
        "debug::Alias": {
            "offset": "0xAD90"
        },
        "decode_packed_entry_number": {
            "offset": "0x1A1EC0"
        },
        "decode_pulses": {
            "offset": "0x129680"
        },
        "deemphasis": {
            "offset": "0x10E8F0"
        },
        "deemphasis_stereo_simple": {
            "offset": "0x10EDF0"
        },
        "deinterleave_hadamard": {
            "offset": "0x116A80"
        },
        "denormalise_bands": {
            "offset": "0x116DA0"
        },
        "dllmain_crt_dispatch": {
            "offset": "0x1B1000"
        },
        "dllmain_crt_process_attach": {
            "offset": "0x1B1050"
        },
        "dllmain_crt_process_detach": {
            "offset": "0x1B1168"
        },
        "dllmain_dispatch": {
            "offset": "0x1B11EC"
        },
        "downmix_and_resample": {
            "offset": "0x107520"
        },
        "downmix_int": {
            "offset": "0xF68F0"
        },
        "dradf2": {
            "offset": "0x1A2040"
        },
        "dradf4": {
            "offset": "0x1A23F0"
        },
        "dradfg": {
            "offset": "0x1A2DC0"
        },
        "drftf1": {
            "offset": "0x1A46C0"
        },
        "dual_inner_prod_c": {
            "offset": "0x113210"
        },
        "dynalloc_analysis": {
            "offset": "0x101330"
        },
        "ec_dec_bit_logp": {
            "offset": "0x10F2A0"
        },
        "ec_dec_bits": {
            "offset": "0x10F2F0"
        },
        "ec_dec_icdf": {
            "offset": "0x10F370"
        },
        "ec_dec_init": {
            "offset": "0x10F3D0"
        },
        "ec_dec_normalize": {
            "offset": "0x10F420"
        },
        "ec_dec_uint": {
            "offset": "0x10F4C0"
        },
        "ec_dec_update": {
            "offset": "0x10F640"
        },
        "ec_decode": {
            "offset": "0x10F680"
        },
        "ec_decode_bin": {
            "offset": "0x10F6C0"
        },
        "ec_enc_bit_logp": {
            "offset": "0x1054C0"
        },
        "ec_enc_bits": {
            "offset": "0x1054F0"
        },
        "ec_enc_done": {
            "offset": "0x105580"
        },
        "ec_enc_icdf": {
            "offset": "0x105840"
        },
        "ec_enc_init": {
            "offset": "0x1058A0"
        },
        "ec_enc_normalize": {
            "offset": "0x1058D0"
        },
        "ec_enc_patch_initial_bits": {
            "offset": "0x1059E0"
        },
        "ec_enc_shrink": {
            "offset": "0x105A70"
        },
        "ec_enc_uint": {
            "offset": "0x105AB0"
        },
        "ec_encode": {
            "offset": "0x105BE0"
        },
        "ec_encode_bin": {
            "offset": "0x105C30"
        },
        "ec_laplace_decode": {
            "offset": "0x124450"
        },
        "ec_laplace_encode": {
            "offset": "0x124520"
        },
        "ec_tell_frac": {
            "offset": "0x112600"
        },
        "encode_multiframe_packet": {
            "offset": "0xF6CF0"
        },
        "encode_pulses": {
            "offset": "0x129710"
        },
        "encode_size": {
            "offset": "0x10F710"
        },
        "exp_rotation": {
            "offset": "0x122690"
        },
        "exp_rotation1": {
            "offset": "0x1228B0"
        },
        "extract_collapse_mask": {
            "offset": "0x122BE0"
        },
        "find_best_pitch": {
            "offset": "0x113360"
        },
        "fit_line": {
            "offset": "0x1A4910"
        },
        "floor0_free_info": {
            "offset": "0x19AA70"
        },
        "floor0_free_look": {
            "offset": "0x19AAA0"
        },
        "floor0_inverse1": {
            "offset": "0x19AC80"
        },
        "floor0_inverse2": {
            "offset": "0x19ADF0"
        },
        "floor0_look": {
            "offset": "0x19AC30"
        },
        "floor0_unpack": {
            "offset": "0x19AB00"
        },
        "floor1_encode": {
            "offset": "0x1A4F80"
        },
        "floor1_fit": {
            "offset": "0x1A56D0"
        },
        "floor1_free_info": {
            "offset": "0x19B100"
        },
        "floor1_free_look": {
            "offset": "0x19B130"
        },
        "floor1_interpolate_fit": {
            "offset": "0x1A5D80"
        },
        "floor1_inverse1": {
            "offset": "0x19BB90"
        },
        "floor1_inverse2": {
            "offset": "0x19BF30"
        },
        "floor1_look": {
            "offset": "0x19B7E0"
        },
        "floor1_pack": {
            "offset": "0x19B160"
        },
        "floor1_unpack": {
            "offset": "0x19B360"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::grow": {
            "offset": "0xE130"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::~basic_memory_buffer<char,500,std::allocator<char> >": {
            "offset": "0xAE50"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::grow": {
            "offset": "0x62760"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::~basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >": {
            "offset": "0x61C40"
        },
        "fmt::v8::detail::add_compare": {
            "offset": "0x61E70"
        },
        "fmt::v8::detail::assert_fail": {
            "offset": "0x62040"
        },
        "fmt::v8::detail::bigint::assign_pow10": {
            "offset": "0x62090"
        },
        "fmt::v8::detail::bigint::divmod_assign": {
            "offset": "0x62270"
        },
        "fmt::v8::detail::bigint::square": {
            "offset": "0x62B90"
        },
        "fmt::v8::detail::bigint::~bigint": {
            "offset": "0x61C40"
        },
        "fmt::v8::detail::buffer<char>::append<char>": {
            "offset": "0x3660"
        },
        "fmt::v8::detail::buffer<char>::try_resize": {
            "offset": "0x62E50"
        },
        "fmt::v8::detail::compare": {
            "offset": "0x621C0"
        },
        "fmt::v8::detail::count_digits": {
            "offset": "0xDF10"
        },
        "fmt::v8::detail::decimal_point_impl<char>": {
            "offset": "0x5E4E0"
        },
        "fmt::v8::detail::do_throw<fmt::v8::format_error>": {
            "offset": "0x3710"
        },
        "fmt::v8::detail::dragonbox::cache_accessor<double>::get_cached_power": {
            "offset": "0x62630"
        },
        "fmt::v8::detail::dragonbox::is_endpoint_integer<double>": {
            "offset": "0x603B0"
        },
        "fmt::v8::detail::dragonbox::remove_trailing_zeros": {
            "offset": "0x62970"
        },
        "fmt::v8::detail::dragonbox::shorter_interval_case<float>": {
            "offset": "0x603E0"
        },
        "fmt::v8::detail::dragonbox::to_decimal<double>": {
            "offset": "0x610A0"
        },
        "fmt::v8::detail::dragonbox::to_decimal<float>": {
            "offset": "0x60C70"
        },
        "fmt::v8::detail::error_handler::on_error": {
            "offset": "0x628F0"
        },
        "fmt::v8::detail::fallback_format<double>": {
            "offset": "0x5E5F0"
        },
        "fmt::v8::detail::fallback_format<long double>": {
            "offset": "0x5E5F0"
        },
        "fmt::v8::detail::fmt_snprintf": {
            "offset": "0x625C0"
        },
        "fmt::v8::detail::for_each_codepoint<`fmt::v8::detail::compute_width'::`2'::count_code_points>": {
            "offset": "0x3740"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64,fmt::v8::appender,0>": {
            "offset": "0x5FAA0"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64>": {
            "offset": "0x3A10"
        },
        "fmt::v8::detail::format_decimal<char,unsigned int,fmt::v8::appender,0>": {
            "offset": "0x5F980"
        },
        "fmt::v8::detail::format_float<double>": {
            "offset": "0x5E030"
        },
        "fmt::v8::detail::format_float<long double>": {
            "offset": "0x5FBE0"
        },
        "fmt::v8::detail::format_uint<4,char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x3AF0"
        },
        "fmt::v8::detail::grisu_gen_digits<fmt::v8::detail::fixed_handler>": {
            "offset": "0x5FF40"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,char>": {
            "offset": "0x3C10"
        },
        "fmt::v8::detail::parse_header<char,<lambda_10b59f138e704e35b5296527d0235f76> >": {
            "offset": "0x3D70"
        },
        "fmt::v8::detail::parse_nonnegative_int<char>": {
            "offset": "0x3FD0"
        },
        "fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>::write_null_pointer": {
            "offset": "0xECA0"
        },
        "fmt::v8::detail::snprintf_float<double>": {
            "offset": "0x605F0"
        },
        "fmt::v8::detail::snprintf_float<long double>": {
            "offset": "0x60870"
        },
        "fmt::v8::detail::thousands_sep_impl<char>": {
            "offset": "0x60B00"
        },
        "fmt::v8::detail::thousands_sep_result<char>::~thousands_sep_result<char>": {
            "offset": "0xAEB0"
        },
        "fmt::v8::detail::to_unsigned<int>": {
            "offset": "0x40A0"
        },
        "fmt::v8::detail::utf8_decode": {
            "offset": "0xEAE0"
        },
        "fmt::v8::detail::vprintf<char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x56A0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,double,0>": {
            "offset": "0x66A0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,float,0>": {
            "offset": "0x6250"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,long double,0>": {
            "offset": "0x6AE0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned __int64,0>": {
            "offset": "0x61700"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned int,0>": {
            "offset": "0x615E0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender>": {
            "offset": "0x6180"
        },
        "fmt::v8::detail::write_char<char,fmt::v8::appender>": {
            "offset": "0x6F20"
        },
        "fmt::v8::detail::write_exponent<char,fmt::v8::appender>": {
            "offset": "0x6F60"
        },
        "fmt::v8::detail::write_float<fmt::v8::appender,fmt::v8::detail::big_decimal_fp,char>": {
            "offset": "0x70F0"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x7AB0"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned int>": {
            "offset": "0x74C0"
        },
        "fmt::v8::detail::write_int_data<char>::write_int_data<char>": {
            "offset": "0xAA40"
        },
        "fmt::v8::detail::write_int_localized<fmt::v8::appender,unsigned __int64,char>": {
            "offset": "0x81E0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_051aec1ce4ed0271119623a7e83ac6a5> &>": {
            "offset": "0x8600"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_22cb150d85fca5a3ac6a96f517638e39> &>": {
            "offset": "0x87D0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_69652fb90da4a77ba8cf5fef5ea19cdd> >": {
            "offset": "0x8970"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_fbd162939e03e0c955beb05a33c24f5e> &>": {
            "offset": "0x8970"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_02a1634acea1c2868026d163185cc0d5> &>": {
            "offset": "0x8B00"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06b2adfe852a46c8d65fe26cc7c8ca5d> &>": {
            "offset": "0x8D20"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06f64a48a5b4f184684d74740837f1c7> &>": {
            "offset": "0x8EA0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_2d30ec7f416bbcee3bc8a87df0c22c03> >": {
            "offset": "0xA630"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_33ba7a720adff5c90e1946d777cb5230> &>": {
            "offset": "0x9030"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_4ea56d52f8212d84933fa76e5a159b3f> &>": {
            "offset": "0x9250"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_514469ad4ff2f796c2a70ef6994dff64> &>": {
            "offset": "0x94F0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_596cc5dacf733e82dcb56ca6ee54b81f> &>": {
            "offset": "0x9710"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_686459aaae64d4cbdde6763d637485ac> &>": {
            "offset": "0x9890"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_694eb9c30a49e7dae164c077f09b5a7f> &>": {
            "offset": "0x9AB0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_8cce229a1891be08a4c6e75623ca3fd6> &>": {
            "offset": "0x9CD0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_b9c069f91a736dafbdb5ba8344e9f4c8> &>": {
            "offset": "0x9E50"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_cb4d4b26b782de201d2a0edc777aea57> &>": {
            "offset": "0xA070"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_de0fdbc03b7ebc9cd9291e836878da40> &>": {
            "offset": "0xA1F0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_f811a0db88237a09377d34dce98c0f31> &>": {
            "offset": "0xA410"
        },
        "fmt::v8::detail::write_ptr<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0xA7C0"
        },
        "fmt::v8::format_error::format_error": {
            "offset": "0xAC40"
        },
        "fmt::v8::format_error::~format_error": {
            "offset": "0xAFE0"
        },
        "fmt::v8::sprintf<char [43],std::basic_string_view<char,std::char_traits<char> >,char const *,char>": {
            "offset": "0x64F20"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4510"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x42F0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x41C0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x40D0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4510"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x43E0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4640"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x51A0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4BD0"
        },
        "fmt::v8::vsprintf<std::basic_string_view<char,std::char_traits<char> >,char>": {
            "offset": "0x657C0"
        },
        "forward_transform": {
            "offset": "0x1ACB90"
        },
        "fprintf": {
            "offset": "0xED60"
        },
        "frame_size_select": {
            "offset": "0xF6FB0"
        },
        "fwEvent<>::ConnectInternal": {
            "offset": "0x30D20"
        },
        "fwPlatformString::~fwPlatformString": {
            "offset": "0xB000"
        },
        "fwRefContainer<IMumbleAudioSink>::~fwRefContainer<IMumbleAudioSink>": {
            "offset": "0x39DE0"
        },
        "fwRefContainer<MumbleClient>::~fwRefContainer<MumbleClient>": {
            "offset": "0x39DE0"
        },
        "fwRefContainer<net::UvLoopHolder>::~fwRefContainer<net::UvLoopHolder>": {
            "offset": "0x39DE0"
        },
        "fwRefCountable::AddRef": {
            "offset": "0x67040"
        },
        "fwRefCountable::Release": {
            "offset": "0x67050"
        },
        "fwRefCountable::~fwRefCountable": {
            "offset": "0x67030"
        },
        "gain_fade": {
            "offset": "0xF7080"
        },
        "gemm_accum": {
            "offset": "0x121420"
        },
        "gen_toc": {
            "offset": "0xF75B0"
        },
        "getSource": {
            "offset": "0x43890"
        },
        "get_length": {
            "offset": "0x19A930"
        },
        "get_pos": {
            "offset": "0x19A8F0"
        },
        "google::protobuf::Arena::CreateArray<char>": {
            "offset": "0x6D890"
        },
        "google::protobuf::Arena::CreateArray<google::protobuf::internal::ExtensionSet::KeyValue>": {
            "offset": "0x8BFB0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ACL>": {
            "offset": "0x103E0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ACL_ChanACL>": {
            "offset": "0x10460"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ACL_ChanGroup>": {
            "offset": "0x104E0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::Authenticate>": {
            "offset": "0x10560"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::BanList>": {
            "offset": "0x105E0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::BanList_BanEntry>": {
            "offset": "0x106A0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ChannelRemove>": {
            "offset": "0x10720"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ChannelState>": {
            "offset": "0x107A0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::CodecVersion>": {
            "offset": "0x10820"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ContextAction>": {
            "offset": "0x108A0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ContextActionModify>": {
            "offset": "0x10960"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::CryptSetup>": {
            "offset": "0x109E0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::PermissionDenied>": {
            "offset": "0x10AA0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::PermissionQuery>": {
            "offset": "0x10B20"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::Ping>": {
            "offset": "0x10BA0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::QueryUsers>": {
            "offset": "0x10C30"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::Reject>": {
            "offset": "0x10CB0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::RequestBlob>": {
            "offset": "0x10D30"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ServerConfig>": {
            "offset": "0x10E10"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::ServerSync>": {
            "offset": "0x10E90"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::SuggestConfig>": {
            "offset": "0x10F50"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::TextMessage>": {
            "offset": "0x10FD0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::UDPTunnel>": {
            "offset": "0x11050"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::UserList>": {
            "offset": "0x11100"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::UserList_User>": {
            "offset": "0x111B0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::UserRemove>": {
            "offset": "0x11230"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::UserState>": {
            "offset": "0x112B0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::UserStats>": {
            "offset": "0x11330"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::UserStats_Stats>": {
            "offset": "0x113B0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::Version>": {
            "offset": "0x11430"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::VoiceTarget>": {
            "offset": "0x114B0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<MumbleProto::VoiceTarget_Target>": {
            "offset": "0x11530"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>": {
            "offset": "0xD7FA0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>": {
            "offset": "0xD7FB0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>": {
            "offset": "0xD8060"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>": {
            "offset": "0xD80F0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>": {
            "offset": "0xD81F0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>": {
            "offset": "0xD8280"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>": {
            "offset": "0xD8350"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>": {
            "offset": "0xD8410"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>": {
            "offset": "0xD84E0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>": {
            "offset": "0xD85B0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>": {
            "offset": "0xD8690"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>": {
            "offset": "0xD8760"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>": {
            "offset": "0xD8770"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>": {
            "offset": "0xD8830"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>": {
            "offset": "0xD88F0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>": {
            "offset": "0xD89B0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>": {
            "offset": "0xD8A80"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>": {
            "offset": "0xD8B50"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>": {
            "offset": "0xD8C20"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>": {
            "offset": "0xD8CF0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>": {
            "offset": "0xD8DC0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>": {
            "offset": "0xD8E90"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>": {
            "offset": "0xD8F70"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>": {
            "offset": "0xD9040"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>": {
            "offset": "0xD9100"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>": {
            "offset": "0xD91F0"
        },
        "google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>": {
            "offset": "0xD92D0"
        },
        "google::protobuf::Arena::CreateMessageInternal<google::protobuf::DescriptorProto>": {
            "offset": "0xD9390"
        },
        "google::protobuf::Arena::CreateMessageInternal<google::protobuf::FileDescriptorProto>": {
            "offset": "0xD94F0"
        },
        "google::protobuf::Arena::OnArenaAllocation": {
            "offset": "0x6CD50"
        },
        "google::protobuf::Arena::Own<google::protobuf::Message>": {
            "offset": "0x11C40"
        },
        "google::protobuf::Arena::Own<google::protobuf::MessageLite>": {
            "offset": "0x11C40"
        },
        "google::protobuf::AssignDescriptorsHelper::AssignMessageDescriptor": {
            "offset": "0x74E10"
        },
        "google::protobuf::CEscape": {
            "offset": "0x89980"
        },
        "google::protobuf::CEscapeAndAppend": {
            "offset": "0x89A00"
        },
        "google::protobuf::DelocalizeRadix": {
            "offset": "0x89C60"
        },
        "google::protobuf::Descriptor::CopyTo": {
            "offset": "0xA6450"
        },
        "google::protobuf::Descriptor::DebugString": {
            "offset": "0xAA3B0"
        },
        "google::protobuf::Descriptor::FindExtensionRangeContainingNumber": {
            "offset": "0xAFFC0"
        },
        "google::protobuf::Descriptor::FindFieldByLowercaseName": {
            "offset": "0xB0000"
        },
        "google::protobuf::Descriptor::FindFieldByName": {
            "offset": "0xB0180"
        },
        "google::protobuf::Descriptor::FindFieldByNumber": {
            "offset": "0xB01C0"
        },
        "google::protobuf::Descriptor::FindReservedRangeContainingNumber": {
            "offset": "0xB0590"
        },
        "google::protobuf::Descriptor::GetLocationPath": {
            "offset": "0xB1740"
        },
        "google::protobuf::DescriptorBuilder::AddError": {
            "offset": "0x9B6E0"
        },
        "google::protobuf::DescriptorBuilder::AddImportError": {
            "offset": "0x9B970"
        },
        "google::protobuf::DescriptorBuilder::AddNotDefinedError": {
            "offset": "0x9BDC0"
        },
        "google::protobuf::DescriptorBuilder::AddPackage": {
            "offset": "0x9C970"
        },
        "google::protobuf::DescriptorBuilder::AddRecursiveImportError": {
            "offset": "0x9D310"
        },
        "google::protobuf::DescriptorBuilder::AddSymbol": {
            "offset": "0x9D5F0"
        },
        "google::protobuf::DescriptorBuilder::AddTwiceListedError": {
            "offset": "0x9E1C0"
        },
        "google::protobuf::DescriptorBuilder::AddWarning": {
            "offset": "0x9E420"
        },
        "google::protobuf::DescriptorBuilder::AllocateNameString": {
            "offset": "0x9E830"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::MethodDescriptor>": {
            "offset": "0x92B10"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor::ExtensionRange>": {
            "offset": "0x92CF0"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor>": {
            "offset": "0x93090"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumDescriptor>": {
            "offset": "0x93430"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumValueDescriptor>": {
            "offset": "0x937D0"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FieldDescriptor>": {
            "offset": "0x93B70"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FileDescriptor>": {
            "offset": "0x93F10"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::MethodDescriptor>": {
            "offset": "0x942B0"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::OneofDescriptor>": {
            "offset": "0x94650"
        },
        "google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::ServiceDescriptor>": {
            "offset": "0x949F0"
        },
        "google::protobuf::DescriptorBuilder::BuildEnum": {
            "offset": "0x9EA60"
        },
        "google::protobuf::DescriptorBuilder::BuildEnumValue": {
            "offset": "0x9FA40"
        },
        "google::protobuf::DescriptorBuilder::BuildExtensionRange": {
            "offset": "0xA05D0"
        },
        "google::protobuf::DescriptorBuilder::BuildFieldOrExtension": {
            "offset": "0xA0930"
        },
        "google::protobuf::DescriptorBuilder::BuildFile": {
            "offset": "0xA1FF0"
        },
        "google::protobuf::DescriptorBuilder::BuildFileImpl": {
            "offset": "0xA25D0"
        },
        "google::protobuf::DescriptorBuilder::BuildMessage": {
            "offset": "0xA3C30"
        },
        "google::protobuf::DescriptorBuilder::BuildOneof": {
            "offset": "0xA5440"
        },
        "google::protobuf::DescriptorBuilder::BuildService": {
            "offset": "0xA5640"
        },
        "google::protobuf::DescriptorBuilder::CheckEnumValueUniqueness": {
            "offset": "0xA5970"
        },
        "google::protobuf::DescriptorBuilder::CrossLinkField": {
            "offset": "0xA78A0"
        },
        "google::protobuf::DescriptorBuilder::CrossLinkFile": {
            "offset": "0xA91D0"
        },
        "google::protobuf::DescriptorBuilder::CrossLinkMessage": {
            "offset": "0xA9390"
        },
        "google::protobuf::DescriptorBuilder::CrossLinkMethod": {
            "offset": "0xA9CA0"
        },
        "google::protobuf::DescriptorBuilder::DescriptorBuilder": {
            "offset": "0x99430"
        },
        "google::protobuf::DescriptorBuilder::DetectMapConflicts": {
            "offset": "0xAE100"
        },
        "google::protobuf::DescriptorBuilder::FindSymbol": {
            "offset": "0xB05D0"
        },
        "google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps": {
            "offset": "0xB0A10"
        },
        "google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper": {
            "offset": "0xB0AA0"
        },
        "google::protobuf::DescriptorBuilder::LogUnusedDependency": {
            "offset": "0xB4C20"
        },
        "google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder": {
            "offset": "0xB4EE0"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::AddNameError": {
            "offset": "0x9BD90"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::AddValueError": {
            "offset": "0x9E3F0"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting": {
            "offset": "0x9E510"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension": {
            "offset": "0xAFBE0"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder": {
            "offset": "0x9A9B0"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet": {
            "offset": "0xAEF50"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretOptions": {
            "offset": "0xB25D0"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption": {
            "offset": "0xB3000"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption": {
            "offset": "0xB7990"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32": {
            "offset": "0xB8490"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64": {
            "offset": "0xB8570"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue": {
            "offset": "0xB8940"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::UpdateSourceCodeInfo": {
            "offset": "0xBAFA0"
        },
        "google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter": {
            "offset": "0x9ABA0"
        },
        "google::protobuf::DescriptorBuilder::RecordPublicDependencies": {
            "offset": "0xB6610"
        },
        "google::protobuf::DescriptorBuilder::ValidateEnumOptions": {
            "offset": "0xBB4F0"
        },
        "google::protobuf::DescriptorBuilder::ValidateFieldOptions": {
            "offset": "0xBBBB0"
        },
        "google::protobuf::DescriptorBuilder::ValidateFileOptions": {
            "offset": "0xBC180"
        },
        "google::protobuf::DescriptorBuilder::ValidateJSType": {
            "offset": "0xBC870"
        },
        "google::protobuf::DescriptorBuilder::ValidateMapEntry": {
            "offset": "0xBCAE0"
        },
        "google::protobuf::DescriptorBuilder::ValidateMessageOptions": {
            "offset": "0xBCE50"
        },
        "google::protobuf::DescriptorBuilder::ValidateProto3Enum": {
            "offset": "0xBD1B0"
        },
        "google::protobuf::DescriptorBuilder::ValidateProto3Field": {
            "offset": "0xBD2E0"
        },
        "google::protobuf::DescriptorBuilder::ValidateProto3Message": {
            "offset": "0xBDAD0"
        },
        "google::protobuf::DescriptorBuilder::ValidateSymbolName": {
            "offset": "0xBE620"
        },
        "google::protobuf::DescriptorBuilder::~DescriptorBuilder": {
            "offset": "0x9A9C0"
        },
        "google::protobuf::DescriptorDatabase::FindAllExtensionNumbers": {
            "offset": "0xF830"
        },
        "google::protobuf::DescriptorDatabase::FindAllFileNames": {
            "offset": "0xF830"
        },
        "google::protobuf::DescriptorDatabase::~DescriptorDatabase": {
            "offset": "0xF1C10"
        },
        "google::protobuf::DescriptorPool::BuildFileFromDatabase": {
            "offset": "0xA2500"
        },
        "google::protobuf::DescriptorPool::CrossLinkOnDemandHelper": {
            "offset": "0xAA1A0"
        },
        "google::protobuf::DescriptorPool::FindExtensionByNumber": {
            "offset": "0xAFD40"
        },
        "google::protobuf::DescriptorPool::FindExtensionByPrintableName": {
            "offset": "0xAFEC0"
        },
        "google::protobuf::DescriptorPool::FindFileByName": {
            "offset": "0xB0360"
        },
        "google::protobuf::DescriptorPool::FindMessageTypeByName": {
            "offset": "0xB0450"
        },
        "google::protobuf::DescriptorPool::InternalAddGeneratedFile": {
            "offset": "0xB1E40"
        },
        "google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType": {
            "offset": "0xB48F0"
        },
        "google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld": {
            "offset": "0xB5B50"
        },
        "google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld": {
            "offset": "0xB5C80"
        },
        "google::protobuf::DescriptorPool::Tables::AddExtension": {
            "offset": "0x9B7C0"
        },
        "google::protobuf::DescriptorPool::Tables::AddSymbol": {
            "offset": "0x9E110"
        },
        "google::protobuf::DescriptorPool::Tables::Allocate<google::protobuf::FileDescriptor>": {
            "offset": "0x92AB0"
        },
        "google::protobuf::DescriptorPool::Tables::AllocateBytes": {
            "offset": "0x9E740"
        },
        "google::protobuf::DescriptorPool::Tables::AllocateEmptyString": {
            "offset": "0x9E7B0"
        },
        "google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic": {
            "offset": "0x9E960"
        },
        "google::protobuf::DescriptorPool::Tables::AllocateString": {
            "offset": "0x9E9D0"
        },
        "google::protobuf::DescriptorPool::Tables::FindByNameHelper": {
            "offset": "0xAF6F0"
        },
        "google::protobuf::DescriptorPool::Tables::FindExtension": {
            "offset": "0xAFCE0"
        },
        "google::protobuf::DescriptorPool::Tables::FindFile": {
            "offset": "0xB0270"
        },
        "google::protobuf::DescriptorPool::Tables::FindSymbol": {
            "offset": "0xB08E0"
        },
        "google::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint": {
            "offset": "0xB7180"
        },
        "google::protobuf::DescriptorPool::Tables::Tables": {
            "offset": "0x998C0"
        },
        "google::protobuf::DescriptorPool::Tables::~Tables": {
            "offset": "0x9AF30"
        },
        "google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase": {
            "offset": "0xBAD00"
        },
        "google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase": {
            "offset": "0xBADC0"
        },
        "google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase": {
            "offset": "0xBAE90"
        },
        "google::protobuf::DescriptorPool::generated_pool": {
            "offset": "0xC02B0"
        },
        "google::protobuf::DescriptorPool::internal_generated_pool": {
            "offset": "0xC0420"
        },
        "google::protobuf::DescriptorProto::ByteSizeLong": {
            "offset": "0xDD7E0"
        },
        "google::protobuf::DescriptorProto::Clear": {
            "offset": "0xDFE70"
        },
        "google::protobuf::DescriptorProto::CopyFrom": {
            "offset": "0xE11D0"
        },
        "google::protobuf::DescriptorProto::DescriptorProto": {
            "offset": "0xDBA40"
        },
        "google::protobuf::DescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::DescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::DescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::DescriptorProto::GetMetadata": {
            "offset": "0xE20C0"
        },
        "google::protobuf::DescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE25D0"
        },
        "google::protobuf::DescriptorProto::IsInitialized": {
            "offset": "0xE48C0"
        },
        "google::protobuf::DescriptorProto::MergeFrom": {
            "offset": "0xE5270"
        },
        "google::protobuf::DescriptorProto::New": {
            "offset": "0xE7BE0"
        },
        "google::protobuf::DescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::DescriptorProto::_InternalParse": {
            "offset": "0xE8B10"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong": {
            "offset": "0xDDC90"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::Clear": {
            "offset": "0xE00F0"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::CopyFrom": {
            "offset": "0xE1240"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::DescriptorProto_ExtensionRange": {
            "offset": "0xDBB30"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::GetMetadata": {
            "offset": "0xE20F0"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2950"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::IsInitialized": {
            "offset": "0xE4A00"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::MergeFrom": {
            "offset": "0xE5390"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::New": {
            "offset": "0xE7C00"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::DescriptorProto_ExtensionRange::_InternalParse": {
            "offset": "0xE92A0"
        },
        "google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong": {
            "offset": "0xDDE00"
        },
        "google::protobuf::DescriptorProto_ReservedRange::Clear": {
            "offset": "0xE0150"
        },
        "google::protobuf::DescriptorProto_ReservedRange::CopyFrom": {
            "offset": "0xE1300"
        },
        "google::protobuf::DescriptorProto_ReservedRange::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::DescriptorProto_ReservedRange::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::DescriptorProto_ReservedRange::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::DescriptorProto_ReservedRange::GetMetadata": {
            "offset": "0xE2120"
        },
        "google::protobuf::DescriptorProto_ReservedRange::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2A20"
        },
        "google::protobuf::DescriptorProto_ReservedRange::IsInitialized": {
            "offset": "0xF840"
        },
        "google::protobuf::DescriptorProto_ReservedRange::MergeFrom": {
            "offset": "0xE5470"
        },
        "google::protobuf::DescriptorProto_ReservedRange::New": {
            "offset": "0xE7C20"
        },
        "google::protobuf::DescriptorProto_ReservedRange::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::DescriptorProto_ReservedRange::_InternalParse": {
            "offset": "0xE9570"
        },
        "google::protobuf::DynamicMapSorter::Sort": {
            "offset": "0x883C0"
        },
        "google::protobuf::DynamicMessage::GetArena": {
            "offset": "0x6CD70"
        },
        "google::protobuf::DynamicMessage::GetCachedSize": {
            "offset": "0xF4610"
        },
        "google::protobuf::DynamicMessage::GetMetadata": {
            "offset": "0xF4620"
        },
        "google::protobuf::DynamicMessage::New": {
            "offset": "0xF5100"
        },
        "google::protobuf::DynamicMessage::SetCachedSize": {
            "offset": "0xF5110"
        },
        "google::protobuf::DynamicMessage::SharedCtor": {
            "offset": "0xF5120"
        },
        "google::protobuf::DynamicMessage::~DynamicMessage": {
            "offset": "0xF3FA0"
        },
        "google::protobuf::EncodedDescriptorDatabase::Add": {
            "offset": "0xF1E90"
        },
        "google::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase": {
            "offset": "0xF1A90"
        },
        "google::protobuf::EncodedDescriptorDatabase::FindAllExtensionNumbers": {
            "offset": "0xF3660"
        },
        "google::protobuf::EncodedDescriptorDatabase::FindAllFileNames": {
            "offset": "0xF3670"
        },
        "google::protobuf::EncodedDescriptorDatabase::FindFileByName": {
            "offset": "0xF3750"
        },
        "google::protobuf::EncodedDescriptorDatabase::FindFileContainingExtension": {
            "offset": "0xF37F0"
        },
        "google::protobuf::EncodedDescriptorDatabase::FindFileContainingSymbol": {
            "offset": "0xF38F0"
        },
        "google::protobuf::EnumDescriptor::CopyTo": {
            "offset": "0xA6950"
        },
        "google::protobuf::EnumDescriptor::DebugString": {
            "offset": "0xAB870"
        },
        "google::protobuf::EnumDescriptor::FindValueByName": {
            "offset": "0xB0BA0"
        },
        "google::protobuf::EnumDescriptor::FindValueByNumber": {
            "offset": "0xB0BE0"
        },
        "google::protobuf::EnumDescriptor::FindValueByNumberCreatingIfUnknown": {
            "offset": "0xB0C60"
        },
        "google::protobuf::EnumDescriptor::GetLocationPath": {
            "offset": "0xB1820"
        },
        "google::protobuf::EnumDescriptorProto::ByteSizeLong": {
            "offset": "0xDDE90"
        },
        "google::protobuf::EnumDescriptorProto::Clear": {
            "offset": "0xE0180"
        },
        "google::protobuf::EnumDescriptorProto::CopyFrom": {
            "offset": "0xE13A0"
        },
        "google::protobuf::EnumDescriptorProto::EnumDescriptorProto": {
            "offset": "0xDBB90"
        },
        "google::protobuf::EnumDescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::EnumDescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::EnumDescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::EnumDescriptorProto::GetMetadata": {
            "offset": "0xE2150"
        },
        "google::protobuf::EnumDescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2AD0"
        },
        "google::protobuf::EnumDescriptorProto::IsInitialized": {
            "offset": "0xE4A40"
        },
        "google::protobuf::EnumDescriptorProto::MergeFrom": {
            "offset": "0xE5680"
        },
        "google::protobuf::EnumDescriptorProto::New": {
            "offset": "0xE7C40"
        },
        "google::protobuf::EnumDescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::EnumDescriptorProto::_InternalParse": {
            "offset": "0xE9720"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong": {
            "offset": "0xDDE00"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear": {
            "offset": "0xE0150"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom": {
            "offset": "0xE1410"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMetadata": {
            "offset": "0xE2180"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2A20"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::IsInitialized": {
            "offset": "0xF840"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom": {
            "offset": "0xE56E0"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::New": {
            "offset": "0xE7C60"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse": {
            "offset": "0xE9570"
        },
        "google::protobuf::EnumOptions::ByteSizeLong": {
            "offset": "0xDE1A0"
        },
        "google::protobuf::EnumOptions::Clear": {
            "offset": "0xE02A0"
        },
        "google::protobuf::EnumOptions::CopyFrom": {
            "offset": "0xE14E0"
        },
        "google::protobuf::EnumOptions::EnumOptions": {
            "offset": "0xDBC20"
        },
        "google::protobuf::EnumOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::EnumOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::EnumOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::EnumOptions::GetMetadata": {
            "offset": "0xE21B0"
        },
        "google::protobuf::EnumOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2C80"
        },
        "google::protobuf::EnumOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::EnumOptions::MergeFrom": {
            "offset": "0xE5820"
        },
        "google::protobuf::EnumOptions::New": {
            "offset": "0xE7C80"
        },
        "google::protobuf::EnumOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::EnumOptions::_InternalParse": {
            "offset": "0xE9C10"
        },
        "google::protobuf::EnumOptions::default_instance": {
            "offset": "0xEE7C0"
        },
        "google::protobuf::EnumValueDescriptor::DebugString": {
            "offset": "0xAC410"
        },
        "google::protobuf::EnumValueDescriptorProto::ByteSizeLong": {
            "offset": "0xDE270"
        },
        "google::protobuf::EnumValueDescriptorProto::Clear": {
            "offset": "0xE0330"
        },
        "google::protobuf::EnumValueDescriptorProto::CopyFrom": {
            "offset": "0xE1550"
        },
        "google::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto": {
            "offset": "0xDBC90"
        },
        "google::protobuf::EnumValueDescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::EnumValueDescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::EnumValueDescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::EnumValueDescriptorProto::GetMetadata": {
            "offset": "0xE21E0"
        },
        "google::protobuf::EnumValueDescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2D70"
        },
        "google::protobuf::EnumValueDescriptorProto::IsInitialized": {
            "offset": "0xE4B30"
        },
        "google::protobuf::EnumValueDescriptorProto::MergeFrom": {
            "offset": "0xE5990"
        },
        "google::protobuf::EnumValueDescriptorProto::New": {
            "offset": "0xE7CA0"
        },
        "google::protobuf::EnumValueDescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::EnumValueDescriptorProto::_InternalParse": {
            "offset": "0xE9E90"
        },
        "google::protobuf::EnumValueOptions::ByteSizeLong": {
            "offset": "0xDE400"
        },
        "google::protobuf::EnumValueOptions::Clear": {
            "offset": "0xE03B0"
        },
        "google::protobuf::EnumValueOptions::CopyFrom": {
            "offset": "0xE15F0"
        },
        "google::protobuf::EnumValueOptions::EnumValueOptions": {
            "offset": "0xDBCF0"
        },
        "google::protobuf::EnumValueOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::EnumValueOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::EnumValueOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::EnumValueOptions::GetMetadata": {
            "offset": "0xE2210"
        },
        "google::protobuf::EnumValueOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2E40"
        },
        "google::protobuf::EnumValueOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::EnumValueOptions::MergeFrom": {
            "offset": "0xE5AC0"
        },
        "google::protobuf::EnumValueOptions::New": {
            "offset": "0xE7CC0"
        },
        "google::protobuf::EnumValueOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::EnumValueOptions::_InternalParse": {
            "offset": "0xEA170"
        },
        "google::protobuf::EnumValueOptions::default_instance": {
            "offset": "0xEE7F0"
        },
        "google::protobuf::ExistingFileMatchesProto": {
            "offset": "0xAF450"
        },
        "google::protobuf::ExtensionRangeOptions::ByteSizeLong": {
            "offset": "0xDE4B0"
        },
        "google::protobuf::ExtensionRangeOptions::Clear": {
            "offset": "0xE0440"
        },
        "google::protobuf::ExtensionRangeOptions::CopyFrom": {
            "offset": "0xE1690"
        },
        "google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions": {
            "offset": "0xDBD60"
        },
        "google::protobuf::ExtensionRangeOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::ExtensionRangeOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::ExtensionRangeOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::ExtensionRangeOptions::GetMetadata": {
            "offset": "0xE2240"
        },
        "google::protobuf::ExtensionRangeOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2F00"
        },
        "google::protobuf::ExtensionRangeOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::ExtensionRangeOptions::MergeFrom": {
            "offset": "0xE5BD0"
        },
        "google::protobuf::ExtensionRangeOptions::New": {
            "offset": "0xE7CE0"
        },
        "google::protobuf::ExtensionRangeOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::ExtensionRangeOptions::_InternalParse": {
            "offset": "0xEA370"
        },
        "google::protobuf::ExtensionRangeOptions::default_instance": {
            "offset": "0xEE820"
        },
        "google::protobuf::FastInt32ToBuffer": {
            "offset": "0x89D20"
        },
        "google::protobuf::FastInt32ToBufferLeft": {
            "offset": "0x89E00"
        },
        "google::protobuf::FastInt64ToBuffer": {
            "offset": "0x89E20"
        },
        "google::protobuf::FastInt64ToBufferLeft": {
            "offset": "0x89F20"
        },
        "google::protobuf::FastUInt32ToBufferLeft": {
            "offset": "0x89F40"
        },
        "google::protobuf::FastUInt64ToBufferLeft": {
            "offset": "0x8A0F0"
        },
        "google::protobuf::FatalException::FatalException": {
            "offset": "0x69660"
        },
        "google::protobuf::FatalException::what": {
            "offset": "0x6A500"
        },
        "google::protobuf::FatalException::~FatalException": {
            "offset": "0x696E0"
        },
        "google::protobuf::FieldDescriptor::CopyTo": {
            "offset": "0xA6C50"
        },
        "google::protobuf::FieldDescriptor::DebugString": {
            "offset": "0xAC880"
        },
        "google::protobuf::FieldDescriptor::DebugStringWithOptions": {
            "offset": "0xADA50"
        },
        "google::protobuf::FieldDescriptor::DefaultValueAsString": {
            "offset": "0xADC70"
        },
        "google::protobuf::FieldDescriptor::FieldTypeNameDebugString": {
            "offset": "0xAF5F0"
        },
        "google::protobuf::FieldDescriptor::GetLocationPath": {
            "offset": "0xB1900"
        },
        "google::protobuf::FieldDescriptor::InternalTypeOnceInit": {
            "offset": "0xB20B0"
        },
        "google::protobuf::FieldDescriptor::PrintableNameForExtension": {
            "offset": "0xB65B0"
        },
        "google::protobuf::FieldDescriptor::TypeOnceInit": {
            "offset": "0xBAF90"
        },
        "google::protobuf::FieldDescriptor::default_value_enum": {
            "offset": "0xC0040"
        },
        "google::protobuf::FieldDescriptor::enum_type": {
            "offset": "0xC0170"
        },
        "google::protobuf::FieldDescriptor::index": {
            "offset": "0xD70C0"
        },
        "google::protobuf::FieldDescriptor::is_map_message_type": {
            "offset": "0xC0580"
        },
        "google::protobuf::FieldDescriptor::is_packed": {
            "offset": "0xC0590"
        },
        "google::protobuf::FieldDescriptor::message_type": {
            "offset": "0xC05F0"
        },
        "google::protobuf::FieldDescriptor::type": {
            "offset": "0x7AB90"
        },
        "google::protobuf::FieldDescriptorProto::ByteSizeLong": {
            "offset": "0xDE560"
        },
        "google::protobuf::FieldDescriptorProto::Clear": {
            "offset": "0xE04D0"
        },
        "google::protobuf::FieldDescriptorProto::CopyFrom": {
            "offset": "0xE1700"
        },
        "google::protobuf::FieldDescriptorProto::FieldDescriptorProto": {
            "offset": "0xDBDD0"
        },
        "google::protobuf::FieldDescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::FieldDescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::FieldDescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::FieldDescriptorProto::GetMetadata": {
            "offset": "0xE2270"
        },
        "google::protobuf::FieldDescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2FA0"
        },
        "google::protobuf::FieldDescriptorProto::IsInitialized": {
            "offset": "0xE4B70"
        },
        "google::protobuf::FieldDescriptorProto::MergeFrom": {
            "offset": "0xE5EC0"
        },
        "google::protobuf::FieldDescriptorProto::New": {
            "offset": "0xE7D00"
        },
        "google::protobuf::FieldDescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::FieldDescriptorProto::SharedDtor": {
            "offset": "0xE7FC0"
        },
        "google::protobuf::FieldDescriptorProto::_InternalParse": {
            "offset": "0xEA510"
        },
        "google::protobuf::FieldDescriptorProto::set_type_name": {
            "offset": "0xC0AA0"
        },
        "google::protobuf::FieldOptions::ByteSizeLong": {
            "offset": "0xDE780"
        },
        "google::protobuf::FieldOptions::Clear": {
            "offset": "0xE05E0"
        },
        "google::protobuf::FieldOptions::CopyFrom": {
            "offset": "0xE17A0"
        },
        "google::protobuf::FieldOptions::FieldOptions": {
            "offset": "0xDBE50"
        },
        "google::protobuf::FieldOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::FieldOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::FieldOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::FieldOptions::GetMetadata": {
            "offset": "0xE22A0"
        },
        "google::protobuf::FieldOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE31B0"
        },
        "google::protobuf::FieldOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::FieldOptions::MergeFrom": {
            "offset": "0xE6030"
        },
        "google::protobuf::FieldOptions::New": {
            "offset": "0xE7D20"
        },
        "google::protobuf::FieldOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::FieldOptions::_InternalParse": {
            "offset": "0xEAB00"
        },
        "google::protobuf::FieldOptions::default_instance": {
            "offset": "0xEE850"
        },
        "google::protobuf::FieldOptions_JSType_descriptor": {
            "offset": "0xE2040"
        },
        "google::protobuf::FileDescriptor::CopyTo": {
            "offset": "0xA70C0"
        },
        "google::protobuf::FileDescriptor::GetSourceLocation": {
            "offset": "0xB1A20"
        },
        "google::protobuf::FileDescriptor::InternalDependenciesOnceInit": {
            "offset": "0xB1F00"
        },
        "google::protobuf::FileDescriptor::SyntaxName": {
            "offset": "0xBA7D0"
        },
        "google::protobuf::FileDescriptor::dependency": {
            "offset": "0xC00D0"
        },
        "google::protobuf::FileDescriptorProto::ByteSizeLong": {
            "offset": "0xDE8C0"
        },
        "google::protobuf::FileDescriptorProto::Clear": {
            "offset": "0xE0680"
        },
        "google::protobuf::FileDescriptorProto::CopyFrom": {
            "offset": "0xE1810"
        },
        "google::protobuf::FileDescriptorProto::FileDescriptorProto": {
            "offset": "0xDBEC0"
        },
        "google::protobuf::FileDescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::FileDescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::FileDescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::FileDescriptorProto::GetMetadata": {
            "offset": "0xE22D0"
        },
        "google::protobuf::FileDescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE3330"
        },
        "google::protobuf::FileDescriptorProto::IsInitialized": {
            "offset": "0xE4BB0"
        },
        "google::protobuf::FileDescriptorProto::MergeFrom": {
            "offset": "0xE6420"
        },
        "google::protobuf::FileDescriptorProto::New": {
            "offset": "0xE7D40"
        },
        "google::protobuf::FileDescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::FileDescriptorProto::SharedDtor": {
            "offset": "0xE8220"
        },
        "google::protobuf::FileDescriptorProto::_InternalParse": {
            "offset": "0xEAFD0"
        },
        "google::protobuf::FileDescriptorProto::set_syntax": {
            "offset": "0xC0980"
        },
        "google::protobuf::FileDescriptorProto::~FileDescriptorProto": {
            "offset": "0xDC620"
        },
        "google::protobuf::FileDescriptorSet::ByteSizeLong": {
            "offset": "0xDEC70"
        },
        "google::protobuf::FileDescriptorSet::Clear": {
            "offset": "0xE0860"
        },
        "google::protobuf::FileDescriptorSet::CopyFrom": {
            "offset": "0xE1880"
        },
        "google::protobuf::FileDescriptorSet::FileDescriptorSet": {
            "offset": "0xDBFA0"
        },
        "google::protobuf::FileDescriptorSet::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::FileDescriptorSet::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::FileDescriptorSet::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::FileDescriptorSet::GetMetadata": {
            "offset": "0xE2300"
        },
        "google::protobuf::FileDescriptorSet::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE37D0"
        },
        "google::protobuf::FileDescriptorSet::IsInitialized": {
            "offset": "0xE4CE0"
        },
        "google::protobuf::FileDescriptorSet::MergeFrom": {
            "offset": "0xE6520"
        },
        "google::protobuf::FileDescriptorSet::New": {
            "offset": "0xE7D60"
        },
        "google::protobuf::FileDescriptorSet::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::FileDescriptorSet::_InternalParse": {
            "offset": "0xEB740"
        },
        "google::protobuf::FileDescriptorTables::AddFieldByNumber": {
            "offset": "0x9B920"
        },
        "google::protobuf::FileDescriptorTables::BuildLocationsByPath": {
            "offset": "0xA3A00"
        },
        "google::protobuf::FileDescriptorTables::FileDescriptorTables": {
            "offset": "0x99540"
        },
        "google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown": {
            "offset": "0xAF860"
        },
        "google::protobuf::FileDescriptorTables::FindFieldByLowercaseName": {
            "offset": "0xB0040"
        },
        "google::protobuf::FileDescriptorTables::FindFieldByNumber": {
            "offset": "0xB0200"
        },
        "google::protobuf::FileDescriptorTables::FindNestedSymbolOfType": {
            "offset": "0xB0480"
        },
        "google::protobuf::FileDescriptorTables::GetSourceLocation": {
            "offset": "0xB1BF0"
        },
        "google::protobuf::FileOptions::ByteSizeLong": {
            "offset": "0xDED10"
        },
        "google::protobuf::FileOptions::Clear": {
            "offset": "0xE08F0"
        },
        "google::protobuf::FileOptions::CopyFrom": {
            "offset": "0xE1920"
        },
        "google::protobuf::FileOptions::FileOptions": {
            "offset": "0xDC000"
        },
        "google::protobuf::FileOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::FileOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::FileOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::FileOptions::GetMetadata": {
            "offset": "0xE2330"
        },
        "google::protobuf::FileOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE38C0"
        },
        "google::protobuf::FileOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::FileOptions::MergeFrom": {
            "offset": "0xE6A70"
        },
        "google::protobuf::FileOptions::New": {
            "offset": "0xE7D80"
        },
        "google::protobuf::FileOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::FileOptions::SharedCtor": {
            "offset": "0xE7F40"
        },
        "google::protobuf::FileOptions::SharedDtor": {
            "offset": "0xE83D0"
        },
        "google::protobuf::FileOptions::_InternalParse": {
            "offset": "0xEB950"
        },
        "google::protobuf::FileOptions::default_instance": {
            "offset": "0xEE880"
        },
        "google::protobuf::FindPtrOrNull<std::unordered_map<google::protobuf::Descriptor const *,google::protobuf::Message const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *>,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > > >": {
            "offset": "0x7B120"
        },
        "google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > > >": {
            "offset": "0x94DF0"
        },
        "google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > >": {
            "offset": "0x94E60"
        },
        "google::protobuf::GeneratedCodeInfo::ByteSizeLong": {
            "offset": "0xDF050"
        },
        "google::protobuf::GeneratedCodeInfo::Clear": {
            "offset": "0xE0B00"
        },
        "google::protobuf::GeneratedCodeInfo::CopyFrom": {
            "offset": "0xE1990"
        },
        "google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo": {
            "offset": "0xDC060"
        },
        "google::protobuf::GeneratedCodeInfo::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::GeneratedCodeInfo::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::GeneratedCodeInfo::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::GeneratedCodeInfo::GetMetadata": {
            "offset": "0xE2360"
        },
        "google::protobuf::GeneratedCodeInfo::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE3C40"
        },
        "google::protobuf::GeneratedCodeInfo::IsInitialized": {
            "offset": "0xF840"
        },
        "google::protobuf::GeneratedCodeInfo::MergeFrom": {
            "offset": "0xE6B70"
        },
        "google::protobuf::GeneratedCodeInfo::New": {
            "offset": "0xE7DA0"
        },
        "google::protobuf::GeneratedCodeInfo::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::GeneratedCodeInfo::_InternalParse": {
            "offset": "0xEC3A0"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::ByteSizeLong": {
            "offset": "0xDF0F0"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::Clear": {
            "offset": "0xE0B90"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::CopyFrom": {
            "offset": "0xE1A00"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation": {
            "offset": "0xDC0C0"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::GetMetadata": {
            "offset": "0xE2390"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE3CD0"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::IsInitialized": {
            "offset": "0xF840"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom": {
            "offset": "0xE6CB0"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::New": {
            "offset": "0xE7DC0"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse": {
            "offset": "0xEC5B0"
        },
        "google::protobuf::LowerString": {
            "offset": "0xD26F0"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::Init": {
            "offset": "0xC4F30"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::CopyListToTree": {
            "offset": "0xC45F0"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::EraseFromLinkedList": {
            "offset": "0xC49B0"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper": {
            "offset": "0xC49E0"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InnerMap": {
            "offset": "0xC3250"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique": {
            "offset": "0xC5150"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUniqueInTree": {
            "offset": "0xC5270"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::Resize": {
            "offset": "0xC62C0"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::TreeConvert": {
            "offset": "0xC8010"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear": {
            "offset": "0xC8560"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::erase": {
            "offset": "0xC8700"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert": {
            "offset": "0xC8960"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::KeyValuePair const >::SearchFrom": {
            "offset": "0xC6650"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::KeyValuePair>::SearchFrom": {
            "offset": "0xC6650"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::KeyValuePair>::revalidate_if_necessary": {
            "offset": "0xC8B00"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::KeyValuePair::~KeyValuePair": {
            "offset": "0xC2C40"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::clear": {
            "offset": "0xC8420"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::insert<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::const_iterator>": {
            "offset": "0xC2D70"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::swap": {
            "offset": "0xC8BD0"
        },
        "google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::~Map<google::protobuf::MapKey,google::protobuf::MapValueRef>": {
            "offset": "0xC32F0"
        },
        "google::protobuf::MapIterator::MapIterator": {
            "offset": "0x736A0"
        },
        "google::protobuf::MapIterator::~MapIterator": {
            "offset": "0x73970"
        },
        "google::protobuf::MapKey::CopyFrom": {
            "offset": "0x83FE0"
        },
        "google::protobuf::MapKey::GetBoolValue": {
            "offset": "0x84A00"
        },
        "google::protobuf::MapKey::GetInt32Value": {
            "offset": "0x84C40"
        },
        "google::protobuf::MapKey::GetInt64Value": {
            "offset": "0x84E80"
        },
        "google::protobuf::MapKey::GetStringValue": {
            "offset": "0x851E0"
        },
        "google::protobuf::MapKey::GetUInt32Value": {
            "offset": "0x85420"
        },
        "google::protobuf::MapKey::GetUInt64Value": {
            "offset": "0x85660"
        },
        "google::protobuf::MapKey::SetType": {
            "offset": "0x790E0"
        },
        "google::protobuf::MapKey::type": {
            "offset": "0x88AF0"
        },
        "google::protobuf::MapKey::~MapKey": {
            "offset": "0x739A0"
        },
        "google::protobuf::MapValueRef::DeleteData": {
            "offset": "0xC47B0"
        },
        "google::protobuf::MapValueRef::GetBoolValue": {
            "offset": "0xC4B10"
        },
        "google::protobuf::MapValueRef::GetDoubleValue": {
            "offset": "0xC4C30"
        },
        "google::protobuf::MapValueRef::GetEnumValue": {
            "offset": "0x84B20"
        },
        "google::protobuf::MapValueRef::GetFloatValue": {
            "offset": "0xC4D50"
        },
        "google::protobuf::MapValueRef::GetInt32Value": {
            "offset": "0x84D60"
        },
        "google::protobuf::MapValueRef::GetInt64Value": {
            "offset": "0x84FA0"
        },
        "google::protobuf::MapValueRef::GetMessageValue": {
            "offset": "0x850C0"
        },
        "google::protobuf::MapValueRef::GetStringValue": {
            "offset": "0x85300"
        },
        "google::protobuf::MapValueRef::GetUInt32Value": {
            "offset": "0x85540"
        },
        "google::protobuf::MapValueRef::GetUInt64Value": {
            "offset": "0x85780"
        },
        "google::protobuf::MapValueRef::type": {
            "offset": "0x7FAD0"
        },
        "google::protobuf::Message::ByteSizeLong": {
            "offset": "0x7BEE0"
        },
        "google::protobuf::Message::CheckTypeAndMergeFrom": {
            "offset": "0x7BF20"
        },
        "google::protobuf::Message::Clear": {
            "offset": "0x7BF30"
        },
        "google::protobuf::Message::CopyFrom": {
            "offset": "0x7BF40"
        },
        "google::protobuf::Message::DiscardUnknownFields": {
            "offset": "0x7C080"
        },
        "google::protobuf::Message::FindInitializationErrors": {
            "offset": "0x7C150"
        },
        "google::protobuf::Message::GetTypeName": {
            "offset": "0x7C4A0"
        },
        "google::protobuf::Message::InitializationErrorString": {
            "offset": "0x7C4D0"
        },
        "google::protobuf::Message::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x7C8B0"
        },
        "google::protobuf::Message::IsInitialized": {
            "offset": "0x7C8C0"
        },
        "google::protobuf::Message::MergeFrom": {
            "offset": "0x7C8D0"
        },
        "google::protobuf::Message::ShortDebugString": {
            "offset": "0xD5BC0"
        },
        "google::protobuf::Message::SpaceUsedLong": {
            "offset": "0x7D3A0"
        },
        "google::protobuf::Message::_InternalParse": {
            "offset": "0x7D8F0"
        },
        "google::protobuf::Message::~Message": {
            "offset": "0x12D20"
        },
        "google::protobuf::MessageLite::AppendPartialToString": {
            "offset": "0x6CEF0"
        },
        "google::protobuf::MessageLite::AppendToString": {
            "offset": "0x6D0D0"
        },
        "google::protobuf::MessageLite::GetArena": {
            "offset": "0xF770"
        },
        "google::protobuf::MessageLite::GetMaybeArenaPointer": {
            "offset": "0x191A0"
        },
        "google::protobuf::MessageLite::InitializationErrorString": {
            "offset": "0x6D330"
        },
        "google::protobuf::MessageLite::InternalGetTable": {
            "offset": "0xF770"
        },
        "google::protobuf::MessageLite::IsInitializedWithErrors": {
            "offset": "0x6D3B0"
        },
        "google::protobuf::MessageLite::New": {
            "offset": "0x6D4F0"
        },
        "google::protobuf::MessageLite::ParseFromArray": {
            "offset": "0x6D530"
        },
        "google::protobuf::MessageLite::ParseFromString": {
            "offset": "0x6D5F0"
        },
        "google::protobuf::MessageLite::ParsePartialFromString": {
            "offset": "0x6D6C0"
        },
        "google::protobuf::MessageLite::SerializeAsString": {
            "offset": "0x6D780"
        },
        "google::protobuf::MessageLite::SerializeToString": {
            "offset": "0x6D860"
        },
        "google::protobuf::MessageLite::_InternalParse": {
            "offset": "0xF770"
        },
        "google::protobuf::MessageOptions::ByteSizeLong": {
            "offset": "0xDF200"
        },
        "google::protobuf::MessageOptions::Clear": {
            "offset": "0xE0C00"
        },
        "google::protobuf::MessageOptions::CopyFrom": {
            "offset": "0xE1AA0"
        },
        "google::protobuf::MessageOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::MessageOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::MessageOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::MessageOptions::GetMetadata": {
            "offset": "0xE23C0"
        },
        "google::protobuf::MessageOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE3DC0"
        },
        "google::protobuf::MessageOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::MessageOptions::MergeFrom": {
            "offset": "0xE6E10"
        },
        "google::protobuf::MessageOptions::MessageOptions": {
            "offset": "0xDC130"
        },
        "google::protobuf::MessageOptions::New": {
            "offset": "0xE7DE0"
        },
        "google::protobuf::MessageOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::MessageOptions::_InternalParse": {
            "offset": "0xEC890"
        },
        "google::protobuf::MessageOptions::default_instance": {
            "offset": "0xEE8B0"
        },
        "google::protobuf::MethodDescriptor::CopyTo": {
            "offset": "0xA7420"
        },
        "google::protobuf::MethodDescriptorProto::ByteSizeLong": {
            "offset": "0xDF2E0"
        },
        "google::protobuf::MethodDescriptorProto::Clear": {
            "offset": "0xE0C90"
        },
        "google::protobuf::MethodDescriptorProto::CopyFrom": {
            "offset": "0xE1B10"
        },
        "google::protobuf::MethodDescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::MethodDescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::MethodDescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::MethodDescriptorProto::GetMetadata": {
            "offset": "0xE23F0"
        },
        "google::protobuf::MethodDescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE3F00"
        },
        "google::protobuf::MethodDescriptorProto::IsInitialized": {
            "offset": "0xE4D00"
        },
        "google::protobuf::MethodDescriptorProto::MergeFrom": {
            "offset": "0xE7040"
        },
        "google::protobuf::MethodDescriptorProto::MethodDescriptorProto": {
            "offset": "0xDC1A0"
        },
        "google::protobuf::MethodDescriptorProto::New": {
            "offset": "0xE7E00"
        },
        "google::protobuf::MethodDescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::MethodDescriptorProto::SharedDtor": {
            "offset": "0xE8810"
        },
        "google::protobuf::MethodDescriptorProto::_InternalParse": {
            "offset": "0xECC20"
        },
        "google::protobuf::MethodOptions::ByteSizeLong": {
            "offset": "0xDF3E0"
        },
        "google::protobuf::MethodOptions::Clear": {
            "offset": "0xE0D40"
        },
        "google::protobuf::MethodOptions::CopyFrom": {
            "offset": "0xE1BB0"
        },
        "google::protobuf::MethodOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::MethodOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::MethodOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::MethodOptions::GetMetadata": {
            "offset": "0xE2420"
        },
        "google::protobuf::MethodOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE4030"
        },
        "google::protobuf::MethodOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::MethodOptions::MergeFrom": {
            "offset": "0xE7180"
        },
        "google::protobuf::MethodOptions::MethodOptions": {
            "offset": "0xDC210"
        },
        "google::protobuf::MethodOptions::New": {
            "offset": "0xE7E20"
        },
        "google::protobuf::MethodOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::MethodOptions::_InternalParse": {
            "offset": "0xED010"
        },
        "google::protobuf::MethodOptions::default_instance": {
            "offset": "0xEE8E0"
        },
        "google::protobuf::OneofDescriptor::DebugString": {
            "offset": "0xAD5D0"
        },
        "google::protobuf::OneofDescriptorProto::ByteSizeLong": {
            "offset": "0xDF4D0"
        },
        "google::protobuf::OneofDescriptorProto::Clear": {
            "offset": "0xE0DE0"
        },
        "google::protobuf::OneofDescriptorProto::CopyFrom": {
            "offset": "0xE1C20"
        },
        "google::protobuf::OneofDescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::OneofDescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::OneofDescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::OneofDescriptorProto::GetMetadata": {
            "offset": "0xE2450"
        },
        "google::protobuf::OneofDescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE4120"
        },
        "google::protobuf::OneofDescriptorProto::IsInitialized": {
            "offset": "0xE4B30"
        },
        "google::protobuf::OneofDescriptorProto::MergeFrom": {
            "offset": "0xE72E0"
        },
        "google::protobuf::OneofDescriptorProto::New": {
            "offset": "0xE7E40"
        },
        "google::protobuf::OneofDescriptorProto::OneofDescriptorProto": {
            "offset": "0xDC280"
        },
        "google::protobuf::OneofDescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::OneofDescriptorProto::_InternalParse": {
            "offset": "0xED2D0"
        },
        "google::protobuf::OneofOptions::ByteSizeLong": {
            "offset": "0xDE4B0"
        },
        "google::protobuf::OneofOptions::Clear": {
            "offset": "0xE0440"
        },
        "google::protobuf::OneofOptions::CopyFrom": {
            "offset": "0xE1C90"
        },
        "google::protobuf::OneofOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::OneofOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::OneofOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::OneofOptions::GetMetadata": {
            "offset": "0xE2480"
        },
        "google::protobuf::OneofOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE2F00"
        },
        "google::protobuf::OneofOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::OneofOptions::MergeFrom": {
            "offset": "0xE7340"
        },
        "google::protobuf::OneofOptions::New": {
            "offset": "0xE7E60"
        },
        "google::protobuf::OneofOptions::OneofOptions": {
            "offset": "0xDC2F0"
        },
        "google::protobuf::OneofOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::OneofOptions::_InternalParse": {
            "offset": "0xED530"
        },
        "google::protobuf::OneofOptions::default_instance": {
            "offset": "0xEE910"
        },
        "google::protobuf::ParseLenDelim": {
            "offset": "0x7CB60"
        },
        "google::protobuf::ParsePackedField": {
            "offset": "0x7CDA0"
        },
        "google::protobuf::Reflection::AddBool": {
            "offset": "0x73B10"
        },
        "google::protobuf::Reflection::AddDouble": {
            "offset": "0x73CC0"
        },
        "google::protobuf::Reflection::AddEnum": {
            "offset": "0x73DD0"
        },
        "google::protobuf::Reflection::AddEnumValue": {
            "offset": "0x73E40"
        },
        "google::protobuf::Reflection::AddEnumValueInternal": {
            "offset": "0x73F50"
        },
        "google::protobuf::Reflection::AddFloat": {
            "offset": "0x73FE0"
        },
        "google::protobuf::Reflection::AddInt32": {
            "offset": "0x740F0"
        },
        "google::protobuf::Reflection::AddInt64": {
            "offset": "0x741F0"
        },
        "google::protobuf::Reflection::AddMessage": {
            "offset": "0x742F0"
        },
        "google::protobuf::Reflection::AddString": {
            "offset": "0x74470"
        },
        "google::protobuf::Reflection::AddUInt32": {
            "offset": "0x74650"
        },
        "google::protobuf::Reflection::AddUInt64": {
            "offset": "0x74750"
        },
        "google::protobuf::Reflection::ClearBit": {
            "offset": "0x74FE0"
        },
        "google::protobuf::Reflection::ClearField": {
            "offset": "0x75060"
        },
        "google::protobuf::Reflection::ClearOneof": {
            "offset": "0x75530"
        },
        "google::protobuf::Reflection::FieldSize": {
            "offset": "0x75690"
        },
        "google::protobuf::Reflection::FindKnownExtensionByNumber": {
            "offset": "0x758D0"
        },
        "google::protobuf::Reflection::GetBool": {
            "offset": "0x758F0"
        },
        "google::protobuf::Reflection::GetDouble": {
            "offset": "0x759B0"
        },
        "google::protobuf::Reflection::GetEnum": {
            "offset": "0x75A70"
        },
        "google::protobuf::Reflection::GetEnumValue": {
            "offset": "0x75B40"
        },
        "google::protobuf::Reflection::GetField<google::protobuf::internal::ArenaStringPtr>": {
            "offset": "0x72160"
        },
        "google::protobuf::Reflection::GetField<google::protobuf::internal::InlinedStringField>": {
            "offset": "0x72160"
        },
        "google::protobuf::Reflection::GetFloat": {
            "offset": "0x75DF0"
        },
        "google::protobuf::Reflection::GetInt32": {
            "offset": "0x75EB0"
        },
        "google::protobuf::Reflection::GetInt64": {
            "offset": "0x75F70"
        },
        "google::protobuf::Reflection::GetMapData": {
            "offset": "0x76030"
        },
        "google::protobuf::Reflection::GetMessage": {
            "offset": "0x760A0"
        },
        "google::protobuf::Reflection::GetOneofFieldDescriptor": {
            "offset": "0x761A0"
        },
        "google::protobuf::Reflection::GetRaw<__int64>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<bool>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<double>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<float>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::Message const *>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedField<__int64> >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedField<bool> >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedField<double> >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedField<float> >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedField<int> >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedField<unsigned __int64> >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedField<unsigned int> >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::internal::MapFieldBase>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<google::protobuf::internal::RepeatedPtrFieldBase>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<int>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<unsigned __int64>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRaw<unsigned int>": {
            "offset": "0x72240"
        },
        "google::protobuf::Reflection::GetRawRepeatedField": {
            "offset": "0x761F0"
        },
        "google::protobuf::Reflection::GetRepeatedBool": {
            "offset": "0x76400"
        },
        "google::protobuf::Reflection::GetRepeatedDouble": {
            "offset": "0x764D0"
        },
        "google::protobuf::Reflection::GetRepeatedEnum": {
            "offset": "0x765A0"
        },
        "google::protobuf::Reflection::GetRepeatedEnumValue": {
            "offset": "0x76680"
        },
        "google::protobuf::Reflection::GetRepeatedField<__int64>": {
            "offset": "0x723E0"
        },
        "google::protobuf::Reflection::GetRepeatedField<bool>": {
            "offset": "0x72440"
        },
        "google::protobuf::Reflection::GetRepeatedField<double>": {
            "offset": "0x723B0"
        },
        "google::protobuf::Reflection::GetRepeatedField<float>": {
            "offset": "0x72380"
        },
        "google::protobuf::Reflection::GetRepeatedField<int>": {
            "offset": "0x72320"
        },
        "google::protobuf::Reflection::GetRepeatedField<unsigned __int64>": {
            "offset": "0x72410"
        },
        "google::protobuf::Reflection::GetRepeatedField<unsigned int>": {
            "offset": "0x72350"
        },
        "google::protobuf::Reflection::GetRepeatedFloat": {
            "offset": "0x76750"
        },
        "google::protobuf::Reflection::GetRepeatedInt32": {
            "offset": "0x76820"
        },
        "google::protobuf::Reflection::GetRepeatedInt64": {
            "offset": "0x768F0"
        },
        "google::protobuf::Reflection::GetRepeatedMessage": {
            "offset": "0x769C0"
        },
        "google::protobuf::Reflection::GetRepeatedString": {
            "offset": "0x76AC0"
        },
        "google::protobuf::Reflection::GetRepeatedStringReference": {
            "offset": "0x76BA0"
        },
        "google::protobuf::Reflection::GetRepeatedUInt32": {
            "offset": "0x76C70"
        },
        "google::protobuf::Reflection::GetRepeatedUInt64": {
            "offset": "0x76D40"
        },
        "google::protobuf::Reflection::GetString": {
            "offset": "0x76E10"
        },
        "google::protobuf::Reflection::GetStringReference": {
            "offset": "0x76F00"
        },
        "google::protobuf::Reflection::GetUInt32": {
            "offset": "0x76FE0"
        },
        "google::protobuf::Reflection::GetUInt64": {
            "offset": "0x770A0"
        },
        "google::protobuf::Reflection::GetUnknownFields": {
            "offset": "0x77160"
        },
        "google::protobuf::Reflection::HasBit": {
            "offset": "0x77180"
        },
        "google::protobuf::Reflection::HasField": {
            "offset": "0x77430"
        },
        "google::protobuf::Reflection::HasOneof": {
            "offset": "0x77500"
        },
        "google::protobuf::Reflection::InsertOrLookupMapValue": {
            "offset": "0x77540"
        },
        "google::protobuf::Reflection::IsInlined": {
            "offset": "0x77680"
        },
        "google::protobuf::Reflection::ListFields": {
            "offset": "0x777E0"
        },
        "google::protobuf::Reflection::MapBegin": {
            "offset": "0x779B0"
        },
        "google::protobuf::Reflection::MapEnd": {
            "offset": "0x77A70"
        },
        "google::protobuf::Reflection::MutableField<google::protobuf::internal::ArenaStringPtr>": {
            "offset": "0x726C0"
        },
        "google::protobuf::Reflection::MutableInternalMetadataWithArena": {
            "offset": "0x77B50"
        },
        "google::protobuf::Reflection::MutableMapData": {
            "offset": "0x77B60"
        },
        "google::protobuf::Reflection::MutableMessage": {
            "offset": "0x77BD0"
        },
        "google::protobuf::Reflection::MutableRawRepeatedField": {
            "offset": "0x77DC0"
        },
        "google::protobuf::Reflection::MutableRawRepeatedString": {
            "offset": "0x77F70"
        },
        "google::protobuf::Reflection::MutableRepeatedField<__int64>": {
            "offset": "0x723E0"
        },
        "google::protobuf::Reflection::MutableRepeatedField<bool>": {
            "offset": "0x72440"
        },
        "google::protobuf::Reflection::MutableRepeatedField<double>": {
            "offset": "0x723B0"
        },
        "google::protobuf::Reflection::MutableRepeatedField<float>": {
            "offset": "0x72380"
        },
        "google::protobuf::Reflection::MutableRepeatedField<int>": {
            "offset": "0x72320"
        },
        "google::protobuf::Reflection::MutableRepeatedField<unsigned __int64>": {
            "offset": "0x72410"
        },
        "google::protobuf::Reflection::MutableRepeatedField<unsigned int>": {
            "offset": "0x72350"
        },
        "google::protobuf::Reflection::MutableRepeatedMessage": {
            "offset": "0x77F90"
        },
        "google::protobuf::Reflection::MutableUnknownFields": {
            "offset": "0x780A0"
        },
        "google::protobuf::Reflection::Reflection": {
            "offset": "0x738B0"
        },
        "google::protobuf::Reflection::ReleaseMessage": {
            "offset": "0x78110"
        },
        "google::protobuf::Reflection::SetAllocatedMessage": {
            "offset": "0x785B0"
        },
        "google::protobuf::Reflection::SetBit": {
            "offset": "0x78680"
        },
        "google::protobuf::Reflection::SetBool": {
            "offset": "0x78700"
        },
        "google::protobuf::Reflection::SetDouble": {
            "offset": "0x787E0"
        },
        "google::protobuf::Reflection::SetEnum": {
            "offset": "0x788D0"
        },
        "google::protobuf::Reflection::SetEnumValue": {
            "offset": "0x78970"
        },
        "google::protobuf::Reflection::SetField<__int64>": {
            "offset": "0x72A00"
        },
        "google::protobuf::Reflection::SetField<bool>": {
            "offset": "0x72AF0"
        },
        "google::protobuf::Reflection::SetField<double>": {
            "offset": "0x72910"
        },
        "google::protobuf::Reflection::SetField<float>": {
            "offset": "0x72820"
        },
        "google::protobuf::Reflection::SetField<int>": {
            "offset": "0x72740"
        },
        "google::protobuf::Reflection::SetField<unsigned __int64>": {
            "offset": "0x72A00"
        },
        "google::protobuf::Reflection::SetField<unsigned int>": {
            "offset": "0x72740"
        },
        "google::protobuf::Reflection::SetFloat": {
            "offset": "0x78AB0"
        },
        "google::protobuf::Reflection::SetInt32": {
            "offset": "0x78BA0"
        },
        "google::protobuf::Reflection::SetInt64": {
            "offset": "0x78C80"
        },
        "google::protobuf::Reflection::SetString": {
            "offset": "0x78D60"
        },
        "google::protobuf::Reflection::SetUInt32": {
            "offset": "0x79160"
        },
        "google::protobuf::Reflection::SetUInt64": {
            "offset": "0x79240"
        },
        "google::protobuf::Reflection::SpaceUsedLong": {
            "offset": "0x79320"
        },
        "google::protobuf::Reflection::SupportsUnknownEnumValues": {
            "offset": "0x796B0"
        },
        "google::protobuf::Reflection::Swap": {
            "offset": "0x796C0"
        },
        "google::protobuf::Reflection::SwapField": {
            "offset": "0x79AE0"
        },
        "google::protobuf::Reflection::SwapOneofField": {
            "offset": "0x7A310"
        },
        "google::protobuf::Reflection::UnsafeArenaSetAllocatedMessage": {
            "offset": "0x7AA10"
        },
        "google::protobuf::ReflectiveValidator": {
            "offset": "0x7D100"
        },
        "google::protobuf::RepeatedField<__int64>::Add": {
            "offset": "0x6DDE0"
        },
        "google::protobuf::RepeatedField<__int64>::AddNAlreadyReserved": {
            "offset": "0x6DF60"
        },
        "google::protobuf::RepeatedField<__int64>::Clear": {
            "offset": "0x6DF80"
        },
        "google::protobuf::RepeatedField<__int64>::Get": {
            "offset": "0x6DFF0"
        },
        "google::protobuf::RepeatedField<__int64>::MergeFrom": {
            "offset": "0x6E260"
        },
        "google::protobuf::RepeatedField<__int64>::RepeatedField<__int64>": {
            "offset": "0x6DBE0"
        },
        "google::protobuf::RepeatedField<__int64>::Reserve": {
            "offset": "0x6E440"
        },
        "google::protobuf::RepeatedField<__int64>::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E5F0"
        },
        "google::protobuf::RepeatedField<__int64>::Swap": {
            "offset": "0x6E800"
        },
        "google::protobuf::RepeatedField<__int64>::data": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<__int64>::size": {
            "offset": "0x6EB20"
        },
        "google::protobuf::RepeatedField<__int64>::~RepeatedField<__int64>": {
            "offset": "0x6DD10"
        },
        "google::protobuf::RepeatedField<bool>::Add": {
            "offset": "0x6DE20"
        },
        "google::protobuf::RepeatedField<bool>::Clear": {
            "offset": "0x6DF80"
        },
        "google::protobuf::RepeatedField<bool>::Get": {
            "offset": "0x6E000"
        },
        "google::protobuf::RepeatedField<bool>::MergeFrom": {
            "offset": "0x6E2C0"
        },
        "google::protobuf::RepeatedField<bool>::RepeatedField<bool>": {
            "offset": "0x6DBE0"
        },
        "google::protobuf::RepeatedField<bool>::Reserve": {
            "offset": "0x6E500"
        },
        "google::protobuf::RepeatedField<bool>::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E610"
        },
        "google::protobuf::RepeatedField<bool>::Swap": {
            "offset": "0x6E960"
        },
        "google::protobuf::RepeatedField<bool>::data": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<bool>::size": {
            "offset": "0x6EB20"
        },
        "google::protobuf::RepeatedField<bool>::~RepeatedField<bool>": {
            "offset": "0x6DD50"
        },
        "google::protobuf::RepeatedField<double>::Add": {
            "offset": "0x6DDE0"
        },
        "google::protobuf::RepeatedField<double>::AddNAlreadyReserved": {
            "offset": "0x6DF60"
        },
        "google::protobuf::RepeatedField<double>::Clear": {
            "offset": "0x6DF80"
        },
        "google::protobuf::RepeatedField<double>::Get": {
            "offset": "0x6DFF0"
        },
        "google::protobuf::RepeatedField<double>::MergeFrom": {
            "offset": "0x6E260"
        },
        "google::protobuf::RepeatedField<double>::RepeatedField<double>": {
            "offset": "0x6DBE0"
        },
        "google::protobuf::RepeatedField<double>::Reserve": {
            "offset": "0x6E440"
        },
        "google::protobuf::RepeatedField<double>::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E5F0"
        },
        "google::protobuf::RepeatedField<double>::Swap": {
            "offset": "0x6E800"
        },
        "google::protobuf::RepeatedField<double>::data": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<double>::size": {
            "offset": "0x6EB20"
        },
        "google::protobuf::RepeatedField<double>::~RepeatedField<double>": {
            "offset": "0x6DD10"
        },
        "google::protobuf::RepeatedField<float>::Add": {
            "offset": "0x6DDA0"
        },
        "google::protobuf::RepeatedField<float>::AddNAlreadyReserved": {
            "offset": "0x6DF40"
        },
        "google::protobuf::RepeatedField<float>::Clear": {
            "offset": "0x6DF80"
        },
        "google::protobuf::RepeatedField<float>::Get": {
            "offset": "0x6DFE0"
        },
        "google::protobuf::RepeatedField<float>::MergeFrom": {
            "offset": "0x6E200"
        },
        "google::protobuf::RepeatedField<float>::RepeatedField<float>": {
            "offset": "0x6DBE0"
        },
        "google::protobuf::RepeatedField<float>::Reserve": {
            "offset": "0x6E380"
        },
        "google::protobuf::RepeatedField<float>::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E5D0"
        },
        "google::protobuf::RepeatedField<float>::Swap": {
            "offset": "0x6E6A0"
        },
        "google::protobuf::RepeatedField<float>::data": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<float>::size": {
            "offset": "0x6EB20"
        },
        "google::protobuf::RepeatedField<float>::~RepeatedField<float>": {
            "offset": "0x6DCD0"
        },
        "google::protobuf::RepeatedField<int>::Add": {
            "offset": "0x6DDA0"
        },
        "google::protobuf::RepeatedField<int>::AddNAlreadyReserved": {
            "offset": "0x6DF40"
        },
        "google::protobuf::RepeatedField<int>::Clear": {
            "offset": "0x6DF80"
        },
        "google::protobuf::RepeatedField<int>::Get": {
            "offset": "0x6DFE0"
        },
        "google::protobuf::RepeatedField<int>::MergeFrom": {
            "offset": "0x6E200"
        },
        "google::protobuf::RepeatedField<int>::RepeatedField<int>": {
            "offset": "0x6DBE0"
        },
        "google::protobuf::RepeatedField<int>::Reserve": {
            "offset": "0x6E380"
        },
        "google::protobuf::RepeatedField<int>::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E5D0"
        },
        "google::protobuf::RepeatedField<int>::Swap": {
            "offset": "0x6E6A0"
        },
        "google::protobuf::RepeatedField<int>::begin": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<int>::data": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<int>::end": {
            "offset": "0x6EAE0"
        },
        "google::protobuf::RepeatedField<int>::size": {
            "offset": "0x6EB20"
        },
        "google::protobuf::RepeatedField<int>::~RepeatedField<int>": {
            "offset": "0x6DCD0"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::Add": {
            "offset": "0x6DDE0"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::AddNAlreadyReserved": {
            "offset": "0x6DF60"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::Clear": {
            "offset": "0x6DF80"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::Get": {
            "offset": "0x6DFF0"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::MergeFrom": {
            "offset": "0x6E260"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::RepeatedField<unsigned __int64>": {
            "offset": "0x6DBE0"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::Reserve": {
            "offset": "0x6E440"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E5F0"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::Swap": {
            "offset": "0x6E800"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::data": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::size": {
            "offset": "0x6EB20"
        },
        "google::protobuf::RepeatedField<unsigned __int64>::~RepeatedField<unsigned __int64>": {
            "offset": "0x6DD10"
        },
        "google::protobuf::RepeatedField<unsigned int>::Add": {
            "offset": "0x6DDA0"
        },
        "google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved": {
            "offset": "0x6DF40"
        },
        "google::protobuf::RepeatedField<unsigned int>::Clear": {
            "offset": "0x6DF80"
        },
        "google::protobuf::RepeatedField<unsigned int>::Get": {
            "offset": "0x6DFE0"
        },
        "google::protobuf::RepeatedField<unsigned int>::MergeFrom": {
            "offset": "0x6E200"
        },
        "google::protobuf::RepeatedField<unsigned int>::RepeatedField<unsigned int>": {
            "offset": "0x6DBE0"
        },
        "google::protobuf::RepeatedField<unsigned int>::Reserve": {
            "offset": "0x6E380"
        },
        "google::protobuf::RepeatedField<unsigned int>::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E5D0"
        },
        "google::protobuf::RepeatedField<unsigned int>::Swap": {
            "offset": "0x6E6A0"
        },
        "google::protobuf::RepeatedField<unsigned int>::data": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::RepeatedField<unsigned int>::size": {
            "offset": "0x6EB20"
        },
        "google::protobuf::RepeatedField<unsigned int>::~RepeatedField<unsigned int>": {
            "offset": "0x6DCD0"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::ACL_ChanACL>::MergeFrom": {
            "offset": "0x1D420"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::ACL_ChanACL>::~RepeatedPtrField<MumbleProto::ACL_ChanACL>": {
            "offset": "0x12A80"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::ACL_ChanGroup>::Get": {
            "offset": "0x19070"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::ACL_ChanGroup>::MergeFrom": {
            "offset": "0x1D520"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::ACL_ChanGroup>::~RepeatedPtrField<MumbleProto::ACL_ChanGroup>": {
            "offset": "0x12A80"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::BanList_BanEntry>::Get": {
            "offset": "0x19070"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::BanList_BanEntry>::MergeFrom": {
            "offset": "0x1D620"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::BanList_BanEntry>::~RepeatedPtrField<MumbleProto::BanList_BanEntry>": {
            "offset": "0x12A80"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::UserList_User>::Get": {
            "offset": "0x19070"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::UserList_User>::MergeFrom": {
            "offset": "0x1D720"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::UserList_User>::~RepeatedPtrField<MumbleProto::UserList_User>": {
            "offset": "0x12A80"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::VoiceTarget_Target>::MergeFrom": {
            "offset": "0x1D820"
        },
        "google::protobuf::RepeatedPtrField<MumbleProto::VoiceTarget_Target>::~RepeatedPtrField<MumbleProto::VoiceTarget_Target>": {
            "offset": "0x12A80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Add": {
            "offset": "0x9B380"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::~RepeatedPtrField<google::protobuf::DescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::~RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::~RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Add": {
            "offset": "0x9B400"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::~RepeatedPtrField<google::protobuf::EnumDescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::~RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::~RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Add": {
            "offset": "0x9B480"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::~RepeatedPtrField<google::protobuf::FieldDescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::~RepeatedPtrField<google::protobuf::FileDescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::~RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::Message>::Clear": {
            "offset": "0x72100"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::Message>::SpaceUsedExcludingSelfLong": {
            "offset": "0xC6720"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::AddAllocated": {
            "offset": "0x8C7F0"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::~RepeatedPtrField<google::protobuf::MethodDescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::~RepeatedPtrField<google::protobuf::OneofDescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::~RepeatedPtrField<google::protobuf::ServiceDescriptorProto>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::~RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Add": {
            "offset": "0xDD760"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField<google::protobuf::UninterpretedOption>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>": {
            "offset": "0x99C80"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Add": {
            "offset": "0x6DE60"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Clear": {
            "offset": "0x6DF90"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Get": {
            "offset": "0x6E010"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::MergeFrom": {
            "offset": "0x6E310"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Mutable": {
            "offset": "0x6E010"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x6DCB0"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::SpaceUsedExcludingSelfLong": {
            "offset": "0x6E620"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::begin": {
            "offset": "0x6EAC0"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::end": {
            "offset": "0x6EAF0"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::size": {
            "offset": "0x6EB30"
        },
        "google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x6DD90"
        },
        "google::protobuf::SerializeToArrayImpl": {
            "offset": "0x6D7F0"
        },
        "google::protobuf::ServiceDescriptor::CopyTo": {
            "offset": "0xA7750"
        },
        "google::protobuf::ServiceDescriptorProto::ByteSizeLong": {
            "offset": "0xDF620"
        },
        "google::protobuf::ServiceDescriptorProto::Clear": {
            "offset": "0xE0E50"
        },
        "google::protobuf::ServiceDescriptorProto::CopyFrom": {
            "offset": "0xE1D00"
        },
        "google::protobuf::ServiceDescriptorProto::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::ServiceDescriptorProto::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::ServiceDescriptorProto::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::ServiceDescriptorProto::GetMetadata": {
            "offset": "0xE24B0"
        },
        "google::protobuf::ServiceDescriptorProto::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE41C0"
        },
        "google::protobuf::ServiceDescriptorProto::IsInitialized": {
            "offset": "0xE4D40"
        },
        "google::protobuf::ServiceDescriptorProto::MergeFrom": {
            "offset": "0xE7500"
        },
        "google::protobuf::ServiceDescriptorProto::New": {
            "offset": "0xE7E80"
        },
        "google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto": {
            "offset": "0xDC360"
        },
        "google::protobuf::ServiceDescriptorProto::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::ServiceDescriptorProto::_InternalParse": {
            "offset": "0xED6D0"
        },
        "google::protobuf::ServiceOptions::ByteSizeLong": {
            "offset": "0xDF8D0"
        },
        "google::protobuf::ServiceOptions::Clear": {
            "offset": "0xE03B0"
        },
        "google::protobuf::ServiceOptions::CopyFrom": {
            "offset": "0xE1D70"
        },
        "google::protobuf::ServiceOptions::GetArena": {
            "offset": "0xE2080"
        },
        "google::protobuf::ServiceOptions::GetCachedSize": {
            "offset": "0xE20A0"
        },
        "google::protobuf::ServiceOptions::GetMaybeArenaPointer": {
            "offset": "0xE20B0"
        },
        "google::protobuf::ServiceOptions::GetMetadata": {
            "offset": "0xE24E0"
        },
        "google::protobuf::ServiceOptions::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE4300"
        },
        "google::protobuf::ServiceOptions::IsInitialized": {
            "offset": "0xE4AF0"
        },
        "google::protobuf::ServiceOptions::MergeFrom": {
            "offset": "0xE7560"
        },
        "google::protobuf::ServiceOptions::New": {
            "offset": "0xE7EA0"
        },
        "google::protobuf::ServiceOptions::ServiceOptions": {
            "offset": "0xDC3E0"
        },
        "google::protobuf::ServiceOptions::SetCachedSize": {
            "offset": "0xE7F30"
        },
        "google::protobuf::ServiceOptions::_InternalParse": {
            "offset": "0xEDA50"
        },
        "google::protobuf::ServiceOptions::default_instance": {
            "offset": "0xEE940"
        },
        "google::protobuf::SetField": {
            "offset": "0x7D120"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::AddExtension": {
            "offset": "0xF1F90"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::AddFile": {
            "offset": "0xF2340"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::AddNestedExtensions": {
            "offset": "0xF2F00"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::AddSymbol": {
            "offset": "0xF2FD0"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::FindAllExtensionNumbers": {
            "offset": "0xF34E0"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::FindLastLessOrEqual": {
            "offset": "0xF3990"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::IsSubSymbol": {
            "offset": "0xF3A70"
        },
        "google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const *,int> >::~DescriptorIndex<std::pair<void const *,int> >": {
            "offset": "0xF1B60"
        },
        "google::protobuf::SimpleDtoa": {
            "offset": "0x8A220"
        },
        "google::protobuf::SimpleFtoa": {
            "offset": "0x8A370"
        },
        "google::protobuf::SourceCodeInfo::ByteSizeLong": {
            "offset": "0xDF980"
        },
        "google::protobuf::SourceCodeInfo::Clear": {
            "offset": "0xE0F10"
        },
        "google::protobuf::SourceCodeInfo::CopyFrom": {
            "offset": "0xE1E10"
        },
        "google::protobuf::SourceCodeInfo::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::SourceCodeInfo::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::SourceCodeInfo::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::SourceCodeInfo::GetMetadata": {
            "offset": "0xE2510"
        },
        "google::protobuf::SourceCodeInfo::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE43C0"
        },
        "google::protobuf::SourceCodeInfo::IsInitialized": {
            "offset": "0xF840"
        },
        "google::protobuf::SourceCodeInfo::MergeFrom": {
            "offset": "0xE7660"
        },
        "google::protobuf::SourceCodeInfo::New": {
            "offset": "0xE7EC0"
        },
        "google::protobuf::SourceCodeInfo::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::SourceCodeInfo::SourceCodeInfo": {
            "offset": "0xDC450"
        },
        "google::protobuf::SourceCodeInfo::_InternalParse": {
            "offset": "0xEDC50"
        },
        "google::protobuf::SourceCodeInfo::default_instance": {
            "offset": "0xEE970"
        },
        "google::protobuf::SourceCodeInfo_Location::ByteSizeLong": {
            "offset": "0xDFA20"
        },
        "google::protobuf::SourceCodeInfo_Location::Clear": {
            "offset": "0xE0FA0"
        },
        "google::protobuf::SourceCodeInfo_Location::CopyFrom": {
            "offset": "0xE1EB0"
        },
        "google::protobuf::SourceCodeInfo_Location::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::SourceCodeInfo_Location::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::SourceCodeInfo_Location::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::SourceCodeInfo_Location::GetMetadata": {
            "offset": "0xE2540"
        },
        "google::protobuf::SourceCodeInfo_Location::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE44B0"
        },
        "google::protobuf::SourceCodeInfo_Location::IsInitialized": {
            "offset": "0xF840"
        },
        "google::protobuf::SourceCodeInfo_Location::MergeFrom": {
            "offset": "0xE7800"
        },
        "google::protobuf::SourceCodeInfo_Location::New": {
            "offset": "0xE7EE0"
        },
        "google::protobuf::SourceCodeInfo_Location::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location": {
            "offset": "0xDC4B0"
        },
        "google::protobuf::SourceCodeInfo_Location::_InternalParse": {
            "offset": "0xEDE60"
        },
        "google::protobuf::SourceLocation::~SourceLocation": {
            "offset": "0x9ADF0"
        },
        "google::protobuf::Split": {
            "offset": "0xBA770"
        },
        "google::protobuf::SplitStringAllowEmpty": {
            "offset": "0x8A500"
        },
        "google::protobuf::SplitStringUsing": {
            "offset": "0x8A520"
        },
        "google::protobuf::StrAppend": {
            "offset": "0x8A540"
        },
        "google::protobuf::StrCat": {
            "offset": "0x8A6F0"
        },
        "google::protobuf::StringAppendF": {
            "offset": "0x8BD30"
        },
        "google::protobuf::StringAppendV": {
            "offset": "0x8BD60"
        },
        "google::protobuf::StringPiece::LogFatalSizeTooBig": {
            "offset": "0x6A570"
        },
        "google::protobuf::StringPrintf": {
            "offset": "0x8BEE0"
        },
        "google::protobuf::StripWhitespace": {
            "offset": "0x8A7A0"
        },
        "google::protobuf::Symbol::GetFile": {
            "offset": "0xB16C0"
        },
        "google::protobuf::TextFormat::BaseTextGenerator::GetCurrentIndentationSize": {
            "offset": "0xF770"
        },
        "google::protobuf::TextFormat::BaseTextGenerator::Indent": {
            "offset": "0xAD90"
        },
        "google::protobuf::TextFormat::BaseTextGenerator::Outdent": {
            "offset": "0xAD90"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintBool": {
            "offset": "0xD3980"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintBytes": {
            "offset": "0xD39B0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintDouble": {
            "offset": "0xD39C0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum": {
            "offset": "0xD3B50"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName": {
            "offset": "0xD3FF0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintFloat": {
            "offset": "0xD4B30"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32": {
            "offset": "0xD4CC0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt64": {
            "offset": "0xD4DB0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageEnd": {
            "offset": "0xD4EB0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageStart": {
            "offset": "0xD4EE0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintString": {
            "offset": "0xD4F10"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt32": {
            "offset": "0xD4FF0"
        },
        "google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64": {
            "offset": "0xD50E0"
        },
        "google::protobuf::TextFormat::Finder::FindAnyType": {
            "offset": "0xD25D0"
        },
        "google::protobuf::TextFormat::Finder::FindExtension": {
            "offset": "0xD25F0"
        },
        "google::protobuf::TextFormat::Finder::FindExtensionByNumber": {
            "offset": "0xD2630"
        },
        "google::protobuf::TextFormat::Finder::~Finder": {
            "offset": "0xCBA70"
        },
        "google::protobuf::TextFormat::ParseInfoTree::CreateNested": {
            "offset": "0xD2330"
        },
        "google::protobuf::TextFormat::Parser::MergeUsingImpl": {
            "offset": "0xD2730"
        },
        "google::protobuf::TextFormat::Parser::Parse": {
            "offset": "0xD2BA0"
        },
        "google::protobuf::TextFormat::Parser::ParseFromString": {
            "offset": "0xD2D60"
        },
        "google::protobuf::TextFormat::Parser::Parser": {
            "offset": "0xCB660"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::Consume": {
            "offset": "0xCC100"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeAnyTypeUrl": {
            "offset": "0xCC4B0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeAnyValue": {
            "offset": "0xCC940"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble": {
            "offset": "0xCCD10"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField": {
            "offset": "0xCD1D0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage": {
            "offset": "0xCECE0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue": {
            "offset": "0xCEF20"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFullTypeName": {
            "offset": "0xD0190"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier": {
            "offset": "0xD0430"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage": {
            "offset": "0xD0590"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter": {
            "offset": "0xD07C0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger": {
            "offset": "0xD0900"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString": {
            "offset": "0xD09F0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeTypeUrlOrFullTypeName": {
            "offset": "0xD0B40"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedDecimalAsDouble": {
            "offset": "0xD0E30"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger": {
            "offset": "0xD1100"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::LookingAt": {
            "offset": "0xD26B0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ParserImpl": {
            "offset": "0xCB680"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ReportError": {
            "offset": "0xD58D0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning": {
            "offset": "0xD5A50"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::SkipField": {
            "offset": "0xD5DB0"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage": {
            "offset": "0xD6230"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue": {
            "offset": "0xD6430"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::TryConsume": {
            "offset": "0xD6F00"
        },
        "google::protobuf::TextFormat::Parser::ParserImpl::~ParserImpl": {
            "offset": "0xCBA90"
        },
        "google::protobuf::TextFormat::Parser::~Parser": {
            "offset": "0xAD90"
        },
        "google::protobuf::TextFormat::PrintFieldValueToString": {
            "offset": "0xD49F0"
        },
        "google::protobuf::TextFormat::Printer::GetFieldPrinter": {
            "offset": "0xD2650"
        },
        "google::protobuf::TextFormat::Printer::Print": {
            "offset": "0xD2E10"
        },
        "google::protobuf::TextFormat::Printer::PrintAny": {
            "offset": "0xD3490"
        },
        "google::protobuf::TextFormat::Printer::PrintField": {
            "offset": "0xD3B70"
        },
        "google::protobuf::TextFormat::Printer::PrintFieldName": {
            "offset": "0xD40A0"
        },
        "google::protobuf::TextFormat::Printer::PrintFieldValue": {
            "offset": "0xD4230"
        },
        "google::protobuf::TextFormat::Printer::PrintFieldValueToString": {
            "offset": "0xD4900"
        },
        "google::protobuf::TextFormat::Printer::PrintUnknownFields": {
            "offset": "0xD51E0"
        },
        "google::protobuf::TextFormat::Printer::Printer": {
            "offset": "0xCB7A0"
        },
        "google::protobuf::TextFormat::Printer::TextGenerator::GetCurrentIndentationSize": {
            "offset": "0xD2640"
        },
        "google::protobuf::TextFormat::Printer::TextGenerator::Indent": {
            "offset": "0xD26A0"
        },
        "google::protobuf::TextFormat::Printer::TextGenerator::Outdent": {
            "offset": "0xD2B00"
        },
        "google::protobuf::TextFormat::Printer::TextGenerator::Print": {
            "offset": "0xD3190"
        },
        "google::protobuf::TextFormat::Printer::TextGenerator::Write": {
            "offset": "0xD6F50"
        },
        "google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator": {
            "offset": "0xCBAC0"
        },
        "google::protobuf::TextFormat::Printer::~Printer": {
            "offset": "0x9AD70"
        },
        "google::protobuf::ToLowercaseWithoutUnderscores": {
            "offset": "0xBABE0"
        },
        "google::protobuf::UnescapeCEscapeSequences": {
            "offset": "0x8A8A0"
        },
        "google::protobuf::UnescapeCEscapeString": {
            "offset": "0x8AC30"
        },
        "google::protobuf::UninterpretedOption::ByteSizeLong": {
            "offset": "0xDFBA0"
        },
        "google::protobuf::UninterpretedOption::Clear": {
            "offset": "0xE1040"
        },
        "google::protobuf::UninterpretedOption::CopyFrom": {
            "offset": "0xE1F20"
        },
        "google::protobuf::UninterpretedOption::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::UninterpretedOption::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::UninterpretedOption::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::UninterpretedOption::GetMetadata": {
            "offset": "0xE2570"
        },
        "google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE4630"
        },
        "google::protobuf::UninterpretedOption::IsInitialized": {
            "offset": "0xE4DF0"
        },
        "google::protobuf::UninterpretedOption::MergeFrom": {
            "offset": "0xE7A40"
        },
        "google::protobuf::UninterpretedOption::New": {
            "offset": "0xE7F00"
        },
        "google::protobuf::UninterpretedOption::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::UninterpretedOption::SharedDtor": {
            "offset": "0xE89A0"
        },
        "google::protobuf::UninterpretedOption::UninterpretedOption": {
            "offset": "0xDC540"
        },
        "google::protobuf::UninterpretedOption::_InternalParse": {
            "offset": "0xEE1A0"
        },
        "google::protobuf::UninterpretedOption_NamePart::ByteSizeLong": {
            "offset": "0xDFDD0"
        },
        "google::protobuf::UninterpretedOption_NamePart::Clear": {
            "offset": "0xE1180"
        },
        "google::protobuf::UninterpretedOption_NamePart::CopyFrom": {
            "offset": "0xE1F90"
        },
        "google::protobuf::UninterpretedOption_NamePart::GetArena": {
            "offset": "0xE2060"
        },
        "google::protobuf::UninterpretedOption_NamePart::GetCachedSize": {
            "offset": "0x19190"
        },
        "google::protobuf::UninterpretedOption_NamePart::GetMaybeArenaPointer": {
            "offset": "0x6EAB0"
        },
        "google::protobuf::UninterpretedOption_NamePart::GetMetadata": {
            "offset": "0xE25A0"
        },
        "google::protobuf::UninterpretedOption_NamePart::InternalSerializeWithCachedSizesToArray": {
            "offset": "0xE4820"
        },
        "google::protobuf::UninterpretedOption_NamePart::IsInitialized": {
            "offset": "0xE4E30"
        },
        "google::protobuf::UninterpretedOption_NamePart::MergeFrom": {
            "offset": "0xE7B70"
        },
        "google::protobuf::UninterpretedOption_NamePart::New": {
            "offset": "0xE7F20"
        },
        "google::protobuf::UninterpretedOption_NamePart::SetCachedSize": {
            "offset": "0x22A80"
        },
        "google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart": {
            "offset": "0xDC5C0"
        },
        "google::protobuf::UninterpretedOption_NamePart::_InternalParse": {
            "offset": "0xEE5D0"
        },
        "google::protobuf::UnknownField::DeepCopy": {
            "offset": "0x71760"
        },
        "google::protobuf::UnknownField::InternalSerializeLengthDelimitedNoTag": {
            "offset": "0x718C0"
        },
        "google::protobuf::UnknownFieldSet::AddFixed32": {
            "offset": "0x71420"
        },
        "google::protobuf::UnknownFieldSet::AddFixed64": {
            "offset": "0x71460"
        },
        "google::protobuf::UnknownFieldSet::AddGroup": {
            "offset": "0x714A0"
        },
        "google::protobuf::UnknownFieldSet::AddLengthDelimited": {
            "offset": "0x71520"
        },
        "google::protobuf::UnknownFieldSet::AddVarint": {
            "offset": "0x715A0"
        },
        "google::protobuf::UnknownFieldSet::Clear": {
            "offset": "0x715E0"
        },
        "google::protobuf::UnknownFieldSet::ClearFallback": {
            "offset": "0x716A0"
        },
        "google::protobuf::UnknownFieldSet::MergeFrom": {
            "offset": "0x71970"
        },
        "google::protobuf::UnknownFieldSet::ParseFromArray": {
            "offset": "0x71AD0"
        },
        "google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream": {
            "offset": "0x71B10"
        },
        "google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong": {
            "offset": "0x71D10"
        },
        "google::protobuf::UnknownFieldSet::default_instance": {
            "offset": "0x72040"
        },
        "google::protobuf::UnknownFieldSet::~UnknownFieldSet": {
            "offset": "0x12E10"
        },
        "google::protobuf::`anonymous namespace'::AssignDescriptorsImpl": {
            "offset": "0x748D0"
        },
        "google::protobuf::`anonymous namespace'::CheckParseInputSize": {
            "offset": "0xCBF50"
        },
        "google::protobuf::`anonymous namespace'::DefaultFinderFindAnyType": {
            "offset": "0xD24E0"
        },
        "google::protobuf::`anonymous namespace'::DefaultFinderFindExtensionByNumber": {
            "offset": "0xD25B0"
        },
        "google::protobuf::`anonymous namespace'::EnumValueToPascalCase": {
            "offset": "0xAEE10"
        },
        "google::protobuf::`anonymous namespace'::FormatBracketedOptions": {
            "offset": "0xB0C80"
        },
        "google::protobuf::`anonymous namespace'::FormatLineOptions": {
            "offset": "0xB1230"
        },
        "google::protobuf::`anonymous namespace'::GeneratedDatabase": {
            "offset": "0xB14C0"
        },
        "google::protobuf::`anonymous namespace'::InitializationErrorMessage": {
            "offset": "0x6D0F0"
        },
        "google::protobuf::`anonymous namespace'::IsMapFieldInApi": {
            "offset": "0x777B0"
        },
        "google::protobuf::`anonymous namespace'::NewAllowedProto3Extendee": {
            "offset": "0xB5610"
        },
        "google::protobuf::`anonymous namespace'::OptionsToInterpret::~OptionsToInterpret": {
            "offset": "0x9AC10"
        },
        "google::protobuf::`anonymous namespace'::PrefixRemover::~PrefixRemover": {
            "offset": "0x9AD10"
        },
        "google::protobuf::`anonymous namespace'::ReportReflectionUsageEnumTypeError": {
            "offset": "0x78280"
        },
        "google::protobuf::`anonymous namespace'::ReportReflectionUsageError": {
            "offset": "0x78390"
        },
        "google::protobuf::`anonymous namespace'::ReportReflectionUsageTypeError": {
            "offset": "0x78480"
        },
        "google::protobuf::`anonymous namespace'::RetrieveOptions": {
            "offset": "0xB66A0"
        },
        "google::protobuf::`anonymous namespace'::RetrieveOptionsAssumingRightPool": {
            "offset": "0xB6890"
        },
        "google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::AddPostComment": {
            "offset": "0x9D080"
        },
        "google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::AddPreComment": {
            "offset": "0x9D130"
        },
        "google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::FormatComment": {
            "offset": "0xB0EC0"
        },
        "google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::SourceLocationCommentPrinter<google::protobuf::EnumValueDescriptor>": {
            "offset": "0x92590"
        },
        "google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::SourceLocationCommentPrinter<google::protobuf::OneofDescriptor>": {
            "offset": "0x92750"
        },
        "google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::~SourceLocationCommentPrinter": {
            "offset": "0x9AEB0"
        },
        "google::protobuf::`anonymous namespace'::ToCamelCase": {
            "offset": "0xBA8B0"
        },
        "google::protobuf::`anonymous namespace'::ToJsonName": {
            "offset": "0xBAA70"
        },
        "google::protobuf::ghtonl": {
            "offset": "0x6A4D0"
        },
        "google::protobuf::internal::AddDescriptors": {
            "offset": "0x73C10"
        },
        "google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto> >": {
            "offset": "0xD7B10"
        },
        "google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto> >": {
            "offset": "0xD7C80"
        },
        "google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto> >": {
            "offset": "0xD7D50"
        },
        "google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto> >": {
            "offset": "0xD7DD0"
        },
        "google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption> >": {
            "offset": "0xD7F30"
        },
        "google::protobuf::internal::ArenaImpl::AddCleanup": {
            "offset": "0x6C5A0"
        },
        "google::protobuf::internal::ArenaImpl::AddCleanupFallback": {
            "offset": "0x6C660"
        },
        "google::protobuf::internal::ArenaImpl::AllocateAligned": {
            "offset": "0x6C780"
        },
        "google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup": {
            "offset": "0x6C870"
        },
        "google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback": {
            "offset": "0x6C9B0"
        },
        "google::protobuf::internal::ArenaImpl::AllocateAlignedFallback": {
            "offset": "0x6C9E0"
        },
        "google::protobuf::internal::ArenaImpl::CacheSerialArena": {
            "offset": "0x6CA80"
        },
        "google::protobuf::internal::ArenaImpl::GetSerialArena": {
            "offset": "0x6CB10"
        },
        "google::protobuf::internal::ArenaImpl::GetSerialArenaFallback": {
            "offset": "0x6CBA0"
        },
        "google::protobuf::internal::ArenaImpl::NewBlock": {
            "offset": "0x6CC50"
        },
        "google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback": {
            "offset": "0x6C6C0"
        },
        "google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned": {
            "offset": "0x6C840"
        },
        "google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup": {
            "offset": "0x6C920"
        },
        "google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedFallback": {
            "offset": "0x6CA20"
        },
        "google::protobuf::internal::ArenaImpl::SpaceAllocated": {
            "offset": "0x6CD70"
        },
        "google::protobuf::internal::ArenaStringPtr::CreateInstance": {
            "offset": "0x18D90"
        },
        "google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena": {
            "offset": "0x18EA0"
        },
        "google::protobuf::internal::ArenaStringPtr::SetNoArena": {
            "offset": "0x54750"
        },
        "google::protobuf::internal::AssignDescriptors": {
            "offset": "0x74850"
        },
        "google::protobuf::internal::ComputeUnknownFieldsSize": {
            "offset": "0x83FA0"
        },
        "google::protobuf::internal::DefaultLogHandler": {
            "offset": "0x693A0"
        },
        "google::protobuf::internal::DescriptorPoolExtensionFinder::Find": {
            "offset": "0xC1A80"
        },
        "google::protobuf::internal::DescriptorPoolExtensionFinder::~DescriptorPoolExtensionFinder": {
            "offset": "0xC18D0"
        },
        "google::protobuf::internal::DestroyMessage": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::DestroyString": {
            "offset": "0xAEB0"
        },
        "google::protobuf::internal::DynamicMapField::AllocateMapValue": {
            "offset": "0xC4180"
        },
        "google::protobuf::internal::DynamicMapField::Clear": {
            "offset": "0xC43A0"
        },
        "google::protobuf::internal::DynamicMapField::ContainsMapKey": {
            "offset": "0xC4540"
        },
        "google::protobuf::internal::DynamicMapField::DeleteMapValue": {
            "offset": "0xC4860"
        },
        "google::protobuf::internal::DynamicMapField::DynamicMapField": {
            "offset": "0xC31A0"
        },
        "google::protobuf::internal::DynamicMapField::GetMap": {
            "offset": "0xC4E70"
        },
        "google::protobuf::internal::DynamicMapField::InsertOrLookupMapValue": {
            "offset": "0xC50B0"
        },
        "google::protobuf::internal::DynamicMapField::MergeFrom": {
            "offset": "0xC53D0"
        },
        "google::protobuf::internal::DynamicMapField::MutableMap": {
            "offset": "0xC6230"
        },
        "google::protobuf::internal::DynamicMapField::SetMapIteratorValue": {
            "offset": "0xC66D0"
        },
        "google::protobuf::internal::DynamicMapField::SpaceUsedExcludingSelfNoLock": {
            "offset": "0xC67F0"
        },
        "google::protobuf::internal::DynamicMapField::Swap": {
            "offset": "0xC6980"
        },
        "google::protobuf::internal::DynamicMapField::SyncMapWithRepeatedFieldNoLock": {
            "offset": "0xC69D0"
        },
        "google::protobuf::internal::DynamicMapField::SyncRepeatedFieldWithMapNoLock": {
            "offset": "0xC7830"
        },
        "google::protobuf::internal::DynamicMapField::size": {
            "offset": "0xC8BB0"
        },
        "google::protobuf::internal::DynamicMapField::~DynamicMapField": {
            "offset": "0xC3440"
        },
        "google::protobuf::internal::EpsCopyInputStream::AppendStringFallback": {
            "offset": "0x6F970"
        },
        "google::protobuf::internal::EpsCopyInputStream::DoneFallback": {
            "offset": "0x6FA70"
        },
        "google::protobuf::internal::EpsCopyInputStream::DoneWithCheck": {
            "offset": "0x18F80"
        },
        "google::protobuf::internal::EpsCopyInputStream::Next": {
            "offset": "0x6FDC0"
        },
        "google::protobuf::internal::EpsCopyInputStream::PushLimit": {
            "offset": "0x229A0"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_2445345cb3b134d170e8ee193f099e7d> >": {
            "offset": "0x6F220"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_3a41b6b9138eaf6088bfa6fcb8a495b5> >": {
            "offset": "0x6F3A0"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_4a870f6fe8f1a3b39ec2f37a4e0055dc> >": {
            "offset": "0x6F510"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_666b62791af4fceed32bb4a8158dcaf0> >": {
            "offset": "0x70D40"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_69962c3e6e3604826fbe0c504e3195e7> >": {
            "offset": "0x6F680"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_b8353ada37acf7b400661bb3b16393ca> >": {
            "offset": "0x6F7F0"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_d8a5a68100ae2a0b7936eabfebd4ef1d> >": {
            "offset": "0x6F3A0"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<<lambda_f30daaeca8ef5592c2ffbda46b6b85e1> >": {
            "offset": "0x6F680"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadString": {
            "offset": "0x91F20"
        },
        "google::protobuf::internal::EpsCopyInputStream::ReadStringFallback": {
            "offset": "0x706D0"
        },
        "google::protobuf::internal::ExtensionFinder::~ExtensionFinder": {
            "offset": "0x8C520"
        },
        "google::protobuf::internal::ExtensionSet::AddBool": {
            "offset": "0x8C8D0"
        },
        "google::protobuf::internal::ExtensionSet::AddDouble": {
            "offset": "0x8C9C0"
        },
        "google::protobuf::internal::ExtensionSet::AddEnum": {
            "offset": "0x8CAB0"
        },
        "google::protobuf::internal::ExtensionSet::AddFloat": {
            "offset": "0x8CBA0"
        },
        "google::protobuf::internal::ExtensionSet::AddInt32": {
            "offset": "0x8CAB0"
        },
        "google::protobuf::internal::ExtensionSet::AddInt64": {
            "offset": "0x8CC90"
        },
        "google::protobuf::internal::ExtensionSet::AddMessage": {
            "offset": "0x8CD80"
        },
        "google::protobuf::internal::ExtensionSet::AddString": {
            "offset": "0x8CE80"
        },
        "google::protobuf::internal::ExtensionSet::AddUInt32": {
            "offset": "0x8CF60"
        },
        "google::protobuf::internal::ExtensionSet::AddUInt64": {
            "offset": "0x8D050"
        },
        "google::protobuf::internal::ExtensionSet::AppendToList": {
            "offset": "0xC1A50"
        },
        "google::protobuf::internal::ExtensionSet::ByteSize": {
            "offset": "0x8DBE0"
        },
        "google::protobuf::internal::ExtensionSet::Clear": {
            "offset": "0x8DE80"
        },
        "google::protobuf::internal::ExtensionSet::ClearExtension": {
            "offset": "0x8DF50"
        },
        "google::protobuf::internal::ExtensionSet::Erase": {
            "offset": "0x8DF70"
        },
        "google::protobuf::internal::ExtensionSet::Extension::ByteSize": {
            "offset": "0x8D140"
        },
        "google::protobuf::internal::ExtensionSet::Extension::Clear": {
            "offset": "0x8DCD0"
        },
        "google::protobuf::internal::ExtensionSet::Extension::Free": {
            "offset": "0x8E620"
        },
        "google::protobuf::internal::ExtensionSet::Extension::GetSize": {
            "offset": "0x8F060"
        },
        "google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray": {
            "offset": "0x901E0"
        },
        "google::protobuf::internal::ExtensionSet::Extension::IsInitialized": {
            "offset": "0x91450"
        },
        "google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong": {
            "offset": "0xC2020"
        },
        "google::protobuf::internal::ExtensionSet::ExtensionSet": {
            "offset": "0x8C510"
        },
        "google::protobuf::internal::ExtensionSet::ExtensionSize": {
            "offset": "0x8E0B0"
        },
        "google::protobuf::internal::ExtensionSet::FindExtension": {
            "offset": "0xC1BE0"
        },
        "google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber": {
            "offset": "0x8E390"
        },
        "google::protobuf::internal::ExtensionSet::FindOrNull": {
            "offset": "0x8E560"
        },
        "google::protobuf::internal::ExtensionSet::ForEach<<lambda_f5884f0ae83fe003014ffc8d0511175f> >": {
            "offset": "0xC0BC0"
        },
        "google::protobuf::internal::ExtensionSet::GetBool": {
            "offset": "0x8E7C0"
        },
        "google::protobuf::internal::ExtensionSet::GetDouble": {
            "offset": "0x8E7F0"
        },
        "google::protobuf::internal::ExtensionSet::GetEnum": {
            "offset": "0x8E830"
        },
        "google::protobuf::internal::ExtensionSet::GetFloat": {
            "offset": "0x8E860"
        },
        "google::protobuf::internal::ExtensionSet::GetInt32": {
            "offset": "0x8E830"
        },
        "google::protobuf::internal::ExtensionSet::GetInt64": {
            "offset": "0x8E8A0"
        },
        "google::protobuf::internal::ExtensionSet::GetMessage": {
            "offset": "0xC1D00"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedBool": {
            "offset": "0x8E8D0"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedDouble": {
            "offset": "0x8E990"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedEnum": {
            "offset": "0x8EA50"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedFloat": {
            "offset": "0x8EB10"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedInt32": {
            "offset": "0x8EBD0"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedInt64": {
            "offset": "0x8EC90"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedMessage": {
            "offset": "0x8ED50"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedString": {
            "offset": "0x8EE20"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedUInt32": {
            "offset": "0x8EEE0"
        },
        "google::protobuf::internal::ExtensionSet::GetRepeatedUInt64": {
            "offset": "0x8EFA0"
        },
        "google::protobuf::internal::ExtensionSet::GetString": {
            "offset": "0x8E8A0"
        },
        "google::protobuf::internal::ExtensionSet::GetUInt32": {
            "offset": "0x8E830"
        },
        "google::protobuf::internal::ExtensionSet::GetUInt64": {
            "offset": "0x8E8A0"
        },
        "google::protobuf::internal::ExtensionSet::GrowCapacity": {
            "offset": "0x8F220"
        },
        "google::protobuf::internal::ExtensionSet::Has": {
            "offset": "0x8F4B0"
        },
        "google::protobuf::internal::ExtensionSet::Insert": {
            "offset": "0x8F4D0"
        },
        "google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom": {
            "offset": "0x8F6E0"
        },
        "google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x912D0"
        },
        "google::protobuf::internal::ExtensionSet::IsInitialized": {
            "offset": "0x91510"
        },
        "google::protobuf::internal::ExtensionSet::MaybeNewExtension": {
            "offset": "0x91600"
        },
        "google::protobuf::internal::ExtensionSet::MaybeNewRepeatedExtension": {
            "offset": "0xC1D90"
        },
        "google::protobuf::internal::ExtensionSet::MergeFrom": {
            "offset": "0x91640"
        },
        "google::protobuf::internal::ExtensionSet::MutableMessage": {
            "offset": "0x917E0"
        },
        "google::protobuf::internal::ExtensionSet::MutableRawRepeatedField": {
            "offset": "0x91880"
        },
        "google::protobuf::internal::ExtensionSet::MutableRepeatedMessage": {
            "offset": "0x91D90"
        },
        "google::protobuf::internal::ExtensionSet::MutableString": {
            "offset": "0x91E60"
        },
        "google::protobuf::internal::ExtensionSet::ParseField": {
            "offset": "0xC1F60"
        },
        "google::protobuf::internal::ExtensionSet::ParseFieldWithExtensionInfo<google::protobuf::internal::InternalMetadataWithArena>": {
            "offset": "0xC0E20"
        },
        "google::protobuf::internal::ExtensionSet::SetBool": {
            "offset": "0x91F70"
        },
        "google::protobuf::internal::ExtensionSet::SetDouble": {
            "offset": "0x91FC0"
        },
        "google::protobuf::internal::ExtensionSet::SetEnum": {
            "offset": "0x92010"
        },
        "google::protobuf::internal::ExtensionSet::SetFloat": {
            "offset": "0x92060"
        },
        "google::protobuf::internal::ExtensionSet::SetInt32": {
            "offset": "0x92010"
        },
        "google::protobuf::internal::ExtensionSet::SetInt64": {
            "offset": "0x920B0"
        },
        "google::protobuf::internal::ExtensionSet::SetUInt32": {
            "offset": "0x92010"
        },
        "google::protobuf::internal::ExtensionSet::SetUInt64": {
            "offset": "0x920B0"
        },
        "google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelfLong": {
            "offset": "0xC2200"
        },
        "google::protobuf::internal::ExtensionSet::Swap": {
            "offset": "0x92100"
        },
        "google::protobuf::internal::ExtensionSet::UnsafeArenaReleaseMessage": {
            "offset": "0xC2300"
        },
        "google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage": {
            "offset": "0x921C0"
        },
        "google::protobuf::internal::ExtensionSet::~ExtensionSet": {
            "offset": "0x8C530"
        },
        "google::protobuf::internal::FieldParser<`google::protobuf::Message::_InternalParse'::`2'::ReflectiveFieldParser>": {
            "offset": "0x7AD80"
        },
        "google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>": {
            "offset": "0x70A20"
        },
        "google::protobuf::internal::GeneratedExtensionFinder::Find": {
            "offset": "0x8E200"
        },
        "google::protobuf::internal::GeneratedExtensionFinder::~GeneratedExtensionFinder": {
            "offset": "0x8C520"
        },
        "google::protobuf::internal::GenericTypeHandler<MumbleProto::ACL_ChanACL>::Merge": {
            "offset": "0x1D3D0"
        },
        "google::protobuf::internal::GenericTypeHandler<MumbleProto::ACL_ChanGroup>::Merge": {
            "offset": "0x1D3E0"
        },
        "google::protobuf::internal::GenericTypeHandler<MumbleProto::BanList_BanEntry>::Merge": {
            "offset": "0x1D3F0"
        },
        "google::protobuf::internal::GenericTypeHandler<MumbleProto::UserList_User>::Merge": {
            "offset": "0x1D400"
        },
        "google::protobuf::internal::GenericTypeHandler<MumbleProto::VoiceTarget_Target>::Merge": {
            "offset": "0x1D410"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto>::Merge": {
            "offset": "0xE4E40"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge": {
            "offset": "0xE4E50"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge": {
            "offset": "0xE4E60"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge": {
            "offset": "0xE4E70"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Merge": {
            "offset": "0xE4E60"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumValueDescriptorProto>::Merge": {
            "offset": "0xE4E80"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge": {
            "offset": "0xE4E90"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge": {
            "offset": "0xE4EA0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::GeneratedCodeInfo_Annotation>::Merge": {
            "offset": "0xE4EB0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::GetArena": {
            "offset": "0x191A0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::GetMaybeArenaPointer": {
            "offset": "0x7C1F0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge": {
            "offset": "0x77B30"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::NewFromPrototype": {
            "offset": "0x7CA10"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::MethodDescriptorProto>::Merge": {
            "offset": "0xE4EC0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge": {
            "offset": "0xE4ED0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge": {
            "offset": "0xE4EE0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge": {
            "offset": "0xB5600"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption>::Merge": {
            "offset": "0xE4EF0"
        },
        "google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption_NamePart>::Merge": {
            "offset": "0xE4F00"
        },
        "google::protobuf::internal::GenericTypeHandler<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::Merge": {
            "offset": "0x6D4C0"
        },
        "google::protobuf::internal::GetAnyFieldDescriptors": {
            "offset": "0xF5DB0"
        },
        "google::protobuf::internal::GetReflectionOrDie": {
            "offset": "0x7E600"
        },
        "google::protobuf::internal::InitProtobufDefaults": {
            "offset": "0x6EF30"
        },
        "google::protobuf::internal::InitSCCImpl": {
            "offset": "0x6EFD0"
        },
        "google::protobuf::internal::InlineGreedyStringParser": {
            "offset": "0x6FB40"
        },
        "google::protobuf::internal::InlineGreedyStringParserUTF8": {
            "offset": "0x6FC00"
        },
        "google::protobuf::internal::InternalMetadataWithArena::~InternalMetadataWithArena": {
            "offset": "0x12D10"
        },
        "google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow": {
            "offset": "0x2B420"
        },
        "google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>": {
            "offset": "0x12A10"
        },
        "google::protobuf::internal::InternalSerializeMapEntry": {
            "offset": "0x86E40"
        },
        "google::protobuf::internal::IsStructurallyValidUTF8": {
            "offset": "0x8BA20"
        },
        "google::protobuf::internal::LazyDescriptor::Get": {
            "offset": "0xB1570"
        },
        "google::protobuf::internal::LazyDescriptor::Set": {
            "offset": "0xB7830"
        },
        "google::protobuf::internal::LazyDescriptor::SetLazy": {
            "offset": "0xB8650"
        },
        "google::protobuf::internal::LogMessage::LogMessage": {
            "offset": "0x696B0"
        },
        "google::protobuf::internal::LogMessage::~LogMessage": {
            "offset": "0x69760"
        },
        "google::protobuf::internal::MapFieldBase::GetRepeatedField": {
            "offset": "0xC4ED0"
        },
        "google::protobuf::internal::MapFieldBase::IsMapValid": {
            "offset": "0xC52E0"
        },
        "google::protobuf::internal::MapFieldBase::IsRepeatedFieldValid": {
            "offset": "0xC52F0"
        },
        "google::protobuf::internal::MapFieldBase::MutableRepeatedField": {
            "offset": "0xC62A0"
        },
        "google::protobuf::internal::MapFieldBase::SetMapDirty": {
            "offset": "0xC66C0"
        },
        "google::protobuf::internal::MapFieldBase::SpaceUsedExcludingSelfLong": {
            "offset": "0xC67A0"
        },
        "google::protobuf::internal::MapFieldBase::SpaceUsedExcludingSelfNoLock": {
            "offset": "0xC6970"
        },
        "google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedFieldNoLock": {
            "offset": "0xAD90"
        },
        "google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap": {
            "offset": "0xC7710"
        },
        "google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMapNoLock": {
            "offset": "0xC7F70"
        },
        "google::protobuf::internal::MapFieldPrinterHelper::CopyKey": {
            "offset": "0xD13C0"
        },
        "google::protobuf::internal::MapFieldPrinterHelper::CopyValue": {
            "offset": "0xD1A20"
        },
        "google::protobuf::internal::MapFieldPrinterHelper::SortMap": {
            "offset": "0xD6C00"
        },
        "google::protobuf::internal::MapKeyDataOnlyByteSize": {
            "offset": "0x87420"
        },
        "google::protobuf::internal::MapKeySorter::SortKey": {
            "offset": "0x88640"
        },
        "google::protobuf::internal::MapValueRefDataOnlyByteSize": {
            "offset": "0x876C0"
        },
        "google::protobuf::internal::MutexLock::~MutexLock": {
            "offset": "0x39E90"
        },
        "google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe": {
            "offset": "0x9AB90"
        },
        "google::protobuf::internal::OnShutdownRun": {
            "offset": "0x69B50"
        },
        "google::protobuf::internal::PackedBoolParser": {
            "offset": "0x6FF30"
        },
        "google::protobuf::internal::PackedDoubleParser": {
            "offset": "0x6FF40"
        },
        "google::protobuf::internal::PackedEnumParser": {
            "offset": "0x70080"
        },
        "google::protobuf::internal::PackedEnumParserArg": {
            "offset": "0x71A60"
        },
        "google::protobuf::internal::PackedFixed32Parser": {
            "offset": "0x70090"
        },
        "google::protobuf::internal::PackedFixed64Parser": {
            "offset": "0x6FF40"
        },
        "google::protobuf::internal::PackedFloatParser": {
            "offset": "0x70090"
        },
        "google::protobuf::internal::PackedInt32Parser": {
            "offset": "0x70080"
        },
        "google::protobuf::internal::PackedInt64Parser": {
            "offset": "0x701D0"
        },
        "google::protobuf::internal::PackedSFixed32Parser": {
            "offset": "0x70090"
        },
        "google::protobuf::internal::PackedSFixed64Parser": {
            "offset": "0x6FF40"
        },
        "google::protobuf::internal::PackedSInt32Parser": {
            "offset": "0x701E0"
        },
        "google::protobuf::internal::PackedSInt64Parser": {
            "offset": "0x701F0"
        },
        "google::protobuf::internal::PackedUInt32Parser": {
            "offset": "0x70080"
        },
        "google::protobuf::internal::PackedUInt64Parser": {
            "offset": "0x701D0"
        },
        "google::protobuf::internal::ParseAnyTypeUrl": {
            "offset": "0xF5A90"
        },
        "google::protobuf::internal::ParseContext::ParseContext<google::protobuf::StringPiece &>": {
            "offset": "0x6CD80"
        },
        "google::protobuf::internal::ParseContext::ParseMessage": {
            "offset": "0x704E0"
        },
        "google::protobuf::internal::ParseContext::ParseMessage<MumbleProto::UserStats_Stats>": {
            "offset": "0x11C60"
        },
        "google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>": {
            "offset": "0xDB740"
        },
        "google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>": {
            "offset": "0xDB800"
        },
        "google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>": {
            "offset": "0xDB8C0"
        },
        "google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>": {
            "offset": "0xDB980"
        },
        "google::protobuf::internal::PrintUTF8ErrorLog": {
            "offset": "0x6EBC0"
        },
        "google::protobuf::internal::ReadSize": {
            "offset": "0x70590"
        },
        "google::protobuf::internal::ReadSizeFallback": {
            "offset": "0x70630"
        },
        "google::protobuf::internal::ReadTagFallback": {
            "offset": "0x70750"
        },
        "google::protobuf::internal::ReflectionOps::Clear": {
            "offset": "0x7DB50"
        },
        "google::protobuf::internal::ReflectionOps::Copy": {
            "offset": "0x7DC60"
        },
        "google::protobuf::internal::ReflectionOps::DiscardUnknownFields": {
            "offset": "0x7DDA0"
        },
        "google::protobuf::internal::ReflectionOps::FindInitializationErrors": {
            "offset": "0x7E170"
        },
        "google::protobuf::internal::ReflectionOps::IsInitialized": {
            "offset": "0x7E8B0"
        },
        "google::protobuf::internal::ReflectionOps::Merge": {
            "offset": "0x7F050"
        },
        "google::protobuf::internal::ReflectionSchema::GetFieldDefault": {
            "offset": "0x75C10"
        },
        "google::protobuf::internal::ReflectionSchema::GetFieldOffset": {
            "offset": "0x75CC0"
        },
        "google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof": {
            "offset": "0x75D50"
        },
        "google::protobuf::internal::RegisterFileLevelMetadata": {
            "offset": "0x780C0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>": {
            "offset": "0x7AC20"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>": {
            "offset": "0x94D90"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message> >": {
            "offset": "0x72100"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::TypeHandler>": {
            "offset": "0x6D8F0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend": {
            "offset": "0x6E020"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<MumbleProto::ACL_ChanACL>::TypeHandler>": {
            "offset": "0x11750"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<MumbleProto::ACL_ChanGroup>::TypeHandler>": {
            "offset": "0x11820"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<MumbleProto::BanList_BanEntry>::TypeHandler>": {
            "offset": "0x118F0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<MumbleProto::UserList_User>::TypeHandler>": {
            "offset": "0x119C0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<MumbleProto::VoiceTarget_Target>::TypeHandler>": {
            "offset": "0x11A90"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>": {
            "offset": "0xDAAB0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>": {
            "offset": "0xDAB80"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>": {
            "offset": "0xDAC50"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>": {
            "offset": "0xDAD20"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>": {
            "offset": "0xDADF0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>": {
            "offset": "0xDAEC0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>": {
            "offset": "0xDAF90"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>": {
            "offset": "0xDB060"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>": {
            "offset": "0xDB130"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>": {
            "offset": "0xDB200"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>": {
            "offset": "0xDB2D0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>": {
            "offset": "0xDB3A0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>": {
            "offset": "0x94F50"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>": {
            "offset": "0xDB470"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>": {
            "offset": "0xDB540"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::TypeHandler>": {
            "offset": "0x6D9D0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message> >": {
            "offset": "0x725F0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x72470"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::Reserve": {
            "offset": "0x6E5C0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message> >": {
            "offset": "0x72E10"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x72BE0"
        },
        "google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message> >": {
            "offset": "0x72F80"
        },
        "google::protobuf::internal::SerializeMapKeyWithCachedSizes": {
            "offset": "0x87990"
        },
        "google::protobuf::internal::SerializeMapValueRefWithCachedSizes": {
            "offset": "0x87BF0"
        },
        "google::protobuf::internal::ShutdownData::get": {
            "offset": "0x6A420"
        },
        "google::protobuf::internal::StringSpaceUsedExcludingSelfLong": {
            "offset": "0x6F1F0"
        },
        "google::protobuf::internal::SubMessagePrefix": {
            "offset": "0x7F7D0"
        },
        "google::protobuf::internal::ToIntSize": {
            "offset": "0x71DE0"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::CopyIterator": {
            "offset": "0xC4580"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::DeleteIterator": {
            "offset": "0xC4850"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::EqualIterator": {
            "offset": "0xC49A0"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::IncreaseIterator": {
            "offset": "0xC4EF0"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::InitializeIterator": {
            "offset": "0xC4FE0"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapBegin": {
            "offset": "0xC5300"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapEnd": {
            "offset": "0xC53A0"
        },
        "google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::~TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>": {
            "offset": "0xC3360"
        },
        "google::protobuf::internal::UTF8GenericScanFastAscii": {
            "offset": "0x8BA70"
        },
        "google::protobuf::internal::UnknownFieldParse": {
            "offset": "0x71E50"
        },
        "google::protobuf::internal::ValidateEnumUsingDescriptor": {
            "offset": "0xC23C0"
        },
        "google::protobuf::internal::VarintParseSlow64": {
            "offset": "0x707C0"
        },
        "google::protobuf::internal::VerifyUTF8": {
            "offset": "0x70830"
        },
        "google::protobuf::internal::VerifyVersion": {
            "offset": "0x69BF0"
        },
        "google::protobuf::internal::VersionString": {
            "offset": "0x6A320"
        },
        "google::protobuf::internal::WireFormat::ByteSize": {
            "offset": "0x83BB0"
        },
        "google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize": {
            "offset": "0x83DE0"
        },
        "google::protobuf::internal::WireFormat::FieldByteSize": {
            "offset": "0x84100"
        },
        "google::protobuf::internal::WireFormat::FieldDataOnlyByteSize": {
            "offset": "0x842C0"
        },
        "google::protobuf::internal::WireFormat::InternalSerializeField": {
            "offset": "0x858A0"
        },
        "google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray": {
            "offset": "0x86FA0"
        },
        "google::protobuf::internal::WireFormat::InternalSerializeWithCachedSizesToArray": {
            "offset": "0x87180"
        },
        "google::protobuf::internal::WireFormat::SkipField": {
            "offset": "0x88100"
        },
        "google::protobuf::internal::WireFormat::SkipMessage": {
            "offset": "0x88340"
        },
        "google::protobuf::internal::WireFormatLite::Int32Size": {
            "offset": "0x6EB40"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteGroupToArray<google::protobuf::Message>": {
            "offset": "0x7FB80"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteGroupToArray<google::protobuf::MessageLite>": {
            "offset": "0x7FB80"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<MumbleProto::UserStats_Stats>": {
            "offset": "0x115B0"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::DescriptorProto>": {
            "offset": "0xD9640"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::DescriptorProto_ExtensionRange>": {
            "offset": "0xD9710"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::DescriptorProto_ReservedRange>": {
            "offset": "0xD9890"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::EnumDescriptorProto>": {
            "offset": "0xD99E0"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::EnumDescriptorProto_EnumReservedRange>": {
            "offset": "0xD9890"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::EnumOptions>": {
            "offset": "0xD9AB0"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::EnumValueDescriptorProto>": {
            "offset": "0xD9C40"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::EnumValueOptions>": {
            "offset": "0xD9DB0"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::ExtensionRangeOptions>": {
            "offset": "0xD9F20"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::FieldDescriptorProto>": {
            "offset": "0xDA060"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::GeneratedCodeInfo_Annotation>": {
            "offset": "0xDA130"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::Message>": {
            "offset": "0x7FC80"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::MessageLite>": {
            "offset": "0x7FC80"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::MethodOptions>": {
            "offset": "0xDA2D0"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::OneofDescriptorProto>": {
            "offset": "0xDA460"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::OneofOptions>": {
            "offset": "0xD9F20"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::ServiceOptions>": {
            "offset": "0xDA5A0"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::SourceCodeInfo>": {
            "offset": "0xDA710"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::UninterpretedOption>": {
            "offset": "0xDA8A0"
        },
        "google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray<google::protobuf::UninterpretedOption_NamePart>": {
            "offset": "0xDA970"
        },
        "google::protobuf::internal::WireFormatLite::MessageSize<MumbleProto::UserStats_Stats>": {
            "offset": "0x11B60"
        },
        "google::protobuf::internal::WireFormatLite::MessageSize<google::protobuf::DescriptorProto>": {
            "offset": "0xDB610"
        },
        "google::protobuf::internal::WireFormatLite::MessageSize<google::protobuf::Message>": {
            "offset": "0x7FD60"
        },
        "google::protobuf::internal::WireFormatLite::MessageSize<google::protobuf::MessageLite>": {
            "offset": "0x7FD60"
        },
        "google::protobuf::internal::WireFormatLite::MessageSize<google::protobuf::MethodOptions>": {
            "offset": "0xDB640"
        },
        "google::protobuf::internal::WireFormatLite::UInt32Size": {
            "offset": "0x6EE50"
        },
        "google::protobuf::internal::WireFormatLite::VerifyUtf8String": {
            "offset": "0x6EEC0"
        },
        "google::protobuf::internal::WireFormatLite::WriteBoolToArray": {
            "offset": "0x23300"
        },
        "google::protobuf::internal::WireFormatLite::WriteDoubleToArray": {
            "offset": "0x887F0"
        },
        "google::protobuf::internal::WireFormatLite::WriteEnumToArray": {
            "offset": "0x23380"
        },
        "google::protobuf::internal::WireFormatLite::WriteFixed32ToArray": {
            "offset": "0x88870"
        },
        "google::protobuf::internal::WireFormatLite::WriteFixed64ToArray": {
            "offset": "0x888F0"
        },
        "google::protobuf::internal::WireFormatLite::WriteFloatToArray": {
            "offset": "0x23430"
        },
        "google::protobuf::internal::WireFormatLite::WriteInt32NoTagToArray": {
            "offset": "0x234B0"
        },
        "google::protobuf::internal::WireFormatLite::WriteInt32ToArray": {
            "offset": "0x23380"
        },
        "google::protobuf::internal::WireFormatLite::WriteInt64ToArray": {
            "offset": "0x236F0"
        },
        "google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray": {
            "offset": "0x88870"
        },
        "google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray": {
            "offset": "0x888F0"
        },
        "google::protobuf::internal::WireFormatLite::WriteSInt32ToArray": {
            "offset": "0x88970"
        },
        "google::protobuf::internal::WireFormatLite::WriteSInt64ToArray": {
            "offset": "0x88A30"
        },
        "google::protobuf::internal::WireFormatLite::WriteTagToArray": {
            "offset": "0x92280"
        },
        "google::protobuf::internal::WireFormatLite::WriteUInt32ToArray": {
            "offset": "0x23640"
        },
        "google::protobuf::internal::WireFormatLite::WriteUInt64ToArray": {
            "offset": "0x236F0"
        },
        "google::protobuf::internal::WireFormatParser<`google::protobuf::Message::_InternalParse'::`2'::ReflectiveFieldParser>": {
            "offset": "0x7B1F0"
        },
        "google::protobuf::internal::WireFormatParser<google::protobuf::internal::UnknownFieldParserHelper>": {
            "offset": "0x70F00"
        },
        "google::protobuf::internal::WrappedMutex::~WrappedMutex": {
            "offset": "0x3A7D0"
        },
        "google::protobuf::internal::`anonymous namespace'::InitSCC_DFS": {
            "offset": "0x6F140"
        },
        "google::protobuf::internal::`anonymous namespace'::ParseEndsInSlopRegion": {
            "offset": "0x70200"
        },
        "google::protobuf::internal::`anonymous namespace'::SizeOfUnion<google::protobuf::internal::ExtensionSet::KeyValue *,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> > > > >": {
            "offset": "0x8C120"
        },
        "google::protobuf::internal::arena_delete_object<google::protobuf::Message>": {
            "offset": "0x11E50"
        },
        "google::protobuf::internal::arena_delete_object<google::protobuf::MessageLite>": {
            "offset": "0x11E50"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ACL>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ACL_ChanACL>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ACL_ChanGroup>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::Authenticate>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::BanList>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::BanList_BanEntry>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ChannelRemove>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ChannelState>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::CodecVersion>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ContextAction>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ContextActionModify>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::CryptSetup>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::PermissionDenied>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::PermissionQuery>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::Ping>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::QueryUsers>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::Reject>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::RequestBlob>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ServerConfig>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::ServerSync>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::SuggestConfig>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::TextMessage>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::UDPTunnel>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::UserList>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::UserList_User>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::UserRemove>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::UserState>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::UserStats>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::UserStats_Stats>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::Version>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::VoiceTarget>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<MumbleProto::VoiceTarget_Target>": {
            "offset": "0x11E80"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap>": {
            "offset": "0xC2BF0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::MapKey>": {
            "offset": "0xC2C40"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<__int64> >": {
            "offset": "0x8C4C0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<bool> >": {
            "offset": "0x8C4D0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double> >": {
            "offset": "0x8C4C0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float> >": {
            "offset": "0x8C4B0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int> >": {
            "offset": "0x8C4B0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned __int64> >": {
            "offset": "0x8C4C0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int> >": {
            "offset": "0x8C4B0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message> >": {
            "offset": "0x8C4F0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite> >": {
            "offset": "0x8C4F0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x8C4E0"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::Container>": {
            "offset": "0x11E70"
        },
        "google::protobuf::internal::arena_destruct_object<google::protobuf::internal::WrappedMutex>": {
            "offset": "0x3A7D0"
        },
        "google::protobuf::internal::arena_destruct_object<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xAEB0"
        },
        "google::protobuf::internal::arena_destruct_object<std::map<int,google::protobuf::internal::ExtensionSet::Extension,std::less<int>,std::allocator<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> > > >": {
            "offset": "0xADF0"
        },
        "google::protobuf::io::ArrayInputStream::ArrayInputStream": {
            "offset": "0x8B2D0"
        },
        "google::protobuf::io::ArrayInputStream::BackUp": {
            "offset": "0x8B390"
        },
        "google::protobuf::io::ArrayInputStream::ByteCount": {
            "offset": "0x8B6E0"
        },
        "google::protobuf::io::ArrayInputStream::Next": {
            "offset": "0x8B7A0"
        },
        "google::protobuf::io::ArrayInputStream::Skip": {
            "offset": "0x8B950"
        },
        "google::protobuf::io::ArrayInputStream::~ArrayInputStream": {
            "offset": "0x71390"
        },
        "google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback": {
            "offset": "0x6ABD0"
        },
        "google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback": {
            "offset": "0x6AC30"
        },
        "google::protobuf::io::CodedInputStream::ReadRaw": {
            "offset": "0x6ACB0"
        },
        "google::protobuf::io::CodedInputStream::ReadString": {
            "offset": "0x6AF00"
        },
        "google::protobuf::io::CodedInputStream::ReadStringFallback": {
            "offset": "0x6AFF0"
        },
        "google::protobuf::io::CodedInputStream::ReadTagFallback": {
            "offset": "0x6B1C0"
        },
        "google::protobuf::io::CodedInputStream::ReadVarint32Fallback": {
            "offset": "0x6B3C0"
        },
        "google::protobuf::io::CodedInputStream::ReadVarint64Fallback": {
            "offset": "0x6B4E0"
        },
        "google::protobuf::io::CodedInputStream::ReadVarint64Slow": {
            "offset": "0x6BC30"
        },
        "google::protobuf::io::CodedInputStream::RecomputeBufferLimits": {
            "offset": "0x6BEB0"
        },
        "google::protobuf::io::CodedInputStream::Refresh": {
            "offset": "0x6BEF0"
        },
        "google::protobuf::io::CodedInputStream::SkipFallback": {
            "offset": "0x6C0D0"
        },
        "google::protobuf::io::CodedInputStream::~CodedInputStream": {
            "offset": "0x6A860"
        },
        "google::protobuf::io::CodedOutputStream::CodedOutputStream": {
            "offset": "0x6A7B0"
        },
        "google::protobuf::io::CodedOutputStream::~CodedOutputStream": {
            "offset": "0x6A8B0"
        },
        "google::protobuf::io::EpsCopyOutputStream::Encode64": {
            "offset": "0x38EB0"
        },
        "google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback": {
            "offset": "0x6A910"
        },
        "google::protobuf::io::EpsCopyOutputStream::Flush": {
            "offset": "0x6AA20"
        },
        "google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer": {
            "offset": "0x6AB60"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteLengthDelim": {
            "offset": "0x6C170"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteRawFallback": {
            "offset": "0x6C210"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased": {
            "offset": "0x6C380"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteString<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x11D20"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased": {
            "offset": "0x23510"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline": {
            "offset": "0x6C490"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteStringOutline": {
            "offset": "0x6C500"
        },
        "google::protobuf::io::EpsCopyOutputStream::WriteVarintPacked<google::protobuf::RepeatedField<int>,unsigned __int64 __cdecl(unsigned __int64)>": {
            "offset": "0x7FD90"
        },
        "google::protobuf::io::FetchUnicodePoint": {
            "offset": "0xEFFB0"
        },
        "google::protobuf::io::NoLocaleStrtod": {
            "offset": "0xC8FC0"
        },
        "google::protobuf::io::SafeDoubleToFloat": {
            "offset": "0xC90F0"
        },
        "google::protobuf::io::StringOutputStream::BackUp": {
            "offset": "0x8B500"
        },
        "google::protobuf::io::StringOutputStream::ByteCount": {
            "offset": "0x8B6F0"
        },
        "google::protobuf::io::StringOutputStream::Next": {
            "offset": "0x8B800"
        },
        "google::protobuf::io::StringOutputStream::StringOutputStream": {
            "offset": "0x8B300"
        },
        "google::protobuf::io::StringOutputStream::~StringOutputStream": {
            "offset": "0x8B320"
        },
        "google::protobuf::io::Tokenizer::ConsumeBlockComment": {
            "offset": "0xEEBD0"
        },
        "google::protobuf::io::Tokenizer::ConsumeNumber": {
            "offset": "0xEF120"
        },
        "google::protobuf::io::Tokenizer::ConsumeString": {
            "offset": "0xEF800"
        },
        "google::protobuf::io::Tokenizer::ConsumeZeroOrMore<google::protobuf::io::`anonymous namespace'::Digit>": {
            "offset": "0xEE9A0"
        },
        "google::protobuf::io::Tokenizer::IsIdentifier": {
            "offset": "0xF00F0"
        },
        "google::protobuf::io::Tokenizer::Next": {
            "offset": "0xF02F0"
        },
        "google::protobuf::io::Tokenizer::NextChar": {
            "offset": "0xF09F0"
        },
        "google::protobuf::io::Tokenizer::ParseFloat": {
            "offset": "0xF0A80"
        },
        "google::protobuf::io::Tokenizer::ParseInteger": {
            "offset": "0xF0C20"
        },
        "google::protobuf::io::Tokenizer::ParseStringAppend": {
            "offset": "0xF0D10"
        },
        "google::protobuf::io::Tokenizer::Refresh": {
            "offset": "0xF1260"
        },
        "google::protobuf::io::Tokenizer::StopRecording": {
            "offset": "0xF1350"
        },
        "google::protobuf::io::Tokenizer::Token::~Token": {
            "offset": "0x2E790"
        },
        "google::protobuf::io::Tokenizer::Tokenizer": {
            "offset": "0xEEA40"
        },
        "google::protobuf::io::Tokenizer::TryConsumeCommentStart": {
            "offset": "0xF13A0"
        },
        "google::protobuf::io::Tokenizer::~Tokenizer": {
            "offset": "0xEEB60"
        },
        "google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing": {
            "offset": "0xF830"
        },
        "google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw": {
            "offset": "0x8B250"
        },
        "google::protobuf::io::`anonymous namespace'::LocalizeRadix": {
            "offset": "0xC8D80"
        },
        "google::protobuf::io::`anonymous namespace'::ReadVarint64FromArray": {
            "offset": "0x6B580"
        },
        "google::protobuf::safe_parse_positive_int<int>": {
            "offset": "0x89790"
        },
        "google::protobuf::safe_parse_sign": {
            "offset": "0x8AED0"
        },
        "google::protobuf::safe_strto32": {
            "offset": "0x8B0D0"
        },
        "google::protobuf::strings::AlphaNum::AlphaNum": {
            "offset": "0x898B0"
        },
        "google::protobuf::strings::Substitute": {
            "offset": "0xF54B0"
        },
        "google::protobuf::strings::SubstituteAndAppend": {
            "offset": "0xF5560"
        },
        "google::protobuf::util::Status::Status": {
            "offset": "0x88BB0"
        },
        "haar1": {
            "offset": "0x116F70"
        },
        "hysteresis_decision": {
            "offset": "0x1171B0"
        },
        "icomp": {
            "offset": "0x1A5FE0"
        },
        "init_caps": {
            "offset": "0x112CE0"
        },
        "inspect_error": {
            "offset": "0x1A5FF0"
        },
        "intensity_stereo": {
            "offset": "0x117280"
        },
        "interleave_hadamard": {
            "offset": "0x1174A0"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(bool const &)> >::Call": {
            "offset": "0x2FC20"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(bool const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x2C4F0"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::Call": {
            "offset": "0x2F810"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(int const &)> >::CallInternal<0,0,std::tuple<> >": {
            "offset": "0x2C1A0"
        },
        "internal::ConsoleCommandFunction<std::function<void __cdecl(void)> >::Call": {
            "offset": "0x30030"
        },
        "internal::ConsoleVariableEntry<bool>::ConsoleVariableEntry<bool>": {
            "offset": "0x2E150"
        },
        "internal::ConsoleVariableEntry<bool>::GetOfflineValue": {
            "offset": "0x31550"
        },
        "internal::ConsoleVariableEntry<bool>::GetValue": {
            "offset": "0x315F0"
        },
        "internal::ConsoleVariableEntry<bool>::SaveOfflineValue": {
            "offset": "0x338D0"
        },
        "internal::ConsoleVariableEntry<bool>::SetRawValue": {
            "offset": "0x33E30"
        },
        "internal::ConsoleVariableEntry<bool>::SetValue": {
            "offset": "0x34110"
        },
        "internal::ConsoleVariableEntry<bool>::UpdateTrackingVariable": {
            "offset": "0x34680"
        },
        "internal::ConsoleVariableEntry<int>::ConsoleVariableEntry<int>": {
            "offset": "0x2DED0"
        },
        "internal::ConsoleVariableEntry<int>::GetOfflineValue": {
            "offset": "0x31530"
        },
        "internal::ConsoleVariableEntry<int>::GetValue": {
            "offset": "0x315B0"
        },
        "internal::ConsoleVariableEntry<int>::SaveOfflineValue": {
            "offset": "0x338C0"
        },
        "internal::ConsoleVariableEntry<int>::SetRawValue": {
            "offset": "0x33C60"
        },
        "internal::ConsoleVariableEntry<int>::SetValue": {
            "offset": "0x34010"
        },
        "internal::ConsoleVariableEntry<int>::UpdateTrackingVariable": {
            "offset": "0x34660"
        },
        "internal::Constraints<bool,void>::Compare": {
            "offset": "0x30880"
        },
        "internal::Constraints<int,void>::Compare": {
            "offset": "0x30470"
        },
        "internal::MarkConsoleVarModified": {
            "offset": "0x33510"
        },
        "internal::UnparseArgument<int>": {
            "offset": "0x2D170"
        },
        "interp_band_gain": {
            "offset": "0x1ACCE0"
        },
        "interp_bits2pulses": {
            "offset": "0x1150A0"
        },
        "inverse_transform": {
            "offset": "0x1ACEA0"
        },
        "is_digital_silence": {
            "offset": "0xF7650"
        },
        "isqrt32": {
            "offset": "0x124400"
        },
        "jitter_buffer_ctl": {
            "offset": "0x1AA0C0"
        },
        "jitter_buffer_destroy": {
            "offset": "0x1AA290"
        },
        "jitter_buffer_get": {
            "offset": "0x1AA2B0"
        },
        "jitter_buffer_get_pointer_timestamp": {
            "offset": "0x6EB20"
        },
        "jitter_buffer_init": {
            "offset": "0x1AA6A0"
        },
        "jitter_buffer_put": {
            "offset": "0x1AA7F0"
        },
        "jitter_buffer_reset": {
            "offset": "0x1AAA40"
        },
        "jitter_buffer_tick": {
            "offset": "0x1AAAF0"
        },
        "jitter_buffer_update_delay": {
            "offset": "0x1AABA0"
        },
        "kf_bfly2": {
            "offset": "0x1ADFF0"
        },
        "kf_bfly3": {
            "offset": "0x11F020"
        },
        "kf_bfly4": {
            "offset": "0x11F230"
        },
        "kf_bfly5": {
            "offset": "0x11F8E0"
        },
        "l1_metric": {
            "offset": "0x1031A0"
        },
        "lab::AudioArray<float>::AudioArray<float>": {
            "offset": "0x190720"
        },
        "lab::AudioArray<float>::~AudioArray<float>": {
            "offset": "0x190980"
        },
        "lab::AudioBasicProcessorNode::AudioBasicProcessorNode": {
            "offset": "0x196AC0"
        },
        "lab::AudioBasicProcessorNode::checkNumberOfChannelsForInput": {
            "offset": "0x196B80"
        },
        "lab::AudioBasicProcessorNode::initialize": {
            "offset": "0x196DB0"
        },
        "lab::AudioBasicProcessorNode::latencyTime": {
            "offset": "0x196E10"
        },
        "lab::AudioBasicProcessorNode::process": {
            "offset": "0x196E20"
        },
        "lab::AudioBasicProcessorNode::processor": {
            "offset": "0x197010"
        },
        "lab::AudioBasicProcessorNode::pullInputs": {
            "offset": "0x197020"
        },
        "lab::AudioBasicProcessorNode::reset": {
            "offset": "0x197110"
        },
        "lab::AudioBasicProcessorNode::tailTime": {
            "offset": "0x197130"
        },
        "lab::AudioBasicProcessorNode::uninitialize": {
            "offset": "0x197140"
        },
        "lab::AudioBasicProcessorNode::~AudioBasicProcessorNode": {
            "offset": "0x18FF90"
        },
        "lab::AudioBus::AudioBus": {
            "offset": "0x1907C0"
        },
        "lab::AudioBus::clearSilentFlag": {
            "offset": "0x190AE0"
        },
        "lab::AudioBus::copyFrom": {
            "offset": "0x190B20"
        },
        "lab::AudioBus::discreteCopyFrom": {
            "offset": "0x190C00"
        },
        "lab::AudioBus::discreteSumFrom": {
            "offset": "0x190D10"
        },
        "lab::AudioBus::isSilent": {
            "offset": "0x190DD0"
        },
        "lab::AudioBus::setChannelMemory": {
            "offset": "0x190E10"
        },
        "lab::AudioBus::speakersCopyFrom": {
            "offset": "0x190EA0"
        },
        "lab::AudioBus::speakersSumFrom": {
            "offset": "0x192600"
        },
        "lab::AudioBus::speakersSumFrom5_1_ToMono": {
            "offset": "0x1918F0"
        },
        "lab::AudioBus::speakersSumFrom7_1_ToMono": {
            "offset": "0x191EA0"
        },
        "lab::AudioBus::sumFrom": {
            "offset": "0x192AA0"
        },
        "lab::AudioBus::zero": {
            "offset": "0x192B80"
        },
        "lab::AudioBus::~AudioBus": {
            "offset": "0x3A130"
        },
        "lab::AudioChannel::copyFrom": {
            "offset": "0x1981D0"
        },
        "lab::AudioChannel::sumFrom": {
            "offset": "0x198290"
        },
        "lab::AudioChannel::zero": {
            "offset": "0x192C00"
        },
        "lab::AudioContext::AudioContext": {
            "offset": "0x189D20"
        },
        "lab::AudioContext::PendingConnection::PendingConnection": {
            "offset": "0x189FD0"
        },
        "lab::AudioContext::PendingConnection::~PendingConnection": {
            "offset": "0x18A4F0"
        },
        "lab::AudioContext::connect": {
            "offset": "0x18AF80"
        },
        "lab::AudioContext::currentSampleFrame": {
            "offset": "0x18B0F0"
        },
        "lab::AudioContext::currentTime": {
            "offset": "0x18B100"
        },
        "lab::AudioContext::destination": {
            "offset": "0x18B150"
        },
        "lab::AudioContext::disconnect": {
            "offset": "0x18B190"
        },
        "lab::AudioContext::dispatchEvents": {
            "offset": "0x18B340"
        },
        "lab::AudioContext::handleAutomaticSources": {
            "offset": "0x18B590"
        },
        "lab::AudioContext::handlePostRenderTasks": {
            "offset": "0x18B830"
        },
        "lab::AudioContext::handlePreRenderTasks": {
            "offset": "0x18B890"
        },
        "lab::AudioContext::isInitialized": {
            "offset": "0x18B8E0"
        },
        "lab::AudioContext::lazyInitialize": {
            "offset": "0x18B8F0"
        },
        "lab::AudioContext::processAutomaticPullNodes": {
            "offset": "0x18BB70"
        },
        "lab::AudioContext::sampleRate": {
            "offset": "0x18BC00"
        },
        "lab::AudioContext::setDestinationNode": {
            "offset": "0x18BC60"
        },
        "lab::AudioContext::startRendering": {
            "offset": "0x18BD10"
        },
        "lab::AudioContext::update": {
            "offset": "0x18BDA0"
        },
        "lab::AudioContext::updateAutomaticPullNodes": {
            "offset": "0x18CCC0"
        },
        "lab::AudioContext::~AudioContext": {
            "offset": "0x18A660"
        },
        "lab::AudioDSPKernel::AudioDSPKernel": {
            "offset": "0x199A80"
        },
        "lab::AudioDSPKernel::~AudioDSPKernel": {
            "offset": "0x197680"
        },
        "lab::AudioDSPKernelProcessor::AudioDSPKernelProcessor": {
            "offset": "0x199D00"
        },
        "lab::AudioDSPKernelProcessor::initialize": {
            "offset": "0x199D30"
        },
        "lab::AudioDSPKernelProcessor::latencyTime": {
            "offset": "0x199E00"
        },
        "lab::AudioDSPKernelProcessor::process": {
            "offset": "0x199E20"
        },
        "lab::AudioDSPKernelProcessor::reset": {
            "offset": "0x199FB0"
        },
        "lab::AudioDSPKernelProcessor::tailTime": {
            "offset": "0x19A010"
        },
        "lab::AudioDSPKernelProcessor::uninitialize": {
            "offset": "0x19A030"
        },
        "lab::AudioDSPKernelProcessor::~AudioDSPKernelProcessor": {
            "offset": "0x197690"
        },
        "lab::AudioDestinationNode::AudioDestinationNode": {
            "offset": "0x18CEA0"
        },
        "lab::AudioDestinationNode::LocalAudioInputProvider::provideInput": {
            "offset": "0x18D270"
        },
        "lab::AudioDestinationNode::currentSampleFrame": {
            "offset": "0x18D200"
        },
        "lab::AudioDestinationNode::currentTime": {
            "offset": "0x18D210"
        },
        "lab::AudioDestinationNode::latencyTime": {
            "offset": "0x43A90"
        },
        "lab::AudioDestinationNode::localAudioInputProvider": {
            "offset": "0x18D260"
        },
        "lab::AudioDestinationNode::numberOfChannels": {
            "offset": "0x43AA0"
        },
        "lab::AudioDestinationNode::process": {
            "offset": "0xAD90"
        },
        "lab::AudioDestinationNode::render": {
            "offset": "0x18D2C0"
        },
        "lab::AudioDestinationNode::reset": {
            "offset": "0x18D5B0"
        },
        "lab::AudioDestinationNode::tailTime": {
            "offset": "0x43A90"
        },
        "lab::AudioDestinationNode::~AudioDestinationNode": {
            "offset": "0x18D040"
        },
        "lab::AudioHardwareSourceNode::AudioHardwareSourceNode": {
            "offset": "0x198760"
        },
        "lab::AudioHardwareSourceNode::process": {
            "offset": "0x198920"
        },
        "lab::AudioHardwareSourceNode::propagatesSilence": {
            "offset": "0xF830"
        },
        "lab::AudioHardwareSourceNode::reset": {
            "offset": "0xAD90"
        },
        "lab::AudioHardwareSourceNode::setFormat": {
            "offset": "0x198A00"
        },
        "lab::AudioIOCallback::~AudioIOCallback": {
            "offset": "0x18D090"
        },
        "lab::AudioListener::AudioListener": {
            "offset": "0x1964D0"
        },
        "lab::AudioListener::~AudioListener": {
            "offset": "0x18A990"
        },
        "lab::AudioNode::AudioNode": {
            "offset": "0x187D20"
        },
        "lab::AudioNode::addInput": {
            "offset": "0x188000"
        },
        "lab::AudioNode::addOutput": {
            "offset": "0x1880D0"
        },
        "lab::AudioNode::channelCount": {
            "offset": "0x43AA0"
        },
        "lab::AudioNode::checkNumberOfChannelsForInput": {
            "offset": "0x1881A0"
        },
        "lab::AudioNode::initialize": {
            "offset": "0x188230"
        },
        "lab::AudioNode::input": {
            "offset": "0x188240"
        },
        "lab::AudioNode::isScheduledNode": {
            "offset": "0xF830"
        },
        "lab::AudioNode::output": {
            "offset": "0x188290"
        },
        "lab::AudioNode::processIfNecessary": {
            "offset": "0x1882E0"
        },
        "lab::AudioNode::propagatesSilence": {
            "offset": "0x188950"
        },
        "lab::AudioNode::pullInputs": {
            "offset": "0x1889F0"
        },
        "lab::AudioNode::setChannelCount": {
            "offset": "0x188A70"
        },
        "lab::AudioNode::uninitialize": {
            "offset": "0x188AF0"
        },
        "lab::AudioNode::updateChannelsForInputs": {
            "offset": "0x188B00"
        },
        "lab::AudioNode::~AudioNode": {
            "offset": "0x187EB0"
        },
        "lab::AudioNodeInput::AudioNodeInput": {
            "offset": "0x194890"
        },
        "lab::AudioNodeInput::bus": {
            "offset": "0x194A90"
        },
        "lab::AudioNodeInput::connect": {
            "offset": "0x194C30"
        },
        "lab::AudioNodeInput::didUpdate": {
            "offset": "0x194DA0"
        },
        "lab::AudioNodeInput::disconnect": {
            "offset": "0x194DC0"
        },
        "lab::AudioNodeInput::numberOfChannels": {
            "offset": "0x194F60"
        },
        "lab::AudioNodeInput::pull": {
            "offset": "0x1951C0"
        },
        "lab::AudioNodeInput::updateInternalBus": {
            "offset": "0x195540"
        },
        "lab::AudioNodeOutput::AudioNodeOutput": {
            "offset": "0x1955F0"
        },
        "lab::AudioNodeOutput::addInput": {
            "offset": "0x195860"
        },
        "lab::AudioNodeOutput::addParam": {
            "offset": "0x195910"
        },
        "lab::AudioNodeOutput::bus": {
            "offset": "0x195A70"
        },
        "lab::AudioNodeOutput::disconnectAll": {
            "offset": "0x195AC0"
        },
        "lab::AudioNodeOutput::pull": {
            "offset": "0x195D00"
        },
        "lab::AudioNodeOutput::removeInput": {
            "offset": "0x195E10"
        },
        "lab::AudioNodeOutput::removeParam": {
            "offset": "0x195F90"
        },
        "lab::AudioNodeOutput::setNumberOfChannels": {
            "offset": "0x1960F0"
        },
        "lab::AudioNodeOutput::updateRenderingState": {
            "offset": "0x1961B0"
        },
        "lab::AudioParam::AudioParam": {
            "offset": "0x18ED50"
        },
        "lab::AudioParam::calculateFinalValues": {
            "offset": "0x18F150"
        },
        "lab::AudioParam::connect": {
            "offset": "0x18F520"
        },
        "lab::AudioParam::didUpdate": {
            "offset": "0xAD90"
        },
        "lab::AudioParam::disconnect": {
            "offset": "0x18F690"
        },
        "lab::AudioParam::finalValue": {
            "offset": "0x18F800"
        },
        "lab::AudioParam::setValue": {
            "offset": "0x18F830"
        },
        "lab::AudioParam::setValueAtTime": {
            "offset": "0x43AE0"
        },
        "lab::AudioParam::setValueCurveAtTime": {
            "offset": "0x43AF0"
        },
        "lab::AudioParam::smooth": {
            "offset": "0x18F870"
        },
        "lab::AudioParam::smoothedValue": {
            "offset": "0x18F930"
        },
        "lab::AudioParam::value": {
            "offset": "0x18F940"
        },
        "lab::AudioParamTimeline::ParamEvent::~ParamEvent": {
            "offset": "0x18DDF0"
        },
        "lab::AudioParamTimeline::insertEvent": {
            "offset": "0x18DF30"
        },
        "lab::AudioParamTimeline::setValueAtTime": {
            "offset": "0x18E1B0"
        },
        "lab::AudioParamTimeline::setValueCurveAtTime": {
            "offset": "0x18E2C0"
        },
        "lab::AudioParamTimeline::valueForContextTime": {
            "offset": "0x18E3E0"
        },
        "lab::AudioParamTimeline::valuesForTimeRange": {
            "offset": "0x18E530"
        },
        "lab::AudioParamTimeline::valuesForTimeRangeImpl": {
            "offset": "0x18E540"
        },
        "lab::AudioParamTimeline::~AudioParamTimeline": {
            "offset": "0x18EF50"
        },
        "lab::AudioSourceNode::latencyTime": {
            "offset": "0x43A90"
        },
        "lab::AudioSourceNode::tailTime": {
            "offset": "0x43A90"
        },
        "lab::AudioSourceNode::~AudioSourceNode": {
            "offset": "0x198800"
        },
        "lab::AudioSourceProvider::setClient": {
            "offset": "0xAD90"
        },
        "lab::AudioSourceProvider::~AudioSourceProvider": {
            "offset": "0x18D0A0"
        },
        "lab::AudioSourceProviderClient::~AudioSourceProviderClient": {
            "offset": "0x198810"
        },
        "lab::AudioSummingJunction::AudioSummingJunction": {
            "offset": "0x1939A0"
        },
        "lab::AudioSummingJunction::changedOutputs": {
            "offset": "0x193D10"
        },
        "lab::AudioSummingJunction::handleDirtyAudioSummingJunctions": {
            "offset": "0x193E40"
        },
        "lab::AudioSummingJunction::isConnected": {
            "offset": "0x194020"
        },
        "lab::AudioSummingJunction::junctionConnectOutput": {
            "offset": "0x1941F0"
        },
        "lab::AudioSummingJunction::junctionDisconnectOutput": {
            "offset": "0x1944E0"
        },
        "lab::AudioSummingJunction::numberOfRenderingConnections": {
            "offset": "0x194660"
        },
        "lab::AudioSummingJunction::updateRenderingState": {
            "offset": "0x1946F0"
        },
        "lab::AudioSummingJunction::~AudioSummingJunction": {
            "offset": "0x193A80"
        },
        "lab::AudioUtilities::discreteTimeConstantForSampleRate": {
            "offset": "0x196A00"
        },
        "lab::AudioUtilities::timeToSampleFrame": {
            "offset": "0x196A30"
        },
        "lab::Biquad::Biquad": {
            "offset": "0x198B10"
        },
        "lab::Biquad::process": {
            "offset": "0x198B90"
        },
        "lab::Biquad::reset": {
            "offset": "0x198D40"
        },
        "lab::Biquad::setAllpassParams": {
            "offset": "0x198D60"
        },
        "lab::Biquad::setBandpassParams": {
            "offset": "0x198E90"
        },
        "lab::Biquad::setHighShelfParams": {
            "offset": "0x198FD0"
        },
        "lab::Biquad::setHighpassParams": {
            "offset": "0x1991F0"
        },
        "lab::Biquad::setLowShelfParams": {
            "offset": "0x1993D0"
        },
        "lab::Biquad::setLowpassParams": {
            "offset": "0x1995F0"
        },
        "lab::Biquad::setNotchParams": {
            "offset": "0x1997D0"
        },
        "lab::Biquad::setPeakingParams": {
            "offset": "0x1998E0"
        },
        "lab::Biquad::~Biquad": {
            "offset": "0x198B50"
        },
        "lab::BiquadDSPKernel::latencyTime": {
            "offset": "0x43A90"
        },
        "lab::BiquadDSPKernel::process": {
            "offset": "0x19A090"
        },
        "lab::BiquadDSPKernel::reset": {
            "offset": "0x197D00"
        },
        "lab::BiquadDSPKernel::tailTime": {
            "offset": "0x19A120"
        },
        "lab::BiquadDSPKernel::updateCoefficientsIfNecessary": {
            "offset": "0x19A130"
        },
        "lab::BiquadFilterNode::BiquadFilterNode": {
            "offset": "0x18FBB0"
        },
        "lab::BiquadFilterNode::detune": {
            "offset": "0x190220"
        },
        "lab::BiquadFilterNode::frequency": {
            "offset": "0x190270"
        },
        "lab::BiquadFilterNode::gain": {
            "offset": "0x1902C0"
        },
        "lab::BiquadFilterNode::q": {
            "offset": "0x190310"
        },
        "lab::BiquadFilterNode::setType": {
            "offset": "0x190360"
        },
        "lab::BiquadProcessor::BiquadProcessor": {
            "offset": "0x1971A0"
        },
        "lab::BiquadProcessor::checkForDirtyCoefficients": {
            "offset": "0x197970"
        },
        "lab::BiquadProcessor::createKernel": {
            "offset": "0x197B90"
        },
        "lab::BiquadProcessor::process": {
            "offset": "0x197C00"
        },
        "lab::BiquadProcessor::setType": {
            "offset": "0x197D10"
        },
        "lab::ContextGraphLock::~ContextGraphLock": {
            "offset": "0x18AC90"
        },
        "lab::ContextRenderLock::~ContextRenderLock": {
            "offset": "0x3A6F0"
        },
        "lab::DenormalDisabler::~DenormalDisabler": {
            "offset": "0x18D0B0"
        },
        "lab::Sound::MakeHardwareSourceNode": {
            "offset": "0x192C90"
        },
        "lab::WaveShaperDSPKernel::latencyTime": {
            "offset": "0x43A90"
        },
        "lab::WaveShaperDSPKernel::process": {
            "offset": "0x19A730"
        },
        "lab::WaveShaperDSPKernel::reset": {
            "offset": "0xAD90"
        },
        "lab::WaveShaperDSPKernel::tailTime": {
            "offset": "0x43A90"
        },
        "lab::WaveShaperNode::WaveShaperNode": {
            "offset": "0x1903A0"
        },
        "lab::WaveShaperNode::setCurve": {
            "offset": "0x190420"
        },
        "lab::WaveShaperProcessor::WaveShaperProcessor": {
            "offset": "0x197D20"
        },
        "lab::WaveShaperProcessor::createKernel": {
            "offset": "0x197EC0"
        },
        "lab::WaveShaperProcessor::curve": {
            "offset": "0x197F20"
        },
        "lab::WaveShaperProcessor::process": {
            "offset": "0x197FA0"
        },
        "lab::WaveShaperProcessor::setCurve": {
            "offset": "0x198150"
        },
        "lab::`anonymous namespace'::`dynamic initializer for 'junctionMutex''": {
            "offset": "0x2310"
        },
        "lab::`anonymous namespace'::`dynamic initializer for 'm_eventsMutex''": {
            "offset": "0x22E0"
        },
        "lab::`anonymous namespace'::`dynamic initializer for 'outputMutex''": {
            "offset": "0x23A0"
        },
        "lab::`dynamic initializer for 's_dirtySummingJunctions''": {
            "offset": "0x2340"
        },
        "launch::IsSDKGuest": {
            "offset": "0x64100"
        },
        "local_book_besterror": {
            "offset": "0x1A6220"
        },
        "mapping0_forward": {
            "offset": "0x19C5D0"
        },
        "mapping0_free_info": {
            "offset": "0x19C1A0"
        },
        "mapping0_inverse": {
            "offset": "0x19D4C0"
        },
        "mapping0_pack": {
            "offset": "0x19C1D0"
        },
        "mapping0_unpack": {
            "offset": "0x19C370"
        },
        "max_seeds": {
            "offset": "0x1A66E0"
        },
        "mdct_backward": {
            "offset": "0x1A6830"
        },
        "mdct_bitreverse": {
            "offset": "0x1A6C00"
        },
        "mdct_butterflies": {
            "offset": "0x1A6DD0"
        },
        "mdct_butterfly_16": {
            "offset": "0x1A70A0"
        },
        "mdct_butterfly_32": {
            "offset": "0x1A71F0"
        },
        "mdct_butterfly_8": {
            "offset": "0x1A74E0"
        },
        "mdct_butterfly_first": {
            "offset": "0x1A75C0"
        },
        "mdct_forward": {
            "offset": "0x1A7780"
        },
        "moodycamel::ReaderWriterQueue<std::function<void __cdecl(void)>,512>::ReaderWriterQueue<std::function<void __cdecl(void)>,512>": {
            "offset": "0x189B10"
        },
        "moodycamel::ReaderWriterQueue<std::function<void __cdecl(void)>,512>::make_block": {
            "offset": "0x18BA20"
        },
        "moodycamel::ReaderWriterQueue<std::function<void __cdecl(void)>,512>::~ReaderWriterQueue<std::function<void __cdecl(void)>,512>": {
            "offset": "0x18A190"
        },
        "msec": {
            "offset": "0x58D80"
        },
        "msgpack::v1::array_size_overflow::array_size_overflow": {
            "offset": "0x39840"
        },
        "msgpack::v1::array_size_overflow::~array_size_overflow": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::bin_size_overflow::bin_size_overflow": {
            "offset": "0x39920"
        },
        "msgpack::v1::bin_size_overflow::~bin_size_overflow": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::depth_size_overflow::depth_size_overflow": {
            "offset": "0x39970"
        },
        "msgpack::v1::depth_size_overflow::~depth_size_overflow": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::ext_size_overflow::ext_size_overflow": {
            "offset": "0x399C0"
        },
        "msgpack::v1::ext_size_overflow::~ext_size_overflow": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::insufficient_bytes::insufficient_bytes": {
            "offset": "0x39A10"
        },
        "msgpack::v1::insufficient_bytes::~insufficient_bytes": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::map_size_overflow::map_size_overflow": {
            "offset": "0x39A60"
        },
        "msgpack::v1::map_size_overflow::~map_size_overflow": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::object_handle::~object_handle": {
            "offset": "0x3A7E0"
        },
        "msgpack::v1::parse_error::parse_error": {
            "offset": "0x39AB0"
        },
        "msgpack::v1::parse_error::~parse_error": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::size_overflow::size_overflow": {
            "offset": "0x36A10"
        },
        "msgpack::v1::str_size_overflow::str_size_overflow": {
            "offset": "0x39B50"
        },
        "msgpack::v1::str_size_overflow::~str_size_overflow": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::type_error::type_error": {
            "offset": "0x39BA0"
        },
        "msgpack::v1::type_error::~type_error": {
            "offset": "0xAFE0"
        },
        "msgpack::v1::unpack_error::unpack_error": {
            "offset": "0x36950"
        },
        "msgpack::v1::zone::allocate_align": {
            "offset": "0x42850"
        },
        "msgpack::v1::zone::allocate_expand": {
            "offset": "0x42910"
        },
        "msgpack::v1::zone::get_aligned": {
            "offset": "0x439F0"
        },
        "msgpack::v1::zone::zone": {
            "offset": "0x39BD0"
        },
        "msgpack::v1::zone::~zone": {
            "offset": "0x3A810"
        },
        "msgpack::v2::detail::context<msgpack::v2::detail::parse_helper<msgpack::v2::detail::create_object_visitor> >::execute": {
            "offset": "0x42D70"
        },
        "msgpack::v2::detail::context<msgpack::v2::detail::parse_helper<msgpack::v2::detail::create_object_visitor> >::holder": {
            "offset": "0x38EB0"
        },
        "msgpack::v2::detail::context<msgpack::v2::detail::parse_helper<msgpack::v2::detail::create_object_visitor> >::unpack_stack::consume": {
            "offset": "0x42A90"
        },
        "msgpack::v2::detail::create_object_visitor::insufficient_bytes": {
            "offset": "0x43A60"
        },
        "msgpack::v2::detail::create_object_visitor::parse_error": {
            "offset": "0x43AB0"
        },
        "msgpack::v2::detail::create_object_visitor::start_array": {
            "offset": "0x43B70"
        },
        "msgpack::v2::detail::create_object_visitor::start_map": {
            "offset": "0x43C60"
        },
        "msgpack::v2::detail::create_object_visitor::visit_bin": {
            "offset": "0x43F60"
        },
        "msgpack::v2::detail::create_object_visitor::visit_ext": {
            "offset": "0x44060"
        },
        "msgpack::v2::detail::create_object_visitor::visit_str": {
            "offset": "0x44170"
        },
        "msgpack::v2::detail::create_object_visitor::~create_object_visitor": {
            "offset": "0x3A770"
        },
        "msgpack::v2::detail::parse_helper<msgpack::v2::detail::create_object_visitor>::visitor": {
            "offset": "0x44270"
        },
        "msgpack::v2::detail::parse_helper<msgpack::v2::detail::create_object_visitor>::~parse_helper<msgpack::v2::detail::create_object_visitor>": {
            "offset": "0x39EA0"
        },
        "msgpack::v2::detail::parse_imp<msgpack::v2::detail::create_object_visitor>": {
            "offset": "0x395F0"
        },
        "msgpack::v3::unpack": {
            "offset": "0x43D70"
        },
        "net::UvLoopHolder::EnqueueCallback": {
            "offset": "0x51E20"
        },
        "noise_normalize": {
            "offset": "0x1A7BA0"
        },
        "normalise_bands": {
            "offset": "0x1177C0"
        },
        "normalise_residual": {
            "offset": "0x122C70"
        },
        "nqr::ConvertFromFloat32": {
            "offset": "0x192F90"
        },
        "nqr::ConvertToFloat32": {
            "offset": "0x1933D0"
        },
        "oggpack_adv": {
            "offset": "0x1A8130"
        },
        "oggpack_look": {
            "offset": "0x1A8190"
        },
        "oggpack_read": {
            "offset": "0x1A8270"
        },
        "oggpack_write": {
            "offset": "0x1A83A0"
        },
        "op_fread": {
            "offset": "0x1A9BF0"
        },
        "op_fseek": {
            "offset": "0x1A9C50"
        },
        "op_ftell": {
            "offset": "0x1A9CF0"
        },
        "op_mem_close": {
            "offset": "0x1A9D20"
        },
        "op_mem_read": {
            "offset": "0x1A9D40"
        },
        "op_mem_seek": {
            "offset": "0x1A9DD0"
        },
        "op_mem_tell": {
            "offset": "0x6CD70"
        },
        "op_pvq_search_c": {
            "offset": "0x122CF0"
        },
        "opus_custom_decoder_ctl": {
            "offset": "0x10F000"
        },
        "opus_custom_encoder_ctl": {
            "offset": "0x103240"
        },
        "opus_custom_mode_create": {
            "offset": "0x112560"
        },
        "opus_decode_float": {
            "offset": "0xFB490"
        },
        "opus_decode_frame": {
            "offset": "0xFB4E0"
        },
        "opus_decode_native": {
            "offset": "0xFC120"
        },
        "opus_decoder_create": {
            "offset": "0xFC4D0"
        },
        "opus_decoder_destroy": {
            "offset": "0x3A890"
        },
        "opus_decoder_get_nb_samples": {
            "offset": "0xFC6F0"
        },
        "opus_encode": {
            "offset": "0xF7760"
        },
        "opus_encode_native": {
            "offset": "0xF78B0"
        },
        "opus_encoder_create": {
            "offset": "0xF9F70"
        },
        "opus_encoder_ctl": {
            "offset": "0xFA090"
        },
        "opus_encoder_destroy": {
            "offset": "0x3A890"
        },
        "opus_encoder_init": {
            "offset": "0xFA840"
        },
        "opus_fft_alloc_twiddles": {
            "offset": "0x1AE2F0"
        },
        "opus_fft_c": {
            "offset": "0x11FE20"
        },
        "opus_fft_impl": {
            "offset": "0x120190"
        },
        "opus_packet_get_nb_frames": {
            "offset": "0xFC780"
        },
        "opus_packet_get_samples_per_frame": {
            "offset": "0x10F750"
        },
        "opus_packet_pad": {
            "offset": "0x106EA0"
        },
        "opus_packet_parse_impl": {
            "offset": "0x10F7D0"
        },
        "opus_pcm_soft_clip": {
            "offset": "0x10FC00"
        },
        "opus_repacketizer_cat": {
            "offset": "0x107020"
        },
        "opus_repacketizer_cat_impl": {
            "offset": "0x107030"
        },
        "opus_repacketizer_init": {
            "offset": "0x107110"
        },
        "opus_repacketizer_out_range_impl": {
            "offset": "0x107120"
        },
        "parse_size": {
            "offset": "0x1104A0"
        },
        "patch_transient_decision": {
            "offset": "0x103660"
        },
        "pitch_downsample": {
            "offset": "0x113840"
        },
        "pitch_filter": {
            "offset": "0x1AD0B0"
        },
        "pitch_search": {
            "offset": "0x113BF0"
        },
        "printf": {
            "offset": "0xD7130"
        },
        "push_back_byte": {
            "offset": "0x19A920"
        },
        "quant_all_bands": {
            "offset": "0x117970"
        },
        "quant_band": {
            "offset": "0x1189C0"
        },
        "quant_band_n1": {
            "offset": "0x118F10"
        },
        "quant_band_stereo": {
            "offset": "0x119020"
        },
        "quant_coarse_energy": {
            "offset": "0x11A980"
        },
        "quant_coarse_energy_impl": {
            "offset": "0x11AFD0"
        },
        "quant_energy_finalise": {
            "offset": "0x11B460"
        },
        "quant_fine_energy": {
            "offset": "0x11B650"
        },
        "quant_partition": {
            "offset": "0x119670"
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::~GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>": {
            "offset": "0xACC0"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0xAD60"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Accept<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0> >": {
            "offset": "0x25D0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::AddMember": {
            "offset": "0xBE30"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::~GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0xAD90"
        },
        "rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>::Malloc": {
            "offset": "0xCF80"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Prefix": {
            "offset": "0xD040"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::String": {
            "offset": "0xD2B0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::WriteString": {
            "offset": "0xD750"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::~Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>": {
            "offset": "0xADA0"
        },
        "rapidjson::internal::DigitGen": {
            "offset": "0xC0E0"
        },
        "rapidjson::internal::Grisu2": {
            "offset": "0xCB90"
        },
        "rapidjson::internal::Prettify": {
            "offset": "0xD0F0"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level>": {
            "offset": "0x3060"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Reserve<char>": {
            "offset": "0x3130"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::~Stack<rapidjson::CrtAllocator>": {
            "offset": "0xAD60"
        },
        "rapidjson::internal::WriteExponent": {
            "offset": "0xD6C0"
        },
        "rapidjson::internal::u32toa": {
            "offset": "0xE220"
        },
        "rapidjson::internal::u64toa": {
            "offset": "0xE490"
        },
        "read_bytes": {
            "offset": "0x19A8D0"
        },
        "remove_doubling": {
            "offset": "0x114020"
        },
        "render_line": {
            "offset": "0x1A84F0"
        },
        "res0_free_info": {
            "offset": "0x19DB20"
        },
        "res0_free_look": {
            "offset": "0x19DB50"
        },
        "res0_inverse": {
            "offset": "0x19E140"
        },
        "res0_look": {
            "offset": "0x19DF40"
        },
        "res0_pack": {
            "offset": "0x19DC20"
        },
        "res0_unpack": {
            "offset": "0x19DD60"
        },
        "res1_class": {
            "offset": "0x19E250"
        },
        "res1_forward": {
            "offset": "0x19E1B0"
        },
        "res1_inverse": {
            "offset": "0x19E5F0"
        },
        "res2_class": {
            "offset": "0x19E660"
        },
        "res2_forward": {
            "offset": "0x19E8C0"
        },
        "res2_inverse": {
            "offset": "0x19E9D0"
        },
        "rftbsub_128_C": {
            "offset": "0x159DF0"
        },
        "rftbsub_128_SSE2": {
            "offset": "0x1681A0"
        },
        "rftfsub_128_C": {
            "offset": "0x159EF0"
        },
        "rftfsub_128_SSE2": {
            "offset": "0x1683E0"
        },
        "rnnoise_compute_dense": {
            "offset": "0x1AED50"
        },
        "rnnoise_compute_gru": {
            "offset": "0x1AF270"
        },
        "rnnoise_create": {
            "offset": "0x1AD6D0"
        },
        "rnnoise_opus_fft_c": {
            "offset": "0x1AE5A0"
        },
        "rnnoise_process_frame": {
            "offset": "0x1AD770"
        },
        "rtc::CheckEQImpl<unsigned __int64,unsigned __int64>": {
            "offset": "0x15C5E0"
        },
        "rtc::CheckGTImpl<unsigned __int64,unsigned int>": {
            "offset": "0x15C780"
        },
        "rtc::CheckedDivExact<unsigned __int64>": {
            "offset": "0x149B60"
        },
        "rtc::CritScope::CritScope": {
            "offset": "0x1776C0"
        },
        "rtc::CritScope::~CritScope": {
            "offset": "0x1776E0"
        },
        "rtc::FatalMessage::FatalMessage": {
            "offset": "0x13CEF0"
        },
        "rtc::FatalMessage::Init": {
            "offset": "0x13D0B0"
        },
        "rtc::FatalMessage::~FatalMessage": {
            "offset": "0x13D000"
        },
        "rtc::FdopenPlatformFileForWriting": {
            "offset": "0x13CC10"
        },
        "rtc::MakeCheckOpString<int,int>": {
            "offset": "0x13CC50"
        },
        "rtc::MakeCheckOpString<unsigned __int64,unsigned __int64>": {
            "offset": "0x13D470"
        },
        "rtc::MakeCheckOpString<unsigned __int64,unsigned int>": {
            "offset": "0x13D2E0"
        },
        "rtc::PrintError": {
            "offset": "0x13D160"
        },
        "rtc::internal::scoped_ptr_impl<webrtc::IFChannelBuffer,rtc::DefaultDeleter<webrtc::IFChannelBuffer> >::~scoped_ptr_impl<webrtc::IFChannelBuffer,rtc::DefaultDeleter<webrtc::IFChannelBuffer> >": {
            "offset": "0x14A400"
        },
        "rtc::scoped_ptr<float * [0],rtc::DefaultDeleter<float * [0]> >::~scoped_ptr<float * [0],rtc::DefaultDeleter<float * [0]> >": {
            "offset": "0x4C1B0"
        },
        "rtc::scoped_ptr<float [0],rtc::DefaultDeleter<float [0]> >::~scoped_ptr<float [0],rtc::DefaultDeleter<float [0]> >": {
            "offset": "0x4C1B0"
        },
        "rtc::scoped_ptr<float [0],webrtc::AlignedFreeDeleter>::~scoped_ptr<float [0],webrtc::AlignedFreeDeleter>": {
            "offset": "0x1677D0"
        },
        "rtc::scoped_ptr<int [0],rtc::DefaultDeleter<int [0]> >::~scoped_ptr<int [0],rtc::DefaultDeleter<int [0]> >": {
            "offset": "0x4C1B0"
        },
        "rtc::scoped_ptr<rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> > [0],rtc::DefaultDeleter<rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> > [0]> >::reset": {
            "offset": "0x163F20"
        },
        "rtc::scoped_ptr<rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> > [0],rtc::DefaultDeleter<rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> > [0]> >::~scoped_ptr<rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> > [0],rtc::DefaultDeleter<rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> > [0]> >": {
            "offset": "0x162E90"
        },
        "rtc::scoped_ptr<rtc::scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> > [0],rtc::DefaultDeleter<rtc::scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> > [0]> >::~scoped_ptr<rtc::scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> > [0],rtc::DefaultDeleter<rtc::scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> > [0]> >": {
            "offset": "0x1761A0"
        },
        "rtc::scoped_ptr<short * [0],rtc::DefaultDeleter<short * [0]> >::~scoped_ptr<short * [0],rtc::DefaultDeleter<short * [0]> >": {
            "offset": "0x4C1B0"
        },
        "rtc::scoped_ptr<short [0],rtc::DefaultDeleter<short [0]> >::~scoped_ptr<short [0],rtc::DefaultDeleter<short [0]> >": {
            "offset": "0x4C1B0"
        },
        "rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> >::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> >": {
            "offset": "0x162740"
        },
        "rtc::scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> >::~scoped_ptr<std::complex<float> [0],rtc::DefaultDeleter<std::complex<float> [0]> >": {
            "offset": "0x4C1B0"
        },
        "rtc::scoped_ptr<unsigned __int64 [0],rtc::DefaultDeleter<unsigned __int64 [0]> >::~scoped_ptr<unsigned __int64 [0],rtc::DefaultDeleter<unsigned __int64 [0]> >": {
            "offset": "0x4C1B0"
        },
        "rtc::scoped_ptr<webrtc::Agc,rtc::DefaultDeleter<webrtc::Agc> >::~scoped_ptr<webrtc::Agc,rtc::DefaultDeleter<webrtc::Agc> >": {
            "offset": "0x39F20"
        },
        "rtc::scoped_ptr<webrtc::AgcManagerDirect,rtc::DefaultDeleter<webrtc::AgcManagerDirect> >::reset": {
            "offset": "0x13CA60"
        },
        "rtc::scoped_ptr<webrtc::AgcManagerDirect,rtc::DefaultDeleter<webrtc::AgcManagerDirect> >::~scoped_ptr<webrtc::AgcManagerDirect,rtc::DefaultDeleter<webrtc::AgcManagerDirect> >": {
            "offset": "0x139960"
        },
        "rtc::scoped_ptr<webrtc::AudioBuffer,rtc::DefaultDeleter<webrtc::AudioBuffer> >::~scoped_ptr<webrtc::AudioBuffer,rtc::DefaultDeleter<webrtc::AudioBuffer> >": {
            "offset": "0x39F20"
        },
        "rtc::scoped_ptr<webrtc::AudioConverter,rtc::DefaultDeleter<webrtc::AudioConverter> >::~scoped_ptr<webrtc::AudioConverter,rtc::DefaultDeleter<webrtc::AudioConverter> >": {
            "offset": "0x39F20"
        },
        "rtc::scoped_ptr<webrtc::Beamformer<float>,rtc::DefaultDeleter<webrtc::Beamformer<float> > >::~scoped_ptr<webrtc::Beamformer<float>,rtc::DefaultDeleter<webrtc::Beamformer<float> > >": {
            "offset": "0x39F20"
        },
        "rtc::scoped_ptr<webrtc::ChannelBuffer<float>,rtc::DefaultDeleter<webrtc::ChannelBuffer<float> > >::~scoped_ptr<webrtc::ChannelBuffer<float>,rtc::DefaultDeleter<webrtc::ChannelBuffer<float> > >": {
            "offset": "0x14A380"
        },
        "rtc::scoped_ptr<webrtc::ChannelBuffer<short>,rtc::DefaultDeleter<webrtc::ChannelBuffer<short> > >::reset": {
            "offset": "0x14B350"
        },
        "rtc::scoped_ptr<webrtc::ChannelBuffer<short>,rtc::DefaultDeleter<webrtc::ChannelBuffer<short> > >::~scoped_ptr<webrtc::ChannelBuffer<short>,rtc::DefaultDeleter<webrtc::ChannelBuffer<short> > >": {
            "offset": "0x14A380"
        },
        "rtc::scoped_ptr<webrtc::DebugFile,rtc::DefaultDeleter<webrtc::DebugFile> >::~scoped_ptr<webrtc::DebugFile,rtc::DefaultDeleter<webrtc::DebugFile> >": {
            "offset": "0x39C60"
        },
        "rtc::scoped_ptr<webrtc::GainControlForNewAgc,rtc::DefaultDeleter<webrtc::GainControlForNewAgc> >::~scoped_ptr<webrtc::GainControlForNewAgc,rtc::DefaultDeleter<webrtc::GainControlForNewAgc> >": {
            "offset": "0x139990"
        },
        "rtc::scoped_ptr<webrtc::Histogram,rtc::DefaultDeleter<webrtc::Histogram> >::~scoped_ptr<webrtc::Histogram,rtc::DefaultDeleter<webrtc::Histogram> >": {
            "offset": "0x15B050"
        },
        "rtc::scoped_ptr<webrtc::IFChannelBuffer,rtc::DefaultDeleter<webrtc::IFChannelBuffer> >::reset": {
            "offset": "0x14B3D0"
        },
        "rtc::scoped_ptr<webrtc::IFChannelBuffer,rtc::DefaultDeleter<webrtc::IFChannelBuffer> >::~scoped_ptr<webrtc::IFChannelBuffer,rtc::DefaultDeleter<webrtc::IFChannelBuffer> >": {
            "offset": "0x14A3D0"
        },
        "rtc::scoped_ptr<webrtc::IntelligibilityEnhancer,rtc::DefaultDeleter<webrtc::IntelligibilityEnhancer> >::~scoped_ptr<webrtc::IntelligibilityEnhancer,rtc::DefaultDeleter<webrtc::IntelligibilityEnhancer> >": {
            "offset": "0x1399B0"
        },
        "rtc::scoped_ptr<webrtc::LappedTransform,rtc::DefaultDeleter<webrtc::LappedTransform> >::~scoped_ptr<webrtc::LappedTransform,rtc::DefaultDeleter<webrtc::LappedTransform> >": {
            "offset": "0x14CB60"
        },
        "rtc::scoped_ptr<webrtc::MovingMoments,rtc::DefaultDeleter<webrtc::MovingMoments> >::scoped_ptr<webrtc::MovingMoments,rtc::DefaultDeleter<webrtc::MovingMoments> >": {
            "offset": "0x162740"
        },
        "rtc::scoped_ptr<webrtc::MovingMoments,rtc::DefaultDeleter<webrtc::MovingMoments> >::~scoped_ptr<webrtc::MovingMoments,rtc::DefaultDeleter<webrtc::MovingMoments> >": {
            "offset": "0x166020"
        },
        "rtc::scoped_ptr<webrtc::RealFourier,rtc::DefaultDeleter<webrtc::RealFourier> >::~scoped_ptr<webrtc::RealFourier,rtc::DefaultDeleter<webrtc::RealFourier> >": {
            "offset": "0x39F20"
        },
        "rtc::scoped_ptr<webrtc::SplittingFilter,rtc::DefaultDeleter<webrtc::SplittingFilter> >::~scoped_ptr<webrtc::SplittingFilter,rtc::DefaultDeleter<webrtc::SplittingFilter> >": {
            "offset": "0x14A3E0"
        },
        "rtc::scoped_ptr<webrtc::StandaloneVad,rtc::DefaultDeleter<webrtc::StandaloneVad> >::~scoped_ptr<webrtc::StandaloneVad,rtc::DefaultDeleter<webrtc::StandaloneVad> >": {
            "offset": "0x16C180"
        },
        "rtc::scoped_ptr<webrtc::TransientSuppressor,rtc::DefaultDeleter<webrtc::TransientSuppressor> >::~scoped_ptr<webrtc::TransientSuppressor,rtc::DefaultDeleter<webrtc::TransientSuppressor> >": {
            "offset": "0x1399E0"
        },
        "rtc::scoped_ptr<webrtc::VadAudioProc::PitchAnalysisStruct,rtc::DefaultDeleter<webrtc::VadAudioProc::PitchAnalysisStruct> >::~scoped_ptr<webrtc::VadAudioProc::PitchAnalysisStruct,rtc::DefaultDeleter<webrtc::VadAudioProc::PitchAnalysisStruct> >": {
            "offset": "0x16AF70"
        },
        "rtc::scoped_ptr<webrtc::VadAudioProc::PreFiltBankstr,rtc::DefaultDeleter<webrtc::VadAudioProc::PreFiltBankstr> >::~scoped_ptr<webrtc::VadAudioProc::PreFiltBankstr,rtc::DefaultDeleter<webrtc::VadAudioProc::PreFiltBankstr> >": {
            "offset": "0x16AF90"
        },
        "rtc::scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> >::scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> >": {
            "offset": "0x162740"
        },
        "rtc::scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> >::~scoped_ptr<webrtc::WPDNode,rtc::DefaultDeleter<webrtc::WPDNode> >": {
            "offset": "0x1761F0"
        },
        "rtc::scoped_ptr<webrtc::WPDTree,rtc::DefaultDeleter<webrtc::WPDTree> >::~scoped_ptr<webrtc::WPDTree,rtc::DefaultDeleter<webrtc::WPDTree> >": {
            "offset": "0x166050"
        },
        "run_analysis": {
            "offset": "0x1078F0"
        },
        "run_prefilter": {
            "offset": "0x103C60"
        },
        "scrBindArgument<enum lab::FilterType,void>::Get": {
            "offset": "0x3C900"
        },
        "scrBindArgument<lab::AudioContext *,void>::Get": {
            "offset": "0x3C2A0"
        },
        "scrBindArgument<lab::AudioParam *,void>::Get": {
            "offset": "0x3C430"
        },
        "scrBindArgument<lab::BiquadFilterNode *,void>::Get": {
            "offset": "0x3C4C0"
        },
        "scrBindArgument<std::shared_ptr<lab::AudioNode>,void>::Get": {
            "offset": "0x3C550"
        },
        "scrBindClass<lab::AudioContext>::AddMethod<void,std::shared_ptr<lab::AudioNode>,std::shared_ptr<lab::AudioNode>,unsigned int,unsigned int>": {
            "offset": "0x36D80"
        },
        "scrBindClass<lab::BiquadFilterNode>::AddMethod<std::shared_ptr<lab::AudioParam> >": {
            "offset": "0x36C90"
        },
        "scrBindPointerT<lab::AudioDestinationNode,lab::AudioDestinationNode,void>::Cast": {
            "offset": "0x36350"
        },
        "scrBindPointerT<lab::AudioParam,lab::AudioParam,void>::Cast": {
            "offset": "0x36520"
        },
        "scrBindPointerT<lab::AudioSourceNode,lab::AudioSourceNode,lab::AudioNode>::Cast": {
            "offset": "0x361E0"
        },
        "scrBindPointerT<lab::BiquadFilterNode,lab::BiquadFilterNode,lab::AudioBasicProcessorNode>::Cast": {
            "offset": "0x36400"
        },
        "scrBindPointerT<lab::WaveShaperNode,lab::WaveShaperNode,lab::AudioBasicProcessorNode>::Cast": {
            "offset": "0x365D0"
        },
        "scrBindPool::ErasePointer<lab::AudioParam>": {
            "offset": "0x36E70"
        },
        "scrBindPool::ErasePointer<lab::BiquadFilterNode>": {
            "offset": "0x36E70"
        },
        "scrBindPool::ErasePointer<lab::WaveShaperNode>": {
            "offset": "0x36E70"
        },
        "scrBindPool::FromHandle<lab::AudioParam>": {
            "offset": "0x36FE0"
        },
        "scrBindPool::FromHandle<lab::BiquadFilterNode>": {
            "offset": "0x37130"
        },
        "scrBindPool::FromHandle<lab::WaveShaperNode>": {
            "offset": "0x37280"
        },
        "scrBindPool::MakeHandle<lab::AudioDestinationNode>": {
            "offset": "0x373D0"
        },
        "scrBindPool::MakeHandle<lab::AudioParam>": {
            "offset": "0x37660"
        },
        "scrBindPool::MakeHandle<lab::AudioSourceNode>": {
            "offset": "0x378F0"
        },
        "scrBindPool::MakeHandle<lab::BiquadFilterNode>": {
            "offset": "0x37B80"
        },
        "scrBindPool::MakeHandle<lab::WaveShaperNode>": {
            "offset": "0x37E10"
        },
        "se::Object::~Object": {
            "offset": "0xAEB0"
        },
        "seCheckPrivilege": {
            "offset": "0x352C0"
        },
        "seed_chase": {
            "offset": "0x1A86D0"
        },
        "seed_loop": {
            "offset": "0x1A88E0"
        },
        "set_pos_abs": {
            "offset": "0x19A900"
        },
        "set_pos_rel": {
            "offset": "0x19A910"
        },
        "shift_timings": {
            "offset": "0x1AAC10"
        },
        "silk_A2NLSF": {
            "offset": "0x1303C0"
        },
        "silk_A2NLSF_FLP": {
            "offset": "0x128920"
        },
        "silk_A2NLSF_eval_poly": {
            "offset": "0x1308C0"
        },
        "silk_A2NLSF_init": {
            "offset": "0x130970"
        },
        "silk_CNG": {
            "offset": "0x12A6A0"
        },
        "silk_CNG_Reset": {
            "offset": "0x12AD00"
        },
        "silk_DIV32_varQ": {
            "offset": "0x11C160"
        },
        "silk_Decode": {
            "offset": "0x1104E0"
        },
        "silk_Encode": {
            "offset": "0x105C90"
        },
        "silk_Get_Decoder_Size": {
            "offset": "0x110FF0"
        },
        "silk_Get_Encoder_Size": {
            "offset": "0x106D40"
        },
        "silk_HP_variable_cutoff": {
            "offset": "0x11D690"
        },
        "silk_InitDecoder": {
            "offset": "0x111000"
        },
        "silk_InitEncoder": {
            "offset": "0x106D50"
        },
        "silk_LPC_analysis_filter": {
            "offset": "0x134AA0"
        },
        "silk_LPC_analysis_filter10_FLP": {
            "offset": "0x12E5D0"
        },
        "silk_LPC_analysis_filter12_FLP": {
            "offset": "0x12E990"
        },
        "silk_LPC_analysis_filter16_FLP": {
            "offset": "0x12EE20"
        },
        "silk_LPC_analysis_filter6_FLP": {
            "offset": "0x12F480"
        },
        "silk_LPC_analysis_filter8_FLP": {
            "offset": "0x12F700"
        },
        "silk_LPC_analysis_filter_FLP": {
            "offset": "0x12FA20"
        },
        "silk_LPC_fit": {
            "offset": "0x137520"
        },
        "silk_LPC_inverse_pred_gain_c": {
            "offset": "0x134C70"
        },
        "silk_LP_interpolate_filter_taps": {
            "offset": "0x1269D0"
        },
        "silk_LP_variable_cutoff": {
            "offset": "0x126BE0"
        },
        "silk_LTP_analysis_filter_FLP": {
            "offset": "0x1300F0"
        },
        "silk_LTP_scale_ctrl_FLP": {
            "offset": "0x12FCA0"
        },
        "silk_NLSF2A": {
            "offset": "0x130AE0"
        },
        "silk_NLSF2A_FLP": {
            "offset": "0x128990"
        },
        "silk_NLSF2A_find_poly": {
            "offset": "0x130DE0"
        },
        "silk_NLSF_VQ": {
            "offset": "0x1385A0"
        },
        "silk_NLSF_VQ_weights_laroia": {
            "offset": "0x137A20"
        },
        "silk_NLSF_decode": {
            "offset": "0x135260"
        },
        "silk_NLSF_del_dec_quant": {
            "offset": "0x1386F0"
        },
        "silk_NLSF_encode": {
            "offset": "0x137B60"
        },
        "silk_NLSF_stabilize": {
            "offset": "0x137FD0"
        },
        "silk_NLSF_unpack": {
            "offset": "0x125DD0"
        },
        "silk_NSQ_c": {
            "offset": "0x1311B0"
        },
        "silk_NSQ_del_dec_c": {
            "offset": "0x132440"
        },
        "silk_NSQ_wrapper_FLP": {
            "offset": "0x128B60"
        },
        "silk_PLC": {
            "offset": "0x129820"
        },
        "silk_PLC_Reset": {
            "offset": "0x1298A0"
        },
        "silk_PLC_conceal": {
            "offset": "0x1298E0"
        },
        "silk_PLC_glue_frames": {
            "offset": "0x12A240"
        },
        "silk_PLC_update": {
            "offset": "0x12A410"
        },
        "silk_P_Ana_calc_corr_st3": {
            "offset": "0x12CC20"
        },
        "silk_P_Ana_calc_energy_st3": {
            "offset": "0x12CEE0"
        },
        "silk_SQRT_APPROX": {
            "offset": "0x125170"
        },
        "silk_VAD_GetNoiseLevels": {
            "offset": "0x126170"
        },
        "silk_VAD_GetSA_Q8_c": {
            "offset": "0x1263F0"
        },
        "silk_VAD_Init": {
            "offset": "0x126940"
        },
        "silk_VQ_WMat_EC_c": {
            "offset": "0x137710"
        },
        "silk_ana_filt_bank_1": {
            "offset": "0x12BF10"
        },
        "silk_apply_sine_window_FLP": {
            "offset": "0x12CB20"
        },
        "silk_autocorrelation_FLP": {
            "offset": "0x12C6A0"
        },
        "silk_biquad_alt_stride1": {
            "offset": "0x12C0A0"
        },
        "silk_biquad_float": {
            "offset": "0xFAB30"
        },
        "silk_burg_modified_FLP": {
            "offset": "0x135B50"
        },
        "silk_bwexpander": {
            "offset": "0x134C00"
        },
        "silk_bwexpander_32": {
            "offset": "0x1374C0"
        },
        "silk_bwexpander_FLP": {
            "offset": "0x12C200"
        },
        "silk_control_SNR": {
            "offset": "0x11CCD0"
        },
        "silk_control_audio_bandwidth": {
            "offset": "0x1292D0"
        },
        "silk_control_encoder": {
            "offset": "0x11E680"
        },
        "silk_corrMatrix_FLP": {
            "offset": "0x136ED0"
        },
        "silk_decode_core": {
            "offset": "0x12B040"
        },
        "silk_decode_frame": {
            "offset": "0x123BC0"
        },
        "silk_decode_indices": {
            "offset": "0x123DD0"
        },
        "silk_decode_parameters": {
            "offset": "0x12AD70"
        },
        "silk_decode_pitch": {
            "offset": "0x135140"
        },
        "silk_decode_pulses": {
            "offset": "0x124190"
        },
        "silk_decode_signs": {
            "offset": "0x125550"
        },
        "silk_decoder_set_fs": {
            "offset": "0x123A10"
        },
        "silk_encode_do_VAD_FLP": {
            "offset": "0x11D810"
        },
        "silk_encode_frame_FLP": {
            "offset": "0x11D8C0"
        },
        "silk_encode_indices": {
            "offset": "0x11D2D0"
        },
        "silk_encode_pulses": {
            "offset": "0x11CD90"
        },
        "silk_encode_signs": {
            "offset": "0x125630"
        },
        "silk_energy_FLP": {
            "offset": "0x12C730"
        },
        "silk_find_LPC_FLP": {
            "offset": "0x12FD10"
        },
        "silk_find_LTP_FLP": {
            "offset": "0x12FF90"
        },
        "silk_find_pitch_lags_FLP": {
            "offset": "0x127F50"
        },
        "silk_find_pred_coefs_FLP": {
            "offset": "0x128260"
        },
        "silk_gains_ID": {
            "offset": "0x125EC0"
        },
        "silk_gains_dequant": {
            "offset": "0x125EF0"
        },
        "silk_gains_quant": {
            "offset": "0x125FE0"
        },
        "silk_init_decoder": {
            "offset": "0x123970"
        },
        "silk_init_encoder": {
            "offset": "0x11E620"
        },
        "silk_inner_prod_aligned_scale": {
            "offset": "0x12BD80"
        },
        "silk_inner_product_FLP": {
            "offset": "0x1353B0"
        },
        "silk_insertion_sort_decreasing_FLP": {
            "offset": "0x135810"
        },
        "silk_insertion_sort_increasing": {
            "offset": "0x138350"
        },
        "silk_insertion_sort_increasing_all_values_int16": {
            "offset": "0x138530"
        },
        "silk_interpolate": {
            "offset": "0x136BD0"
        },
        "silk_k2a_FLP": {
            "offset": "0x12C4F0"
        },
        "silk_lin2log": {
            "offset": "0x10B560"
        },
        "silk_log2lin": {
            "offset": "0x10B5C0"
        },
        "silk_noise_shape_analysis_FLP": {
            "offset": "0x126C90"
        },
        "silk_noise_shape_quantizer": {
            "offset": "0x131640"
        },
        "silk_noise_shape_quantizer_del_dec": {
            "offset": "0x132FA0"
        },
        "silk_nsq_del_dec_scale_states": {
            "offset": "0x133D70"
        },
        "silk_nsq_scale_states": {
            "offset": "0x131D30"
        },
        "silk_pitch_analysis_core_FLP": {
            "offset": "0x12D260"
        },
        "silk_process_NLSFs": {
            "offset": "0x134720"
        },
        "silk_process_NLSFs_FLP": {
            "offset": "0x128EF0"
        },
        "silk_process_gains_FLP": {
            "offset": "0x1285A0"
        },
        "silk_quant_LTP_gains": {
            "offset": "0x130EA0"
        },
        "silk_quant_LTP_gains_FLP": {
            "offset": "0x128FC0"
        },
        "silk_resampler": {
            "offset": "0x11BC90"
        },
        "silk_resampler_down2": {
            "offset": "0x135530"
        },
        "silk_resampler_down2_3": {
            "offset": "0x135610"
        },
        "silk_resampler_down2_hp": {
            "offset": "0x107A50"
        },
        "silk_resampler_init": {
            "offset": "0x11BE20"
        },
        "silk_resampler_private_AR2": {
            "offset": "0x12BBC0"
        },
        "silk_resampler_private_IIR_FIR": {
            "offset": "0x124610"
        },
        "silk_resampler_private_down_FIR": {
            "offset": "0x124820"
        },
        "silk_resampler_private_down_FIR_INTERPOL": {
            "offset": "0x124990"
        },
        "silk_resampler_private_up2_HQ": {
            "offset": "0x124FE0"
        },
        "silk_resampler_private_up2_HQ_wrapper": {
            "offset": "0x125160"
        },
        "silk_residual_energy_FLP": {
            "offset": "0x130240"
        },
        "silk_schur_FLP": {
            "offset": "0x12C2B0"
        },
        "silk_setup_complexity": {
            "offset": "0x11E7F0"
        },
        "silk_setup_fs": {
            "offset": "0x11EA50"
        },
        "silk_setup_resamplers": {
            "offset": "0x11ED00"
        },
        "silk_shell_decoder": {
            "offset": "0x125710"
        },
        "silk_shell_encoder": {
            "offset": "0x125AD0"
        },
        "silk_sigm_Q15": {
            "offset": "0x12C020"
        },
        "silk_stereo_LR_to_MS": {
            "offset": "0x11C280"
        },
        "silk_stereo_MS_to_LR": {
            "offset": "0x1234A0"
        },
        "silk_stereo_decode_mid_only": {
            "offset": "0x1237E0"
        },
        "silk_stereo_decode_pred": {
            "offset": "0x123810"
        },
        "silk_stereo_encode_mid_only": {
            "offset": "0x11CAE0"
        },
        "silk_stereo_encode_pred": {
            "offset": "0x11CB00"
        },
        "silk_stereo_quant_pred": {
            "offset": "0x1253A0"
        },
        "silk_sum_sqr_shift": {
            "offset": "0x12BC30"
        },
        "silk_warped_autocorrelation_FLP": {
            "offset": "0x12C860"
        },
        "smooth_fade": {
            "offset": "0xFC7C0"
        },
        "special_hybrid_folding": {
            "offset": "0x119E20"
        },
        "spreading_decision": {
            "offset": "0x119EE0"
        },
        "sprintf": {
            "offset": "0x8B1F0"
        },
        "std::_Alloc_construct_ptr<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<std::_Tree_node<google::protobuf::MapKey *,void *> > >::~_Alloc_construct_ptr<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<std::_Tree_node<google::protobuf::MapKey *,void *> > >": {
            "offset": "0xC33A0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x2E5A0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::FileDescriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::FileDescriptor const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::Symbol>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::Symbol>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,void *> > >": {
            "offset": "0x39CF0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol>,void *> > >": {
            "offset": "0x2E5A0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> >,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_List_node<webrtc::ProcessingComponent *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<webrtc::ProcessingComponent *,void *> > >": {
            "offset": "0x39CD0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<google::protobuf::Descriptor const *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<google::protobuf::Descriptor const *,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<google::protobuf::FileDescriptor const *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<google::protobuf::FileDescriptor const *,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0xADD0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,VoiceTargetConfig>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,VoiceTargetConfig>,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension>,void *> > >": {
            "offset": "0xADD0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<lab::AudioContext * const,std::weak_ptr<lab::AudioSourceNode> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<lab::AudioContext * const,std::weak_ptr<lab::AudioSourceNode> >,void *> > >": {
            "offset": "0x39CF0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::Descriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::Descriptor const *>,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *>,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> >,void *> > >": {
            "offset": "0x99D10"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x39CF0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0xADD0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,MumbleChannel>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,MumbleChannel>,void *> > >": {
            "offset": "0x5AC60"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> >,void *> > >": {
            "offset": "0x39CF0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void * const,webrtc::Config::BaseOption *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<void * const,webrtc::Config::BaseOption *>,void *> > >": {
            "offset": "0x2E5A0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::shared_ptr<lab::AudioParam>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::shared_ptr<lab::AudioParam>,void *> > >": {
            "offset": "0x2E5A0"
        },
        "std::_Alloc_temporary2<std::allocator<lab::AudioParamTimeline::ParamEvent> >::~_Alloc_temporary2<std::allocator<lab::AudioParamTimeline::ParamEvent> >": {
            "offset": "0x18DD80"
        },
        "std::_Buffered_inplace_merge_divide_and_conquer2<google::protobuf::Message const * *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x7FEA0"
        },
        "std::_Buffered_inplace_merge_divide_and_conquer2<google::protobuf::Message const * *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xC92E0"
        },
        "std::_Buffered_inplace_merge_unchecked<google::protobuf::Message const * *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x80060"
        },
        "std::_Buffered_inplace_merge_unchecked<google::protobuf::Message const * *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xC93D0"
        },
        "std::_Buffered_inplace_merge_unchecked_impl<google::protobuf::Message const * *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x801A0"
        },
        "std::_Buffered_inplace_merge_unchecked_impl<google::protobuf::Message const * *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xC9510"
        },
        "std::_Buffered_merge_sort_unchecked<google::protobuf::Message const * *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x80450"
        },
        "std::_Buffered_merge_sort_unchecked<google::protobuf::Message const * *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xC97C0"
        },
        "std::_Buffered_rotate_unchecked<google::protobuf::Message const * *>": {
            "offset": "0x80650"
        },
        "std::_Chunked_merge_unchecked<google::protobuf::Message const * *,google::protobuf::Message const * *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x80780"
        },
        "std::_Chunked_merge_unchecked<google::protobuf::Message const * *,google::protobuf::Message const * *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xC99C0"
        },
        "std::_Destroy_range<std::allocator<google::protobuf::MapKey> >": {
            "offset": "0x808C0"
        },
        "std::_Destroy_range<std::allocator<google::protobuf::`anonymous namespace'::OptionsToInterpret> >": {
            "offset": "0x953B0"
        },
        "std::_Destroy_range<std::allocator<lab::AudioContext::PendingConnection> >": {
            "offset": "0x188BB0"
        },
        "std::_Destroy_range<std::allocator<lab::AudioParamTimeline::ParamEvent> >": {
            "offset": "0x18D710"
        },
        "std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x45330"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<Concurrency::details::_Task_impl<MumbleConnectionInfo *> > > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<Concurrency::details::_Task_impl<unsigned char> > > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<lab::AudioNode> > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<lab::AudioNodeInput> > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<lab::AudioNodeOutput> > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<lab::AudioParam> > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<lab::AudioScheduledSourceNode> > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::shared_ptr<lab::AudioSetting> > >": {
            "offset": "0x453C0"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<char [0],std::default_delete<char [0]> > > >": {
            "offset": "0x953F0"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<google::protobuf::FileDescriptorTables,std::default_delete<google::protobuf::FileDescriptorTables> > > >": {
            "offset": "0x95520"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<google::protobuf::Message,std::default_delete<google::protobuf::Message> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree,std::default_delete<google::protobuf::TextFormat::ParseInfoTree> > > >": {
            "offset": "0xC9B00"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<lab::AudioChannel,std::default_delete<lab::AudioChannel> > > >": {
            "offset": "0x190430"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<lab::AudioDSPKernel,std::default_delete<lab::AudioDSPKernel> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >": {
            "offset": "0x95470"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<std::once_flag,std::default_delete<std::once_flag> > > >": {
            "offset": "0x95430"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::AsyncHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::AsyncHandle>::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::TCPHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::TCPHandle>::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::TimerHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::TimerHandle>::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::UDPHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::UDPHandle>::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::ConnectReq>::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::ConnectReq>::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::SendReq>::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::SendReq>::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::ShutdownReq>::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::ShutdownReq>::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::BaseHandler> > > >": {
            "offset": "0x45440"
        },
        "std::_Destroy_range<std::allocator<std::weak_ptr<lab::AudioNodeOutput> > >": {
            "offset": "0x193590"
        },
        "std::_Facet_Register": {
            "offset": "0x1B0488"
        },
        "std::_Func_class<bool,ConsoleExecutionContext &>::~_Func_class<bool,ConsoleExecutionContext &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<bool>::~_Func_class<bool>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<std::optional<std::array<float,3> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~_Func_class<std::optional<std::array<float,3> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::ChannelRemove &>::~_Func_class<void,MumbleProto::ChannelRemove &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::ChannelState &>::~_Func_class<void,MumbleProto::ChannelState &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::CryptSetup &>::~_Func_class<void,MumbleProto::CryptSetup &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::Ping &>::~_Func_class<void,MumbleProto::Ping &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::ServerSync &>::~_Func_class<void,MumbleProto::ServerSync &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::UserRemove &>::~_Func_class<void,MumbleProto::UserRemove &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::UserState &>::~_Func_class<void,MumbleProto::UserState &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,MumbleProto::Version &>::~_Func_class<void,MumbleProto::Version &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,bool const &>::~_Func_class<void,bool const &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,int const &>::~_Func_class<void,int const &>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void,unsigned char const *,unsigned __int64>::~_Func_class<void,unsigned char const *,unsigned __int64>": {
            "offset": "0x2E500"
        },
        "std::_Func_class<void>::_Reset_move": {
            "offset": "0x350C0"
        },
        "std::_Func_class<void>::~_Func_class<void>": {
            "offset": "0x2E500"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::ErrorEvent &,uvw::details::SendReq &>::_Copy": {
            "offset": "0x550D0"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::ErrorEvent &,uvw::details::SendReq &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::ErrorEvent &,uvw::details::SendReq &>::_Do_call": {
            "offset": "0x56050"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::ErrorEvent &,uvw::details::SendReq &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::ErrorEvent &,uvw::details::SendReq &>::_Move": {
            "offset": "0x571B0"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::ErrorEvent &,uvw::details::SendReq &>::_Target_type": {
            "offset": "0x57D90"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::SendEvent &,uvw::details::SendReq &>::_Copy": {
            "offset": "0x55110"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::SendEvent &,uvw::details::SendReq &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::SendEvent &,uvw::details::SendReq &>::_Do_call": {
            "offset": "0x56070"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::SendEvent &,uvw::details::SendReq &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::SendEvent &,uvw::details::SendReq &>::_Move": {
            "offset": "0x571F0"
        },
        "std::_Func_impl_no_alloc<<lambda_0286c8cc0bbcd4326c0acf741a57c87b>,void,uvw::SendEvent &,uvw::details::SendReq &>::_Target_type": {
            "offset": "0x57D90"
        },
        "std::_Func_impl_no_alloc<<lambda_0703184aad304819de2092de19e08a7b>,void>::_Copy": {
            "offset": "0x41A70"
        },
        "std::_Func_impl_no_alloc<<lambda_0703184aad304819de2092de19e08a7b>,void>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_0703184aad304819de2092de19e08a7b>,void>::_Do_call": {
            "offset": "0x41B90"
        },
        "std::_Func_impl_no_alloc<<lambda_0703184aad304819de2092de19e08a7b>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0703184aad304819de2092de19e08a7b>,void>::_Move": {
            "offset": "0x41A70"
        },
        "std::_Func_impl_no_alloc<<lambda_0703184aad304819de2092de19e08a7b>,void>::_Target_type": {
            "offset": "0x424A0"
        },
        "std::_Func_impl_no_alloc<<lambda_08af92482e5368186dc5cb8c2c717709>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x357F0"
        },
        "std::_Func_impl_no_alloc<<lambda_08af92482e5368186dc5cb8c2c717709>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_08af92482e5368186dc5cb8c2c717709>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35810"
        },
        "std::_Func_impl_no_alloc<<lambda_08af92482e5368186dc5cb8c2c717709>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_08af92482e5368186dc5cb8c2c717709>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x357F0"
        },
        "std::_Func_impl_no_alloc<<lambda_08af92482e5368186dc5cb8c2c717709>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35920"
        },
        "std::_Func_impl_no_alloc<<lambda_0987fc943c6129de3345a393e1a09f03>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x36060"
        },
        "std::_Func_impl_no_alloc<<lambda_0987fc943c6129de3345a393e1a09f03>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_0987fc943c6129de3345a393e1a09f03>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x36080"
        },
        "std::_Func_impl_no_alloc<<lambda_0987fc943c6129de3345a393e1a09f03>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0987fc943c6129de3345a393e1a09f03>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x36060"
        },
        "std::_Func_impl_no_alloc<<lambda_0987fc943c6129de3345a393e1a09f03>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x36190"
        },
        "std::_Func_impl_no_alloc<<lambda_0ab52df63987f4cf4a335bbae9ac6db7>,void,MumbleProto::UserRemove &>::_Copy": {
            "offset": "0x5DA90"
        },
        "std::_Func_impl_no_alloc<<lambda_0ab52df63987f4cf4a335bbae9ac6db7>,void,MumbleProto::UserRemove &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_0ab52df63987f4cf4a335bbae9ac6db7>,void,MumbleProto::UserRemove &>::_Do_call": {
            "offset": "0x5DAA0"
        },
        "std::_Func_impl_no_alloc<<lambda_0ab52df63987f4cf4a335bbae9ac6db7>,void,MumbleProto::UserRemove &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0ab52df63987f4cf4a335bbae9ac6db7>,void,MumbleProto::UserRemove &>::_Move": {
            "offset": "0x5DA90"
        },
        "std::_Func_impl_no_alloc<<lambda_0ab52df63987f4cf4a335bbae9ac6db7>,void,MumbleProto::UserRemove &>::_Target_type": {
            "offset": "0x5DAF0"
        },
        "std::_Func_impl_no_alloc<<lambda_0da472710acaa64a348e0e3c96250066>,void,MumbleProto::Ping &>::_Copy": {
            "offset": "0x5DB30"
        },
        "std::_Func_impl_no_alloc<<lambda_0da472710acaa64a348e0e3c96250066>,void,MumbleProto::Ping &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_0da472710acaa64a348e0e3c96250066>,void,MumbleProto::Ping &>::_Do_call": {
            "offset": "0x5DB40"
        },
        "std::_Func_impl_no_alloc<<lambda_0da472710acaa64a348e0e3c96250066>,void,MumbleProto::Ping &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0da472710acaa64a348e0e3c96250066>,void,MumbleProto::Ping &>::_Move": {
            "offset": "0x5DB30"
        },
        "std::_Func_impl_no_alloc<<lambda_0da472710acaa64a348e0e3c96250066>,void,MumbleProto::Ping &>::_Target_type": {
            "offset": "0x5DB80"
        },
        "std::_Func_impl_no_alloc<<lambda_0dd4249b225aebeb766710bd3af6d4c6>,void,MumbleProto::ChannelRemove &>::_Copy": {
            "offset": "0x44410"
        },
        "std::_Func_impl_no_alloc<<lambda_0dd4249b225aebeb766710bd3af6d4c6>,void,MumbleProto::ChannelRemove &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_0dd4249b225aebeb766710bd3af6d4c6>,void,MumbleProto::ChannelRemove &>::_Do_call": {
            "offset": "0x44420"
        },
        "std::_Func_impl_no_alloc<<lambda_0dd4249b225aebeb766710bd3af6d4c6>,void,MumbleProto::ChannelRemove &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0dd4249b225aebeb766710bd3af6d4c6>,void,MumbleProto::ChannelRemove &>::_Move": {
            "offset": "0x44410"
        },
        "std::_Func_impl_no_alloc<<lambda_0dd4249b225aebeb766710bd3af6d4c6>,void,MumbleProto::ChannelRemove &>::_Target_type": {
            "offset": "0x44470"
        },
        "std::_Func_impl_no_alloc<<lambda_0e990f312250d0dcdfc3dbdd0b22c8aa>,void>::_Copy": {
            "offset": "0x55150"
        },
        "std::_Func_impl_no_alloc<<lambda_0e990f312250d0dcdfc3dbdd0b22c8aa>,void>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_0e990f312250d0dcdfc3dbdd0b22c8aa>,void>::_Do_call": {
            "offset": "0x56090"
        },
        "std::_Func_impl_no_alloc<<lambda_0e990f312250d0dcdfc3dbdd0b22c8aa>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_0e990f312250d0dcdfc3dbdd0b22c8aa>,void>::_Move": {
            "offset": "0x55150"
        },
        "std::_Func_impl_no_alloc<<lambda_0e990f312250d0dcdfc3dbdd0b22c8aa>,void>::_Target_type": {
            "offset": "0x57DA0"
        },
        "std::_Func_impl_no_alloc<<lambda_171563b7857826ae936b8b8dee6a55ec>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35C60"
        },
        "std::_Func_impl_no_alloc<<lambda_171563b7857826ae936b8b8dee6a55ec>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_171563b7857826ae936b8b8dee6a55ec>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35C80"
        },
        "std::_Func_impl_no_alloc<<lambda_171563b7857826ae936b8b8dee6a55ec>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_171563b7857826ae936b8b8dee6a55ec>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35C60"
        },
        "std::_Func_impl_no_alloc<<lambda_171563b7857826ae936b8b8dee6a55ec>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35DB0"
        },
        "std::_Func_impl_no_alloc<<lambda_1978d57008bfff88477e4665f0f83630>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35610"
        },
        "std::_Func_impl_no_alloc<<lambda_1978d57008bfff88477e4665f0f83630>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_1978d57008bfff88477e4665f0f83630>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35630"
        },
        "std::_Func_impl_no_alloc<<lambda_1978d57008bfff88477e4665f0f83630>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_1978d57008bfff88477e4665f0f83630>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35610"
        },
        "std::_Func_impl_no_alloc<<lambda_1978d57008bfff88477e4665f0f83630>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x356A0"
        },
        "std::_Func_impl_no_alloc<<lambda_23c0cf0acdfc3519856bf56e1453e954>,void>::_Copy": {
            "offset": "0x55170"
        },
        "std::_Func_impl_no_alloc<<lambda_23c0cf0acdfc3519856bf56e1453e954>,void>::_Delete_this": {
            "offset": "0x55BB0"
        },
        "std::_Func_impl_no_alloc<<lambda_23c0cf0acdfc3519856bf56e1453e954>,void>::_Do_call": {
            "offset": "0x560A0"
        },
        "std::_Func_impl_no_alloc<<lambda_23c0cf0acdfc3519856bf56e1453e954>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_23c0cf0acdfc3519856bf56e1453e954>,void>::_Move": {
            "offset": "0x57230"
        },
        "std::_Func_impl_no_alloc<<lambda_23c0cf0acdfc3519856bf56e1453e954>,void>::_Target_type": {
            "offset": "0x57DB0"
        },
        "std::_Func_impl_no_alloc<<lambda_25719b1e2fea59a0499437c607b703a0>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35DC0"
        },
        "std::_Func_impl_no_alloc<<lambda_25719b1e2fea59a0499437c607b703a0>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_25719b1e2fea59a0499437c607b703a0>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35DE0"
        },
        "std::_Func_impl_no_alloc<<lambda_25719b1e2fea59a0499437c607b703a0>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_25719b1e2fea59a0499437c607b703a0>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35DC0"
        },
        "std::_Func_impl_no_alloc<<lambda_25719b1e2fea59a0499437c607b703a0>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35E50"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Copy": {
            "offset": "0x346A0"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Do_call": {
            "offset": "0x34C10"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Move": {
            "offset": "0x346A0"
        },
        "std::_Func_impl_no_alloc<<lambda_2729e31fb8c726b5ef153dd449ae69e5>,void,bool const &>::_Target_type": {
            "offset": "0x35130"
        },
        "std::_Func_impl_no_alloc<<lambda_29e565d5a742e0821ef54e06441a75b4>,void,MumbleProto::UserState &>::_Copy": {
            "offset": "0x5DA20"
        },
        "std::_Func_impl_no_alloc<<lambda_29e565d5a742e0821ef54e06441a75b4>,void,MumbleProto::UserState &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_29e565d5a742e0821ef54e06441a75b4>,void,MumbleProto::UserState &>::_Do_call": {
            "offset": "0x5DA30"
        },
        "std::_Func_impl_no_alloc<<lambda_29e565d5a742e0821ef54e06441a75b4>,void,MumbleProto::UserState &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_29e565d5a742e0821ef54e06441a75b4>,void,MumbleProto::UserState &>::_Move": {
            "offset": "0x5DA20"
        },
        "std::_Func_impl_no_alloc<<lambda_29e565d5a742e0821ef54e06441a75b4>,void,MumbleProto::UserState &>::_Target_type": {
            "offset": "0x5DA80"
        },
        "std::_Func_impl_no_alloc<<lambda_2fa3e3d11fb97352afa77a4a13bfb543>,void>::_Copy": {
            "offset": "0x551C0"
        },
        "std::_Func_impl_no_alloc<<lambda_2fa3e3d11fb97352afa77a4a13bfb543>,void>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_2fa3e3d11fb97352afa77a4a13bfb543>,void>::_Do_call": {
            "offset": "0x560E0"
        },
        "std::_Func_impl_no_alloc<<lambda_2fa3e3d11fb97352afa77a4a13bfb543>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_2fa3e3d11fb97352afa77a4a13bfb543>,void>::_Move": {
            "offset": "0x551C0"
        },
        "std::_Func_impl_no_alloc<<lambda_2fa3e3d11fb97352afa77a4a13bfb543>,void>::_Target_type": {
            "offset": "0x57DC0"
        },
        "std::_Func_impl_no_alloc<<lambda_32f5aca9e317fb7552e243c8f9557c19>,void,unsigned char const *,unsigned __int64>::_Copy": {
            "offset": "0x5D6F0"
        },
        "std::_Func_impl_no_alloc<<lambda_32f5aca9e317fb7552e243c8f9557c19>,void,unsigned char const *,unsigned __int64>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_32f5aca9e317fb7552e243c8f9557c19>,void,unsigned char const *,unsigned __int64>::_Do_call": {
            "offset": "0x5D700"
        },
        "std::_Func_impl_no_alloc<<lambda_32f5aca9e317fb7552e243c8f9557c19>,void,unsigned char const *,unsigned __int64>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_32f5aca9e317fb7552e243c8f9557c19>,void,unsigned char const *,unsigned __int64>::_Move": {
            "offset": "0x5D6F0"
        },
        "std::_Func_impl_no_alloc<<lambda_32f5aca9e317fb7552e243c8f9557c19>,void,unsigned char const *,unsigned __int64>::_Target_type": {
            "offset": "0x5D760"
        },
        "std::_Func_impl_no_alloc<<lambda_37911fd6b6362937b73de6edc3b55085>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35E60"
        },
        "std::_Func_impl_no_alloc<<lambda_37911fd6b6362937b73de6edc3b55085>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_37911fd6b6362937b73de6edc3b55085>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35E80"
        },
        "std::_Func_impl_no_alloc<<lambda_37911fd6b6362937b73de6edc3b55085>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_37911fd6b6362937b73de6edc3b55085>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35E60"
        },
        "std::_Func_impl_no_alloc<<lambda_37911fd6b6362937b73de6edc3b55085>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35F00"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ConnectEvent &,uvw::details::ConnectReq &>::_Copy": {
            "offset": "0x551E0"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ConnectEvent &,uvw::details::ConnectReq &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ConnectEvent &,uvw::details::ConnectReq &>::_Do_call": {
            "offset": "0x560F0"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ConnectEvent &,uvw::details::ConnectReq &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ConnectEvent &,uvw::details::ConnectReq &>::_Move": {
            "offset": "0x57280"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ConnectEvent &,uvw::details::ConnectReq &>::_Target_type": {
            "offset": "0x57DD0"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ErrorEvent &,uvw::details::ConnectReq &>::_Copy": {
            "offset": "0x55220"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ErrorEvent &,uvw::details::ConnectReq &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ErrorEvent &,uvw::details::ConnectReq &>::_Do_call": {
            "offset": "0x56140"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ErrorEvent &,uvw::details::ConnectReq &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ErrorEvent &,uvw::details::ConnectReq &>::_Move": {
            "offset": "0x572C0"
        },
        "std::_Func_impl_no_alloc<<lambda_38fba74436ecf3bf78c454676fcd3443>,void,uvw::ErrorEvent &,uvw::details::ConnectReq &>::_Target_type": {
            "offset": "0x57DD0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Copy": {
            "offset": "0x346C0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Delete_this": {
            "offset": "0x349A0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Do_call": {
            "offset": "0x34CF0"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Move": {
            "offset": "0xF770"
        },
        "std::_Func_impl_no_alloc<<lambda_41af1ba482b752c39807db2ef15caf48>,void>::_Target_type": {
            "offset": "0x35140"
        },
        "std::_Func_impl_no_alloc<<lambda_45b7c8d08c110f66df3406306bca098c>,void>::_Copy": {
            "offset": "0x190110"
        },
        "std::_Func_impl_no_alloc<<lambda_45b7c8d08c110f66df3406306bca098c>,void>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_45b7c8d08c110f66df3406306bca098c>,void>::_Do_call": {
            "offset": "0x1901C0"
        },
        "std::_Func_impl_no_alloc<<lambda_45b7c8d08c110f66df3406306bca098c>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_45b7c8d08c110f66df3406306bca098c>,void>::_Move": {
            "offset": "0x190110"
        },
        "std::_Func_impl_no_alloc<<lambda_45b7c8d08c110f66df3406306bca098c>,void>::_Target_type": {
            "offset": "0x190210"
        },
        "std::_Func_impl_no_alloc<<lambda_472f1a2161b85c94d7fd3bb550755131>,void,std::shared_ptr<MumbleUser> const &>::_Copy": {
            "offset": "0x55260"
        },
        "std::_Func_impl_no_alloc<<lambda_472f1a2161b85c94d7fd3bb550755131>,void,std::shared_ptr<MumbleUser> const &>::_Delete_this": {
            "offset": "0x55C30"
        },
        "std::_Func_impl_no_alloc<<lambda_472f1a2161b85c94d7fd3bb550755131>,void,std::shared_ptr<MumbleUser> const &>::_Do_call": {
            "offset": "0x56190"
        },
        "std::_Func_impl_no_alloc<<lambda_472f1a2161b85c94d7fd3bb550755131>,void,std::shared_ptr<MumbleUser> const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_472f1a2161b85c94d7fd3bb550755131>,void,std::shared_ptr<MumbleUser> const &>::_Move": {
            "offset": "0x55260"
        },
        "std::_Func_impl_no_alloc<<lambda_472f1a2161b85c94d7fd3bb550755131>,void,std::shared_ptr<MumbleUser> const &>::_Target_type": {
            "offset": "0x57DE0"
        },
        "std::_Func_impl_no_alloc<<lambda_47550c6f721a7c3a60221a0795dbe58c>,void,std::shared_ptr<MumbleUser> const &>::_Copy": {
            "offset": "0x55280"
        },
        "std::_Func_impl_no_alloc<<lambda_47550c6f721a7c3a60221a0795dbe58c>,void,std::shared_ptr<MumbleUser> const &>::_Delete_this": {
            "offset": "0x55C40"
        },
        "std::_Func_impl_no_alloc<<lambda_47550c6f721a7c3a60221a0795dbe58c>,void,std::shared_ptr<MumbleUser> const &>::_Do_call": {
            "offset": "0x56290"
        },
        "std::_Func_impl_no_alloc<<lambda_47550c6f721a7c3a60221a0795dbe58c>,void,std::shared_ptr<MumbleUser> const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_47550c6f721a7c3a60221a0795dbe58c>,void,std::shared_ptr<MumbleUser> const &>::_Move": {
            "offset": "0x55280"
        },
        "std::_Func_impl_no_alloc<<lambda_47550c6f721a7c3a60221a0795dbe58c>,void,std::shared_ptr<MumbleUser> const &>::_Target_type": {
            "offset": "0x57DF0"
        },
        "std::_Func_impl_no_alloc<<lambda_4a95924211da08c1415785db9bb6b623>,void,uvw::UDPDataEvent &,uvw::UDPHandle &>::_Copy": {
            "offset": "0x552A0"
        },
        "std::_Func_impl_no_alloc<<lambda_4a95924211da08c1415785db9bb6b623>,void,uvw::UDPDataEvent &,uvw::UDPHandle &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_4a95924211da08c1415785db9bb6b623>,void,uvw::UDPDataEvent &,uvw::UDPHandle &>::_Do_call": {
            "offset": "0x56340"
        },
        "std::_Func_impl_no_alloc<<lambda_4a95924211da08c1415785db9bb6b623>,void,uvw::UDPDataEvent &,uvw::UDPHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_4a95924211da08c1415785db9bb6b623>,void,uvw::UDPDataEvent &,uvw::UDPHandle &>::_Move": {
            "offset": "0x552A0"
        },
        "std::_Func_impl_no_alloc<<lambda_4a95924211da08c1415785db9bb6b623>,void,uvw::UDPDataEvent &,uvw::UDPHandle &>::_Target_type": {
            "offset": "0x57E00"
        },
        "std::_Func_impl_no_alloc<<lambda_4d3afe7d8f08c3f2e22a2b3fe7a74741>,void,uvw::DataEvent &,uvw::TCPHandle &>::_Copy": {
            "offset": "0x552C0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d3afe7d8f08c3f2e22a2b3fe7a74741>,void,uvw::DataEvent &,uvw::TCPHandle &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_4d3afe7d8f08c3f2e22a2b3fe7a74741>,void,uvw::DataEvent &,uvw::TCPHandle &>::_Do_call": {
            "offset": "0x56350"
        },
        "std::_Func_impl_no_alloc<<lambda_4d3afe7d8f08c3f2e22a2b3fe7a74741>,void,uvw::DataEvent &,uvw::TCPHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_4d3afe7d8f08c3f2e22a2b3fe7a74741>,void,uvw::DataEvent &,uvw::TCPHandle &>::_Move": {
            "offset": "0x552C0"
        },
        "std::_Func_impl_no_alloc<<lambda_4d3afe7d8f08c3f2e22a2b3fe7a74741>,void,uvw::DataEvent &,uvw::TCPHandle &>::_Target_type": {
            "offset": "0x57E10"
        },
        "std::_Func_impl_no_alloc<<lambda_56f601a2cd8d26074748d31073faf9bf>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35A70"
        },
        "std::_Func_impl_no_alloc<<lambda_56f601a2cd8d26074748d31073faf9bf>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_56f601a2cd8d26074748d31073faf9bf>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35A90"
        },
        "std::_Func_impl_no_alloc<<lambda_56f601a2cd8d26074748d31073faf9bf>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_56f601a2cd8d26074748d31073faf9bf>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35A70"
        },
        "std::_Func_impl_no_alloc<<lambda_56f601a2cd8d26074748d31073faf9bf>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35B10"
        },
        "std::_Func_impl_no_alloc<<lambda_661cf946c44d564d9d8328428eebf5b3>,void>::_Copy": {
            "offset": "0x552E0"
        },
        "std::_Func_impl_no_alloc<<lambda_661cf946c44d564d9d8328428eebf5b3>,void>::_Delete_this": {
            "offset": "0x55BB0"
        },
        "std::_Func_impl_no_alloc<<lambda_661cf946c44d564d9d8328428eebf5b3>,void>::_Do_call": {
            "offset": "0x56360"
        },
        "std::_Func_impl_no_alloc<<lambda_661cf946c44d564d9d8328428eebf5b3>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_661cf946c44d564d9d8328428eebf5b3>,void>::_Move": {
            "offset": "0x57300"
        },
        "std::_Func_impl_no_alloc<<lambda_661cf946c44d564d9d8328428eebf5b3>,void>::_Target_type": {
            "offset": "0x57E20"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Copy": {
            "offset": "0x55330"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Do_call": {
            "offset": "0x56140"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Move": {
            "offset": "0x57350"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Target_type": {
            "offset": "0x57E30"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Copy": {
            "offset": "0x55370"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Do_call": {
            "offset": "0x563B0"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Move": {
            "offset": "0x57390"
        },
        "std::_Func_impl_no_alloc<<lambda_6bd4bbce81d83bd2fddb798cb8e5b98a>,void,uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &>::_Target_type": {
            "offset": "0x57E30"
        },
        "std::_Func_impl_no_alloc<<lambda_6ffcc832fd1d957718159bb0e5fb8c7a>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x356B0"
        },
        "std::_Func_impl_no_alloc<<lambda_6ffcc832fd1d957718159bb0e5fb8c7a>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_6ffcc832fd1d957718159bb0e5fb8c7a>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x356D0"
        },
        "std::_Func_impl_no_alloc<<lambda_6ffcc832fd1d957718159bb0e5fb8c7a>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_6ffcc832fd1d957718159bb0e5fb8c7a>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x356B0"
        },
        "std::_Func_impl_no_alloc<<lambda_6ffcc832fd1d957718159bb0e5fb8c7a>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x357E0"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x34720"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x34A20"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x34D00"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xF770"
        },
        "std::_Func_impl_no_alloc<<lambda_72ae5b0e2f813e08b01a5e2876e67561>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x35150"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x347A0"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x34A20"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x34D50"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xF770"
        },
        "std::_Func_impl_no_alloc<<lambda_7604da78e8f33a312c72ae5a43f9b93b>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x35160"
        },
        "std::_Func_impl_no_alloc<<lambda_763529b0c7473cbc215a52d189ac9b18>,void>::_Copy": {
            "offset": "0x553B0"
        },
        "std::_Func_impl_no_alloc<<lambda_763529b0c7473cbc215a52d189ac9b18>,void>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_763529b0c7473cbc215a52d189ac9b18>,void>::_Do_call": {
            "offset": "0x563D0"
        },
        "std::_Func_impl_no_alloc<<lambda_763529b0c7473cbc215a52d189ac9b18>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_763529b0c7473cbc215a52d189ac9b18>,void>::_Move": {
            "offset": "0x553B0"
        },
        "std::_Func_impl_no_alloc<<lambda_763529b0c7473cbc215a52d189ac9b18>,void>::_Target_type": {
            "offset": "0x57E40"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x34820"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x34A20"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x34DA0"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xF770"
        },
        "std::_Func_impl_no_alloc<<lambda_814d5e0b3a45fa1dd158672480f6c4ca>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x35170"
        },
        "std::_Func_impl_no_alloc<<lambda_83b052390d85560b912d8162df3a6f6a>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35930"
        },
        "std::_Func_impl_no_alloc<<lambda_83b052390d85560b912d8162df3a6f6a>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_83b052390d85560b912d8162df3a6f6a>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35950"
        },
        "std::_Func_impl_no_alloc<<lambda_83b052390d85560b912d8162df3a6f6a>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_83b052390d85560b912d8162df3a6f6a>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35930"
        },
        "std::_Func_impl_no_alloc<<lambda_83b052390d85560b912d8162df3a6f6a>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35A60"
        },
        "std::_Func_impl_no_alloc<<lambda_8652aeab974a2327b1c02ccc89fe9fa6>,void,uvw::EndEvent &,uvw::TCPHandle &>::_Copy": {
            "offset": "0x553D0"
        },
        "std::_Func_impl_no_alloc<<lambda_8652aeab974a2327b1c02ccc89fe9fa6>,void,uvw::EndEvent &,uvw::TCPHandle &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_8652aeab974a2327b1c02ccc89fe9fa6>,void,uvw::EndEvent &,uvw::TCPHandle &>::_Do_call": {
            "offset": "0x563E0"
        },
        "std::_Func_impl_no_alloc<<lambda_8652aeab974a2327b1c02ccc89fe9fa6>,void,uvw::EndEvent &,uvw::TCPHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_8652aeab974a2327b1c02ccc89fe9fa6>,void,uvw::EndEvent &,uvw::TCPHandle &>::_Move": {
            "offset": "0x553D0"
        },
        "std::_Func_impl_no_alloc<<lambda_8652aeab974a2327b1c02ccc89fe9fa6>,void,uvw::EndEvent &,uvw::TCPHandle &>::_Target_type": {
            "offset": "0x57E50"
        },
        "std::_Func_impl_no_alloc<<lambda_8f6d01a797a622002d347fc4bf5324e4>,void>::_Copy": {
            "offset": "0x553F0"
        },
        "std::_Func_impl_no_alloc<<lambda_8f6d01a797a622002d347fc4bf5324e4>,void>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_8f6d01a797a622002d347fc4bf5324e4>,void>::_Do_call": {
            "offset": "0x564B0"
        },
        "std::_Func_impl_no_alloc<<lambda_8f6d01a797a622002d347fc4bf5324e4>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_8f6d01a797a622002d347fc4bf5324e4>,void>::_Move": {
            "offset": "0x553F0"
        },
        "std::_Func_impl_no_alloc<<lambda_8f6d01a797a622002d347fc4bf5324e4>,void>::_Target_type": {
            "offset": "0x57E60"
        },
        "std::_Func_impl_no_alloc<<lambda_937f26418d24450278f0c88457c7edbc>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x2B4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_937f26418d24450278f0c88457c7edbc>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_937f26418d24450278f0c88457c7edbc>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x2B4E0"
        },
        "std::_Func_impl_no_alloc<<lambda_937f26418d24450278f0c88457c7edbc>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_937f26418d24450278f0c88457c7edbc>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x2B4D0"
        },
        "std::_Func_impl_no_alloc<<lambda_937f26418d24450278f0c88457c7edbc>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x2B500"
        },
        "std::_Func_impl_no_alloc<<lambda_9b8050efa0da5e1c63030646aa43834c>,void,std::shared_ptr<MumbleUser> const &>::_Copy": {
            "offset": "0x55410"
        },
        "std::_Func_impl_no_alloc<<lambda_9b8050efa0da5e1c63030646aa43834c>,void,std::shared_ptr<MumbleUser> const &>::_Delete_this": {
            "offset": "0x55C40"
        },
        "std::_Func_impl_no_alloc<<lambda_9b8050efa0da5e1c63030646aa43834c>,void,std::shared_ptr<MumbleUser> const &>::_Do_call": {
            "offset": "0x56500"
        },
        "std::_Func_impl_no_alloc<<lambda_9b8050efa0da5e1c63030646aa43834c>,void,std::shared_ptr<MumbleUser> const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_9b8050efa0da5e1c63030646aa43834c>,void,std::shared_ptr<MumbleUser> const &>::_Move": {
            "offset": "0x55410"
        },
        "std::_Func_impl_no_alloc<<lambda_9b8050efa0da5e1c63030646aa43834c>,void,std::shared_ptr<MumbleUser> const &>::_Target_type": {
            "offset": "0x57E70"
        },
        "std::_Func_impl_no_alloc<<lambda_a69309e0c823914011e2aae155f1013a>,void,int>::_Copy": {
            "offset": "0x41A90"
        },
        "std::_Func_impl_no_alloc<<lambda_a69309e0c823914011e2aae155f1013a>,void,int>::_Delete_this": {
            "offset": "0x41B30"
        },
        "std::_Func_impl_no_alloc<<lambda_a69309e0c823914011e2aae155f1013a>,void,int>::_Do_call": {
            "offset": "0x41BA0"
        },
        "std::_Func_impl_no_alloc<<lambda_a69309e0c823914011e2aae155f1013a>,void,int>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_a69309e0c823914011e2aae155f1013a>,void,int>::_Move": {
            "offset": "0x42250"
        },
        "std::_Func_impl_no_alloc<<lambda_a69309e0c823914011e2aae155f1013a>,void,int>::_Target_type": {
            "offset": "0x424B0"
        },
        "std::_Func_impl_no_alloc<<lambda_a70db4d9568d0aacad72e0d0843e3396>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x36790"
        },
        "std::_Func_impl_no_alloc<<lambda_a70db4d9568d0aacad72e0d0843e3396>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_a70db4d9568d0aacad72e0d0843e3396>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x367B0"
        },
        "std::_Func_impl_no_alloc<<lambda_a70db4d9568d0aacad72e0d0843e3396>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_a70db4d9568d0aacad72e0d0843e3396>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x36790"
        },
        "std::_Func_impl_no_alloc<<lambda_a70db4d9568d0aacad72e0d0843e3396>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x36820"
        },
        "std::_Func_impl_no_alloc<<lambda_ad903aaf206cad4a7bb94e736315ee3a>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Copy": {
            "offset": "0x55430"
        },
        "std::_Func_impl_no_alloc<<lambda_ad903aaf206cad4a7bb94e736315ee3a>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_ad903aaf206cad4a7bb94e736315ee3a>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Do_call": {
            "offset": "0x56530"
        },
        "std::_Func_impl_no_alloc<<lambda_ad903aaf206cad4a7bb94e736315ee3a>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_ad903aaf206cad4a7bb94e736315ee3a>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Move": {
            "offset": "0x55430"
        },
        "std::_Func_impl_no_alloc<<lambda_ad903aaf206cad4a7bb94e736315ee3a>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Target_type": {
            "offset": "0x57E80"
        },
        "std::_Func_impl_no_alloc<<lambda_ae1820e88319543fcdff312802cf5054>,void>::_Copy": {
            "offset": "0x55450"
        },
        "std::_Func_impl_no_alloc<<lambda_ae1820e88319543fcdff312802cf5054>,void>::_Delete_this": {
            "offset": "0x55C50"
        },
        "std::_Func_impl_no_alloc<<lambda_ae1820e88319543fcdff312802cf5054>,void>::_Do_call": {
            "offset": "0x56540"
        },
        "std::_Func_impl_no_alloc<<lambda_ae1820e88319543fcdff312802cf5054>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_ae1820e88319543fcdff312802cf5054>,void>::_Move": {
            "offset": "0x573D0"
        },
        "std::_Func_impl_no_alloc<<lambda_ae1820e88319543fcdff312802cf5054>,void>::_Target_type": {
            "offset": "0x57E90"
        },
        "std::_Func_impl_no_alloc<<lambda_aebf625cd23c9ee9bfe14e8a39312554>,void,std::shared_ptr<MumbleUser> const &>::_Copy": {
            "offset": "0x41AD0"
        },
        "std::_Func_impl_no_alloc<<lambda_aebf625cd23c9ee9bfe14e8a39312554>,void,std::shared_ptr<MumbleUser> const &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_aebf625cd23c9ee9bfe14e8a39312554>,void,std::shared_ptr<MumbleUser> const &>::_Do_call": {
            "offset": "0x41BB0"
        },
        "std::_Func_impl_no_alloc<<lambda_aebf625cd23c9ee9bfe14e8a39312554>,void,std::shared_ptr<MumbleUser> const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_aebf625cd23c9ee9bfe14e8a39312554>,void,std::shared_ptr<MumbleUser> const &>::_Move": {
            "offset": "0x41AD0"
        },
        "std::_Func_impl_no_alloc<<lambda_aebf625cd23c9ee9bfe14e8a39312554>,void,std::shared_ptr<MumbleUser> const &>::_Target_type": {
            "offset": "0x424C0"
        },
        "std::_Func_impl_no_alloc<<lambda_b4b7fc8e19c2fd882758b69563dfc82d>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35470"
        },
        "std::_Func_impl_no_alloc<<lambda_b4b7fc8e19c2fd882758b69563dfc82d>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_b4b7fc8e19c2fd882758b69563dfc82d>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35490"
        },
        "std::_Func_impl_no_alloc<<lambda_b4b7fc8e19c2fd882758b69563dfc82d>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_b4b7fc8e19c2fd882758b69563dfc82d>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35470"
        },
        "std::_Func_impl_no_alloc<<lambda_b4b7fc8e19c2fd882758b69563dfc82d>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35600"
        },
        "std::_Func_impl_no_alloc<<lambda_bcb7b37d4c55e20bb9d3e908315e846e>,void>::_Copy": {
            "offset": "0x41AF0"
        },
        "std::_Func_impl_no_alloc<<lambda_bcb7b37d4c55e20bb9d3e908315e846e>,void>::_Delete_this": {
            "offset": "0x41B30"
        },
        "std::_Func_impl_no_alloc<<lambda_bcb7b37d4c55e20bb9d3e908315e846e>,void>::_Do_call": {
            "offset": "0x41BC0"
        },
        "std::_Func_impl_no_alloc<<lambda_bcb7b37d4c55e20bb9d3e908315e846e>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_bcb7b37d4c55e20bb9d3e908315e846e>,void>::_Move": {
            "offset": "0x42290"
        },
        "std::_Func_impl_no_alloc<<lambda_bcb7b37d4c55e20bb9d3e908315e846e>,void>::_Target_type": {
            "offset": "0x424D0"
        },
        "std::_Func_impl_no_alloc<<lambda_bdea329d1a1764ad9ed99aabfdf8b94e>,void>::_Copy": {
            "offset": "0x55490"
        },
        "std::_Func_impl_no_alloc<<lambda_bdea329d1a1764ad9ed99aabfdf8b94e>,void>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_bdea329d1a1764ad9ed99aabfdf8b94e>,void>::_Do_call": {
            "offset": "0x563D0"
        },
        "std::_Func_impl_no_alloc<<lambda_bdea329d1a1764ad9ed99aabfdf8b94e>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_bdea329d1a1764ad9ed99aabfdf8b94e>,void>::_Move": {
            "offset": "0x55490"
        },
        "std::_Func_impl_no_alloc<<lambda_bdea329d1a1764ad9ed99aabfdf8b94e>,void>::_Target_type": {
            "offset": "0x57EA0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Copy": {
            "offset": "0x348A0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Delete_this": {
            "offset": "0x349A0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Do_call": {
            "offset": "0x34DF0"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Move": {
            "offset": "0xF770"
        },
        "std::_Func_impl_no_alloc<<lambda_bf7610c50ebb1884e5917f6a81016c78>,void>::_Target_type": {
            "offset": "0x35180"
        },
        "std::_Func_impl_no_alloc<<lambda_cad52925f452b942c68736d12fdb5f88>,void,MumbleProto::CryptSetup &>::_Copy": {
            "offset": "0x5C240"
        },
        "std::_Func_impl_no_alloc<<lambda_cad52925f452b942c68736d12fdb5f88>,void,MumbleProto::CryptSetup &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_cad52925f452b942c68736d12fdb5f88>,void,MumbleProto::CryptSetup &>::_Do_call": {
            "offset": "0x5C250"
        },
        "std::_Func_impl_no_alloc<<lambda_cad52925f452b942c68736d12fdb5f88>,void,MumbleProto::CryptSetup &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_cad52925f452b942c68736d12fdb5f88>,void,MumbleProto::CryptSetup &>::_Move": {
            "offset": "0x5C240"
        },
        "std::_Func_impl_no_alloc<<lambda_cad52925f452b942c68736d12fdb5f88>,void,MumbleProto::CryptSetup &>::_Target_type": {
            "offset": "0x5C260"
        },
        "std::_Func_impl_no_alloc<<lambda_cbe4904bf94ac6ff7512443302ccd46f>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Copy": {
            "offset": "0x554B0"
        },
        "std::_Func_impl_no_alloc<<lambda_cbe4904bf94ac6ff7512443302ccd46f>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_cbe4904bf94ac6ff7512443302ccd46f>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Do_call": {
            "offset": "0x56550"
        },
        "std::_Func_impl_no_alloc<<lambda_cbe4904bf94ac6ff7512443302ccd46f>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_cbe4904bf94ac6ff7512443302ccd46f>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Move": {
            "offset": "0x554B0"
        },
        "std::_Func_impl_no_alloc<<lambda_cbe4904bf94ac6ff7512443302ccd46f>,void,uvw::TimerEvent &,uvw::TimerHandle &>::_Target_type": {
            "offset": "0x57EB0"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Copy": {
            "offset": "0x34900"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Do_call": {
            "offset": "0x34E00"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Move": {
            "offset": "0x34900"
        },
        "std::_Func_impl_no_alloc<<lambda_cd07e93ce4e084374db77c62c4f7d117>,void,int const &>::_Target_type": {
            "offset": "0x35190"
        },
        "std::_Func_impl_no_alloc<<lambda_cf1bccc5f197b05b46ab4668667e5224>,void,uvw::ConnectEvent &,uvw::TCPHandle &>::_Copy": {
            "offset": "0x554D0"
        },
        "std::_Func_impl_no_alloc<<lambda_cf1bccc5f197b05b46ab4668667e5224>,void,uvw::ConnectEvent &,uvw::TCPHandle &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_cf1bccc5f197b05b46ab4668667e5224>,void,uvw::ConnectEvent &,uvw::TCPHandle &>::_Do_call": {
            "offset": "0x56560"
        },
        "std::_Func_impl_no_alloc<<lambda_cf1bccc5f197b05b46ab4668667e5224>,void,uvw::ConnectEvent &,uvw::TCPHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_cf1bccc5f197b05b46ab4668667e5224>,void,uvw::ConnectEvent &,uvw::TCPHandle &>::_Move": {
            "offset": "0x554D0"
        },
        "std::_Func_impl_no_alloc<<lambda_cf1bccc5f197b05b46ab4668667e5224>,void,uvw::ConnectEvent &,uvw::TCPHandle &>::_Target_type": {
            "offset": "0x57EC0"
        },
        "std::_Func_impl_no_alloc<<lambda_cfead3f2ff1d0662710a8b64afd77cb4>,void,std::shared_ptr<MumbleUser> const &>::_Copy": {
            "offset": "0x554F0"
        },
        "std::_Func_impl_no_alloc<<lambda_cfead3f2ff1d0662710a8b64afd77cb4>,void,std::shared_ptr<MumbleUser> const &>::_Delete_this": {
            "offset": "0x55C30"
        },
        "std::_Func_impl_no_alloc<<lambda_cfead3f2ff1d0662710a8b64afd77cb4>,void,std::shared_ptr<MumbleUser> const &>::_Do_call": {
            "offset": "0x56570"
        },
        "std::_Func_impl_no_alloc<<lambda_cfead3f2ff1d0662710a8b64afd77cb4>,void,std::shared_ptr<MumbleUser> const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_cfead3f2ff1d0662710a8b64afd77cb4>,void,std::shared_ptr<MumbleUser> const &>::_Move": {
            "offset": "0x554F0"
        },
        "std::_Func_impl_no_alloc<<lambda_cfead3f2ff1d0662710a8b64afd77cb4>,void,std::shared_ptr<MumbleUser> const &>::_Target_type": {
            "offset": "0x57ED0"
        },
        "std::_Func_impl_no_alloc<<lambda_d6e80ec24736954129095f66ea4914d9>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x36830"
        },
        "std::_Func_impl_no_alloc<<lambda_d6e80ec24736954129095f66ea4914d9>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_d6e80ec24736954129095f66ea4914d9>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x36850"
        },
        "std::_Func_impl_no_alloc<<lambda_d6e80ec24736954129095f66ea4914d9>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_d6e80ec24736954129095f66ea4914d9>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x36830"
        },
        "std::_Func_impl_no_alloc<<lambda_d6e80ec24736954129095f66ea4914d9>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x368C0"
        },
        "std::_Func_impl_no_alloc<<lambda_daa40f755bce850424ec1ab617e7a850>,void,uvw::ErrorEvent &,uvw::TCPHandle &>::_Copy": {
            "offset": "0x55510"
        },
        "std::_Func_impl_no_alloc<<lambda_daa40f755bce850424ec1ab617e7a850>,void,uvw::ErrorEvent &,uvw::TCPHandle &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_daa40f755bce850424ec1ab617e7a850>,void,uvw::ErrorEvent &,uvw::TCPHandle &>::_Do_call": {
            "offset": "0x56670"
        },
        "std::_Func_impl_no_alloc<<lambda_daa40f755bce850424ec1ab617e7a850>,void,uvw::ErrorEvent &,uvw::TCPHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_daa40f755bce850424ec1ab617e7a850>,void,uvw::ErrorEvent &,uvw::TCPHandle &>::_Move": {
            "offset": "0x55510"
        },
        "std::_Func_impl_no_alloc<<lambda_daa40f755bce850424ec1ab617e7a850>,void,uvw::ErrorEvent &,uvw::TCPHandle &>::_Target_type": {
            "offset": "0x57EE0"
        },
        "std::_Func_impl_no_alloc<<lambda_dc99b6bbf637ab6e95dd692074af9cd2>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x366F0"
        },
        "std::_Func_impl_no_alloc<<lambda_dc99b6bbf637ab6e95dd692074af9cd2>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_dc99b6bbf637ab6e95dd692074af9cd2>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x36710"
        },
        "std::_Func_impl_no_alloc<<lambda_dc99b6bbf637ab6e95dd692074af9cd2>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_dc99b6bbf637ab6e95dd692074af9cd2>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x366F0"
        },
        "std::_Func_impl_no_alloc<<lambda_dc99b6bbf637ab6e95dd692074af9cd2>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x36780"
        },
        "std::_Func_impl_no_alloc<<lambda_e3e9b29bc096d0633eb226290fdae2f5>,void,MumbleProto::ChannelState &>::_Copy": {
            "offset": "0x443A0"
        },
        "std::_Func_impl_no_alloc<<lambda_e3e9b29bc096d0633eb226290fdae2f5>,void,MumbleProto::ChannelState &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_e3e9b29bc096d0633eb226290fdae2f5>,void,MumbleProto::ChannelState &>::_Do_call": {
            "offset": "0x443B0"
        },
        "std::_Func_impl_no_alloc<<lambda_e3e9b29bc096d0633eb226290fdae2f5>,void,MumbleProto::ChannelState &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_e3e9b29bc096d0633eb226290fdae2f5>,void,MumbleProto::ChannelState &>::_Move": {
            "offset": "0x443A0"
        },
        "std::_Func_impl_no_alloc<<lambda_e3e9b29bc096d0633eb226290fdae2f5>,void,MumbleProto::ChannelState &>::_Target_type": {
            "offset": "0x44400"
        },
        "std::_Func_impl_no_alloc<<lambda_e68f5f26ccd5d3e3648a4eebacd84085>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35F10"
        },
        "std::_Func_impl_no_alloc<<lambda_e68f5f26ccd5d3e3648a4eebacd84085>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_e68f5f26ccd5d3e3648a4eebacd84085>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35F30"
        },
        "std::_Func_impl_no_alloc<<lambda_e68f5f26ccd5d3e3648a4eebacd84085>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_e68f5f26ccd5d3e3648a4eebacd84085>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35F10"
        },
        "std::_Func_impl_no_alloc<<lambda_e68f5f26ccd5d3e3648a4eebacd84085>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x36050"
        },
        "std::_Func_impl_no_alloc<<lambda_ea9e718944740e8489015aa9e5139a49>,bool>::_Copy": {
            "offset": "0x2B530"
        },
        "std::_Func_impl_no_alloc<<lambda_ea9e718944740e8489015aa9e5139a49>,bool>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_ea9e718944740e8489015aa9e5139a49>,bool>::_Do_call": {
            "offset": "0x2B550"
        },
        "std::_Func_impl_no_alloc<<lambda_ea9e718944740e8489015aa9e5139a49>,bool>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_ea9e718944740e8489015aa9e5139a49>,bool>::_Move": {
            "offset": "0x2B530"
        },
        "std::_Func_impl_no_alloc<<lambda_ea9e718944740e8489015aa9e5139a49>,bool>::_Target_type": {
            "offset": "0x2B560"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ErrorEvent &,uvw::details::ShutdownReq &>::_Copy": {
            "offset": "0x55530"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ErrorEvent &,uvw::details::ShutdownReq &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ErrorEvent &,uvw::details::ShutdownReq &>::_Do_call": {
            "offset": "0x56140"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ErrorEvent &,uvw::details::ShutdownReq &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ErrorEvent &,uvw::details::ShutdownReq &>::_Move": {
            "offset": "0x57410"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ErrorEvent &,uvw::details::ShutdownReq &>::_Target_type": {
            "offset": "0x57EF0"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ShutdownEvent &,uvw::details::ShutdownReq &>::_Copy": {
            "offset": "0x55570"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ShutdownEvent &,uvw::details::ShutdownReq &>::_Delete_this": {
            "offset": "0x55B30"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ShutdownEvent &,uvw::details::ShutdownReq &>::_Do_call": {
            "offset": "0x56750"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ShutdownEvent &,uvw::details::ShutdownReq &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ShutdownEvent &,uvw::details::ShutdownReq &>::_Move": {
            "offset": "0x57450"
        },
        "std::_Func_impl_no_alloc<<lambda_f01dba74b8b10791d3f7ed2797e705be>,void,uvw::ShutdownEvent &,uvw::details::ShutdownReq &>::_Target_type": {
            "offset": "0x57EF0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Copy": {
            "offset": "0x34920"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Delete_this": {
            "offset": "0x34A20"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Do_call": {
            "offset": "0x34DA0"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Move": {
            "offset": "0xF770"
        },
        "std::_Func_impl_no_alloc<<lambda_f17ebabe33bc32be107ce6fff046b802>,bool,ConsoleExecutionContext &>::_Target_type": {
            "offset": "0x351A0"
        },
        "std::_Func_impl_no_alloc<<lambda_f25c37099038263181b5186a3fa41b37>,void>::_Copy": {
            "offset": "0x555B0"
        },
        "std::_Func_impl_no_alloc<<lambda_f25c37099038263181b5186a3fa41b37>,void>::_Delete_this": {
            "offset": "0x55CD0"
        },
        "std::_Func_impl_no_alloc<<lambda_f25c37099038263181b5186a3fa41b37>,void>::_Do_call": {
            "offset": "0x56770"
        },
        "std::_Func_impl_no_alloc<<lambda_f25c37099038263181b5186a3fa41b37>,void>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f25c37099038263181b5186a3fa41b37>,void>::_Move": {
            "offset": "0x57490"
        },
        "std::_Func_impl_no_alloc<<lambda_f25c37099038263181b5186a3fa41b37>,void>::_Target_type": {
            "offset": "0x57F00"
        },
        "std::_Func_impl_no_alloc<<lambda_f290069e1b2cbadf19ce6c363318111d>,void,MumbleProto::ServerSync &>::_Copy": {
            "offset": "0x5DB00"
        },
        "std::_Func_impl_no_alloc<<lambda_f290069e1b2cbadf19ce6c363318111d>,void,MumbleProto::ServerSync &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_f290069e1b2cbadf19ce6c363318111d>,void,MumbleProto::ServerSync &>::_Do_call": {
            "offset": "0x5DB10"
        },
        "std::_Func_impl_no_alloc<<lambda_f290069e1b2cbadf19ce6c363318111d>,void,MumbleProto::ServerSync &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f290069e1b2cbadf19ce6c363318111d>,void,MumbleProto::ServerSync &>::_Move": {
            "offset": "0x5DB00"
        },
        "std::_Func_impl_no_alloc<<lambda_f290069e1b2cbadf19ce6c363318111d>,void,MumbleProto::ServerSync &>::_Target_type": {
            "offset": "0x5DB20"
        },
        "std::_Func_impl_no_alloc<<lambda_f41b51f572f23894f82d42ca6576c40d>,void,std::shared_ptr<MumbleUser> const &>::_Copy": {
            "offset": "0x555F0"
        },
        "std::_Func_impl_no_alloc<<lambda_f41b51f572f23894f82d42ca6576c40d>,void,std::shared_ptr<MumbleUser> const &>::_Delete_this": {
            "offset": "0x55C30"
        },
        "std::_Func_impl_no_alloc<<lambda_f41b51f572f23894f82d42ca6576c40d>,void,std::shared_ptr<MumbleUser> const &>::_Do_call": {
            "offset": "0x56790"
        },
        "std::_Func_impl_no_alloc<<lambda_f41b51f572f23894f82d42ca6576c40d>,void,std::shared_ptr<MumbleUser> const &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f41b51f572f23894f82d42ca6576c40d>,void,std::shared_ptr<MumbleUser> const &>::_Move": {
            "offset": "0x555F0"
        },
        "std::_Func_impl_no_alloc<<lambda_f41b51f572f23894f82d42ca6576c40d>,void,std::shared_ptr<MumbleUser> const &>::_Target_type": {
            "offset": "0x57F10"
        },
        "std::_Func_impl_no_alloc<<lambda_f6b6b0123840a4d84d286fa254e51a86>,void,MumbleProto::Version &>::_Copy": {
            "offset": "0x5DEC0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6b6b0123840a4d84d286fa254e51a86>,void,MumbleProto::Version &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_f6b6b0123840a4d84d286fa254e51a86>,void,MumbleProto::Version &>::_Do_call": {
            "offset": "0x5DED0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6b6b0123840a4d84d286fa254e51a86>,void,MumbleProto::Version &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f6b6b0123840a4d84d286fa254e51a86>,void,MumbleProto::Version &>::_Move": {
            "offset": "0x5DEC0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6b6b0123840a4d84d286fa254e51a86>,void,MumbleProto::Version &>::_Target_type": {
            "offset": "0x5DF10"
        },
        "std::_Func_impl_no_alloc<<lambda_f994715a755e40a7d39c628343e79d8c>,void,fx::ScriptContext &>::_Copy": {
            "offset": "0x35B20"
        },
        "std::_Func_impl_no_alloc<<lambda_f994715a755e40a7d39c628343e79d8c>,void,fx::ScriptContext &>::_Delete_this": {
            "offset": "0x2B520"
        },
        "std::_Func_impl_no_alloc<<lambda_f994715a755e40a7d39c628343e79d8c>,void,fx::ScriptContext &>::_Do_call": {
            "offset": "0x35B40"
        },
        "std::_Func_impl_no_alloc<<lambda_f994715a755e40a7d39c628343e79d8c>,void,fx::ScriptContext &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_f994715a755e40a7d39c628343e79d8c>,void,fx::ScriptContext &>::_Move": {
            "offset": "0x35B20"
        },
        "std::_Func_impl_no_alloc<<lambda_f994715a755e40a7d39c628343e79d8c>,void,fx::ScriptContext &>::_Target_type": {
            "offset": "0x35C50"
        },
        "std::_Func_impl_no_alloc<<lambda_fddefaf59461a546e03abd3f44b4cb16>,void,uvw::CloseEvent &,uvw::TCPHandle &>::_Copy": {
            "offset": "0x55610"
        },
        "std::_Func_impl_no_alloc<<lambda_fddefaf59461a546e03abd3f44b4cb16>,void,uvw::CloseEvent &,uvw::TCPHandle &>::_Delete_this": {
            "offset": "0x55C50"
        },
        "std::_Func_impl_no_alloc<<lambda_fddefaf59461a546e03abd3f44b4cb16>,void,uvw::CloseEvent &,uvw::TCPHandle &>::_Do_call": {
            "offset": "0x56890"
        },
        "std::_Func_impl_no_alloc<<lambda_fddefaf59461a546e03abd3f44b4cb16>,void,uvw::CloseEvent &,uvw::TCPHandle &>::_Get": {
            "offset": "0x2B510"
        },
        "std::_Func_impl_no_alloc<<lambda_fddefaf59461a546e03abd3f44b4cb16>,void,uvw::CloseEvent &,uvw::TCPHandle &>::_Move": {
            "offset": "0x574D0"
        },
        "std::_Func_impl_no_alloc<<lambda_fddefaf59461a546e03abd3f44b4cb16>,void,uvw::CloseEvent &,uvw::TCPHandle &>::_Target_type": {
            "offset": "0x57F20"
        },
        "std::_Generic_error_category::message": {
            "offset": "0x62890"
        },
        "std::_Generic_error_category::name": {
            "offset": "0x628E0"
        },
        "std::_Guess_median_unchecked<float *,std::less<void> >": {
            "offset": "0x14BA50"
        },
        "std::_Guess_median_unchecked<google::protobuf::FieldDescriptor const * *,google::protobuf::`anonymous namespace'::FieldNumberSorter>": {
            "offset": "0x73080"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::FileDescriptor const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> >,0> >::_Find_last<char const *>": {
            "offset": "0x7B2E0"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::FileDescriptor const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> >,0> >::_Forced_rehash": {
            "offset": "0x7D510"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::FileDescriptor const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> >,0> >::emplace<std::pair<char const * const,google::protobuf::FileDescriptor const *> const &>": {
            "offset": "0x7B3A0"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::FileDescriptor const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> >,0> >::~_Hash<std::_Umap_traits<char const *,google::protobuf::FileDescriptor const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> >,0> >": {
            "offset": "0x7BBD0"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::Symbol,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::Symbol> >,0> >::_Find_last<char const *>": {
            "offset": "0x7B2E0"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::Symbol,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::Symbol> >,0> >::_Forced_rehash": {
            "offset": "0x7D510"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::Symbol,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::Symbol> >,0> >::emplace<std::pair<char const * const,google::protobuf::Symbol> const &>": {
            "offset": "0x98540"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::Symbol,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::Symbol> >,0> >::~_Hash<std::_Umap_traits<char const *,google::protobuf::Symbol,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::Symbol> >,0> >": {
            "offset": "0x99D30"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::internal::DescriptorTable const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> >,0> >::_Find_last<char const *>": {
            "offset": "0x7B2E0"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::internal::DescriptorTable const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> >,0> >::_Forced_rehash": {
            "offset": "0x7D510"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::internal::DescriptorTable const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> >,0> >::emplace<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> const &>": {
            "offset": "0x7B3A0"
        },
        "std::_Hash<std::_Umap_traits<char const *,google::protobuf::internal::DescriptorTable const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> >,0> >::~_Hash<std::_Umap_traits<char const *,google::protobuf::internal::DescriptorTable const *,std::_Uhash_compare<char const *,google::protobuf::hash<char const *>,google::protobuf::streq>,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> >,0> >": {
            "offset": "0x7BBD0"
        },
        "std::_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::DynamicMessage::TypeInfo const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> >,0> >::_Forced_rehash": {
            "offset": "0x7D700"
        },
        "std::_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::DynamicMessage::TypeInfo const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> >,0> >::_Try_emplace<google::protobuf::Descriptor const * const &>": {
            "offset": "0xF3BB0"
        },
        "std::_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::DynamicMessage::TypeInfo const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> >,0> >::~_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::DynamicMessage::TypeInfo const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> >,0> >": {
            "offset": "0x7BBD0"
        },
        "std::_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::Message const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> >,0> >::_Forced_rehash": {
            "offset": "0x7D700"
        },
        "std::_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::Message const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> >,0> >::emplace<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> const &>": {
            "offset": "0x7B660"
        },
        "std::_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::Message const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> >,0> >::~_Hash<std::_Umap_traits<google::protobuf::Descriptor const *,google::protobuf::Message const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> >,0> >": {
            "offset": "0x7BBD0"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::SourceCodeInfo_Location const *,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x96610"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::SourceCodeInfo_Location const *,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> >,0> >::_Forced_rehash": {
            "offset": "0xBF450"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::SourceCodeInfo_Location const *,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> >,0> >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x97770"
        },
        "std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::SourceCodeInfo_Location const *,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::SourceCodeInfo_Location const *,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> >,0> >": {
            "offset": "0x99F40"
        },
        "std::_Hash<std::_Umap_traits<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::Descriptor const *,int> >,std::equal_to<std::pair<google::protobuf::Descriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> >,0> >::_Forced_rehash": {
            "offset": "0xBF090"
        },
        "std::_Hash<std::_Umap_traits<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::Descriptor const *,int> >,std::equal_to<std::pair<google::protobuf::Descriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> >,0> >::emplace<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> const &>": {
            "offset": "0x97C70"
        },
        "std::_Hash<std::_Umap_traits<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::Descriptor const *,int> >,std::equal_to<std::pair<google::protobuf::Descriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> >,0> >::~_Hash<std::_Umap_traits<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::Descriptor const *,int> >,std::equal_to<std::pair<google::protobuf::Descriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> >,0> >": {
            "offset": "0x99DE0"
        },
        "std::_Hash<std::_Umap_traits<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> >,0> >::_Forced_rehash": {
            "offset": "0xBF090"
        },
        "std::_Hash<std::_Umap_traits<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> >,0> >::emplace<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> const &>": {
            "offset": "0x97C70"
        },
        "std::_Hash<std::_Umap_traits<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> >,0> >::~_Hash<std::_Umap_traits<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,std::_Uhash_compare<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> > >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> >,0> >": {
            "offset": "0x99DE0"
        },
        "std::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> >,0> >::_Forced_rehash": {
            "offset": "0xBF220"
        },
        "std::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> >,0> >::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> >,0> >": {
            "offset": "0x98C00"
        },
        "std::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> >,0> >::emplace<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> const &>": {
            "offset": "0x97F20"
        },
        "std::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> >,0> >::~_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> >,0> >": {
            "offset": "0x99DE0"
        },
        "std::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::Symbol,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> >,0> >::_Forced_rehash": {
            "offset": "0xBF220"
        },
        "std::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::Symbol,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> >,0> >::emplace<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> const &>": {
            "offset": "0x98230"
        },
        "std::_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::Symbol,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> >,0> >::~_Hash<std::_Umap_traits<std::pair<void const *,char const *>,google::protobuf::Symbol,std::_Uhash_compare<std::pair<void const *,char const *>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> >,0> >": {
            "offset": "0x99E90"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::shared_ptr<MumbleAudioOutput::BaseAudioState>,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > >,0> >::_Forced_rehash": {
            "offset": "0x41CA0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::shared_ptr<MumbleAudioOutput::BaseAudioState>,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > >,0> >::_Try_emplace<unsigned int>": {
            "offset": "0x38540"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::shared_ptr<MumbleAudioOutput::BaseAudioState>,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > >,0> >::_Unchecked_erase": {
            "offset": "0x42500"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::shared_ptr<MumbleAudioOutput::BaseAudioState>,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > >,0> >::clear": {
            "offset": "0x42990"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::shared_ptr<MumbleAudioOutput::BaseAudioState>,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > >,0> >::~_Hash<std::_Umap_traits<unsigned int,std::shared_ptr<MumbleAudioOutput::BaseAudioState>,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > >,0> >": {
            "offset": "0x4BE40"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::_Forced_rehash": {
            "offset": "0x41CA0"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::_Rehash_for_1": {
            "offset": "0x42340"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::emplace<unsigned int &,std::unique_ptr<scrBindPointerT<lab::AudioDestinationNode,lab::AudioDestinationNode,void>,std::default_delete<scrBindPointerT<lab::AudioDestinationNode,lab::AudioDestinationNode,void> > > >": {
            "offset": "0x38810"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::emplace<unsigned int &,std::unique_ptr<scrBindPointerT<lab::AudioParam,lab::AudioParam,void>,std::default_delete<scrBindPointerT<lab::AudioParam,lab::AudioParam,void> > > >": {
            "offset": "0x38810"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::emplace<unsigned int &,std::unique_ptr<scrBindPointerT<lab::AudioSourceNode,lab::AudioSourceNode,lab::AudioNode>,std::default_delete<scrBindPointerT<lab::AudioSourceNode,lab::AudioSourceNode,lab::AudioNode> > > >": {
            "offset": "0x38810"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::emplace<unsigned int &,std::unique_ptr<scrBindPointerT<lab::BiquadFilterNode,lab::BiquadFilterNode,lab::AudioBasicProcessorNode>,std::default_delete<scrBindPointerT<lab::BiquadFilterNode,lab::BiquadFilterNode,lab::AudioBasicProcessorNode> > > >": {
            "offset": "0x38810"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::emplace<unsigned int &,std::unique_ptr<scrBindPointerT<lab::WaveShaperNode,lab::WaveShaperNode,lab::AudioBasicProcessorNode>,std::default_delete<scrBindPointerT<lab::WaveShaperNode,lab::WaveShaperNode,lab::AudioBasicProcessorNode> > > >": {
            "offset": "0x38810"
        },
        "std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > >,0> >::erase": {
            "offset": "0x42C60"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::_Forced_rehash": {
            "offset": "0x41F60"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::_Rehash_for_1": {
            "offset": "0x423F0"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::emplace<lab::AudioDestinationNode *,scrBindPointer *>": {
            "offset": "0x38A60"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::emplace<lab::AudioParam *,scrBindPointer *>": {
            "offset": "0x38A60"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::emplace<lab::AudioSourceNode *,scrBindPointer *>": {
            "offset": "0x38A60"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::emplace<lab::BiquadFilterNode *,scrBindPointer *>": {
            "offset": "0x38A60"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::emplace<lab::WaveShaperNode *,scrBindPointer *>": {
            "offset": "0x38A60"
        },
        "std::_Hash<std::_Umap_traits<void *,scrBindPointer *,std::_Uhash_compare<void *,std::hash<void *>,std::equal_to<void *> >,std::allocator<std::pair<void * const,scrBindPointer *> >,0> >::erase<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,scrBindPointer *> > > >,0>": {
            "offset": "0x38D20"
        },
        "std::_Hash<std::_Uset_traits<google::protobuf::Descriptor const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<google::protobuf::Descriptor const *>,0> >::_Forced_rehash": {
            "offset": "0xBF6D0"
        },
        "std::_Hash<std::_Uset_traits<google::protobuf::Descriptor const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<google::protobuf::Descriptor const *>,0> >::~_Hash<std::_Uset_traits<google::protobuf::Descriptor const *,std::_Uhash_compare<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *> >,std::allocator<google::protobuf::Descriptor const *>,0> >": {
            "offset": "0x99FC0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Find_last<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x96610"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Forced_rehash": {
            "offset": "0xBF8C0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >": {
            "offset": "0x98C80"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Unchecked_erase": {
            "offset": "0xBFB40"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::clear": {
            "offset": "0xBFE80"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::count<void>": {
            "offset": "0x97BF0"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x98810"
        },
        "std::_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Hash<std::_Uset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >": {
            "offset": "0x9A070"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<google::protobuf::Descriptor const *> >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<google::protobuf::Descriptor const *> >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<google::protobuf::Descriptor const *> >,std::_Iterator_base0> > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >::~_Hash_vec<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::FileDescriptor const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::FileDescriptor const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::FileDescriptor const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::Symbol> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::Symbol> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::Symbol> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > > > > >::_Assign_grow": {
            "offset": "0x7D3D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > > > > > >": {
            "offset": "0x3A0D0"
        },
        "std::_Init_once_completer::~_Init_once_completer": {
            "offset": "0x67C80"
        },
        "std::_Insert_string<char,std::char_traits<char>,unsigned __int64>": {
            "offset": "0x2D2A0"
        },
        "std::_Insertion_sort_unchecked<google::protobuf::MapKey *,google::protobuf::internal::MapKeySorter::MapKeyComparator>": {
            "offset": "0x810E0"
        },
        "std::_Insertion_sort_unchecked<google::protobuf::Message const * *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x80D10"
        },
        "std::_Insertion_sort_unchecked<google::protobuf::Message const * *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xC9F50"
        },
        "std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x96850"
        },
        "std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Freenode<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x968F0"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::AsyncHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::AsyncHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TimerHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TimerHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::UDPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::UDPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::UDPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::UDPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::TCPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::TCPHandle &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::TCPHandle &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,void *> > >": {
            "offset": "0x46180"
        },
        "std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,void *> > >": {
            "offset": "0x967B0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x9A180"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::FileDescriptor const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::FileDescriptor const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::Symbol>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::Symbol>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,void *> > >": {
            "offset": "0x9A0F0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x39C90"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol>,void *> > >": {
            "offset": "0x2E5A0"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> >,void *> > >": {
            "offset": "0x39D10"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > >,void *> > >": {
            "offset": "0x39D90"
        },
        "std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<void * const,scrBindPointer *>,void *> > >": {
            "offset": "0x39CB0"
        },
        "std::_Make_heap_unchecked<google::protobuf::FieldDescriptor const * *,google::protobuf::`anonymous namespace'::FieldIndexSorter>": {
            "offset": "0xCA320"
        },
        "std::_Maklocstr<char>": {
            "offset": "0xEDB0"
        },
        "std::_Med3_unchecked<google::protobuf::FieldDescriptor const * *,google::protobuf::`anonymous namespace'::FieldIndexSorter>": {
            "offset": "0xCA4D0"
        },
        "std::_Med3_unchecked<google::protobuf::MapKey *,google::protobuf::internal::MapKeySorter::MapKeyComparator>": {
            "offset": "0x81510"
        },
        "std::_Move_unchecked<google::protobuf::UnknownField *,google::protobuf::UnknownField *>": {
            "offset": "0x71320"
        },
        "std::_Optimistic_temporary_buffer<google::protobuf::Message const *>::_Optimistic_temporary_buffer<google::protobuf::Message const *><__int64>": {
            "offset": "0xC9150"
        },
        "std::_Optimistic_temporary_buffer<google::protobuf::Message const *>::~_Optimistic_temporary_buffer<google::protobuf::Message const *>": {
            "offset": "0x83630"
        },
        "std::_Partition_by_median_guess_unchecked<float *,std::less<void> >": {
            "offset": "0x14BBE0"
        },
        "std::_Partition_by_median_guess_unchecked<google::protobuf::FieldDescriptor const * *,google::protobuf::`anonymous namespace'::FieldIndexSorter>": {
            "offset": "0xCA5D0"
        },
        "std::_Partition_by_median_guess_unchecked<google::protobuf::MapKey *,google::protobuf::internal::MapKeySorter::MapKeyComparator>": {
            "offset": "0x815A0"
        },
        "std::_Pop_heap_hole_by_index<google::protobuf::FieldDescriptor const * *,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::FieldIndexSorter>": {
            "offset": "0xCAA20"
        },
        "std::_Pop_heap_hole_by_index<google::protobuf::MapKey *,google::protobuf::MapKey,google::protobuf::internal::MapKeySorter::MapKeyComparator>": {
            "offset": "0x82550"
        },
        "std::_Pop_heap_hole_by_index<std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<lab::AudioContext::PendingConnection> > >,lab::AudioContext::PendingConnection,lab::AudioContext::CompareScheduledTime>": {
            "offset": "0x188EF0"
        },
        "std::_Pop_heap_unchecked<std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<lab::AudioContext::PendingConnection> > >,lab::AudioContext::CompareScheduledTime>": {
            "offset": "0x189120"
        },
        "std::_Push_heap_by_index<google::protobuf::MapKey *,google::protobuf::MapKey,google::protobuf::internal::MapKeySorter::MapKeyComparator>": {
            "offset": "0x827D0"
        },
        "std::_Push_heap_by_index<std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<lab::AudioContext::PendingConnection> > >,lab::AudioContext::PendingConnection,lab::AudioContext::CompareScheduledTime>": {
            "offset": "0x189300"
        },
        "std::_Ref_count<lab::AudioHardwareSourceNode>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count<lab::AudioHardwareSourceNode>::_Destroy": {
            "offset": "0x187F80"
        },
        "std::_Ref_count<lab::AudioListener>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count<lab::AudioListener>::_Destroy": {
            "offset": "0x18ACC0"
        },
        "std::_Ref_count_base::_Get_deleter": {
            "offset": "0xF770"
        },
        "std::_Ref_count_obj2<Botan::TLS::Client>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<Botan::TLS::Client>::_Destroy": {
            "offset": "0x55FD0"
        },
        "std::_Ref_count_obj2<ConVar<bool> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<ConVar<bool> >::_Destroy": {
            "offset": "0x34AA0"
        },
        "std::_Ref_count_obj2<ConVar<int> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<ConVar<int> >::_Destroy": {
            "offset": "0x34AA0"
        },
        "std::_Ref_count_obj2<Concurrency::details::_ExceptionHolder>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<Concurrency::details::_ExceptionHolder>::_Destroy": {
            "offset": "0x55F80"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_completion_event_impl<MumbleConnectionInfo *> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_completion_event_impl<MumbleConnectionInfo *> >::_Destroy": {
            "offset": "0x55EB0"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_completion_event_impl<unsigned char> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_completion_event_impl<unsigned char> >::_Destroy": {
            "offset": "0x55EB0"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_impl<MumbleConnectionInfo *> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_impl<MumbleConnectionInfo *> >::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_impl<unsigned char> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<Concurrency::details::_Task_impl<unsigned char> >::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<MumbleAudioOutput::ClientAudioState>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<MumbleAudioOutput::ClientAudioState>::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<MumbleAudioOutput::ClientAudioStateBase>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<MumbleAudioOutput::ClientAudioStateBase>::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<MumbleAudioOutput::ExternalAudioState>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<MumbleAudioOutput::ExternalAudioState>::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<MumbleUser>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<MumbleUser>::_Destroy": {
            "offset": "0x5BFB0"
        },
        "std::_Ref_count_obj2<XA2DestinationNode>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<XA2DestinationNode>::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<bool> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<bool> >::_Destroy": {
            "offset": "0x34B60"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<internal::ConsoleVariableEntry<int> >::_Destroy": {
            "offset": "0x34AB0"
        },
        "std::_Ref_count_obj2<lab::AudioContext>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<lab::AudioContext>::_Destroy": {
            "offset": "0x41B80"
        },
        "std::_Ref_count_obj2<lab::AudioParam>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<lab::AudioParam>::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<lab::AudioSetting>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<lab::AudioSetting>::_Destroy": {
            "offset": "0x190130"
        },
        "std::_Ref_count_obj2<lab::BiquadFilterNode>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<lab::BiquadFilterNode>::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<lab::WaveShaperNode>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<lab::WaveShaperNode>::_Destroy": {
            "offset": "0x36910"
        },
        "std::_Ref_count_obj2<std::unique_ptr<char [0],std::default_delete<char [0]> > >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<std::unique_ptr<char [0],std::default_delete<char [0]> > >::_Destroy": {
            "offset": "0x55FC0"
        },
        "std::_Ref_count_obj2<uvw::TCPHandle>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<uvw::TCPHandle>::_Destroy": {
            "offset": "0x56020"
        },
        "std::_Ref_count_obj2<uvw::TimerHandle>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<uvw::TimerHandle>::_Destroy": {
            "offset": "0x56030"
        },
        "std::_Ref_count_obj2<uvw::UDPHandle>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<uvw::UDPHandle>::_Destroy": {
            "offset": "0x56040"
        },
        "std::_Ref_count_obj2<uvw::details::ConnectReq>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<uvw::details::ConnectReq>::_Destroy": {
            "offset": "0x55F60"
        },
        "std::_Ref_count_obj2<uvw::details::SendReq>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<uvw::details::SendReq>::_Destroy": {
            "offset": "0x55FE0"
        },
        "std::_Ref_count_obj2<uvw::details::ShutdownReq>::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<uvw::details::ShutdownReq>::_Destroy": {
            "offset": "0x55F70"
        },
        "std::_Ref_count_obj2<uvw::details::WriteReq<std::default_delete<char [0]> > >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_obj2<uvw::details::WriteReq<std::default_delete<char [0]> > >::_Destroy": {
            "offset": "0x55F90"
        },
        "std::_Ref_count_resource<lab::AudioNodeInput *,std::default_delete<lab::AudioNodeInput> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_resource<lab::AudioNodeInput *,std::default_delete<lab::AudioNodeInput> >::_Destroy": {
            "offset": "0x187F80"
        },
        "std::_Ref_count_resource<lab::AudioNodeInput *,std::default_delete<lab::AudioNodeInput> >::_Get_deleter": {
            "offset": "0x187FA0"
        },
        "std::_Ref_count_resource<lab::AudioNodeOutput *,std::default_delete<lab::AudioNodeOutput> >::_Delete_this": {
            "offset": "0x34A80"
        },
        "std::_Ref_count_resource<lab::AudioNodeOutput *,std::default_delete<lab::AudioNodeOutput> >::_Destroy": {
            "offset": "0x187F80"
        },
        "std::_Ref_count_resource<lab::AudioNodeOutput *,std::default_delete<lab::AudioNodeOutput> >::_Get_deleter": {
            "offset": "0x187FD0"
        },
        "std::_Sort_unchecked<google::protobuf::FieldDescriptor const * *,google::protobuf::`anonymous namespace'::FieldIndexSorter>": {
            "offset": "0xCAB70"
        },
        "std::_Sort_unchecked<google::protobuf::FieldDescriptor const * *,google::protobuf::`anonymous namespace'::FieldNumberSorter>": {
            "offset": "0x73220"
        },
        "std::_Sort_unchecked<google::protobuf::MapKey *,google::protobuf::internal::MapKeySorter::MapKeyComparator>": {
            "offset": "0x829B0"
        },
        "std::_Stable_sort_unchecked<google::protobuf::Message const * *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x82C70"
        },
        "std::_Stable_sort_unchecked<google::protobuf::Message const * *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xCADD0"
        },
        "std::_String_val<std::_Simple_types<char> >::_Xran": {
            "offset": "0x5C1A0"
        },
        "std::_System_error::_System_error": {
            "offset": "0x61B50"
        },
        "std::_Temporary_owner<lab::AudioHardwareSourceNode>::~_Temporary_owner<lab::AudioHardwareSourceNode>": {
            "offset": "0x39F20"
        },
        "std::_Temporary_owner<lab::AudioListener>::~_Temporary_owner<lab::AudioListener>": {
            "offset": "0x18A250"
        },
        "std::_Throw_bad_array_new_length": {
            "offset": "0xDAF0"
        },
        "std::_Throw_bad_weak_ptr": {
            "offset": "0x424E0"
        },
        "std::_Throw_system_error": {
            "offset": "0x18AED0"
        },
        "std::_Throw_tree_length_error": {
            "offset": "0xDB10"
        },
        "std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >": {
            "offset": "0x61C00"
        },
        "std::_Traits_compare<std::char_traits<char> >": {
            "offset": "0x97400"
        },
        "std::_Tree<std::_Tmap_traits<int,google::protobuf::internal::ExtensionSet::Extension,std::less<int>,std::allocator<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> >,0> >::_Erase": {
            "offset": "0x922E0"
        },
        "std::_Tree<std::_Tmap_traits<int,google::protobuf::internal::ExtensionSet::Extension,std::less<int>,std::allocator<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> >,0> >::_Find_hint<int>": {
            "offset": "0x8C2A0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::EnumValueDescriptor const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x966E0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<void const *,int>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> > >,0> >::_Find_hint<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0xF15D0"
        },
        "std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<void const *,int>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x966E0"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::FieldDescriptor const *,std::less<std::pair<google::protobuf::Descriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> >,0> >::_Erase": {
            "offset": "0xBED30"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::pair<void const *,int>,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> >": {
            "offset": "0xF1810"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_hint<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x3300"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_lower_bound<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x3580"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >": {
            "offset": "0xADF0"
        },
        "std::_Tree<std::_Tmap_traits<unsigned int,MumbleChannel,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,MumbleChannel> >,0> >::_Erase": {
            "offset": "0x5B420"
        },
        "std::_Tree<std::_Tmap_traits<unsigned int,std::shared_ptr<MumbleUser>,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> > >,0> >::_Erase_unchecked": {
            "offset": "0x5C020"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::FileDescriptor const *,std::less<google::protobuf::FileDescriptor const *>,std::allocator<google::protobuf::FileDescriptor const *>,0> >::_Erase": {
            "offset": "0xBEF00"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::FileDescriptor const *,std::less<google::protobuf::FileDescriptor const *>,std::allocator<google::protobuf::FileDescriptor const *>,0> >::clear": {
            "offset": "0xBFF10"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::FileDescriptor const *,std::less<google::protobuf::FileDescriptor const *>,std::allocator<google::protobuf::FileDescriptor const *>,0> >::erase": {
            "offset": "0xC0200"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::FileDescriptor const *,std::less<google::protobuf::FileDescriptor const *>,std::allocator<google::protobuf::FileDescriptor const *>,0> >::insert<0,0>": {
            "offset": "0x98AF0"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *>,0> >::_Alloc_sentinel_and_proxy": {
            "offset": "0xC81B0"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *>,0> >::_Eqrange<google::protobuf::MapKey *>": {
            "offset": "0xC2420"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *>,0> >::_Erase_unchecked": {
            "offset": "0xC8390"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *>,0> >::_Find_lower_bound<google::protobuf::MapKey *>": {
            "offset": "0xC29C0"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *>,0> >::insert<0,0>": {
            "offset": "0xC2C50"
        },
        "std::_Tree<std::_Tset_traits<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *>,0> >::~_Tree<std::_Tset_traits<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *>,0> >": {
            "offset": "0xC33C0"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Copy_nodes<0>": {
            "offset": "0x45270"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x45480"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x45C50"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Erase": {
            "offset": "0x56900"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x966E0"
        },
        "std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Getal": {
            "offset": "0x38EB0"
        },
        "std::_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >::~_Tree<std::_Tset_traits<tbb::detail::d1::global_control *,tbb::detail::r1::control_storage_comparator,tbb::detail::d1::tbb_allocator<tbb::detail::d1::global_control *>,0> >": {
            "offset": "0x682C0"
        },
        "std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x46200"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0xADD0"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<int const ,VoiceTargetConfig>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<int const ,VoiceTargetConfig>,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *>,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x4BE20"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> >,void *> > >": {
            "offset": "0x99D10"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> >,void *> > >": {
            "offset": "0x4BE00"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,MumbleChannel>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<unsigned int const ,MumbleChannel>,void *> > >": {
            "offset": "0x5AC60"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::Descriptor const *> >::_Erase_tree<std::allocator<std::_Tree_node<google::protobuf::Descriptor const *,void *> > >": {
            "offset": "0x96250"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::Descriptor const *> >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::FileDescriptor const *> >::_Erase_tree<std::allocator<std::_Tree_node<google::protobuf::FileDescriptor const *,void *> > >": {
            "offset": "0x96250"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::FileDescriptor const *> >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::FileDescriptor const *> >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::FileDescriptor const *> >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::FileDescriptor const *> >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::MapKey *> >::_Erase_tree<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<std::_Tree_node<google::protobuf::MapKey *,void *> > >": {
            "offset": "0xC2960"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::MapKey *> >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::MapKey *> >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::MapKey *> >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<google::protobuf::MapKey *> >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >": {
            "offset": "0x73020"
        },
        "std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x460C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,void *> > >": {
            "offset": "0x460C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<google::protobuf::Descriptor const * const,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const ,std::default_delete<google::protobuf::TextFormat::MessagePrinter const > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<google::protobuf::Descriptor const * const,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const ,std::default_delete<google::protobuf::TextFormat::MessagePrinter const > > >,void *> > >": {
            "offset": "0x96590"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<google::protobuf::FieldDescriptor const * const,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<google::protobuf::FieldDescriptor const * const,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > > >,void *> > >": {
            "offset": "0x96590"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,VoiceTargetConfig> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,VoiceTargetConfig>,void *> > >": {
            "offset": "0x45DE0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,VoiceTargetConfig> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension>,void *> > >": {
            "offset": "0x32A0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> > >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> > >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,google::protobuf::internal::ExtensionSet::Extension> > >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >": {
            "offset": "0x962B0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<lab::AudioContext * const,std::weak_ptr<lab::AudioSourceNode> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<lab::AudioContext * const,std::weak_ptr<lab::AudioSourceNode> >,void *> > >": {
            "offset": "0x382F0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<lab::AudioContext * const,std::weak_ptr<lab::AudioSourceNode> > > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::Descriptor const *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::Descriptor const *>,void *> > >": {
            "offset": "0x96390"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::Descriptor const *> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *>,void *> > >": {
            "offset": "0x96390"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x96390"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> >,void *> > >": {
            "offset": "0xF1510"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> > > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,void *> > >": {
            "offset": "0x96330"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> >,void *> > >": {
            "offset": "0xF1450"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> > > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x32A0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,MumbleChannel> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,MumbleChannel>,void *> > >": {
            "offset": "0x45F50"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,MumbleChannel> > >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,MumbleChannel> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,MumbleChannel> > >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,MumbleChannel> > >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> >,void *> > >": {
            "offset": "0x45EA0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> > > >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> > > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> > > >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleUser> > > >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,webrtc::Config::BaseOption *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<void * const,webrtc::Config::BaseOption *>,void *> > >": {
            "offset": "0x2D240"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<void * const,webrtc::Config::BaseOption *> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::shared_ptr<lab::AudioNode> > >::_Erase_tree<std::allocator<std::_Tree_node<std::shared_ptr<lab::AudioNode>,void *> > >": {
            "offset": "0x188E40"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::shared_ptr<lab::AudioParam> > >::_Erase_tree<std::allocator<std::_Tree_node<std::shared_ptr<lab::AudioParam>,void *> > >": {
            "offset": "0x188E40"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::shared_ptr<lab::AudioParam> > >::_Extract": {
            "offset": "0x56B70"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::shared_ptr<lab::AudioParam> > >::_Insert_node": {
            "offset": "0xD890"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::shared_ptr<lab::AudioParam> > >::_Lrotate": {
            "offset": "0x57150"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::shared_ptr<lab::AudioParam> > >::_Rrotate": {
            "offset": "0x57960"
        },
        "std::_Tree_val<std::_Tree_simple_types<tbb::detail::d1::global_control *> >::_Erase_tree<tbb::detail::d1::tbb_allocator<std::_Tree_node<tbb::detail::d1::global_control *,void *> > >": {
            "offset": "0x68250"
        },
        "std::_Uninitialized_backout_al<std::allocator<google::protobuf::MapKey> >::~_Uninitialized_backout_al<std::allocator<google::protobuf::MapKey> >": {
            "offset": "0x83650"
        },
        "std::_Uninitialized_backout_al<std::allocator<lab::AudioParamTimeline::ParamEvent> >::~_Uninitialized_backout_al<std::allocator<lab::AudioParamTimeline::ParamEvent> >": {
            "offset": "0x18DDE0"
        },
        "std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x4BEC0"
        },
        "std::_Uninitialized_move<google::protobuf::MapKey *,std::allocator<google::protobuf::MapKey> >": {
            "offset": "0x82D80"
        },
        "std::_Uninitialized_move<google::protobuf::UnknownField *,std::allocator<google::protobuf::UnknownField> >": {
            "offset": "0x71350"
        },
        "std::_Uninitialized_move<google::protobuf::`anonymous namespace'::OptionsToInterpret *,std::allocator<google::protobuf::`anonymous namespace'::OptionsToInterpret> >": {
            "offset": "0x97A80"
        },
        "std::_Uninitialized_move<lab::AudioContext::PendingConnection *,std::allocator<lab::AudioContext::PendingConnection> >": {
            "offset": "0x189690"
        },
        "std::_Uninitialized_move<lab::AudioParamTimeline::ParamEvent *,std::allocator<lab::AudioParamTimeline::ParamEvent> >": {
            "offset": "0x18DA80"
        },
        "std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x46480"
        },
        "std::_Uninitialized_move<std::shared_ptr<Concurrency::details::_Task_impl<MumbleConnectionInfo *> > *,std::allocator<std::shared_ptr<Concurrency::details::_Task_impl<MumbleConnectionInfo *> > > >": {
            "offset": "0x46500"
        },
        "std::_Uninitialized_move<std::shared_ptr<Concurrency::details::_Task_impl<unsigned char> > *,std::allocator<std::shared_ptr<Concurrency::details::_Task_impl<unsigned char> > > >": {
            "offset": "0x46500"
        },
        "std::_Uninitialized_move<std::shared_ptr<lab::AudioNodeInput> *,std::allocator<std::shared_ptr<lab::AudioNodeInput> > >": {
            "offset": "0x46500"
        },
        "std::_Uninitialized_move<std::shared_ptr<lab::AudioNodeOutput> *,std::allocator<std::shared_ptr<lab::AudioNodeOutput> > >": {
            "offset": "0x46500"
        },
        "std::_Uninitialized_move<std::shared_ptr<lab::AudioParam> *,std::allocator<std::shared_ptr<lab::AudioParam> > >": {
            "offset": "0x46500"
        },
        "std::_Uninitialized_move<std::shared_ptr<lab::AudioSetting> *,std::allocator<std::shared_ptr<lab::AudioSetting> > >": {
            "offset": "0x46500"
        },
        "std::_Uninitialized_value_construct_n<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0xF1A40"
        },
        "std::_Uninitialized_value_construct_n<std::allocator<std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >": {
            "offset": "0x97BA0"
        },
        "std::_Xlen_string": {
            "offset": "0xDB30"
        },
        "std::allocator<RingBuffer *>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<RingBuffer *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<char const *>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<char const *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<char>::allocate": {
            "offset": "0xDB50"
        },
        "std::allocator<char>::deallocate": {
            "offset": "0x351F0"
        },
        "std::allocator<double>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<float>::allocate": {
            "offset": "0x42770"
        },
        "std::allocator<float>::deallocate": {
            "offset": "0x42BC0"
        },
        "std::allocator<google::protobuf::DescriptorPool::Tables::CheckPoint>::deallocate": {
            "offset": "0x589C0"
        },
        "std::allocator<google::protobuf::FieldDescriptor const *>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<google::protobuf::FieldDescriptor const *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<google::protobuf::MapKey>::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<google::protobuf::Message const *>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<google::protobuf::Message const *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<google::protobuf::TextFormat::ParseLocation>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<google::protobuf::UnknownField>::allocate": {
            "offset": "0x71FD0"
        },
        "std::allocator<google::protobuf::UnknownField>::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<google::protobuf::`anonymous namespace'::OptionsToInterpret>::deallocate": {
            "offset": "0xC0000"
        },
        "std::allocator<int>::allocate": {
            "offset": "0x42770"
        },
        "std::allocator<int>::deallocate": {
            "offset": "0x42BC0"
        },
        "std::allocator<lab::AudioContext::PendingConnection>::allocate": {
            "offset": "0x18AF10"
        },
        "std::allocator<lab::AudioContext::PendingConnection>::deallocate": {
            "offset": "0x18B110"
        },
        "std::allocator<lab::AudioParamTimeline::ParamEvent>::deallocate": {
            "offset": "0x18DEE0"
        },
        "std::allocator<msgpack::v2::detail::context<msgpack::v2::detail::parse_helper<msgpack::v2::detail::create_object_visitor> >::unpack_stack::stack_elem>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<msgpack::v2::detail::context<msgpack::v2::detail::parse_helper<msgpack::v2::detail::create_object_visitor> >::unpack_stack::stack_elem>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<msgpack::v2::object *>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<msgpack::v2::object *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::_Tree_node<google::protobuf::Descriptor const *,void *> >::allocate": {
            "offset": "0xBFD80"
        },
        "std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *>,void *> >::allocate": {
            "offset": "0xBFE00"
        },
        "std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *>,void *> >::allocate": {
            "offset": "0xBFE00"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate": {
            "offset": "0x58130"
        },
        "std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate": {
            "offset": "0x589C0"
        },
        "std::allocator<std::complex<float> *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::complex<float> >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::pair<google::protobuf::Descriptor const *,int> >::allocate": {
            "offset": "0x71FD0"
        },
        "std::allocator<std::pair<google::protobuf::Descriptor const *,int> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::pair<google::protobuf::Metadata const *,google::protobuf::Metadata const *> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::pair<void (__cdecl*)(void const *),void const *> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::shared_ptr<Concurrency::details::_Task_impl<MumbleConnectionInfo *> > >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::shared_ptr<Concurrency::details::_Task_impl<unsigned char> > >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::shared_ptr<lab::AudioNode> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::shared_ptr<lab::AudioNodeInput> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::shared_ptr<lab::AudioNodeOutput> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::shared_ptr<lab::AudioParam> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::shared_ptr<lab::AudioSetting> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<std::unique_ptr<char [0],std::default_delete<char [0]> > >::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<std::unique_ptr<char [0],std::default_delete<char [0]> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<google::protobuf::FileDescriptorTables,std::default_delete<google::protobuf::FileDescriptorTables> > >::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<std::unique_ptr<google::protobuf::FileDescriptorTables,std::default_delete<google::protobuf::FileDescriptorTables> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<google::protobuf::Message,std::default_delete<google::protobuf::Message> > >::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<std::unique_ptr<google::protobuf::Message,std::default_delete<google::protobuf::Message> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree,std::default_delete<google::protobuf::TextFormat::ParseInfoTree> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<lab::AudioChannel,std::default_delete<lab::AudioChannel> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<lab::AudioDSPKernel,std::default_delete<lab::AudioDSPKernel> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<std::unique_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::default_delete<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<std::once_flag,std::default_delete<std::once_flag> > >::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<std::unique_ptr<std::once_flag,std::default_delete<std::once_flag> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::AsyncHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::AsyncHandle>::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::TCPHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::TCPHandle>::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::TimerHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::TimerHandle>::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::UDPHandle>::BaseHandler,std::default_delete<uvw::Emitter<uvw::UDPHandle>::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::ConnectReq>::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::ConnectReq>::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::SendReq>::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::SendReq>::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::ShutdownReq>::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::ShutdownReq>::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::unique_ptr<uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::BaseHandler,std::default_delete<uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::BaseHandler> > >::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<std::weak_ptr<lab::AudioNodeOutput> >::allocate": {
            "offset": "0x71FD0"
        },
        "std::allocator<std::weak_ptr<lab::AudioNodeOutput> >::deallocate": {
            "offset": "0x58A10"
        },
        "std::allocator<unsigned char>::deallocate": {
            "offset": "0x351F0"
        },
        "std::allocator<unsigned int>::allocate": {
            "offset": "0x42770"
        },
        "std::allocator<unsigned int>::deallocate": {
            "offset": "0x42BC0"
        },
        "std::allocator<void *>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<void *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<wchar_t>::allocate": {
            "offset": "0xDBB0"
        },
        "std::allocator<webrtc::AudioConverter *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<webrtc::ChannelBuffer<float> *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<webrtc::ComplexMatrix<float> *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<webrtc::PushSincResampler *>::allocate": {
            "offset": "0x427E0"
        },
        "std::allocator<webrtc::PushSincResampler *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<webrtc::SparseFIRFilter *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<webrtc::ThreeBandFilterBank *>::deallocate": {
            "offset": "0x42C10"
        },
        "std::allocator<webrtc::TwoBandsStates>::deallocate": {
            "offset": "0x15C590"
        },
        "std::bad_alloc::bad_alloc": {
            "offset": "0xAB50"
        },
        "std::bad_alloc::~bad_alloc": {
            "offset": "0xAFE0"
        },
        "std::bad_array_new_length::bad_array_new_length": {
            "offset": "0xABD0"
        },
        "std::bad_array_new_length::~bad_array_new_length": {
            "offset": "0xAFE0"
        },
        "std::bad_cast::bad_cast": {
            "offset": "0x368D0"
        },
        "std::bad_weak_ptr::bad_weak_ptr": {
            "offset": "0x39900"
        },
        "std::bad_weak_ptr::what": {
            "offset": "0x44280"
        },
        "std::bad_weak_ptr::~bad_weak_ptr": {
            "offset": "0xAFE0"
        },
        "std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x2EA10"
        },
        "std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x2EA50"
        },
        "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x13CDE0"
        },
        "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str": {
            "offset": "0x13D1D0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>": {
            "offset": "0x31E0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>": {
            "offset": "0x646D0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_55b0f89b53a0342680e40398a0d39887>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>": {
            "offset": "0x96960"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>": {
            "offset": "0x2D550"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >": {
            "offset": "0x64840"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>": {
            "offset": "0x6A620"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>": {
            "offset": "0x96B30"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate": {
            "offset": "0xAEB0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append": {
            "offset": "0x61FB0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign": {
            "offset": "0xDDA0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x99020"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>": {
            "offset": "0x2B580"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str": {
            "offset": "0x13D1C0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare": {
            "offset": "0xBFF80"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase": {
            "offset": "0x8ACD0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of": {
            "offset": "0x8AD40"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace": {
            "offset": "0xC0740"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve": {
            "offset": "0x70930"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize": {
            "offset": "0x8AE30"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0xAEB0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>": {
            "offset": "0x5E410"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append": {
            "offset": "0xDC20"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0x63370"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::push_back": {
            "offset": "0x66990"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve": {
            "offset": "0x66AF0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0xAF10"
        },
        "std::basic_string_view<char,std::char_traits<char> >::basic_string_view<char,std::char_traits<char> >": {
            "offset": "0x39810"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow": {
            "offset": "0x66790"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail": {
            "offset": "0x66900"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff": {
            "offset": "0x66C80"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos": {
            "offset": "0x66E00"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow": {
            "offset": "0x66F10"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x65A90"
        },
        "std::condition_variable::~condition_variable": {
            "offset": "0x18ACB0"
        },
        "std::deque<float,std::allocator<float> >::_Growmap": {
            "offset": "0x166610"
        },
        "std::deque<float,std::allocator<float> >::_Xlen": {
            "offset": "0x351B0"
        },
        "std::deque<float,std::allocator<float> >::~deque<float,std::allocator<float> >": {
            "offset": "0x165F50"
        },
        "std::deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >::_Growmap": {
            "offset": "0x18ACF0"
        },
        "std::deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >::_Xlen": {
            "offset": "0x351B0"
        },
        "std::deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >::~deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >": {
            "offset": "0x18A280"
        },
        "std::deque<std::shared_ptr<lab::AudioSummingJunction>,std::allocator<std::shared_ptr<lab::AudioSummingJunction> > >::_Tidy": {
            "offset": "0x193BD0"
        },
        "std::deque<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> > >::_Growmap": {
            "offset": "0x34EE0"
        },
        "std::deque<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> > >::_Tidy": {
            "offset": "0x57F30"
        },
        "std::deque<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> > >::_Xlen": {
            "offset": "0x351B0"
        },
        "std::deque<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> > >::~deque<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> > >": {
            "offset": "0x2E5C0"
        },
        "std::deque<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>,std::allocator<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int> > >::~deque<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>,std::allocator<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int> > >": {
            "offset": "0x18A390"
        },
        "std::endl<char,std::char_traits<char> >": {
            "offset": "0x2D830"
        },
        "std::error_category::default_error_condition": {
            "offset": "0x62260"
        },
        "std::error_category::equivalent": {
            "offset": "0x62580"
        },
        "std::exception::exception": {
            "offset": "0xAC00"
        },
        "std::exception::what": {
            "offset": "0xEC80"
        },
        "std::exception::~exception": {
            "offset": "0xAFE0"
        },
        "std::exception_ptr::~exception_ptr": {
            "offset": "0x4CF20"
        },
        "std::fill<float *,float>": {
            "offset": "0x14C1B0"
        },
        "std::fill<int *,int>": {
            "offset": "0x151B20"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<google::protobuf::Descriptor const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<google::protobuf::Descriptor const *> >,std::_Iterator_base0> >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Iterator_base0> >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::FileDescriptor const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::FileDescriptor const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::Symbol> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::Symbol> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<scrBindPointer,std::default_delete<scrBindPointer> > > > > > >": {
            "offset": "0x38E20"
        },
        "std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,scrBindPointer *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<void * const,scrBindPointer *> > > > >": {
            "offset": "0x38E20"
        },
        "std::function<bool __cdecl(ConsoleExecutionContext &)>::~function<bool __cdecl(ConsoleExecutionContext &)>": {
            "offset": "0x2E500"
        },
        "std::function<bool __cdecl(void)>::~function<bool __cdecl(void)>": {
            "offset": "0x2E500"
        },
        "std::function<std::optional<std::array<float,3> > __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::~function<std::optional<std::array<float,3> > __cdecl(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::ChannelRemove &)>::~function<void __cdecl(MumbleProto::ChannelRemove &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::ChannelState &)>::~function<void __cdecl(MumbleProto::ChannelState &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::CryptSetup &)>::~function<void __cdecl(MumbleProto::CryptSetup &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::Ping &)>::~function<void __cdecl(MumbleProto::Ping &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::ServerSync &)>::~function<void __cdecl(MumbleProto::ServerSync &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::UserRemove &)>::~function<void __cdecl(MumbleProto::UserRemove &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::UserState &)>::~function<void __cdecl(MumbleProto::UserState &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(MumbleProto::Version &)>::~function<void __cdecl(MumbleProto::Version &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(bool const &)>::~function<void __cdecl(bool const &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(fx::ScriptContext &)>::~function<void __cdecl(fx::ScriptContext &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(int const &)>::~function<void __cdecl(int const &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(int)>::~function<void __cdecl(int)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(std::shared_ptr<MumbleUser> const &)>::~function<void __cdecl(std::shared_ptr<MumbleUser> const &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(unsigned char const *,unsigned __int64)>::~function<void __cdecl(unsigned char const *,unsigned __int64)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)>::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)>::~function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)>::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)>::~function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)>::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)>::~function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)>::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)>::~function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)>::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)>::~function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)>::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)>::~function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)>::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)>::~function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)>::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)>::~function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)>::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)>::~function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>::~function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)>::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)>::~function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)>::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)>::~function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)>::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)>::~function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)>::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)>::~function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>": {
            "offset": "0x4AD00"
        },
        "std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>::~function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)>": {
            "offset": "0x2E500"
        },
        "std::function<void __cdecl(void)>::~function<void __cdecl(void)>": {
            "offset": "0x2E500"
        },
        "std::generate_canonical<float,24,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >": {
            "offset": "0x192DE0"
        },
        "std::get<0,<lambda_ecc77ad680be635cea3925d05548b213> >": {
            "offset": "0x38EB0"
        },
        "std::invalid_argument::invalid_argument": {
            "offset": "0x67540"
        },
        "std::invalid_argument::~invalid_argument": {
            "offset": "0xAFE0"
        },
        "std::invoke<<lambda_ecc77ad680be635cea3925d05548b213> >": {
            "offset": "0x38EC0"
        },
        "std::iter_swap<google::protobuf::MapKey *,google::protobuf::MapKey *>": {
            "offset": "0x82E00"
        },
        "std::length_error::length_error": {
            "offset": "0x675D0"
        },
        "std::length_error::~length_error": {
            "offset": "0xAFE0"
        },
        "std::list<google::protobuf::Descriptor const *,std::allocator<google::protobuf::Descriptor const *> >::~list<google::protobuf::Descriptor const *,std::allocator<google::protobuf::Descriptor const *> >": {
            "offset": "0x9A210"
        },
        "std::list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~list<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x9A360"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::CloseEvent &,uvw::TCPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::TCPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ConnectEvent &,uvw::details::ConnectReq &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::DataEvent &,uvw::TCPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::EndEvent &,uvw::TCPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::AsyncHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::AsyncHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::AsyncHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::AsyncHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TCPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TimerHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TimerHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TimerHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::TimerHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::UDPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::UDPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::UDPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::UDPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ConnectReq &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::SendReq &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::ShutdownReq &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ErrorEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::UDPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::UDPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::UDPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::UDPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::SendEvent &,uvw::details::SendReq &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::TCPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::TCPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::ShutdownEvent &,uvw::details::ShutdownReq &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::TimerEvent &,uvw::TimerHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::UDPDataEvent &,uvw::UDPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::TCPHandle &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::TCPHandle &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::TCPHandle &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> > > >::~list<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> >,std::allocator<std::pair<bool,std::function<void __cdecl(uvw::WriteEvent &,uvw::details::WriteReq<std::default_delete<char [0]> > &)> > > >": {
            "offset": "0x4BFF0"
        },
        "std::list<std::pair<char const * const,google::protobuf::FileDescriptor const *>,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> > >::~list<std::pair<char const * const,google::protobuf::FileDescriptor const *>,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> > >": {
            "offset": "0x7BC80"
        },
        "std::list<std::pair<char const * const,google::protobuf::Symbol>,std::allocator<std::pair<char const * const,google::protobuf::Symbol> > >::~list<std::pair<char const * const,google::protobuf::Symbol>,std::allocator<std::pair<char const * const,google::protobuf::Symbol> > >": {
            "offset": "0x9A270"
        },
        "std::list<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *>,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > >::~list<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *>,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > >": {
            "offset": "0x7BC80"
        },
        "std::list<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *>,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> > >::~list<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *>,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::DynamicMessage::TypeInfo const *> > >": {
            "offset": "0x7BC80"
        },
        "std::list<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *>,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > >::~list<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *>,std::allocator<std::pair<google::protobuf::Descriptor const * const,google::protobuf::Message const *> > >": {
            "offset": "0x7BC80"
        },
        "std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::SourceCodeInfo_Location const *> > >": {
            "offset": "0x9A330"
        },
        "std::list<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >::~list<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *>,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >": {
            "offset": "0x9A270"
        },
        "std::list<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > >::~list<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > >": {
            "offset": "0x9A270"
        },
        "std::list<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >::~list<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >": {
            "offset": "0x9A270"
        },
        "std::list<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > >::~list<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol>,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > >": {
            "offset": "0x9A2D0"
        },
        "std::list<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > > >::~list<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> >,std::allocator<std::pair<unsigned int const ,std::shared_ptr<MumbleAudioOutput::BaseAudioState> > > >": {
            "offset": "0x4BF40"
        },
        "std::list<webrtc::ProcessingComponent *,std::allocator<webrtc::ProcessingComponent *> >::~list<webrtc::ProcessingComponent *,std::allocator<webrtc::ProcessingComponent *> >": {
            "offset": "0x9A210"
        },
        "std::locale::~locale": {
            "offset": "0x61CA0"
        },
        "std::lock_guard<std::mutex>::~lock_guard<std::mutex>": {
            "offset": "0x39E90"
        },
        "std::lock_guard<std::recursive_mutex>::~lock_guard<std::recursive_mutex>": {
            "offset": "0x39E90"
        },
        "std::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>::lock_guard<tbb::detail::r1::concurrent_monitor_mutex>": {
            "offset": "0x68880"
        },
        "std::logic_error::logic_error": {
            "offset": "0x187D90"
        },
        "std::logic_error::~logic_error": {
            "offset": "0xAFE0"
        },
        "std::lower_bound<google::protobuf::Message const * *,google::protobuf::Message const *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x82ED0"
        },
        "std::lower_bound<google::protobuf::Message const * *,google::protobuf::Message const *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xCAEE0"
        },
        "std::make_error_code": {
            "offset": "0x18BAA0"
        },
        "std::make_shared<Botan::TLS::Client,MumbleClient &,Botan::TLS::Session_Manager_In_Memory &,MumbleCredentialsManager &,MumbleTLSPolicy &,Botan::AutoSeeded_RNG &,Botan::TLS::Server_Information>": {
            "offset": "0x48E50"
        },
        "std::make_shared<ConVar<bool>,char const (&)[17],enum ConsoleVariableFlags,bool>": {
            "offset": "0x393E0"
        },
        "std::make_shared<ConVar<bool>,char const (&)[21],enum ConsoleVariableFlags,bool>": {
            "offset": "0x393E0"
        },
        "std::make_shared<ConVar<bool>,char const (&)[22],enum ConsoleVariableFlags,bool>": {
            "offset": "0x393E0"
        },
        "std::make_shared<ConVar<bool>,char const (&)[26],enum ConsoleVariableFlags,bool>": {
            "offset": "0x393E0"
        },
        "std::make_shared<ConVar<bool>,char const (&)[29],enum ConsoleVariableFlags,bool &,bool *>": {
            "offset": "0x2DA10"
        },
        "std::make_shared<ConVar<int>,char const (&)[16],enum ConsoleVariableFlags,int &,int *>": {
            "offset": "0x2D870"
        },
        "std::make_shared<MumbleAudioOutput::ClientAudioState>": {
            "offset": "0x38ED0"
        },
        "std::make_shared<MumbleAudioOutput::ExternalAudioState,fwRefContainer<IMumbleAudioSink> &>": {
            "offset": "0x39080"
        },
        "std::make_shared<XA2DestinationNode,lab::AudioContext *,std::shared_ptr<MumbleAudioOutput::ClientAudioState> &>": {
            "offset": "0x39230"
        },
        "std::make_shared<lab::AudioParam,char const (&)[10],float,float,float>": {
            "offset": "0x196340"
        },
        "std::make_shared<lab::AudioParam,char const (&)[4],float,float,float>": {
            "offset": "0x196340"
        },
        "std::make_shared<lab::AudioParam,char const (&)[9],float,float,float>": {
            "offset": "0x196340"
        },
        "std::make_shared<lab::BiquadFilterNode>": {
            "offset": "0x39570"
        },
        "std::map<google::protobuf::Descriptor const *,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const ,std::default_delete<google::protobuf::TextFormat::MessagePrinter const > >,std::less<google::protobuf::Descriptor const *>,std::allocator<std::pair<google::protobuf::Descriptor const * const,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const ,std::default_delete<google::protobuf::TextFormat::MessagePrinter const > > > > >::~map<google::protobuf::Descriptor const *,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const ,std::default_delete<google::protobuf::TextFormat::MessagePrinter const > >,std::less<google::protobuf::Descriptor const *>,std::allocator<std::pair<google::protobuf::Descriptor const * const,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const ,std::default_delete<google::protobuf::TextFormat::MessagePrinter const > > > > >": {
            "offset": "0xCB910"
        },
        "std::map<google::protobuf::FieldDescriptor const *,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > >,std::less<google::protobuf::FieldDescriptor const *>,std::allocator<std::pair<google::protobuf::FieldDescriptor const * const,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > > > > >::~map<google::protobuf::FieldDescriptor const *,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > >,std::less<google::protobuf::FieldDescriptor const *>,std::allocator<std::pair<google::protobuf::FieldDescriptor const * const,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > > > > >": {
            "offset": "0xCB910"
        },
        "std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >": {
            "offset": "0x9A390"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::Descriptor const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::Descriptor const *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::Descriptor const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::Descriptor const *> > >": {
            "offset": "0x9A3C0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::EnumValueDescriptor const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::EnumValueDescriptor const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::EnumValueDescriptor const *> > >": {
            "offset": "0x9A3C0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::FieldDescriptor const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::FieldDescriptor const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,google::protobuf::FieldDescriptor const *> > >": {
            "offset": "0x9A3C0"
        },
        "std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<void const *,int>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<void const *,int>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> > > >": {
            "offset": "0xF1BE0"
        },
        "std::map<unsigned int,MumbleChannel,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,MumbleChannel> > >::~map<unsigned int,MumbleChannel,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,MumbleChannel> > >": {
            "offset": "0x4C020"
        },
        "std::map<void *,webrtc::Config::BaseOption *,std::less<void *>,std::allocator<std::pair<void * const,webrtc::Config::BaseOption *> > >::~map<void *,webrtc::Config::BaseOption *,std::less<void *>,std::allocator<std::pair<void * const,webrtc::Config::BaseOption *> > >": {
            "offset": "0x2E6D0"
        },
        "std::move<<lambda_ecc77ad680be635cea3925d05548b213> &>": {
            "offset": "0x38EB0"
        },
        "std::mutex::~mutex": {
            "offset": "0x3A7D0"
        },
        "std::numpunct<char>::do_decimal_point": {
            "offset": "0x62480"
        },
        "std::numpunct<char>::do_falsename": {
            "offset": "0x62490"
        },
        "std::numpunct<char>::do_grouping": {
            "offset": "0x624D0"
        },
        "std::numpunct<char>::do_thousands_sep": {
            "offset": "0x62510"
        },
        "std::numpunct<char>::do_truename": {
            "offset": "0x62520"
        },
        "std::numpunct<char>::numpunct<char>": {
            "offset": "0x617A0"
        },
        "std::out_of_range::out_of_range": {
            "offset": "0x67700"
        },
        "std::out_of_range::~out_of_range": {
            "offset": "0xAFE0"
        },
        "std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >": {
            "offset": "0x2E790"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::pair<void const *,int> >": {
            "offset": "0xAEB0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::Descriptor const *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::Descriptor const *>": {
            "offset": "0xAEB0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::EnumValueDescriptor const *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,google::protobuf::EnumValueDescriptor const *>": {
            "offset": "0xAEB0"
        },
        "std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>": {
            "offset": "0xAEB0"
        },
        "std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> >::~pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> const ,std::pair<void const *,int> >": {
            "offset": "0xAEB0"
        },
        "std::priority_queue<lab::AudioContext::PendingConnection,std::deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >,lab::AudioContext::CompareScheduledTime>::emplace<std::shared_ptr<lab::AudioNode> &,std::shared_ptr<lab::AudioNode> &,enum lab::AudioContext::ConnectionType,unsigned int &,unsigned int &>": {
            "offset": "0x189730"
        },
        "std::priority_queue<lab::AudioContext::PendingConnection,std::deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >,lab::AudioContext::CompareScheduledTime>::pop": {
            "offset": "0x18BAC0"
        },
        "std::priority_queue<lab::AudioContext::PendingConnection,std::deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >,lab::AudioContext::CompareScheduledTime>::~priority_queue<lab::AudioContext::PendingConnection,std::deque<lab::AudioContext::PendingConnection,std::allocator<lab::AudioContext::PendingConnection> >,lab::AudioContext::CompareScheduledTime>": {
            "offset": "0x18A4A0"
        },
        "std::push_heap<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<lab::AudioContext::PendingConnection> > >,lab::AudioContext::CompareScheduledTime>": {
            "offset": "0x189880"
        },
        "std::queue<float,std::deque<float,std::allocator<float> > >::~queue<float,std::deque<float,std::allocator<float> > >": {
            "offset": "0x175CC0"
        },
        "std::queue<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::deque<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> > > >::~queue<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::deque<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>,std::allocator<std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int> > > >": {
            "offset": "0x2E730"
        },
        "std::queue<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>,std::deque<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>,std::allocator<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int> > > >::~queue<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>,std::deque<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>,std::allocator<std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int> > > >": {
            "offset": "0x18A4B0"
        },
        "std::recursive_mutex::~recursive_mutex": {
            "offset": "0x3A7D0"
        },
        "std::runtime_error::runtime_error": {
            "offset": "0xAC80"
        },
        "std::runtime_error::~runtime_error": {
            "offset": "0xAFE0"
        },
        "std::set<google::protobuf::Descriptor const *,std::less<google::protobuf::Descriptor const *>,std::allocator<google::protobuf::Descriptor const *> >::~set<google::protobuf::Descriptor const *,std::less<google::protobuf::Descriptor const *>,std::allocator<google::protobuf::Descriptor const *> >": {
            "offset": "0x9A500"
        },
        "std::set<google::protobuf::FileDescriptor const *,std::less<google::protobuf::FileDescriptor const *>,std::allocator<google::protobuf::FileDescriptor const *> >::~set<google::protobuf::FileDescriptor const *,std::less<google::protobuf::FileDescriptor const *>,std::allocator<google::protobuf::FileDescriptor const *> >": {
            "offset": "0x9A500"
        },
        "std::set<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *> >::~set<google::protobuf::MapKey *,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::KeyCompare,google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapAllocator<google::protobuf::MapKey *> >": {
            "offset": "0xC3430"
        },
        "std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >": {
            "offset": "0x73910"
        },
        "std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x4C140"
        },
        "std::set<std::shared_ptr<lab::AudioNode>,std::less<std::shared_ptr<lab::AudioNode> >,std::allocator<std::shared_ptr<lab::AudioNode> > >::~set<std::shared_ptr<lab::AudioNode>,std::less<std::shared_ptr<lab::AudioNode> >,std::allocator<std::shared_ptr<lab::AudioNode> > >": {
            "offset": "0x18A4C0"
        },
        "std::set<std::shared_ptr<lab::AudioParam>,std::less<std::shared_ptr<lab::AudioParam> >,std::allocator<std::shared_ptr<lab::AudioParam> > >::~set<std::shared_ptr<lab::AudioParam>,std::less<std::shared_ptr<lab::AudioParam> >,std::allocator<std::shared_ptr<lab::AudioParam> > >": {
            "offset": "0x18A4C0"
        },
        "std::shared_lock<std::shared_mutex>::~shared_lock<std::shared_mutex>": {
            "offset": "0x39F00"
        },
        "std::shared_ptr<Botan::TLS::Client>::~shared_ptr<Botan::TLS::Client>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<ConVar<bool> >::~shared_ptr<ConVar<bool> >": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<ConVar<int> >::~shared_ptr<ConVar<int> >": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<Concurrency::details::_ExceptionHolder>::~shared_ptr<Concurrency::details::_ExceptionHolder>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<Concurrency::details::_Task_impl<MumbleConnectionInfo *> >::~shared_ptr<Concurrency::details::_Task_impl<MumbleConnectionInfo *> >": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<Concurrency::details::_Task_impl_base>::~shared_ptr<Concurrency::details::_Task_impl_base>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<Concurrency::scheduler_interface>::~shared_ptr<Concurrency::scheduler_interface>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<MumbleAudioOutput::BaseAudioState>::~shared_ptr<MumbleAudioOutput::BaseAudioState>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<MumbleAudioOutput::ClientAudioState>::~shared_ptr<MumbleAudioOutput::ClientAudioState>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<MumbleAudioOutput::ClientAudioStateBase>::~shared_ptr<MumbleAudioOutput::ClientAudioStateBase>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<MumbleAudioOutput::ExternalAudioState>::~shared_ptr<MumbleAudioOutput::ExternalAudioState>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<MumbleUser>::~shared_ptr<MumbleUser>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<XA2DestinationNode>::~shared_ptr<XA2DestinationNode>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<bool> >::~shared_ptr<internal::ConsoleVariableEntry<bool> >": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<internal::ConsoleVariableEntry<int> >::~shared_ptr<internal::ConsoleVariableEntry<int> >": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<internal::ConsoleVariableEntryBase>::~shared_ptr<internal::ConsoleVariableEntryBase>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioContext>::~shared_ptr<lab::AudioContext>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioDestinationNode>::~shared_ptr<lab::AudioDestinationNode>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioHardwareSourceNode>::~shared_ptr<lab::AudioHardwareSourceNode>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioListener>::~shared_ptr<lab::AudioListener>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioNode>::~shared_ptr<lab::AudioNode>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioNodeInput>::~shared_ptr<lab::AudioNodeInput>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioNodeOutput>::~shared_ptr<lab::AudioNodeOutput>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioParam>::~shared_ptr<lab::AudioParam>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioSetting>::~shared_ptr<lab::AudioSetting>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioSourceNode>::~shared_ptr<lab::AudioSourceNode>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::AudioSummingJunction>::~shared_ptr<lab::AudioSummingJunction>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::BiquadFilterNode>::~shared_ptr<lab::BiquadFilterNode>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<lab::WaveShaperNode>::~shared_ptr<lab::WaveShaperNode>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<std::unique_ptr<char [0],std::default_delete<char [0]> > >::~shared_ptr<std::unique_ptr<char [0],std::default_delete<char [0]> > >": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::Loop>::~shared_ptr<uvw::Loop>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::TCPHandle>::~shared_ptr<uvw::TCPHandle>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::TimerHandle>::~shared_ptr<uvw::TimerHandle>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::UDPHandle>::~shared_ptr<uvw::UDPHandle>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::details::ConnectReq>::~shared_ptr<uvw::details::ConnectReq>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::details::SendReq>::~shared_ptr<uvw::details::SendReq>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::details::ShutdownReq>::~shared_ptr<uvw::details::ShutdownReq>": {
            "offset": "0x2E740"
        },
        "std::shared_ptr<uvw::details::WriteReq<std::default_delete<char [0]> > >::~shared_ptr<uvw::details::WriteReq<std::default_delete<char [0]> > >": {
            "offset": "0x2E740"
        },
        "std::sqrt<float>": {
            "offset": "0x14C270"
        },
        "std::system_error::system_error": {
            "offset": "0x18A0D0"
        },
        "std::system_error::~system_error": {
            "offset": "0xAFE0"
        },
        "std::thread::_Invoke<std::tuple<<lambda_7fd497762374d1449b57f5e3ede7b665> >,0>": {
            "offset": "0x38380"
        },
        "std::thread::_Invoke<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> >,0>": {
            "offset": "0x38430"
        },
        "std::thread::_Invoke<std::tuple<void (__cdecl lab::AudioContext::*)(void),lab::AudioContext *>,0,1>": {
            "offset": "0x2D510"
        },
        "std::thread::_Invoke<std::tuple<void (__cdecl*)(MumbleAudioInput *),MumbleAudioInput *>,0,1>": {
            "offset": "0x2D510"
        },
        "std::thread::~thread": {
            "offset": "0x2EAA0"
        },
        "std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::~tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>": {
            "offset": "0x2E790"
        },
        "std::tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>::~tuple<std::shared_ptr<lab::AudioParam>,std::shared_ptr<lab::AudioNode>,unsigned int>": {
            "offset": "0x18A4F0"
        },
        "std::tuple<std::unique_lock<std::recursive_mutex>,bool>::~tuple<std::unique_lock<std::recursive_mutex>,bool>": {
            "offset": "0x4C170"
        },
        "std::unique_lock<std::mutex>::~unique_lock<std::mutex>": {
            "offset": "0x2E800"
        },
        "std::unique_lock<std::recursive_mutex>::~unique_lock<std::recursive_mutex>": {
            "offset": "0x2E800"
        },
        "std::unique_lock<std::shared_mutex>::~unique_lock<std::shared_mutex>": {
            "offset": "0x39F10"
        },
        "std::unique_ptr<Botan::TLS::Session_Manager_In_Memory,std::default_delete<Botan::TLS::Session_Manager_In_Memory> >::~unique_ptr<Botan::TLS::Session_Manager_In_Memory,std::default_delete<Botan::TLS::Session_Manager_In_Memory> >": {
            "offset": "0x4C1C0"
        },
        "std::unique_ptr<Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore,std::default_delete<Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore> >::~unique_ptr<Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore,std::default_delete<Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore> >": {
            "offset": "0x4C1F0"
        },
        "std::unique_ptr<Concurrency::details::_TaskProcHandle,std::default_delete<Concurrency::details::_TaskProcHandle> >::~unique_ptr<Concurrency::details::_TaskProcHandle,std::default_delete<Concurrency::details::_TaskProcHandle> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >::~unique_ptr<ConsoleCommand,std::default_delete<ConsoleCommand> >": {
            "offset": "0x2E830"
        },
        "std::unique_ptr<MumbleCredentialsManager,std::default_delete<MumbleCredentialsManager> >::~unique_ptr<MumbleCredentialsManager,std::default_delete<MumbleCredentialsManager> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<char [0],std::default_delete<char [0]> >::~unique_ptr<char [0],std::default_delete<char [0]> >": {
            "offset": "0x4C1B0"
        },
        "std::unique_ptr<char [0],void (__cdecl*)(char *)>::~unique_ptr<char [0],void (__cdecl*)(char *)>": {
            "offset": "0x4C180"
        },
        "std::unique_ptr<fwEvent<float>::callback,std::default_delete<fwEvent<float>::callback> >::~unique_ptr<fwEvent<float>::callback,std::default_delete<fwEvent<float>::callback> >": {
            "offset": "0x39F40"
        },
        "std::unique_ptr<fwEvent<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,fwRefContainer<IMumbleAudioSink> *>::callback,std::default_delete<fwEvent<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,fwRefContainer<IMumbleAudioSink> *>::callback> >::~unique_ptr<fwEvent<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,fwRefContainer<IMumbleAudioSink> *>::callback,std::default_delete<fwEvent<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,fwRefContainer<IMumbleAudioSink> *>::callback> >": {
            "offset": "0x39F40"
        },
        "std::unique_ptr<google::protobuf::DescriptorPool::Tables,std::default_delete<google::protobuf::DescriptorPool::Tables> >::~unique_ptr<google::protobuf::DescriptorPool::Tables,std::default_delete<google::protobuf::DescriptorPool::Tables> >": {
            "offset": "0x9A590"
        },
        "std::unique_ptr<google::protobuf::Message,std::default_delete<google::protobuf::Message> >::~unique_ptr<google::protobuf::Message,std::default_delete<google::protobuf::Message> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > >::~unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const ,std::default_delete<google::protobuf::TextFormat::FastFieldValuePrinter const > >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree,std::default_delete<google::protobuf::TextFormat::ParseInfoTree> >::~unique_ptr<google::protobuf::TextFormat::ParseInfoTree,std::default_delete<google::protobuf::TextFormat::ParseInfoTree> >": {
            "offset": "0xCB970"
        },
        "std::unique_ptr<google::protobuf::UnknownFieldSet,std::default_delete<google::protobuf::UnknownFieldSet> >::~unique_ptr<google::protobuf::UnknownFieldSet,std::default_delete<google::protobuf::UnknownFieldSet> >": {
            "offset": "0x9A5C0"
        },
        "std::unique_ptr<lab::AudioArray<float>,std::default_delete<lab::AudioArray<float> > >::~unique_ptr<lab::AudioArray<float>,std::default_delete<lab::AudioArray<float> > >": {
            "offset": "0x190990"
        },
        "std::unique_ptr<lab::AudioBus,std::default_delete<lab::AudioBus> >::~unique_ptr<lab::AudioBus,std::default_delete<lab::AudioBus> >": {
            "offset": "0x1909C0"
        },
        "std::unique_ptr<lab::AudioChannel,std::default_delete<lab::AudioChannel> >::~unique_ptr<lab::AudioChannel,std::default_delete<lab::AudioChannel> >": {
            "offset": "0x190A20"
        },
        "std::unique_ptr<lab::AudioContext::Internals,std::default_delete<lab::AudioContext::Internals> >::~unique_ptr<lab::AudioContext::Internals,std::default_delete<lab::AudioContext::Internals> >": {
            "offset": "0x18A580"
        },
        "std::unique_ptr<lab::AudioDSPKernel,std::default_delete<lab::AudioDSPKernel> >::~unique_ptr<lab::AudioDSPKernel,std::default_delete<lab::AudioDSPKernel> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<lab::AudioNodeInput,std::default_delete<lab::AudioNodeInput> >::~unique_ptr<lab::AudioNodeInput,std::default_delete<lab::AudioNodeInput> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<lab::AudioNodeOutput,std::default_delete<lab::AudioNodeOutput> >::~unique_ptr<lab::AudioNodeOutput,std::default_delete<lab::AudioNodeOutput> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<lab::AudioProcessor,std::default_delete<lab::AudioProcessor> >::~unique_ptr<lab::AudioProcessor,std::default_delete<lab::AudioProcessor> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<lab::WaveShaperProcessor::Curve,std::default_delete<lab::WaveShaperProcessor::Curve> >::~unique_ptr<lab::WaveShaperProcessor::Curve,std::default_delete<lab::WaveShaperProcessor::Curve> >": {
            "offset": "0x19A700"
        },
        "std::unique_ptr<msgpack::v1::zone,std::default_delete<msgpack::v1::zone> >::~unique_ptr<msgpack::v1::zone,std::default_delete<msgpack::v1::zone> >": {
            "offset": "0x39FE0"
        },
        "std::unique_ptr<scrBindPointerT<lab::AudioDestinationNode,lab::AudioDestinationNode,void>,std::default_delete<scrBindPointerT<lab::AudioDestinationNode,lab::AudioDestinationNode,void> > >::~unique_ptr<scrBindPointerT<lab::AudioDestinationNode,lab::AudioDestinationNode,void>,std::default_delete<scrBindPointerT<lab::AudioDestinationNode,lab::AudioDestinationNode,void> > >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<scrBindPointerT<lab::AudioParam,lab::AudioParam,void>,std::default_delete<scrBindPointerT<lab::AudioParam,lab::AudioParam,void> > >::~unique_ptr<scrBindPointerT<lab::AudioParam,lab::AudioParam,void>,std::default_delete<scrBindPointerT<lab::AudioParam,lab::AudioParam,void> > >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<scrBindPointerT<lab::AudioSourceNode,lab::AudioSourceNode,lab::AudioNode>,std::default_delete<scrBindPointerT<lab::AudioSourceNode,lab::AudioSourceNode,lab::AudioNode> > >::~unique_ptr<scrBindPointerT<lab::AudioSourceNode,lab::AudioSourceNode,lab::AudioNode>,std::default_delete<scrBindPointerT<lab::AudioSourceNode,lab::AudioSourceNode,lab::AudioNode> > >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<scrBindPointerT<lab::BiquadFilterNode,lab::BiquadFilterNode,lab::AudioBasicProcessorNode>,std::default_delete<scrBindPointerT<lab::BiquadFilterNode,lab::BiquadFilterNode,lab::AudioBasicProcessorNode> > >::~unique_ptr<scrBindPointerT<lab::BiquadFilterNode,lab::BiquadFilterNode,lab::AudioBasicProcessorNode>,std::default_delete<scrBindPointerT<lab::BiquadFilterNode,lab::BiquadFilterNode,lab::AudioBasicProcessorNode> > >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<scrBindPointerT<lab::WaveShaperNode,lab::WaveShaperNode,lab::AudioBasicProcessorNode>,std::default_delete<scrBindPointerT<lab::WaveShaperNode,lab::WaveShaperNode,lab::AudioBasicProcessorNode> > >::~unique_ptr<scrBindPointerT<lab::WaveShaperNode,lab::WaveShaperNode,lab::AudioBasicProcessorNode>,std::default_delete<scrBindPointerT<lab::WaveShaperNode,lab::WaveShaperNode,lab::AudioBasicProcessorNode> > >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >": {
            "offset": "0x39F20"
        },
        "std::unique_ptr<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> >,std::default_delete<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> > > >::get": {
            "offset": "0x43880"
        },
        "std::unique_ptr<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> >,std::default_delete<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> > > >::unique_ptr<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> >,std::default_delete<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> > > ><std::default_delete<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> > >,0>": {
            "offset": "0x36C80"
        },
        "std::unique_ptr<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> >,std::default_delete<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> > > >::~unique_ptr<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> >,std::default_delete<std::tuple<<lambda_ecc77ad680be635cea3925d05548b213> > > >": {
            "offset": "0x39F50"
        },
        "std::unique_ptr<std::tuple<void (__cdecl lab::AudioContext::*)(void),lab::AudioContext *>,std::default_delete<std::tuple<void (__cdecl lab::AudioContext::*)(void),lab::AudioContext *> > >::~unique_ptr<std::tuple<void (__cdecl lab::AudioContext::*)(void),lab::AudioContext *>,std::default_delete<std::tuple<void (__cdecl lab::AudioContext::*)(void),lab::AudioContext *> > >": {
            "offset": "0x2E810"
        },
        "std::unique_ptr<std::tuple<void (__cdecl*)(MumbleAudioInput *),MumbleAudioInput *>,std::default_delete<std::tuple<void (__cdecl*)(MumbleAudioInput *),MumbleAudioInput *> > >::~unique_ptr<std::tuple<void (__cdecl*)(MumbleAudioInput *),MumbleAudioInput *>,std::default_delete<std::tuple<void (__cdecl*)(MumbleAudioInput *),MumbleAudioInput *> > >": {
            "offset": "0x2E810"
        },
        "std::unique_ptr<std::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >,std::default_delete<std::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > > >::~unique_ptr<std::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >,std::default_delete<std::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > > > >": {
            "offset": "0x9A560"
        },
        "std::unordered_map<char const *,google::protobuf::FileDescriptor const *,google::protobuf::hash<char const *>,google::protobuf::streq,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> > >::~unordered_map<char const *,google::protobuf::FileDescriptor const *,google::protobuf::hash<char const *>,google::protobuf::streq,std::allocator<std::pair<char const * const,google::protobuf::FileDescriptor const *> > >": {
            "offset": "0x7BCE0"
        },
        "std::unordered_map<char const *,google::protobuf::Symbol,google::protobuf::hash<char const *>,google::protobuf::streq,std::allocator<std::pair<char const * const,google::protobuf::Symbol> > >::~unordered_map<char const *,google::protobuf::Symbol,google::protobuf::hash<char const *>,google::protobuf::streq,std::allocator<std::pair<char const * const,google::protobuf::Symbol> > >": {
            "offset": "0x9A5F0"
        },
        "std::unordered_map<char const *,google::protobuf::internal::DescriptorTable const *,google::protobuf::hash<char const *>,google::protobuf::streq,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > >::~unordered_map<char const *,google::protobuf::internal::DescriptorTable const *,google::protobuf::hash<char const *>,google::protobuf::streq,std::allocator<std::pair<char const * const,google::protobuf::internal::DescriptorTable const *> > >": {
            "offset": "0x7BCE0"
        },
        "std::unordered_map<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::Descriptor const *,int> >,std::equal_to<std::pair<google::protobuf::Descriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >::~unordered_map<std::pair<google::protobuf::Descriptor const *,int>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::Descriptor const *,int> >,std::equal_to<std::pair<google::protobuf::Descriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::Descriptor const *,int> const ,google::protobuf::FieldDescriptor const *> > >": {
            "offset": "0x9A600"
        },
        "std::unordered_map<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > >::unordered_map<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > >": {
            "offset": "0x99100"
        },
        "std::unordered_map<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > >::~unordered_map<std::pair<google::protobuf::EnumDescriptor const *,int>,google::protobuf::EnumValueDescriptor const *,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::equal_to<std::pair<google::protobuf::EnumDescriptor const *,int> >,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const *,int> const ,google::protobuf::EnumValueDescriptor const *> > >": {
            "offset": "0x9A600"
        },
        "std::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >": {
            "offset": "0x99200"
        },
        "std::unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >::~unordered_map<std::pair<void const *,char const *>,google::protobuf::FieldDescriptor const *,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::FieldDescriptor const *> > >": {
            "offset": "0x9A600"
        },
        "std::unordered_map<std::pair<void const *,char const *>,google::protobuf::Symbol,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > >::~unordered_map<std::pair<void const *,char const *>,google::protobuf::Symbol,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::A0x7a814c62::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const *,char const *> const ,google::protobuf::Symbol> > >": {
            "offset": "0x9A610"
        },
        "std::unordered_set<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *>,std::allocator<google::protobuf::Descriptor const *> >::~unordered_set<google::protobuf::Descriptor const *,std::hash<google::protobuf::Descriptor const *>,std::equal_to<google::protobuf::Descriptor const *>,std::allocator<google::protobuf::Descriptor const *> >": {
            "offset": "0x9A620"
        },
        "std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x992C0"
        },
        "std::unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~unordered_set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >": {
            "offset": "0x9A630"
        },
        "std::upper_bound<google::protobuf::Message const * *,google::protobuf::Message const *,google::protobuf::DynamicMapSorter::MapEntryMessageComparator>": {
            "offset": "0x83280"
        },
        "std::upper_bound<google::protobuf::Message const * *,google::protobuf::Message const *,google::protobuf::MapEntryMessageComparator>": {
            "offset": "0xCB290"
        },
        "std::use_facet<std::numpunct<char> >": {
            "offset": "0x61470"
        },
        "std::weak_ptr<Concurrency::details::_Task_impl_base>::~weak_ptr<Concurrency::details::_Task_impl_base>": {
            "offset": "0x39C40"
        },
        "std::weak_ptr<MumbleAudioOutput::BaseAudioState>::~weak_ptr<MumbleAudioOutput::BaseAudioState>": {
            "offset": "0x39C40"
        },
        "std::weak_ptr<MumbleAudioOutput::ClientAudioState>::~weak_ptr<MumbleAudioOutput::ClientAudioState>": {
            "offset": "0x39C40"
        },
        "std::weak_ptr<lab::AudioNodeOutput>::~weak_ptr<lab::AudioNodeOutput>": {
            "offset": "0x39C40"
        },
        "stereo_analysis": {
            "offset": "0x104270"
        },
        "stereo_fade": {
            "offset": "0xFAED0"
        },
        "stereo_itheta": {
            "offset": "0x1231A0"
        },
        "stereo_merge": {
            "offset": "0x11A2F0"
        },
        "stereo_split": {
            "offset": "0x11A640"
        },
        "tansig_approx": {
            "offset": "0x1AFEE0"
        },
        "tbb::detail::d0::raii_guard<<lambda_0e1f910659e28e696fc4a81fef6b33ad> >::~raii_guard<<lambda_0e1f910659e28e696fc4a81fef6b33ad> >": {
            "offset": "0x4C050"
        },
        "tbb::detail::d0::raii_guard<<lambda_a7a38a1d00ab61c17f8bc893ba1a4693> >::~raii_guard<<lambda_a7a38a1d00ab61c17f8bc893ba1a4693> >": {
            "offset": "0x4C120"
        },
        "tbb::detail::d1::unique_scoped_lock<tbb::detail::d1::spin_mutex>::~unique_scoped_lock<tbb::detail::d1::spin_mutex>": {
            "offset": "0x68330"
        },
        "tbb::detail::d2::micro_queue<std::function<void __cdecl(void)>,tbb::detail::d1::cache_aligned_allocator<std::function<void __cdecl(void)> > >::prepare_page": {
            "offset": "0x58E00"
        },
        "tbb::detail::r1::AvailableHwConcurrency": {
            "offset": "0x68580"
        },
        "tbb::detail::r1::PrintExtraVersionInfo": {
            "offset": "0x683A0"
        },
        "tbb::detail::r1::`dynamic initializer for '__TBB_InitOnceHiddenInstance''": {
            "offset": "0x21D0"
        },
        "tbb::detail::r1::`dynamic initializer for 'allowed_parallelism_ctl''": {
            "offset": "0x2060"
        },
        "tbb::detail::r1::`dynamic initializer for 'lifetime_ctl''": {
            "offset": "0x20B0"
        },
        "tbb::detail::r1::`dynamic initializer for 'stack_size_ctl''": {
            "offset": "0x2100"
        },
        "tbb::detail::r1::`dynamic initializer for 'terminate_on_exception_ctl''": {
            "offset": "0x2150"
        },
        "tbb::detail::r1::allocate_memory": {
            "offset": "0x67CB0"
        },
        "tbb::detail::r1::allowed_parallelism_control::active_value": {
            "offset": "0x67FD0"
        },
        "tbb::detail::r1::allowed_parallelism_control::apply_active": {
            "offset": "0x67FC0"
        },
        "tbb::detail::r1::allowed_parallelism_control::default_value": {
            "offset": "0x67F30"
        },
        "tbb::detail::r1::allowed_parallelism_control::is_first_arg_preferred": {
            "offset": "0x67FB0"
        },
        "tbb::detail::r1::arena::has_enqueued_tasks": {
            "offset": "0x69360"
        },
        "tbb::detail::r1::bad_last_alloc::bad_last_alloc": {
            "offset": "0x674D0"
        },
        "tbb::detail::r1::bad_last_alloc::what": {
            "offset": "0x67BF0"
        },
        "tbb::detail::r1::bad_last_alloc::~bad_last_alloc": {
            "offset": "0xAFE0"
        },
        "tbb::detail::r1::cache_aligned_allocate": {
            "offset": "0x67CE0"
        },
        "tbb::detail::r1::clear_address_waiter_table": {
            "offset": "0x690F0"
        },
        "tbb::detail::r1::concurrent_monitor_mutex::get_semaphore": {
            "offset": "0x68AE0"
        },
        "tbb::detail::r1::control_storage::active_value": {
            "offset": "0x67EA0"
        },
        "tbb::detail::r1::control_storage::apply_active": {
            "offset": "0x67E80"
        },
        "tbb::detail::r1::control_storage::is_first_arg_preferred": {
            "offset": "0x67E90"
        },
        "tbb::detail::r1::deallocate_memory": {
            "offset": "0x67D40"
        },
        "tbb::detail::r1::detect_cpu_features": {
            "offset": "0x68470"
        },
        "tbb::detail::r1::do_throw<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0x670D0"
        },
        "tbb::detail::r1::do_throw<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0x67100"
        },
        "tbb::detail::r1::do_throw<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0x67130"
        },
        "tbb::detail::r1::do_throw<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0x67160"
        },
        "tbb::detail::r1::do_throw<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0x67190"
        },
        "tbb::detail::r1::do_throw<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0x671C0"
        },
        "tbb::detail::r1::do_throw<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0x671F0"
        },
        "tbb::detail::r1::do_throw<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0x67220"
        },
        "tbb::detail::r1::do_throw<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0x67250"
        },
        "tbb::detail::r1::do_throw<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0x67280"
        },
        "tbb::detail::r1::do_throw<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0x672B0"
        },
        "tbb::detail::r1::do_throw<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0x672E0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_148cdb9fe4058b498675dc761af2b55f> >": {
            "offset": "0x67310"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_4bd345ce870bcb6a9dba57dde6595eaf> >": {
            "offset": "0x67330"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_62d39c82ce1150ac872f53fd210c4174> >": {
            "offset": "0x67350"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_89482d616e0aac800ea8950dff220b82> >": {
            "offset": "0x67370"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_a1465ae1007134a6074a1c25f5c5eb73> >": {
            "offset": "0x67390"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ae2846614598588cc214b4c5ac29e5b9> >": {
            "offset": "0x673B0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_b99707c9ac0dceece1b9d1a5418a9e2c> >": {
            "offset": "0x673D0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c2671fb7d58401c3433fec7a51743eed> >": {
            "offset": "0x673F0"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c4a59ba630f650a3c6857dbdee4106d9> >": {
            "offset": "0x67410"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_c7d6cdb286355fa15477645785091432> >": {
            "offset": "0x67430"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_ea483f4268cd915b2f894dd67bba646e> >": {
            "offset": "0x67450"
        },
        "tbb::detail::r1::do_throw_noexcept<<lambda_f39008d8a31f439e214a4bdb6047acdc> >": {
            "offset": "0x67470"
        },
        "tbb::detail::r1::dummy_allocate_binding_handler": {
            "offset": "0xF770"
        },
        "tbb::detail::r1::dummy_apply_affinity": {
            "offset": "0xAD90"
        },
        "tbb::detail::r1::dummy_deallocate_binding_handler": {
            "offset": "0xAD90"
        },
        "tbb::detail::r1::dummy_destroy_system_topology": {
            "offset": "0xAD90"
        },
        "tbb::detail::r1::dummy_get_default_concurrency": {
            "offset": "0x69050"
        },
        "tbb::detail::r1::dummy_restore_affinity": {
            "offset": "0xAD90"
        },
        "tbb::detail::r1::dynamic_link": {
            "offset": "0x68390"
        },
        "tbb::detail::r1::dynamic_unlink": {
            "offset": "0xAD90"
        },
        "tbb::detail::r1::dynamic_unlink_all": {
            "offset": "0xAD90"
        },
        "tbb::detail::r1::gcc_rethrow_exception_broken": {
            "offset": "0xF830"
        },
        "tbb::detail::r1::get_address_waiter_table": {
            "offset": "0x69290"
        },
        "tbb::detail::r1::governor::acquire_resources": {
            "offset": "0x69060"
        },
        "tbb::detail::r1::governor::default_num_threads": {
            "offset": "0x68A60"
        },
        "tbb::detail::r1::governor::release_resources": {
            "offset": "0x690B0"
        },
        "tbb::detail::r1::handle_perror": {
            "offset": "0x67A70"
        },
        "tbb::detail::r1::initialize_allocate_handler": {
            "offset": "0x67C20"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocate_handler": {
            "offset": "0x67C50"
        },
        "tbb::detail::r1::initialize_cache_aligned_allocator": {
            "offset": "0x67D50"
        },
        "tbb::detail::r1::initialize_hardware_concurrency_info": {
            "offset": "0x68640"
        },
        "tbb::detail::r1::lifetime_control::apply_active": {
            "offset": "0x680E0"
        },
        "tbb::detail::r1::lifetime_control::default_value": {
            "offset": "0xF770"
        },
        "tbb::detail::r1::lifetime_control::is_first_arg_preferred": {
            "offset": "0xF830"
        },
        "tbb::detail::r1::market::add_ref_unsafe": {
            "offset": "0x68960"
        },
        "tbb::detail::r1::market::app_parallelism_limit": {
            "offset": "0x68350"
        },
        "tbb::detail::r1::market::release": {
            "offset": "0x68B80"
        },
        "tbb::detail::r1::market::set_active_num_workers": {
            "offset": "0x68D00"
        },
        "tbb::detail::r1::market::update_allotment": {
            "offset": "0x68F40"
        },
        "tbb::detail::r1::missing_wait::missing_wait": {
            "offset": "0x676A0"
        },
        "tbb::detail::r1::missing_wait::what": {
            "offset": "0x67C00"
        },
        "tbb::detail::r1::missing_wait::~missing_wait": {
            "offset": "0xAFE0"
        },
        "tbb::detail::r1::runtime_warning": {
            "offset": "0x684C0"
        },
        "tbb::detail::r1::stack_size_control::apply_active": {
            "offset": "0x67E80"
        },
        "tbb::detail::r1::stack_size_control::default_value": {
            "offset": "0x680D0"
        },
        "tbb::detail::r1::std_cache_aligned_allocate": {
            "offset": "0x67E60"
        },
        "tbb::detail::r1::std_cache_aligned_deallocate": {
            "offset": "0x67E70"
        },
        "tbb::detail::r1::terminate_on_exception": {
            "offset": "0x68370"
        },
        "tbb::detail::r1::terminate_on_exception_control::default_value": {
            "offset": "0xF770"
        },
        "tbb::detail::r1::throw_exception": {
            "offset": "0x67B40"
        },
        "tbb::detail::r1::unsafe_wait::unsafe_wait": {
            "offset": "0x67790"
        },
        "tbb::detail::r1::unsafe_wait::~unsafe_wait": {
            "offset": "0xAFE0"
        },
        "tbb::detail::r1::user_abort::user_abort": {
            "offset": "0x67820"
        },
        "tbb::detail::r1::user_abort::what": {
            "offset": "0x67C10"
        },
        "tbb::detail::r1::user_abort::~user_abort": {
            "offset": "0xAFE0"
        },
        "tf_analysis": {
            "offset": "0x104510"
        },
        "tf_encode": {
            "offset": "0x104BF0"
        },
        "tonality_analysis": {
            "offset": "0x107DE0"
        },
        "tonality_analysis_init": {
            "offset": "0x10B0D0"
        },
        "tonality_analysis_reset": {
            "offset": "0x10B0F0"
        },
        "tonality_get_info": {
            "offset": "0x10B110"
        },
        "transient_analysis": {
            "offset": "0x104D70"
        },
        "truncate_here": {
            "offset": "0x19AA20"
        },
        "unquant_coarse_energy": {
            "offset": "0x11B7F0"
        },
        "unquant_energy_finalise": {
            "offset": "0x11BA00"
        },
        "unquant_fine_energy": {
            "offset": "0x11BB80"
        },
        "update_timings": {
            "offset": "0x1AACB0"
        },
        "user_bitrate_to_bitrate": {
            "offset": "0xFB420"
        },
        "utf8::exception::exception": {
            "offset": "0x65910"
        },
        "utf8::internal::append<std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,char>": {
            "offset": "0x64990"
        },
        "utf8::internal::validate_next<std::_String_view_iterator<std::char_traits<char> > >": {
            "offset": "0x652C0"
        },
        "utf8::invalid_code_point::invalid_code_point": {
            "offset": "0x659A0"
        },
        "utf8::invalid_code_point::what": {
            "offset": "0x67000"
        },
        "utf8::invalid_code_point::~invalid_code_point": {
            "offset": "0xAFE0"
        },
        "utf8::invalid_utf8::invalid_utf8": {
            "offset": "0x65A10"
        },
        "utf8::invalid_utf8::what": {
            "offset": "0x67010"
        },
        "utf8::invalid_utf8::~invalid_utf8": {
            "offset": "0xAFE0"
        },
        "utf8::not_enough_room::not_enough_room": {
            "offset": "0x65A70"
        },
        "utf8::not_enough_room::what": {
            "offset": "0x67020"
        },
        "utf8::not_enough_room::~not_enough_room": {
            "offset": "0xAFE0"
        },
        "uvw::DataEvent::~DataEvent": {
            "offset": "0x4C1B0"
        },
        "uvw::Emitter<uvw::AsyncHandle>::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::AsyncHandle>::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::AsyncHandle>::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::AsyncHandle>::publish<uvw::ErrorEvent>": {
            "offset": "0x498F0"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::CloseEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::CloseEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::CloseEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ConnectEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ConnectEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ConnectEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::DataEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::DataEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::DataEvent>::publish": {
            "offset": "0x59170"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::EndEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::EndEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::EndEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ShutdownEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ShutdownEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::ShutdownEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::WriteEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::WriteEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TCPHandle>::Handler<uvw::WriteEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::TCPHandle>::handler<uvw::CloseEvent>": {
            "offset": "0x47420"
        },
        "uvw::Emitter<uvw::TCPHandle>::handler<uvw::ConnectEvent>": {
            "offset": "0x476E0"
        },
        "uvw::Emitter<uvw::TCPHandle>::handler<uvw::DataEvent>": {
            "offset": "0x47840"
        },
        "uvw::Emitter<uvw::TCPHandle>::handler<uvw::EndEvent>": {
            "offset": "0x479A0"
        },
        "uvw::Emitter<uvw::TCPHandle>::handler<uvw::ErrorEvent>": {
            "offset": "0x48080"
        },
        "uvw::Emitter<uvw::TCPHandle>::publish<uvw::ShutdownEvent>": {
            "offset": "0x49F70"
        },
        "uvw::Emitter<uvw::TCPHandle>::publish<uvw::WriteEvent>": {
            "offset": "0x4A230"
        },
        "uvw::Emitter<uvw::TimerHandle>::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TimerHandle>::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TimerHandle>::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::TimerHandle>::Handler<uvw::TimerEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::TimerHandle>::Handler<uvw::TimerEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::TimerHandle>::Handler<uvw::TimerEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::TimerHandle>::handler<uvw::TimerEvent>": {
            "offset": "0x484A0"
        },
        "uvw::Emitter<uvw::TimerHandle>::on<uvw::TimerEvent>": {
            "offset": "0x497A0"
        },
        "uvw::Emitter<uvw::TimerHandle>::publish<uvw::ErrorEvent>": {
            "offset": "0x49A90"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::SendEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::SendEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::SendEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::UDPDataEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::UDPDataEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::UDPHandle>::Handler<uvw::UDPDataEvent>::publish": {
            "offset": "0x59580"
        },
        "uvw::Emitter<uvw::UDPHandle>::handler<uvw::UDPDataEvent>": {
            "offset": "0x48600"
        },
        "uvw::Emitter<uvw::UDPHandle>::publish<uvw::ErrorEvent>": {
            "offset": "0x49C30"
        },
        "uvw::Emitter<uvw::UDPHandle>::publish<uvw::SendEvent>": {
            "offset": "0x49DD0"
        },
        "uvw::Emitter<uvw::UDPHandle>::publish<uvw::UDPDataEvent>": {
            "offset": "0x4A110"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::Handler<uvw::ConnectEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::Handler<uvw::ConnectEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::Handler<uvw::ConnectEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::handler<uvw::ConnectEvent>": {
            "offset": "0x47580"
        },
        "uvw::Emitter<uvw::details::ConnectReq>::handler<uvw::ErrorEvent>": {
            "offset": "0x47B00"
        },
        "uvw::Emitter<uvw::details::SendReq>::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::SendReq>::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::SendReq>::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::details::SendReq>::Handler<uvw::SendEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::SendReq>::Handler<uvw::SendEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::SendReq>::Handler<uvw::SendEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::details::SendReq>::handler<uvw::ErrorEvent>": {
            "offset": "0x47F20"
        },
        "uvw::Emitter<uvw::details::SendReq>::handler<uvw::SendEvent>": {
            "offset": "0x481E0"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::Handler<uvw::ShutdownEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::Handler<uvw::ShutdownEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::Handler<uvw::ShutdownEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::handler<uvw::ErrorEvent>": {
            "offset": "0x47C60"
        },
        "uvw::Emitter<uvw::details::ShutdownReq>::handler<uvw::ShutdownEvent>": {
            "offset": "0x48340"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::Handler<uvw::ErrorEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::Handler<uvw::ErrorEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::Handler<uvw::ErrorEvent>::publish": {
            "offset": "0x59380"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::Handler<uvw::WriteEvent>::clear": {
            "offset": "0x58330"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::Handler<uvw::WriteEvent>::empty": {
            "offset": "0x58A60"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::Handler<uvw::WriteEvent>::publish": {
            "offset": "0x58F70"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::handler<uvw::ErrorEvent>": {
            "offset": "0x47DC0"
        },
        "uvw::Emitter<uvw::details::WriteReq<std::default_delete<char [0]> > >::handler<uvw::WriteEvent>": {
            "offset": "0x48760"
        },
        "uvw::Handle<uvw::TCPHandle,uv_tcp_s>::allocCallback": {
            "offset": "0x580F0"
        },
        "uvw::Handle<uvw::TCPHandle,uv_tcp_s>::closeCallback": {
            "offset": "0x583E0"
        },
        "uvw::Handle<uvw::UDPHandle,uv_udp_s>::allocCallback": {
            "offset": "0x580F0"
        },
        "uvw::Loop::create_resource<uvw::TCPHandle>": {
            "offset": "0x46770"
        },
        "uvw::Loop::create_resource<uvw::TimerHandle>": {
            "offset": "0x469C0"
        },
        "uvw::Loop::create_resource<uvw::UDPHandle>": {
            "offset": "0x46C40"
        },
        "uvw::Request<uvw::details::ConnectReq,uv_connect_s>::defaultCallback<uvw::ConnectEvent>": {
            "offset": "0x46E60"
        },
        "uvw::Request<uvw::details::SendReq,uv_udp_send_s>::defaultCallback<uvw::SendEvent>": {
            "offset": "0x46FD0"
        },
        "uvw::Request<uvw::details::ShutdownReq,uv_shutdown_s>::defaultCallback<uvw::ShutdownEvent>": {
            "offset": "0x47140"
        },
        "uvw::Request<uvw::details::WriteReq<std::default_delete<char [0]> >,uv_write_s>::defaultCallback<uvw::WriteEvent>": {
            "offset": "0x472B0"
        },
        "uvw::Resource<uvw::TCPHandle,uv_tcp_s>::leak": {
            "offset": "0x58C20"
        },
        "uvw::Resource<uvw::TCPHandle,uv_tcp_s>::~Resource<uvw::TCPHandle,uv_tcp_s>": {
            "offset": "0x4BAD0"
        },
        "uvw::Resource<uvw::TimerHandle,uv_timer_s>::~Resource<uvw::TimerHandle,uv_timer_s>": {
            "offset": "0x4BBE0"
        },
        "uvw::Resource<uvw::UDPHandle,uv_udp_s>::leak": {
            "offset": "0x58CD0"
        },
        "uvw::Resource<uvw::UDPHandle,uv_udp_s>::~Resource<uvw::UDPHandle,uv_udp_s>": {
            "offset": "0x4BCF0"
        },
        "uvw::Resource<uvw::details::ConnectReq,uv_connect_s>::leak": {
            "offset": "0x58B70"
        },
        "uvw::Resource<uvw::details::ConnectReq,uv_connect_s>::~Resource<uvw::details::ConnectReq,uv_connect_s>": {
            "offset": "0x4B690"
        },
        "uvw::Resource<uvw::details::SendReq,uv_udp_send_s>::~Resource<uvw::details::SendReq,uv_udp_send_s>": {
            "offset": "0x4B9C0"
        },
        "uvw::Resource<uvw::details::ShutdownReq,uv_shutdown_s>::~Resource<uvw::details::ShutdownReq,uv_shutdown_s>": {
            "offset": "0x4B7A0"
        },
        "uvw::Resource<uvw::details::WriteReq<std::default_delete<char [0]> >,uv_write_s>::~Resource<uvw::details::WriteReq<std::default_delete<char [0]> >,uv_write_s>": {
            "offset": "0x4B8B0"
        },
        "uvw::StreamHandle<uvw::TCPHandle,uv_tcp_s>::readCallback": {
            "offset": "0x597A0"
        },
        "uvw::StreamHandle<uvw::TCPHandle,uv_tcp_s>::shutdown": {
            "offset": "0x5A380"
        },
        "uvw::StreamHandle<uvw::TCPHandle,uv_tcp_s>::write<std::default_delete<char [0]> >": {
            "offset": "0x4A7A0"
        },
        "uvw::TCPHandle::connect": {
            "offset": "0x58510"
        },
        "uvw::TimerHandle::startCallback": {
            "offset": "0x5A8C0"
        },
        "uvw::TimerHandle::stop": {
            "offset": "0x5A900"
        },
        "uvw::UDPDataEvent::UDPDataEvent": {
            "offset": "0x4B2D0"
        },
        "uvw::UDPDataEvent::~UDPDataEvent": {
            "offset": "0x4CB90"
        },
        "uvw::UDPHandle::recvCallback<uvw::IPv4>": {
            "offset": "0x4A3D0"
        },
        "uvw::UDPHandle::send": {
            "offset": "0x59A50"
        },
        "uvw::details::address<uvw::IPv4>": {
            "offset": "0x46570"
        },
        "va<int>": {
            "offset": "0x397A0"
        },
        "va_impl<char,fmt::v8::basic_format_args<fmt::v8::basic_printf_context<fmt::v8::appender,char> > >": {
            "offset": "0x650A0"
        },
        "vorbis_bitrate_managed": {
            "offset": "0x1A8BD0"
        },
        "vorbis_book_decodev_add": {
            "offset": "0x1A8BF0"
        },
        "vorbis_book_decodev_set": {
            "offset": "0x1A90C0"
        },
        "vorbis_book_decodevs_add": {
            "offset": "0x1A9370"
        },
        "vorbis_book_decodevv_add": {
            "offset": "0x1A96F0"
        },
        "vorbis_lsp_to_curve": {
            "offset": "0x1A9940"
        },
        "vsnprintf": {
            "offset": "0x8BF40"
        },
        "vva": {
            "offset": "0x66FE0"
        },
        "warped_true2monic_coefs": {
            "offset": "0x127730"
        },
        "webrtc::Agc::Agc": {
            "offset": "0x15AFE0"
        },
        "webrtc::Agc::AnalyzePreproc": {
            "offset": "0x15B200"
        },
        "webrtc::Agc::GetRmsErrorDb": {
            "offset": "0x15B290"
        },
        "webrtc::Agc::Process": {
            "offset": "0x15B320"
        },
        "webrtc::Agc::Reset": {
            "offset": "0x15B3A0"
        },
        "webrtc::Agc::set_target_level_dbfs": {
            "offset": "0x15B3B0"
        },
        "webrtc::Agc::target_level_dbfs": {
            "offset": "0x13A800"
        },
        "webrtc::Agc::voice_probability": {
            "offset": "0x15B3F0"
        },
        "webrtc::AgcManagerDirect::AgcManagerDirect": {
            "offset": "0x148BB0"
        },
        "webrtc::AgcManagerDirect::AnalyzePreProcess": {
            "offset": "0x148CD0"
        },
        "webrtc::AgcManagerDirect::CheckVolumeAndReset": {
            "offset": "0x148E00"
        },
        "webrtc::AgcManagerDirect::Initialize": {
            "offset": "0x149030"
        },
        "webrtc::AgcManagerDirect::Process": {
            "offset": "0x149370"
        },
        "webrtc::AgcManagerDirect::SetCaptureMuted": {
            "offset": "0x149590"
        },
        "webrtc::AgcManagerDirect::SetLevel": {
            "offset": "0x1495B0"
        },
        "webrtc::AgcManagerDirect::SetMaxLevel": {
            "offset": "0x149880"
        },
        "webrtc::AgcManagerDirect::UpdateGain": {
            "offset": "0x149970"
        },
        "webrtc::AgcManagerDirect::voice_probability": {
            "offset": "0x149B50"
        },
        "webrtc::AgcManagerDirect::~AgcManagerDirect": {
            "offset": "0x148C80"
        },
        "webrtc::AlignedArray<float>::~AlignedArray<float>": {
            "offset": "0x1398F0"
        },
        "webrtc::AlignedArray<std::complex<float> >::AlignedArray<std::complex<float> >": {
            "offset": "0x15C920"
        },
        "webrtc::AlignedArray<std::complex<float> >::~AlignedArray<std::complex<float> >": {
            "offset": "0x1398F0"
        },
        "webrtc::AlignedFree": {
            "offset": "0x14B9D0"
        },
        "webrtc::AlignedMalloc": {
            "offset": "0x14B9F0"
        },
        "webrtc::AudioBuffer::AudioBuffer": {
            "offset": "0x149EC0"
        },
        "webrtc::AudioBuffer::CopyFrom": {
            "offset": "0x14A8D0"
        },
        "webrtc::AudioBuffer::CopyLowPassToReference": {
            "offset": "0x14AB20"
        },
        "webrtc::AudioBuffer::CopyTo": {
            "offset": "0x14AC00"
        },
        "webrtc::AudioBuffer::DeinterleaveFrom": {
            "offset": "0x14AD00"
        },
        "webrtc::AudioBuffer::InterleaveTo": {
            "offset": "0x14AEE0"
        },
        "webrtc::AudioBuffer::MergeFrequencyBands": {
            "offset": "0x14B0E0"
        },
        "webrtc::AudioBuffer::SplitIntoFrequencyBands": {
            "offset": "0x14B100"
        },
        "webrtc::AudioBuffer::channels": {
            "offset": "0x14B120"
        },
        "webrtc::AudioBuffer::channels_const": {
            "offset": "0x14B140"
        },
        "webrtc::AudioBuffer::channels_f": {
            "offset": "0x14B160"
        },
        "webrtc::AudioBuffer::keyboard_data": {
            "offset": "0x14B180"
        },
        "webrtc::AudioBuffer::low_pass_reference": {
            "offset": "0x14B190"
        },
        "webrtc::AudioBuffer::mixed_low_pass_data": {
            "offset": "0x14B1B0"
        },
        "webrtc::AudioBuffer::num_bands": {
            "offset": "0x44270"
        },
        "webrtc::AudioBuffer::num_channels": {
            "offset": "0x14B330"
        },
        "webrtc::AudioBuffer::num_frames": {
            "offset": "0x14B340"
        },
        "webrtc::AudioBuffer::num_frames_per_band": {
            "offset": "0x76190"
        },
        "webrtc::AudioBuffer::num_keyboard_frames": {
            "offset": "0x6EAB0"
        },
        "webrtc::AudioBuffer::set_activity": {
            "offset": "0x14B480"
        },
        "webrtc::AudioBuffer::set_num_channels": {
            "offset": "0x14B490"
        },
        "webrtc::AudioBuffer::split_bands": {
            "offset": "0x14B4A0"
        },
        "webrtc::AudioBuffer::split_bands_const": {
            "offset": "0x14B4E0"
        },
        "webrtc::AudioBuffer::split_bands_const_f": {
            "offset": "0x14B520"
        },
        "webrtc::AudioBuffer::split_bands_f": {
            "offset": "0x14B560"
        },
        "webrtc::AudioBuffer::split_channels_f": {
            "offset": "0x14B5A0"
        },
        "webrtc::AudioBuffer::split_data_f": {
            "offset": "0x14B600"
        },
        "webrtc::AudioConverter::AudioConverter": {
            "offset": "0x13D6C0"
        },
        "webrtc::AudioConverter::CheckSizes": {
            "offset": "0x13DF00"
        },
        "webrtc::AudioConverter::Create": {
            "offset": "0x13E380"
        },
        "webrtc::AudioConverter::~AudioConverter": {
            "offset": "0x13DE10"
        },
        "webrtc::AudioFrame::~AudioFrame": {
            "offset": "0x2E860"
        },
        "webrtc::AudioProcessing::Create": {
            "offset": "0x13A770"
        },
        "webrtc::AudioProcessing::StartDebugRecordingForPlatformFile": {
            "offset": "0x13C430"
        },
        "webrtc::AudioProcessing::~AudioProcessing": {
            "offset": "0x139A20"
        },
        "webrtc::AudioProcessingImpl::AnalyzeReverseStream": {
            "offset": "0x13A6A0"
        },
        "webrtc::AudioProcessingImpl::AudioProcessingImpl": {
            "offset": "0x1391C0"
        },
        "webrtc::AudioProcessingImpl::Initialize": {
            "offset": "0x13AA90"
        },
        "webrtc::AudioProcessingImpl::InitializeLocked": {
            "offset": "0x13AD50"
        },
        "webrtc::AudioProcessingImpl::InitializeTransient": {
            "offset": "0x13B170"
        },
        "webrtc::AudioProcessingImpl::MaybeUpdateHistograms": {
            "offset": "0x13B230"
        },
        "webrtc::AudioProcessingImpl::ProcessReverseStream": {
            "offset": "0x13B780"
        },
        "webrtc::AudioProcessingImpl::ProcessReverseStreamLocked": {
            "offset": "0x13B890"
        },
        "webrtc::AudioProcessingImpl::ProcessStream": {
            "offset": "0x13BE00"
        },
        "webrtc::AudioProcessingImpl::ProcessStreamLocked": {
            "offset": "0x13BF90"
        },
        "webrtc::AudioProcessingImpl::SetExtraOptions": {
            "offset": "0x13C320"
        },
        "webrtc::AudioProcessingImpl::StartDebugRecording": {
            "offset": "0x13C3E0"
        },
        "webrtc::AudioProcessingImpl::StartDebugRecordingForPlatformFile": {
            "offset": "0x13C440"
        },
        "webrtc::AudioProcessingImpl::StopDebugRecording": {
            "offset": "0x13C470"
        },
        "webrtc::AudioProcessingImpl::UpdateHistogramsOnCallEnd": {
            "offset": "0x13C4B0"
        },
        "webrtc::AudioProcessingImpl::delay_offset_ms": {
            "offset": "0x13C900"
        },
        "webrtc::AudioProcessingImpl::echo_cancellation": {
            "offset": "0x6EAB0"
        },
        "webrtc::AudioProcessingImpl::echo_control_mobile": {
            "offset": "0x6CD70"
        },
        "webrtc::AudioProcessingImpl::gain_control": {
            "offset": "0x13C910"
        },
        "webrtc::AudioProcessingImpl::high_pass_filter": {
            "offset": "0xE20B0"
        },
        "webrtc::AudioProcessingImpl::is_data_processed": {
            "offset": "0x13C930"
        },
        "webrtc::AudioProcessingImpl::level_estimator": {
            "offset": "0x13C9F0"
        },
        "webrtc::AudioProcessingImpl::noise_suppression": {
            "offset": "0x13CA00"
        },
        "webrtc::AudioProcessingImpl::num_input_channels": {
            "offset": "0x13CA10"
        },
        "webrtc::AudioProcessingImpl::num_output_channels": {
            "offset": "0x13CA20"
        },
        "webrtc::AudioProcessingImpl::num_reverse_channels": {
            "offset": "0x13CA30"
        },
        "webrtc::AudioProcessingImpl::proc_sample_rate_hz": {
            "offset": "0x13CA40"
        },
        "webrtc::AudioProcessingImpl::proc_split_sample_rate_hz": {
            "offset": "0x13CA50"
        },
        "webrtc::AudioProcessingImpl::set_delay_offset_ms": {
            "offset": "0x13CAC0"
        },
        "webrtc::AudioProcessingImpl::set_output_will_be_muted": {
            "offset": "0x13CB10"
        },
        "webrtc::AudioProcessingImpl::set_stream_delay_ms": {
            "offset": "0x13CB90"
        },
        "webrtc::AudioProcessingImpl::set_stream_key_pressed": {
            "offset": "0x13CBE0"
        },
        "webrtc::AudioProcessingImpl::stream_delay_ms": {
            "offset": "0x13CBF0"
        },
        "webrtc::AudioProcessingImpl::voice_detection": {
            "offset": "0x44270"
        },
        "webrtc::AudioProcessingImpl::was_stream_delay_set": {
            "offset": "0x13CC00"
        },
        "webrtc::AudioProcessingImpl::~AudioProcessingImpl": {
            "offset": "0x139A30"
        },
        "webrtc::AudioRingBuffer::AudioRingBuffer": {
            "offset": "0x14B620"
        },
        "webrtc::AudioRingBuffer::MoveReadPositionBackward": {
            "offset": "0x14B760"
        },
        "webrtc::AudioRingBuffer::Read": {
            "offset": "0x14B820"
        },
        "webrtc::AudioRingBuffer::Write": {
            "offset": "0x14B900"
        },
        "webrtc::AudioRingBuffer::~AudioRingBuffer": {
            "offset": "0x14B6D0"
        },
        "webrtc::AzimuthToPoint": {
            "offset": "0x15D550"
        },
        "webrtc::Beamformer<float>::IsInBeam": {
            "offset": "0xF840"
        },
        "webrtc::Beamformer<float>::~Beamformer<float>": {
            "offset": "0x14C9F0"
        },
        "webrtc::Blocker::Blocker": {
            "offset": "0x16DEB0"
        },
        "webrtc::Blocker::ProcessChunk": {
            "offset": "0x16E4B0"
        },
        "webrtc::Blocker::~Blocker": {
            "offset": "0x15CF20"
        },
        "webrtc::ChannelBuffer<float>::ChannelBuffer<float>": {
            "offset": "0x149D50"
        },
        "webrtc::ChannelBuffer<float>::~ChannelBuffer<float>": {
            "offset": "0x1532A0"
        },
        "webrtc::ChannelBuffer<short>::ChannelBuffer<short>": {
            "offset": "0x149BE0"
        },
        "webrtc::ChannelBuffer<short>::~ChannelBuffer<short>": {
            "offset": "0x1532A0"
        },
        "webrtc::ComplexMatrix<float>::ComplexMatrix<float>": {
            "offset": "0x14C620"
        },
        "webrtc::ComplexMatrix<float>::~ComplexMatrix<float>": {
            "offset": "0x14CA00"
        },
        "webrtc::CompositionConverter::CompositionConverter": {
            "offset": "0x13D790"
        },
        "webrtc::CompositionConverter::Convert": {
            "offset": "0x13DFE0"
        },
        "webrtc::Config::Get<webrtc::Beamforming>": {
            "offset": "0x138DD0"
        },
        "webrtc::Config::Get<webrtc::ExperimentalAgc>": {
            "offset": "0x138ED0"
        },
        "webrtc::Config::Get<webrtc::ExperimentalNs>": {
            "offset": "0x138FB0"
        },
        "webrtc::Config::~Config": {
            "offset": "0x2E870"
        },
        "webrtc::CopyConverter::Convert": {
            "offset": "0x13E0E0"
        },
        "webrtc::CovarianceMatrixGenerator::AngledCovarianceMatrix": {
            "offset": "0x15E300"
        },
        "webrtc::CovarianceMatrixGenerator::PhaseAlignmentMasks": {
            "offset": "0x15ED10"
        },
        "webrtc::CovarianceMatrixGenerator::UniformCovarianceMatrix": {
            "offset": "0x15F000"
        },
        "webrtc::CriticalSectionScoped::~CriticalSectionScoped": {
            "offset": "0x139C70"
        },
        "webrtc::CriticalSectionWindows::CriticalSectionWindows": {
            "offset": "0x166980"
        },
        "webrtc::CriticalSectionWindows::Enter": {
            "offset": "0x166A30"
        },
        "webrtc::CriticalSectionWindows::Leave": {
            "offset": "0x166A40"
        },
        "webrtc::CriticalSectionWrapper::CreateCriticalSection": {
            "offset": "0x155FC0"
        },
        "webrtc::DotProduct": {
            "offset": "0x15D590"
        },
        "webrtc::DownmixConverter::Convert": {
            "offset": "0x13E160"
        },
        "webrtc::DownmixInterleavedToMono<short>": {
            "offset": "0x15B400"
        },
        "webrtc::EchoCancellation::~EchoCancellation": {
            "offset": "0x150500"
        },
        "webrtc::EchoCancellationImpl::ConfigureHandle": {
            "offset": "0x1505B0"
        },
        "webrtc::EchoCancellationImpl::CreateHandle": {
            "offset": "0x1506A0"
        },
        "webrtc::EchoCancellationImpl::DestroyHandle": {
            "offset": "0x1506B0"
        },
        "webrtc::EchoCancellationImpl::EchoCancellationImpl": {
            "offset": "0x150460"
        },
        "webrtc::EchoCancellationImpl::Enable": {
            "offset": "0x1506C0"
        },
        "webrtc::EchoCancellationImpl::GetDelayMetrics": {
            "offset": "0x150770"
        },
        "webrtc::EchoCancellationImpl::GetHandleError": {
            "offset": "0x150840"
        },
        "webrtc::EchoCancellationImpl::GetMetrics": {
            "offset": "0x150890"
        },
        "webrtc::EchoCancellationImpl::Initialize": {
            "offset": "0x150A00"
        },
        "webrtc::EchoCancellationImpl::InitializeHandle": {
            "offset": "0x150A40"
        },
        "webrtc::EchoCancellationImpl::ProcessCaptureAudio": {
            "offset": "0x150A70"
        },
        "webrtc::EchoCancellationImpl::ProcessRenderAudio": {
            "offset": "0x150C90"
        },
        "webrtc::EchoCancellationImpl::SetExtraOptions": {
            "offset": "0x150D70"
        },
        "webrtc::EchoCancellationImpl::aec_core": {
            "offset": "0x150F50"
        },
        "webrtc::EchoCancellationImpl::are_metrics_enabled": {
            "offset": "0x150FC0"
        },
        "webrtc::EchoCancellationImpl::enable_delay_logging": {
            "offset": "0x150FD0"
        },
        "webrtc::EchoCancellationImpl::enable_drift_compensation": {
            "offset": "0x151030"
        },
        "webrtc::EchoCancellationImpl::enable_metrics": {
            "offset": "0x151090"
        },
        "webrtc::EchoCancellationImpl::is_delay_logging_enabled": {
            "offset": "0x1510F0"
        },
        "webrtc::EchoCancellationImpl::is_drift_compensation_enabled": {
            "offset": "0x151100"
        },
        "webrtc::EchoCancellationImpl::is_enabled": {
            "offset": "0x151110"
        },
        "webrtc::EchoCancellationImpl::num_handles_required": {
            "offset": "0x151120"
        },
        "webrtc::EchoCancellationImpl::set_stream_drift_samples": {
            "offset": "0x151160"
        },
        "webrtc::EchoCancellationImpl::set_suppression_level": {
            "offset": "0x151170"
        },
        "webrtc::EchoCancellationImpl::stream_drift_samples": {
            "offset": "0x1511F0"
        },
        "webrtc::EchoCancellationImpl::stream_has_echo": {
            "offset": "0x151200"
        },
        "webrtc::EchoCancellationImpl::suppression_level": {
            "offset": "0x151210"
        },
        "webrtc::EchoControlMobile::~EchoControlMobile": {
            "offset": "0x1512B0"
        },
        "webrtc::EchoControlMobileImpl::ConfigureHandle": {
            "offset": "0x151380"
        },
        "webrtc::EchoControlMobileImpl::CreateHandle": {
            "offset": "0x1513F0"
        },
        "webrtc::EchoControlMobileImpl::DestroyHandle": {
            "offset": "0x151400"
        },
        "webrtc::EchoControlMobileImpl::EchoControlMobileImpl": {
            "offset": "0x151220"
        },
        "webrtc::EchoControlMobileImpl::Enable": {
            "offset": "0x151410"
        },
        "webrtc::EchoControlMobileImpl::GetEchoPath": {
            "offset": "0x1514A0"
        },
        "webrtc::EchoControlMobileImpl::GetHandleError": {
            "offset": "0x151560"
        },
        "webrtc::EchoControlMobileImpl::Initialize": {
            "offset": "0x1515C0"
        },
        "webrtc::EchoControlMobileImpl::InitializeHandle": {
            "offset": "0x1516A0"
        },
        "webrtc::EchoControlMobileImpl::ProcessCaptureAudio": {
            "offset": "0x151710"
        },
        "webrtc::EchoControlMobileImpl::ProcessRenderAudio": {
            "offset": "0x151880"
        },
        "webrtc::EchoControlMobileImpl::SetEchoPath": {
            "offset": "0x151960"
        },
        "webrtc::EchoControlMobileImpl::enable_comfort_noise": {
            "offset": "0x151A10"
        },
        "webrtc::EchoControlMobileImpl::is_comfort_noise_enabled": {
            "offset": "0x151A70"
        },
        "webrtc::EchoControlMobileImpl::is_enabled": {
            "offset": "0x151110"
        },
        "webrtc::EchoControlMobileImpl::num_handles_required": {
            "offset": "0x151120"
        },
        "webrtc::EchoControlMobileImpl::routing_mode": {
            "offset": "0x151A80"
        },
        "webrtc::EchoControlMobileImpl::set_routing_mode": {
            "offset": "0x151A90"
        },
        "webrtc::EvaluateGmm": {
            "offset": "0x17FF50"
        },
        "webrtc::FIRFilter::Create": {
            "offset": "0x1872E0"
        },
        "webrtc::FIRFilter::~FIRFilter": {
            "offset": "0x187240"
        },
        "webrtc::FIRFilterC::Filter": {
            "offset": "0x187440"
        },
        "webrtc::FIRFilterSSE2::FIRFilterSSE2": {
            "offset": "0x187590"
        },
        "webrtc::FIRFilterSSE2::Filter": {
            "offset": "0x187780"
        },
        "webrtc::FilterArPast<float>": {
            "offset": "0x178740"
        },
        "webrtc::FilterArPast<short>": {
            "offset": "0x178650"
        },
        "webrtc::FloatS16ToFloat": {
            "offset": "0x15B550"
        },
        "webrtc::FloatS16ToS16": {
            "offset": "0x15B700"
        },
        "webrtc::FloatToFloatS16": {
            "offset": "0x15B890"
        },
        "webrtc::GainControl::~GainControl": {
            "offset": "0x139C90"
        },
        "webrtc::GainControlForNewAgc::Enable": {
            "offset": "0x13A7F0"
        },
        "webrtc::GainControlForNewAgc::GetMicVolume": {
            "offset": "0x13A800"
        },
        "webrtc::GainControlForNewAgc::SetMicVolume": {
            "offset": "0x13C3D0"
        },
        "webrtc::GainControlForNewAgc::analog_level_maximum": {
            "offset": "0x3CEE0"
        },
        "webrtc::GainControlForNewAgc::analog_level_minimum": {
            "offset": "0x3C130"
        },
        "webrtc::GainControlForNewAgc::compression_gain_db": {
            "offset": "0x13C8F0"
        },
        "webrtc::GainControlForNewAgc::enable_limiter": {
            "offset": "0xF770"
        },
        "webrtc::GainControlForNewAgc::is_enabled": {
            "offset": "0x13C9E0"
        },
        "webrtc::GainControlForNewAgc::is_limiter_enabled": {
            "offset": "0x41860"
        },
        "webrtc::GainControlForNewAgc::mode": {
            "offset": "0xF770"
        },
        "webrtc::GainControlForNewAgc::set_analog_level_limits": {
            "offset": "0xF770"
        },
        "webrtc::GainControlForNewAgc::set_compression_gain_db": {
            "offset": "0xF770"
        },
        "webrtc::GainControlForNewAgc::set_mode": {
            "offset": "0xF770"
        },
        "webrtc::GainControlForNewAgc::set_stream_analog_level": {
            "offset": "0x13CB80"
        },
        "webrtc::GainControlForNewAgc::set_target_level_dbfs": {
            "offset": "0xF770"
        },
        "webrtc::GainControlForNewAgc::stream_analog_level": {
            "offset": "0xF4610"
        },
        "webrtc::GainControlForNewAgc::stream_is_saturated": {
            "offset": "0x41530"
        },
        "webrtc::GainControlForNewAgc::target_level_dbfs": {
            "offset": "0x41880"
        },
        "webrtc::GainControlImpl::AnalyzeCaptureAudio": {
            "offset": "0x151D50"
        },
        "webrtc::GainControlImpl::ConfigureHandle": {
            "offset": "0x151EF0"
        },
        "webrtc::GainControlImpl::CreateHandle": {
            "offset": "0x151F40"
        },
        "webrtc::GainControlImpl::DestroyHandle": {
            "offset": "0x151F50"
        },
        "webrtc::GainControlImpl::Enable": {
            "offset": "0x151F60"
        },
        "webrtc::GainControlImpl::GainControlImpl": {
            "offset": "0x151BD0"
        },
        "webrtc::GainControlImpl::GetHandleError": {
            "offset": "0x13C430"
        },
        "webrtc::GainControlImpl::Initialize": {
            "offset": "0x151FC0"
        },
        "webrtc::GainControlImpl::InitializeHandle": {
            "offset": "0x152020"
        },
        "webrtc::GainControlImpl::ProcessCaptureAudio": {
            "offset": "0x152090"
        },
        "webrtc::GainControlImpl::ProcessRenderAudio": {
            "offset": "0x152310"
        },
        "webrtc::GainControlImpl::analog_level_maximum": {
            "offset": "0x1511F0"
        },
        "webrtc::GainControlImpl::analog_level_minimum": {
            "offset": "0x151210"
        },
        "webrtc::GainControlImpl::compression_gain_db": {
            "offset": "0x1525D0"
        },
        "webrtc::GainControlImpl::enable_limiter": {
            "offset": "0x1525E0"
        },
        "webrtc::GainControlImpl::is_enabled": {
            "offset": "0x151110"
        },
        "webrtc::GainControlImpl::is_limiter_enabled": {
            "offset": "0x152640"
        },
        "webrtc::GainControlImpl::mode": {
            "offset": "0x151A80"
        },
        "webrtc::GainControlImpl::num_handles_required": {
            "offset": "0x152650"
        },
        "webrtc::GainControlImpl::set_analog_level_limits": {
            "offset": "0x152660"
        },
        "webrtc::GainControlImpl::set_compression_gain_db": {
            "offset": "0x1526F0"
        },
        "webrtc::GainControlImpl::set_mode": {
            "offset": "0x152760"
        },
        "webrtc::GainControlImpl::set_stream_analog_level": {
            "offset": "0x1527E0"
        },
        "webrtc::GainControlImpl::set_target_level_dbfs": {
            "offset": "0x152850"
        },
        "webrtc::GainControlImpl::stream_analog_level": {
            "offset": "0x1528C0"
        },
        "webrtc::GainControlImpl::stream_is_saturated": {
            "offset": "0x1528D0"
        },
        "webrtc::GainControlImpl::target_level_dbfs": {
            "offset": "0x1528E0"
        },
        "webrtc::GetArrayNormalIfExists": {
            "offset": "0x15D5C0"
        },
        "webrtc::GetMinimumSpacing": {
            "offset": "0x15D770"
        },
        "webrtc::GetNormalIfPlanar": {
            "offset": "0x15D960"
        },
        "webrtc::HighPassFilter::~HighPassFilter": {
            "offset": "0x152970"
        },
        "webrtc::HighPassFilterImpl::ConfigureHandle": {
            "offset": "0xF770"
        },
        "webrtc::HighPassFilterImpl::CreateHandle": {
            "offset": "0x152A20"
        },
        "webrtc::HighPassFilterImpl::DestroyHandle": {
            "offset": "0x152A30"
        },
        "webrtc::HighPassFilterImpl::Enable": {
            "offset": "0x151F60"
        },
        "webrtc::HighPassFilterImpl::GetHandleError": {
            "offset": "0x13C430"
        },
        "webrtc::HighPassFilterImpl::HighPassFilterImpl": {
            "offset": "0x1528F0"
        },
        "webrtc::HighPassFilterImpl::InitializeHandle": {
            "offset": "0x152A40"
        },
        "webrtc::HighPassFilterImpl::ProcessCaptureAudio": {
            "offset": "0x152AA0"
        },
        "webrtc::HighPassFilterImpl::is_enabled": {
            "offset": "0x151110"
        },
        "webrtc::HighPassFilterImpl::num_handles_required": {
            "offset": "0x152650"
        },
        "webrtc::Histogram::AudioContent": {
            "offset": "0x16C4A0"
        },
        "webrtc::Histogram::Create": {
            "offset": "0x16C590"
        },
        "webrtc::Histogram::CurrentRms": {
            "offset": "0x16C610"
        },
        "webrtc::Histogram::Reset": {
            "offset": "0x16C7D0"
        },
        "webrtc::Histogram::Update": {
            "offset": "0x16C810"
        },
        "webrtc::Histogram::~Histogram": {
            "offset": "0x16C460"
        },
        "webrtc::IFChannelBuffer::IFChannelBuffer": {
            "offset": "0x15BA90"
        },
        "webrtc::IFChannelBuffer::RefreshF": {
            "offset": "0x15BB00"
        },
        "webrtc::IFChannelBuffer::RefreshI": {
            "offset": "0x15BB80"
        },
        "webrtc::IFChannelBuffer::fbuf": {
            "offset": "0x15BBF0"
        },
        "webrtc::IFChannelBuffer::fbuf_const": {
            "offset": "0x15BC10"
        },
        "webrtc::IFChannelBuffer::ibuf": {
            "offset": "0x15BC30"
        },
        "webrtc::IFChannelBuffer::ibuf_const": {
            "offset": "0x15BC50"
        },
        "webrtc::IntelligibilityEnhancer::AnalyzeCaptureAudio": {
            "offset": "0x153350"
        },
        "webrtc::IntelligibilityEnhancer::AnalyzeClearBlock": {
            "offset": "0x153450"
        },
        "webrtc::IntelligibilityEnhancer::CreateErbBank": {
            "offset": "0x153750"
        },
        "webrtc::IntelligibilityEnhancer::DotProduct": {
            "offset": "0x153DD0"
        },
        "webrtc::IntelligibilityEnhancer::IntelligibilityEnhancer": {
            "offset": "0x152E30"
        },
        "webrtc::IntelligibilityEnhancer::ProcessRenderAudio": {
            "offset": "0x154000"
        },
        "webrtc::IntelligibilityEnhancer::SolveForGainsGivenLambda": {
            "offset": "0x154140"
        },
        "webrtc::IntelligibilityEnhancer::TransformCallback::ProcessAudioBlock": {
            "offset": "0x153EC0"
        },
        "webrtc::IntelligibilityEnhancer::TransformCallback::~TransformCallback": {
            "offset": "0x139C60"
        },
        "webrtc::IntelligibilityEnhancer::active": {
            "offset": "0x1543F0"
        },
        "webrtc::IntelligibilityEnhancer::~IntelligibilityEnhancer": {
            "offset": "0x139CA0"
        },
        "webrtc::LappedTransform::BlockThunk::ProcessBlock": {
            "offset": "0x15D010"
        },
        "webrtc::LappedTransform::BlockThunk::~BlockThunk": {
            "offset": "0x15CF10"
        },
        "webrtc::LappedTransform::Callback::~Callback": {
            "offset": "0x139C60"
        },
        "webrtc::LappedTransform::LappedTransform": {
            "offset": "0x15CA00"
        },
        "webrtc::LappedTransform::ProcessChunk": {
            "offset": "0x15D520"
        },
        "webrtc::LevelEstimator::~LevelEstimator": {
            "offset": "0x154470"
        },
        "webrtc::LevelEstimatorImpl::ConfigureHandle": {
            "offset": "0xF770"
        },
        "webrtc::LevelEstimatorImpl::CreateHandle": {
            "offset": "0x154520"
        },
        "webrtc::LevelEstimatorImpl::DestroyHandle": {
            "offset": "0x154560"
        },
        "webrtc::LevelEstimatorImpl::Enable": {
            "offset": "0x154590"
        },
        "webrtc::LevelEstimatorImpl::GetHandleError": {
            "offset": "0x13C430"
        },
        "webrtc::LevelEstimatorImpl::InitializeHandle": {
            "offset": "0x1545F0"
        },
        "webrtc::LevelEstimatorImpl::LevelEstimatorImpl": {
            "offset": "0x154400"
        },
        "webrtc::LevelEstimatorImpl::ProcessStream": {
            "offset": "0x154610"
        },
        "webrtc::LevelEstimatorImpl::RMS": {
            "offset": "0x1546C0"
        },
        "webrtc::LevelEstimatorImpl::is_enabled": {
            "offset": "0x151110"
        },
        "webrtc::LevelEstimatorImpl::num_handles_required": {
            "offset": "0x154700"
        },
        "webrtc::LogMessage::LogMessage": {
            "offset": "0x156000"
        },
        "webrtc::LogMessage::Loggable": {
            "offset": "0x156360"
        },
        "webrtc::LogMessage::~LogMessage": {
            "offset": "0x156150"
        },
        "webrtc::Matrix<std::complex<float> >::Matrix<std::complex<float> >": {
            "offset": "0x15E150"
        },
        "webrtc::Matrix<std::complex<float> >::Multiply": {
            "offset": "0x15E9F0"
        },
        "webrtc::Matrix<std::complex<float> >::Resize": {
            "offset": "0x14FB80"
        },
        "webrtc::Matrix<std::complex<float> >::~Matrix<std::complex<float> >": {
            "offset": "0x14CA10"
        },
        "webrtc::MovingMoments::CalculateMoments": {
            "offset": "0x175CE0"
        },
        "webrtc::MovingMoments::MovingMoments": {
            "offset": "0x175BB0"
        },
        "webrtc::MovingMoments::~MovingMoments": {
            "offset": "0x175CD0"
        },
        "webrtc::NoiseSuppression::~NoiseSuppression": {
            "offset": "0x154790"
        },
        "webrtc::NoiseSuppressionImpl::AnalyzeCaptureAudio": {
            "offset": "0xF770"
        },
        "webrtc::NoiseSuppressionImpl::ConfigureHandle": {
            "offset": "0x154840"
        },
        "webrtc::NoiseSuppressionImpl::CreateHandle": {
            "offset": "0x1548A0"
        },
        "webrtc::NoiseSuppressionImpl::DestroyHandle": {
            "offset": "0x1548B0"
        },
        "webrtc::NoiseSuppressionImpl::Enable": {
            "offset": "0x151F60"
        },
        "webrtc::NoiseSuppressionImpl::GetHandleError": {
            "offset": "0x13C430"
        },
        "webrtc::NoiseSuppressionImpl::InitializeHandle": {
            "offset": "0x1548C0"
        },
        "webrtc::NoiseSuppressionImpl::NoiseSuppressionImpl": {
            "offset": "0x154710"
        },
        "webrtc::NoiseSuppressionImpl::ProcessCaptureAudio": {
            "offset": "0x1548F0"
        },
        "webrtc::NoiseSuppressionImpl::is_enabled": {
            "offset": "0x151110"
        },
        "webrtc::NoiseSuppressionImpl::level": {
            "offset": "0x151A80"
        },
        "webrtc::NoiseSuppressionImpl::num_handles_required": {
            "offset": "0x152650"
        },
        "webrtc::NoiseSuppressionImpl::set_level": {
            "offset": "0x1549B0"
        },
        "webrtc::NoiseSuppressionImpl::speech_probability": {
            "offset": "0x154A30"
        },
        "webrtc::NonlinearBeamformer::AimAt": {
            "offset": "0x14CD80"
        },
        "webrtc::NonlinearBeamformer::ApplyMaskFrequencySmoothing": {
            "offset": "0x14D020"
        },
        "webrtc::NonlinearBeamformer::InitDelaySumMasks": {
            "offset": "0x14D6E0"
        },
        "webrtc::NonlinearBeamformer::InitDiffuseCovMats": {
            "offset": "0x14DB40"
        },
        "webrtc::NonlinearBeamformer::InitInterfAngles": {
            "offset": "0x14DDF0"
        },
        "webrtc::NonlinearBeamformer::InitInterfCovMats": {
            "offset": "0x14E020"
        },
        "webrtc::NonlinearBeamformer::Initialize": {
            "offset": "0x14E810"
        },
        "webrtc::NonlinearBeamformer::IsInBeam": {
            "offset": "0x14EB30"
        },
        "webrtc::NonlinearBeamformer::NonlinearBeamformer": {
            "offset": "0x14C670"
        },
        "webrtc::NonlinearBeamformer::ProcessAudioBlock": {
            "offset": "0x14F010"
        },
        "webrtc::NonlinearBeamformer::ProcessChunk": {
            "offset": "0x14FA90"
        },
        "webrtc::NonlinearBeamformer::is_target_present": {
            "offset": "0x14FE40"
        },
        "webrtc::PitchBasedVad::PitchBasedVad": {
            "offset": "0x16BA80"
        },
        "webrtc::PitchBasedVad::VoicingProbability": {
            "offset": "0x16BB40"
        },
        "webrtc::PitchBasedVad::~PitchBasedVad": {
            "offset": "0x16BB10"
        },
        "webrtc::PoleZeroFilter::Create": {
            "offset": "0x1787F0"
        },
        "webrtc::PoleZeroFilter::Filter": {
            "offset": "0x1789B0"
        },
        "webrtc::ProcessingComponent::Configure": {
            "offset": "0x1501D0"
        },
        "webrtc::ProcessingComponent::Destroy": {
            "offset": "0x150250"
        },
        "webrtc::ProcessingComponent::EnableComponent": {
            "offset": "0x1502B0"
        },
        "webrtc::ProcessingComponent::Initialize": {
            "offset": "0x1502F0"
        },
        "webrtc::ProcessingComponent::ProcessingComponent": {
            "offset": "0x1500A0"
        },
        "webrtc::ProcessingComponent::SetExtraOptions": {
            "offset": "0xAD90"
        },
        "webrtc::ProcessingComponent::handle": {
            "offset": "0x150430"
        },
        "webrtc::ProcessingComponent::is_component_enabled": {
            "offset": "0x150440"
        },
        "webrtc::ProcessingComponent::num_handles": {
            "offset": "0x150450"
        },
        "webrtc::ProcessingComponent::~ProcessingComponent": {
            "offset": "0x1500D0"
        },
        "webrtc::PushSincResampler::PushSincResampler": {
            "offset": "0x1563F0"
        },
        "webrtc::PushSincResampler::Resample": {
            "offset": "0x156580"
        },
        "webrtc::PushSincResampler::Run": {
            "offset": "0x1566B0"
        },
        "webrtc::RMSLevel::Process": {
            "offset": "0x163FA0"
        },
        "webrtc::RMSLevel::RMS": {
            "offset": "0x164060"
        },
        "webrtc::RMSLevel::RMSLevel": {
            "offset": "0x163F90"
        },
        "webrtc::RMSLevel::Reset": {
            "offset": "0x164110"
        },
        "webrtc::RMSLevel::~RMSLevel": {
            "offset": "0xAD90"
        },
        "webrtc::RealFourier::ComplexLength": {
            "offset": "0x162510"
        },
        "webrtc::RealFourier::Create": {
            "offset": "0x162590"
        },
        "webrtc::RealFourier::FftLength": {
            "offset": "0x1625F0"
        },
        "webrtc::RealFourier::FftOrder": {
            "offset": "0x162660"
        },
        "webrtc::RealFourier::~RealFourier": {
            "offset": "0x172A30"
        },
        "webrtc::RealFourierOoura::Forward": {
            "offset": "0x172AD0"
        },
        "webrtc::RealFourierOoura::Inverse": {
            "offset": "0x172B70"
        },
        "webrtc::RealFourierOoura::RealFourierOoura": {
            "offset": "0x172890"
        },
        "webrtc::RealFourierOoura::order": {
            "offset": "0x6EB30"
        },
        "webrtc::RemoveMean": {
            "offset": "0x180150"
        },
        "webrtc::ResampleConverter::Convert": {
            "offset": "0x13E250"
        },
        "webrtc::ResampleConverter::ResampleConverter": {
            "offset": "0x13DB80"
        },
        "webrtc::Resampler::Push": {
            "offset": "0x169430"
        },
        "webrtc::Resampler::Resampler": {
            "offset": "0x169350"
        },
        "webrtc::Resampler::Reset": {
            "offset": "0x16A660"
        },
        "webrtc::Resampler::ResetIfNeeded": {
            "offset": "0x16AE00"
        },
        "webrtc::Resampler::~Resampler": {
            "offset": "0x169390"
        },
        "webrtc::SincResampler::ChunkSize": {
            "offset": "0x167870"
        },
        "webrtc::SincResampler::Convolve_C": {
            "offset": "0x1678D0"
        },
        "webrtc::SincResampler::Convolve_SSE": {
            "offset": "0x177710"
        },
        "webrtc::SincResampler::Resample": {
            "offset": "0x167AF0"
        },
        "webrtc::SincResampler::SincResampler": {
            "offset": "0x167460"
        },
        "webrtc::SincResamplerCallback::~SincResamplerCallback": {
            "offset": "0x1564D0"
        },
        "webrtc::SparseFIRFilter::Filter": {
            "offset": "0x180790"
        },
        "webrtc::SparseFIRFilter::SparseFIRFilter": {
            "offset": "0x1805C0"
        },
        "webrtc::SplittingFilter::Analysis": {
            "offset": "0x15C210"
        },
        "webrtc::SplittingFilter::SplittingFilter": {
            "offset": "0x15BE90"
        },
        "webrtc::SplittingFilter::Synthesis": {
            "offset": "0x15C3D0"
        },
        "webrtc::StandaloneVad::AddAudio": {
            "offset": "0x16BDB0"
        },
        "webrtc::StandaloneVad::Create": {
            "offset": "0x16BE70"
        },
        "webrtc::StandaloneVad::GetActivity": {
            "offset": "0x16BF20"
        },
        "webrtc::StandaloneVad::~StandaloneVad": {
            "offset": "0x16BDA0"
        },
        "webrtc::ThreadWrapper::GetThreadId": {
            "offset": "0x177700"
        },
        "webrtc::ThreeBandFilterBank::Analysis": {
            "offset": "0x16D200"
        },
        "webrtc::ThreeBandFilterBank::Synthesis": {
            "offset": "0x16D530"
        },
        "webrtc::ThreeBandFilterBank::ThreeBandFilterBank": {
            "offset": "0x16CD90"
        },
        "webrtc::ThreeBandFilterBank::~ThreeBandFilterBank": {
            "offset": "0x14A480"
        },
        "webrtc::Trace::Add": {
            "offset": "0x166A50"
        },
        "webrtc::Trace::level_filter": {
            "offset": "0x167450"
        },
        "webrtc::TraceImpl::AddImpl": {
            "offset": "0x166BE0"
        },
        "webrtc::TraceImpl::AddModuleAndId": {
            "offset": "0x166E80"
        },
        "webrtc::TraceImpl::WriteToFile": {
            "offset": "0x167220"
        },
        "webrtc::TransientSuppressor::Initialize": {
            "offset": "0x154B80"
        },
        "webrtc::TransientSuppressor::SoftRestoration": {
            "offset": "0x155100"
        },
        "webrtc::TransientSuppressor::Suppress": {
            "offset": "0x155710"
        },
        "webrtc::TransientSuppressor::TransientSuppressor": {
            "offset": "0x154A40"
        },
        "webrtc::TransientSuppressor::UpdateKeypress": {
            "offset": "0x155A20"
        },
        "webrtc::TransientSuppressor::~TransientSuppressor": {
            "offset": "0x154AC0"
        },
        "webrtc::UpmixConverter::Convert": {
            "offset": "0x13E300"
        },
        "webrtc::VadAudioProc::ExtractFeatures": {
            "offset": "0x16B010"
        },
        "webrtc::VadAudioProc::FindFirstSpectralPeaks": {
            "offset": "0x16B440"
        },
        "webrtc::VadAudioProc::GetLpcPolynomials": {
            "offset": "0x16B780"
        },
        "webrtc::VadAudioProc::VadAudioProc": {
            "offset": "0x16AE50"
        },
        "webrtc::VadAudioProc::~VadAudioProc": {
            "offset": "0x16AFB0"
        },
        "webrtc::VadCircularBuffer::Create": {
            "offset": "0x1802F0"
        },
        "webrtc::VadCircularBuffer::Insert": {
            "offset": "0x180380"
        },
        "webrtc::VadCircularBuffer::Mean": {
            "offset": "0x1803E0"
        },
        "webrtc::VadCircularBuffer::RemoveTransient": {
            "offset": "0x180420"
        },
        "webrtc::VadCircularBuffer::~VadCircularBuffer": {
            "offset": "0x4C1B0"
        },
        "webrtc::VoiceDetection::~VoiceDetection": {
            "offset": "0x155C30"
        },
        "webrtc::VoiceDetectionImpl::ConfigureHandle": {
            "offset": "0x155CE0"
        },
        "webrtc::VoiceDetectionImpl::CreateHandle": {
            "offset": "0x155D40"
        },
        "webrtc::VoiceDetectionImpl::DestroyHandle": {
            "offset": "0x151F50"
        },
        "webrtc::VoiceDetectionImpl::Enable": {
            "offset": "0x151F60"
        },
        "webrtc::VoiceDetectionImpl::GetHandleError": {
            "offset": "0x13C430"
        },
        "webrtc::VoiceDetectionImpl::Initialize": {
            "offset": "0x155D50"
        },
        "webrtc::VoiceDetectionImpl::InitializeHandle": {
            "offset": "0x155DC0"
        },
        "webrtc::VoiceDetectionImpl::ProcessCaptureAudio": {
            "offset": "0x155DD0"
        },
        "webrtc::VoiceDetectionImpl::VoiceDetectionImpl": {
            "offset": "0x155B90"
        },
        "webrtc::VoiceDetectionImpl::frame_size_ms": {
            "offset": "0x1511F0"
        },
        "webrtc::VoiceDetectionImpl::is_enabled": {
            "offset": "0x151110"
        },
        "webrtc::VoiceDetectionImpl::likelihood": {
            "offset": "0x151210"
        },
        "webrtc::VoiceDetectionImpl::num_handles_required": {
            "offset": "0x154700"
        },
        "webrtc::VoiceDetectionImpl::set_frame_size_ms": {
            "offset": "0x155EB0"
        },
        "webrtc::VoiceDetectionImpl::set_likelihood": {
            "offset": "0x155F30"
        },
        "webrtc::VoiceDetectionImpl::set_stream_has_voice": {
            "offset": "0x155FB0"
        },
        "webrtc::VoiceDetectionImpl::stream_has_voice": {
            "offset": "0x151100"
        },
        "webrtc::WPDNode::Update": {
            "offset": "0x184D30"
        },
        "webrtc::WPDNode::WPDNode": {
            "offset": "0x184C50"
        },
        "webrtc::WPDNode::set_data": {
            "offset": "0x184E40"
        },
        "webrtc::WPDNode::~WPDNode": {
            "offset": "0x184CF0"
        },
        "webrtc::WPDTree::NodeAt": {
            "offset": "0x176270"
        },
        "webrtc::WPDTree::Update": {
            "offset": "0x1762B0"
        },
        "webrtc::WPDTree::WPDTree": {
            "offset": "0x175EC0"
        },
        "webrtc::WPDTree::~WPDTree": {
            "offset": "0x176220"
        },
        "webrtc::WindowGenerator::KaiserBesselDerived": {
            "offset": "0x15DC10"
        },
        "webrtc::`anonymous namespace'::ConjugateDotProduct": {
            "offset": "0x14D210"
        },
        "webrtc::`anonymous namespace'::GetCenteredArray": {
            "offset": "0x14D400"
        },
        "webrtc::`anonymous namespace'::Norm": {
            "offset": "0x14EB60"
        },
        "webrtc::`anonymous namespace'::TransposedConjugatedProduct": {
            "offset": "0x14FC60"
        },
        "webrtc::intelligibility::GainApplier::Apply": {
            "offset": "0x162EE0"
        },
        "webrtc::intelligibility::GainApplier::GainApplier": {
            "offset": "0x162750"
        },
        "webrtc::intelligibility::GainApplier::~GainApplier": {
            "offset": "0x1532F0"
        },
        "webrtc::intelligibility::VarianceArray::BlockBasedMovingAverage": {
            "offset": "0x163030"
        },
        "webrtc::intelligibility::VarianceArray::BlockedStep": {
            "offset": "0x163340"
        },
        "webrtc::intelligibility::VarianceArray::DecayStep": {
            "offset": "0x163710"
        },
        "webrtc::intelligibility::VarianceArray::InfiniteStep": {
            "offset": "0x1639F0"
        },
        "webrtc::intelligibility::VarianceArray::VarianceArray": {
            "offset": "0x1628A0"
        },
        "webrtc::intelligibility::VarianceArray::WindowedStep": {
            "offset": "0x163C70"
        },
        "webrtc::intelligibility::VarianceArray::~VarianceArray": {
            "offset": "0x139F00"
        },
        "webrtc::metrics::HistogramAdd": {
            "offset": "0xAD90"
        },
        "write_bytes": {
            "offset": "0x19AA00"
        },
        "xbr::`dynamic initializer for 'kGameBuildUniquifiers''": {
            "offset": "0x10B0"
        },
        "xcorr_kernel_c": {
            "offset": "0x114770"
        }
    }
}