{
    "net-http-server.dll": {
        "<lambda_12a4801ae521e7a788597b7d6006cacb>::~<lambda_12a4801ae521e7a788597b7d6006cacb>": {
            "offset": "0x11020"
        },
        "<lambda_2216da669bbbb01c39e021a6eb471ef3>::~<lambda_2216da669bbbb01c39e021a6eb471ef3>": {
            "offset": "0x13310"
        },
        "<lambda_42bc3a9fedd14d5d8711b36b64594d8d>::~<lambda_42bc3a9fedd14d5d8711b36b64594d8d>": {
            "offset": "0x13310"
        },
        "<lambda_4754e20f32c011c851bec0c2c0f389ea>::~<lambda_4754e20f32c011c851bec0c2c0f389ea>": {
            "offset": "0x13140"
        },
        "<lambda_4a2d08e4d6273c8266f5927e33befa11>::~<lambda_4a2d08e4d6273c8266f5927e33befa11>": {
            "offset": "0x11020"
        },
        "<lambda_4ded348910a2ba4773532516d4f3a81d>::<lambda_4ded348910a2ba4773532516d4f3a81d>": {
            "offset": "0x1E8B0"
        },
        "<lambda_4ded348910a2ba4773532516d4f3a81d>::~<lambda_4ded348910a2ba4773532516d4f3a81d>": {
            "offset": "0x1DC60"
        },
        "<lambda_50486ce660c6b89862070fd3ecc361c3>::~<lambda_50486ce660c6b89862070fd3ecc361c3>": {
            "offset": "0x13280"
        },
        "<lambda_5a72e5b7c8c1776bfe044d647945617d>::~<lambda_5a72e5b7c8c1776bfe044d647945617d>": {
            "offset": "0x11020"
        },
        "<lambda_6e1eeaddd842c8b35ed16ebe04802470>::~<lambda_6e1eeaddd842c8b35ed16ebe04802470>": {
            "offset": "0x11020"
        },
        "<lambda_7580f1c4323cb40e9a8f08a3a3483409>::<lambda_7580f1c4323cb40e9a8f08a3a3483409>": {
            "offset": "0x1E4A0"
        },
        "<lambda_7580f1c4323cb40e9a8f08a3a3483409>::~<lambda_7580f1c4323cb40e9a8f08a3a3483409>": {
            "offset": "0x19B60"
        },
        "<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>::<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>": {
            "offset": "0x1E7F0"
        },
        "<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>::~<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>": {
            "offset": "0x1DBB0"
        },
        "<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>::~<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>": {
            "offset": "0x131F0"
        },
        "<lambda_8c34cfd706ad209482090075ce0871f0>::~<lambda_8c34cfd706ad209482090075ce0871f0>": {
            "offset": "0x11020"
        },
        "<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>::<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>": {
            "offset": "0x1E7F0"
        },
        "<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>::~<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>": {
            "offset": "0x1DBB0"
        },
        "<lambda_c4d6f8104e8170904bd49cba2a06515b>::<lambda_c4d6f8104e8170904bd49cba2a06515b>": {
            "offset": "0x1E310"
        },
        "<lambda_c4d6f8104e8170904bd49cba2a06515b>::~<lambda_c4d6f8104e8170904bd49cba2a06515b>": {
            "offset": "0x19AD0"
        },
        "<lambda_dac2f788cd7d5811b80435537c3e479f>::<lambda_dac2f788cd7d5811b80435537c3e479f>": {
            "offset": "0x1E8B0"
        },
        "<lambda_dac2f788cd7d5811b80435537c3e479f>::~<lambda_dac2f788cd7d5811b80435537c3e479f>": {
            "offset": "0x1DC60"
        },
        "<lambda_f6322b4b1e0fbe8cc7220a1863be9360>::~<lambda_f6322b4b1e0fbe8cc7220a1863be9360>": {
            "offset": "0x13220"
        },
        "CfxState::CfxState": {
            "offset": "0x26C00"
        },
        "Component::As": {
            "offset": "0xE6E0"
        },
        "Component::IsA": {
            "offset": "0xE6D0"
        },
        "Component::SetCommandLine": {
            "offset": "0x3A40"
        },
        "Component::SetUserData": {
            "offset": "0xE6C0"
        },
        "ComponentInstance::DoGameLoad": {
            "offset": "0xE740"
        },
        "ComponentInstance::Initialize": {
            "offset": "0xE730"
        },
        "ComponentInstance::Shutdown": {
            "offset": "0xE6C0"
        },
        "CoreGetComponentRegistry": {
            "offset": "0xE5B0"
        },
        "CreateComponent": {
            "offset": "0xE750"
        },
        "DllMain": {
            "offset": "0x3DBC8"
        },
        "DoNtRaiseException": {
            "offset": "0x29260"
        },
        "FatalErrorNoExceptRealV": {
            "offset": "0x3390"
        },
        "FatalErrorRealV": {
            "offset": "0x3150"
        },
        "FormatErrorPickup<std::tuple<std::basic_string_view<char,std::char_traits<char> >,int,unsigned int> >": {
            "offset": "0x3420"
        },
        "GetAbsoluteCitPath": {
            "offset": "0x275C0"
        },
        "GlobalErrorHandler": {
            "offset": "0x2D60"
        },
        "HookFunctionBase::RunAll": {
            "offset": "0x29FC0"
        },
        "HostSharedData<CfxState>::HostSharedData<CfxState>": {
            "offset": "0x26830"
        },
        "HostSharedData<CfxState>::~HostSharedData<CfxState>": {
            "offset": "0x26CC0"
        },
        "InitFunctionBase::RunAll": {
            "offset": "0x293D0"
        },
        "MakeRelativeCitPath": {
            "offset": "0xE000"
        },
        "RaiseDebugException": {
            "offset": "0x29340"
        },
        "ScopedError::~ScopedError": {
            "offset": "0x30F0"
        },
        "SysError": {
            "offset": "0x2990"
        },
        "ToNarrow": {
            "offset": "0x29400"
        },
        "ToWide": {
            "offset": "0x294F0"
        },
        "TraceRealV": {
            "offset": "0x29800"
        },
        "Win32TrapAndJump64": {
            "offset": "0x29FF0"
        },
        "ZeroCopyByteBuffer::~ZeroCopyByteBuffer": {
            "offset": "0x19AC0"
        },
        "_DllMainCRTStartup": {
            "offset": "0x3D418"
        },
        "_Init_thread_abort": {
            "offset": "0x3C948"
        },
        "_Init_thread_footer": {
            "offset": "0x3C978"
        },
        "_Init_thread_header": {
            "offset": "0x3C9D8"
        },
        "_Init_thread_notify": {
            "offset": "0x3CA40"
        },
        "_Init_thread_wait": {
            "offset": "0x3CA84"
        },
        "_RTC_Initialize": {
            "offset": "0x3DC34"
        },
        "_RTC_Terminate": {
            "offset": "0x3DC70"
        },
        "_Smtx_lock_exclusive": {
            "offset": "0x3C6FC"
        },
        "_Smtx_lock_shared": {
            "offset": "0x3C704"
        },
        "_Smtx_unlock_exclusive": {
            "offset": "0x3C70C"
        },
        "_Smtx_unlock_shared": {
            "offset": "0x3C714"
        },
        "__ArrayUnwind": {
            "offset": "0x3D084"
        },
        "__GSHandlerCheck": {
            "offset": "0x3D458"
        },
        "__GSHandlerCheckCommon": {
            "offset": "0x3D478"
        },
        "__GSHandlerCheck_EH": {
            "offset": "0x3D4D4"
        },
        "__GSHandlerCheck_SEH": {
            "offset": "0x3D6D0"
        },
        "__chkstk": {
            "offset": "0x3D770"
        },
        "__crt_debugger_hook": {
            "offset": "0x3D96C"
        },
        "__dyn_tls_init": {
            "offset": "0x3C7A4"
        },
        "__dyn_tls_on_demand_init": {
            "offset": "0x3C80C"
        },
        "__isa_available_init": {
            "offset": "0x3D7C0"
        },
        "__local_stdio_printf_options": {
            "offset": "0xDA90"
        },
        "__local_stdio_scanf_options": {
            "offset": "0x3DC08"
        },
        "__raise_securityfailure": {
            "offset": "0x3D554"
        },
        "__report_gsfailure": {
            "offset": "0x3D588"
        },
        "__scrt_acquire_startup_lock": {
            "offset": "0x3CAE8"
        },
        "__scrt_dllmain_after_initialize_c": {
            "offset": "0x3CB24"
        },
        "__scrt_dllmain_before_initialize_c": {
            "offset": "0x3CB58"
        },
        "__scrt_dllmain_crt_thread_attach": {
            "offset": "0x3CB70"
        },
        "__scrt_dllmain_crt_thread_detach": {
            "offset": "0x3CB98"
        },
        "__scrt_dllmain_exception_filter": {
            "offset": "0x3CBB0"
        },
        "__scrt_dllmain_uninitialize_c": {
            "offset": "0x3CC10"
        },
        "__scrt_dllmain_uninitialize_critical": {
            "offset": "0x3CC40"
        },
        "__scrt_fastfail": {
            "offset": "0x3D974"
        },
        "__scrt_get_dyn_tls_init_callback": {
            "offset": "0x3DC2C"
        },
        "__scrt_initialize_crt": {
            "offset": "0x3CC54"
        },
        "__scrt_initialize_default_local_stdio_options": {
            "offset": "0x3DC10"
        },
        "__scrt_initialize_onexit_tables": {
            "offset": "0x3CCA0"
        },
        "__scrt_initialize_thread_safe_statics": {
            "offset": "0x3C850"
        },
        "__scrt_initialize_type_info": {
            "offset": "0x3DBEC"
        },
        "__scrt_is_nonwritable_in_current_image": {
            "offset": "0x3CD2C"
        },
        "__scrt_is_nonwritable_in_current_image$filt$0": {
            "offset": "0x3F8E8"
        },
        "__scrt_is_ucrt_dll_in_use": {
            "offset": "0x3DAC8"
        },
        "__scrt_release_startup_lock": {
            "offset": "0x3CDC4"
        },
        "__scrt_stub_for_acrt_initialize": {
            "offset": "0xE6C0"
        },
        "__scrt_stub_for_acrt_thread_attach": {
            "offset": "0xE6C0"
        },
        "__scrt_stub_for_acrt_thread_detach": {
            "offset": "0xE6C0"
        },
        "__scrt_stub_for_acrt_uninitialize": {
            "offset": "0xE6C0"
        },
        "__scrt_stub_for_acrt_uninitialize_critical": {
            "offset": "0xE6C0"
        },
        "__scrt_stub_for_is_c_termination_complete": {
            "offset": "0xE6E0"
        },
        "__scrt_throw_std_bad_alloc": {
            "offset": "0x3DAF4"
        },
        "__scrt_throw_std_bad_array_new_length": {
            "offset": "0xE480"
        },
        "__scrt_uninitialize_crt": {
            "offset": "0x3CDE8"
        },
        "__scrt_uninitialize_thread_safe_statics": {
            "offset": "0x3C920"
        },
        "__scrt_uninitialize_type_info": {
            "offset": "0x3DBFC"
        },
        "__security_check_cookie": {
            "offset": "0x3C830"
        },
        "__security_init_cookie": {
            "offset": "0x3DB1C"
        },
        "__std_find_trivial_1": {
            "offset": "0x3C630"
        },
        "_get_startup_argv_mode": {
            "offset": "0x3DAC0"
        },
        "_guard_check_icall_nop": {
            "offset": "0x3A40"
        },
        "_guard_dispatch_icall_nop": {
            "offset": "0x3DDA0"
        },
        "_guard_xfg_dispatch_icall_nop": {
            "offset": "0x3DDC0"
        },
        "_onexit": {
            "offset": "0x3CE14"
        },
        "_wwassert": {
            "offset": "0x27940"
        },
        "`__ArrayUnwind'::`1'::filt$0": {
            "offset": "0x3F92C"
        },
        "`dllmain_crt_process_attach'::`1'::fin$0": {
            "offset": "0x3F98B"
        },
        "`dllmain_crt_process_detach'::`1'::fin$0": {
            "offset": "0x3F9A2"
        },
        "`dllmain_crt_process_detach'::`1'::fin$1": {
            "offset": "0x3F9BB"
        },
        "`dllmain_dispatch'::`1'::filt$0": {
            "offset": "0x3F9CF"
        },
        "`dynamic initializer for '_init_instance_0''": {
            "offset": "0x1000"
        },
        "`dynamic initializer for 'g_thisError''": {
            "offset": "0x11B0"
        },
        "`dynamic initializer for 'initIoBuf''": {
            "offset": "0x18D0"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>,<lambda_f6322b4b1e0fbe8cc7220a1863be9360> >'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x17370"
        },
        "`std::_Global_new<std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>,<lambda_f6322b4b1e0fbe8cc7220a1863be9360> const &>'::`2'::_Guard_type::~_Guard_type": {
            "offset": "0x17370"
        },
        "active_outbound_item_reset": {
            "offset": "0x2B070"
        },
        "add_hd_table_incremental": {
            "offset": "0x345C0"
        },
        "atexit": {
            "offset": "0x3CE50"
        },
        "bubble_down": {
            "offset": "0x390D0"
        },
        "bubble_up": {
            "offset": "0x39190"
        },
        "buf_chain_new": {
            "offset": "0x377F0"
        },
        "bufs_alloc_chain": {
            "offset": "0x378C0"
        },
        "capture_previous_context": {
            "offset": "0x3D65C"
        },
        "default_calloc": {
            "offset": "0x37140"
        },
        "default_free": {
            "offset": "0x344B0"
        },
        "default_malloc": {
            "offset": "0x37130"
        },
        "default_realloc": {
            "offset": "0x37150"
        },
        "deflate_nv": {
            "offset": "0x34860"
        },
        "dllmain_crt_dispatch": {
            "offset": "0x3D0F8"
        },
        "dllmain_crt_process_attach": {
            "offset": "0x3D148"
        },
        "dllmain_crt_process_detach": {
            "offset": "0x3D260"
        },
        "dllmain_dispatch": {
            "offset": "0x3D2E4"
        },
        "eastl::RBTreeErase": {
            "offset": "0x2A0A0"
        },
        "eastl::RBTreeIncrement": {
            "offset": "0x2A430"
        },
        "eastl::RBTreeInsert": {
            "offset": "0x2A480"
        },
        "eastl::RBTreeRotateLeft": {
            "offset": "0x2A6A0"
        },
        "eastl::RBTreeRotateRight": {
            "offset": "0x2A700"
        },
        "eastl::allocator::allocate": {
            "offset": "0x2A010"
        },
        "eastl::allocator::allocator": {
            "offset": "0x1BFF0"
        },
        "eastl::allocator::deallocate": {
            "offset": "0x2A020"
        },
        "eastl::fixed_multimap<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator>,16,1,net::HeaderComparator,eastl::allocator>::fixed_multimap<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator>,16,1,net::HeaderComparator,eastl::allocator>": {
            "offset": "0x144F0"
        },
        "eastl::fixed_multimap<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator>,16,1,net::HeaderComparator,eastl::allocator>::~fixed_multimap<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator>,16,1,net::HeaderComparator,eastl::allocator>": {
            "offset": "0xF060"
        },
        "eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>::fixed_node_allocator<240,16,8,0,1,eastl::allocator>": {
            "offset": "0x17150"
        },
        "eastl::fixed_pool_base::init": {
            "offset": "0x2A030"
        },
        "eastl::fixed_string<char,64,1,eastl::allocator>::fixed_string<char,64,1,eastl::allocator>": {
            "offset": "0x142D0"
        },
        "eastl::fixed_string<char,64,1,eastl::allocator>::~fixed_string<char,64,1,eastl::allocator>": {
            "offset": "0xF010"
        },
        "eastl::multimap<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator>,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator> >::erase": {
            "offset": "0x145F0"
        },
        "eastl::multimap<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator>,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator> >::~multimap<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator>,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator> >": {
            "offset": "0xF070"
        },
        "eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >::~pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >": {
            "offset": "0x130B0"
        },
        "eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator> >::~pair<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator> >": {
            "offset": "0x130B0"
        },
        "eastl::rb_base_compare_ebo<net::HeaderComparator,1>::compare<eastl::fixed_string<char,64,1,eastl::allocator> >": {
            "offset": "0x16090"
        },
        "eastl::rbtree<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>,eastl::use_first<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> > >,1,0>::DoCopySubtree": {
            "offset": "0x16E60"
        },
        "eastl::rbtree<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>,eastl::use_first<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> > >,1,0>::DoCreateNode": {
            "offset": "0x17290"
        },
        "eastl::rbtree<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>,eastl::use_first<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> > >,1,0>::DoNukeSubtree": {
            "offset": "0x15E10"
        },
        "eastl::rbtree<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>,eastl::use_first<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> > >,1,0>::clear": {
            "offset": "0x16D30"
        },
        "eastl::rbtree<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>,eastl::use_first<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> > >,1,0>::find_as<eastl::basic_string_view<char>,net::HeaderComparator>": {
            "offset": "0x15E90"
        },
        "eastl::rbtree<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>,eastl::use_first<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> > >,1,0>::~rbtree<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> >,net::HeaderComparator,eastl::fixed_node_allocator<240,16,8,0,1,eastl::allocator>,eastl::use_first<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator> const ,eastl::fixed_string<char,64,1,eastl::allocator> > >,1,0>": {
            "offset": "0x14730"
        },
        "eastl::uninitialized_move<eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator> > *,eastl::pair<eastl::fixed_string<char,64,1,eastl::allocator>,eastl::fixed_string<char,64,1,eastl::allocator> > *>": {
            "offset": "0x1E760"
        },
        "emit_indname_block": {
            "offset": "0x34B60"
        },
        "emit_newname_block": {
            "offset": "0x34C50"
        },
        "emit_string": {
            "offset": "0x34CC0"
        },
        "emit_table_size": {
            "offset": "0x34DB0"
        },
        "encode_length": {
            "offset": "0x34E50"
        },
        "find_stream_on_goaway_func": {
            "offset": "0x2B0B0"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::grow": {
            "offset": "0xD830"
        },
        "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::~basic_memory_buffer<char,500,std::allocator<char> >": {
            "offset": "0xD7D0"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::grow": {
            "offset": "0x26090"
        },
        "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::~basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >": {
            "offset": "0x25720"
        },
        "fmt::v8::detail::add_compare": {
            "offset": "0x258A0"
        },
        "fmt::v8::detail::assert_fail": {
            "offset": "0x259E0"
        },
        "fmt::v8::detail::bigint::assign_pow10": {
            "offset": "0x25A30"
        },
        "fmt::v8::detail::bigint::divmod_assign": {
            "offset": "0x25C00"
        },
        "fmt::v8::detail::bigint::square": {
            "offset": "0x26460"
        },
        "fmt::v8::detail::bigint::~bigint": {
            "offset": "0x25720"
        },
        "fmt::v8::detail::buffer<char>::append<char>": {
            "offset": "0x7770"
        },
        "fmt::v8::detail::buffer<char>::try_resize": {
            "offset": "0xB2E0"
        },
        "fmt::v8::detail::compare": {
            "offset": "0x25B60"
        },
        "fmt::v8::detail::count_digits": {
            "offset": "0xCFF0"
        },
        "fmt::v8::detail::decimal_point_impl<char>": {
            "offset": "0x224D0"
        },
        "fmt::v8::detail::dragonbox::cache_accessor<double>::get_cached_power": {
            "offset": "0x25F60"
        },
        "fmt::v8::detail::dragonbox::is_endpoint_integer<double>": {
            "offset": "0x24140"
        },
        "fmt::v8::detail::dragonbox::remove_trailing_zeros": {
            "offset": "0x26240"
        },
        "fmt::v8::detail::dragonbox::shorter_interval_case<float>": {
            "offset": "0x24170"
        },
        "fmt::v8::detail::dragonbox::to_decimal<double>": {
            "offset": "0x24E30"
        },
        "fmt::v8::detail::dragonbox::to_decimal<float>": {
            "offset": "0x24A00"
        },
        "fmt::v8::detail::error_handler::on_error": {
            "offset": "0x261C0"
        },
        "fmt::v8::detail::fallback_format<double>": {
            "offset": "0x225E0"
        },
        "fmt::v8::detail::fallback_format<long double>": {
            "offset": "0x225E0"
        },
        "fmt::v8::detail::fmt_snprintf": {
            "offset": "0x25EF0"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64,fmt::v8::appender,0>": {
            "offset": "0xAD00"
        },
        "fmt::v8::detail::format_decimal<char,unsigned __int64>": {
            "offset": "0xCF10"
        },
        "fmt::v8::detail::format_decimal<char,unsigned int,fmt::v8::appender,0>": {
            "offset": "0xAA30"
        },
        "fmt::v8::detail::format_float<double>": {
            "offset": "0x220F0"
        },
        "fmt::v8::detail::format_float<long double>": {
            "offset": "0x23970"
        },
        "fmt::v8::detail::format_uint<4,char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0xA350"
        },
        "fmt::v8::detail::grisu_gen_digits<fmt::v8::detail::fixed_handler>": {
            "offset": "0x23CD0"
        },
        "fmt::v8::detail::parse_float_type_spec<fmt::v8::detail::error_handler,char>": {
            "offset": "0x98F0"
        },
        "fmt::v8::detail::parse_header<char,<lambda_10b59f138e704e35b5296527d0235f76> >": {
            "offset": "0x5480"
        },
        "fmt::v8::detail::parse_nonnegative_int<char>": {
            "offset": "0xD6E0"
        },
        "fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>::write_null_pointer": {
            "offset": "0x6720"
        },
        "fmt::v8::detail::snprintf_float<double>": {
            "offset": "0x24380"
        },
        "fmt::v8::detail::snprintf_float<long double>": {
            "offset": "0x24600"
        },
        "fmt::v8::detail::thousands_sep_impl<char>": {
            "offset": "0x24890"
        },
        "fmt::v8::detail::thousands_sep_result<char>::~thousands_sep_result<char>": {
            "offset": "0xB170"
        },
        "fmt::v8::detail::utf8_decode": {
            "offset": "0xD210"
        },
        "fmt::v8::detail::vprintf<char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x4430"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,double,0>": {
            "offset": "0x7C80"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,float,0>": {
            "offset": "0x7820"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,long double,0>": {
            "offset": "0x80D0"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned __int64,0>": {
            "offset": "0x25490"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender,unsigned int,0>": {
            "offset": "0x25370"
        },
        "fmt::v8::detail::write<char,fmt::v8::appender>": {
            "offset": "0x75E0"
        },
        "fmt::v8::detail::write_exponent<char,fmt::v8::appender>": {
            "offset": "0xAE00"
        },
        "fmt::v8::detail::write_float<fmt::v8::appender,fmt::v8::detail::big_decimal_fp,char>": {
            "offset": "0x9A50"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned __int64>": {
            "offset": "0x9010"
        },
        "fmt::v8::detail::write_int<char,fmt::v8::appender,unsigned int>": {
            "offset": "0x86B0"
        },
        "fmt::v8::detail::write_int<fmt::v8::appender,char,<lambda_24316ed3afe2c2c077dd485b0647dd76> >": {
            "offset": "0xAB40"
        },
        "fmt::v8::detail::write_int_data<char>::write_int_data<char>": {
            "offset": "0xB1D0"
        },
        "fmt::v8::detail::write_int_localized<fmt::v8::appender,unsigned __int64,char>": {
            "offset": "0xA610"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_051aec1ce4ed0271119623a7e83ac6a5> &>": {
            "offset": "0xB4B0"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_22cb150d85fca5a3ac6a96f517638e39> &>": {
            "offset": "0xA470"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_69652fb90da4a77ba8cf5fef5ea19cdd> >": {
            "offset": "0x8520"
        },
        "fmt::v8::detail::write_padded<1,fmt::v8::appender,char,<lambda_fbd162939e03e0c955beb05a33c24f5e> &>": {
            "offset": "0x8520"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_02a1634acea1c2868026d163185cc0d5> &>": {
            "offset": "0xCCF0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06b2adfe852a46c8d65fe26cc7c8ca5d> &>": {
            "offset": "0xB810"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_06f64a48a5b4f184684d74740837f1c7> &>": {
            "offset": "0xB680"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_2d30ec7f416bbcee3bc8a87df0c22c03> >": {
            "offset": "0xB320"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_33ba7a720adff5c90e1946d777cb5230> &>": {
            "offset": "0xCAD0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_4ea56d52f8212d84933fa76e5a159b3f> &>": {
            "offset": "0xAF90"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_514469ad4ff2f796c2a70ef6994dff64> &>": {
            "offset": "0xC470"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_596cc5dacf733e82dcb56ca6ee54b81f> &>": {
            "offset": "0xBB10"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_686459aaae64d4cbdde6763d637485ac> &>": {
            "offset": "0xBE10"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_694eb9c30a49e7dae164c077f09b5a7f> &>": {
            "offset": "0xC250"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_8cce229a1891be08a4c6e75623ca3fd6> &>": {
            "offset": "0xBC90"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_b9c069f91a736dafbdb5ba8344e9f4c8> &>": {
            "offset": "0xC8B0"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_cb4d4b26b782de201d2a0edc777aea57> &>": {
            "offset": "0xB990"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_de0fdbc03b7ebc9cd9291e836878da40> &>": {
            "offset": "0xC690"
        },
        "fmt::v8::detail::write_padded<2,fmt::v8::appender,char,<lambda_f811a0db88237a09377d34dce98c0f31> &>": {
            "offset": "0xC030"
        },
        "fmt::v8::format_error::format_error": {
            "offset": "0xD660"
        },
        "fmt::v8::format_error::~format_error": {
            "offset": "0xD5F0"
        },
        "fmt::v8::sprintf<char [43],std::basic_string_view<char,std::char_traits<char> >,char const *,char>": {
            "offset": "0x28640"
        },
        "fmt::v8::sprintf<char [5],unsigned __int64,char>": {
            "offset": "0x15490"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<__int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x70D0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<long,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x7200"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<short,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x6FA0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<signed char,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x6EB0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<unsigned __int64,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x70D0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::arg_converter<void,fmt::v8::basic_printf_context<fmt::v8::appender,char> >,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x72F0"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_arg_formatter<fmt::v8::appender,char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x5D60"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_precision_handler,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x5770"
        },
        "fmt::v8::visit_format_arg<fmt::v8::detail::printf_width_handler<char>,fmt::v8::basic_printf_context<fmt::v8::appender,char> >": {
            "offset": "0x67D0"
        },
        "fmt::v8::vsprintf<std::basic_string_view<char,std::char_traits<char> >,char>": {
            "offset": "0x28EE0"
        },
        "fprintf": {
            "offset": "0xDAA0"
        },
        "frame_pack_headers_shared": {
            "offset": "0x37E80"
        },
        "free_streams": {
            "offset": "0x2B120"
        },
        "fu2::abi_400::detail::function<fu2::abi_400::detail::config<1,0,fu2::capacity_default>,fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::~function<fu2::abi_400::detail::config<1,0,fu2::capacity_default>,fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >": {
            "offset": "0xE880"
        },
        "fu2::abi_400::detail::function<fu2::abi_400::detail::config<1,0,fu2::capacity_default>,fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::~function<fu2::abi_400::detail::config<1,0,fu2::capacity_default>,fu2::abi_400::detail::property<1,0,void __cdecl(void)> >": {
            "offset": "0xE880"
        },
        "fu2::abi_400::detail::invocation::invoke<<lambda_5a72e5b7c8c1776bfe044d647945617d> &>": {
            "offset": "0x207D0"
        },
        "fu2::abi_400::detail::invocation::invoke<<lambda_7580f1c4323cb40e9a8f08a3a3483409> &>": {
            "offset": "0x208B0"
        },
        "fu2::abi_400::detail::invocation::invoke<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> &>": {
            "offset": "0x18200"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > >::~box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > >": {
            "offset": "0x11020"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > >::~box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > >": {
            "offset": "0x1E960"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > >::~box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > >": {
            "offset": "0x11020"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > >::~box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > >": {
            "offset": "0x1E540"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > >::~box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > >": {
            "offset": "0x1E8A0"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > >::~box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > >": {
            "offset": "0x131F0"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > >::~box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > >": {
            "offset": "0x11020"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > >::~box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > >": {
            "offset": "0x1E8A0"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > >::~box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > >": {
            "offset": "0x1E490"
        },
        "fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > >::~box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > >": {
            "offset": "0x1E960"
        },
        "fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >": {
            "offset": "0xE8C0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(bool)>::empty_invoker<1>::invoke": {
            "offset": "0x15920"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(bool)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > >,0>::invoke": {
            "offset": "0x18110"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(bool)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > >,1>::invoke": {
            "offset": "0x18170"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(bool)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > >,0>::invoke": {
            "offset": "0x18110"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(bool)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > >,1>::invoke": {
            "offset": "0x18170"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::empty_invoker<1>::invoke": {
            "offset": "0x15920"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > >,0>::invoke": {
            "offset": "0x209C0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > >,1>::invoke": {
            "offset": "0x209D0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > >,0>::invoke": {
            "offset": "0x1FA20"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > >,1>::invoke": {
            "offset": "0x1FA30"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > >,0>::invoke": {
            "offset": "0x1FA70"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > >,1>::invoke": {
            "offset": "0x1FA80"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > >,0>::invoke": {
            "offset": "0x20AB0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > >,1>::invoke": {
            "offset": "0x20AC0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > >,0>::invoke": {
            "offset": "0x18040"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > >,1>::invoke": {
            "offset": "0x18050"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > >,0>::invoke": {
            "offset": "0x20A60"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > >,1>::invoke": {
            "offset": "0x20A70"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > >,0>::invoke": {
            "offset": "0x1FAC0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > >,1>::invoke": {
            "offset": "0x1FAD0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > >,0>::invoke": {
            "offset": "0x20A10"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > >,1>::invoke": {
            "offset": "0x20A20"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >,0>::invoke": {
            "offset": "0x18090"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::function_trait<void __cdecl(void)>::internal_invoker<fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >,1>::invoke": {
            "offset": "0x180C0"
        },
        "fu2::abi_400::detail::type_erasure::invocation_table::throw_or_abort": {
            "offset": "0xE820"
        },
        "fu2::abi_400::detail::type_erasure::make_box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > >": {
            "offset": "0x1E1B0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::empty_cmd": {
            "offset": "0x14280"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > > >": {
            "offset": "0x17570"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > > >": {
            "offset": "0x17570"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::set_empty": {
            "offset": "0x140E0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > > >": {
            "offset": "0x17390"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > > >::process_cmd<0>": {
            "offset": "0x177C0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_12a4801ae521e7a788597b7d6006cacb>,std::allocator<<lambda_12a4801ae521e7a788597b7d6006cacb> > > >::process_cmd<1>": {
            "offset": "0x175D0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > > >": {
            "offset": "0x17390"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > > >::process_cmd<0>": {
            "offset": "0x177C0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(bool)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_8c34cfd706ad209482090075ce0871f0>,std::allocator<<lambda_8c34cfd706ad209482090075ce0871f0> > > >::process_cmd<1>": {
            "offset": "0x175D0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::empty_cmd": {
            "offset": "0x14280"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > > >": {
            "offset": "0x1F360"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > > >": {
            "offset": "0x1EF90"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > > >": {
            "offset": "0x1EF70"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > > >": {
            "offset": "0x1F300"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > > >": {
            "offset": "0x175B0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > > >": {
            "offset": "0x1F320"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > > >": {
            "offset": "0x1ECD0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > > >": {
            "offset": "0x1F340"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_allocated<fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >": {
            "offset": "0x17590"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::set_empty": {
            "offset": "0x140E0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > > >": {
            "offset": "0x1EED0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > > >::process_cmd<0>": {
            "offset": "0x20660"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_4ded348910a2ba4773532516d4f3a81d>,std::allocator<<lambda_4ded348910a2ba4773532516d4f3a81d> > > >::process_cmd<1>": {
            "offset": "0x204A0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > > >": {
            "offset": "0x1EC30"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > > >::process_cmd<0>": {
            "offset": "0x1F8A0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_5a72e5b7c8c1776bfe044d647945617d>,std::allocator<<lambda_5a72e5b7c8c1776bfe044d647945617d> > > >::process_cmd<1>": {
            "offset": "0x1F6B0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > > >": {
            "offset": "0x1EB90"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > > >::process_cmd<0>": {
            "offset": "0x1F540"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_7580f1c4323cb40e9a8f08a3a3483409>,std::allocator<<lambda_7580f1c4323cb40e9a8f08a3a3483409> > > >::process_cmd<1>": {
            "offset": "0x1F380"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > > >": {
            "offset": "0x1ECF0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > > >::process_cmd<0>": {
            "offset": "0x1FCD0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_7bc635d0cbf52ce03a2a18c882ab6f37>,std::allocator<<lambda_7bc635d0cbf52ce03a2a18c882ab6f37> > > >::process_cmd<1>": {
            "offset": "0x1FB10"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > > >": {
            "offset": "0x174D0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > > >::process_cmd<0>": {
            "offset": "0x17EC0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_87cb0039be3ea359c4ba0c7085f2c8bd>,std::allocator<<lambda_87cb0039be3ea359c4ba0c7085f2c8bd> > > >::process_cmd<1>": {
            "offset": "0x17CC0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > > >": {
            "offset": "0x1ED90"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > > >::process_cmd<0>": {
            "offset": "0x20000"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_b7a8e7d92bd3316b1ac85e8824d626b7>,std::allocator<<lambda_b7a8e7d92bd3316b1ac85e8824d626b7> > > >::process_cmd<1>": {
            "offset": "0x1FE40"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > > >": {
            "offset": "0x1EAE0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > > >::process_cmd<0>": {
            "offset": "0x1F180"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_c4d6f8104e8170904bd49cba2a06515b>,std::allocator<<lambda_c4d6f8104e8170904bd49cba2a06515b> > > >::process_cmd<1>": {
            "offset": "0x1EFB0"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > > >": {
            "offset": "0x1EE30"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > > >::process_cmd<0>": {
            "offset": "0x20330"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,<lambda_dac2f788cd7d5811b80435537c3e479f>,std::allocator<<lambda_dac2f788cd7d5811b80435537c3e479f> > > >::process_cmd<1>": {
            "offset": "0x20170"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::construct<fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >": {
            "offset": "0x17430"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::process_cmd<0>": {
            "offset": "0x17B40"
        },
        "fu2::abi_400::detail::type_erasure::tables::vtable<fu2::abi_400::detail::property<1,0,void __cdecl(void)> >::trait<fu2::abi_400::detail::type_erasure::box<0,std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >::process_cmd<1>": {
            "offset": "0x17940"
        },
        "fu2::abi_400::detail::unreachable_debug": {
            "offset": "0xE810"
        },
        "fwPlatformString::~fwPlatformString": {
            "offset": "0xDF90"
        },
        "fwRefContainer<net::Http1Response>::~fwRefContainer<net::Http1Response>": {
            "offset": "0x13360"
        },
        "fwRefContainer<net::Http2Response>::~fwRefContainer<net::Http2Response>": {
            "offset": "0x13360"
        },
        "fwRefContainer<net::HttpHandler>::~fwRefContainer<net::HttpHandler>": {
            "offset": "0x13360"
        },
        "fwRefContainer<net::HttpRequest>::~fwRefContainer<net::HttpRequest>": {
            "offset": "0x13360"
        },
        "fwRefContainer<net::HttpResponse>::~fwRefContainer<net::HttpResponse>": {
            "offset": "0x13360"
        },
        "fwRefContainer<net::TcpServer>::~fwRefContainer<net::TcpServer>": {
            "offset": "0x13360"
        },
        "fwRefContainer<net::TcpServerStream>::~fwRefContainer<net::TcpServerStream>": {
            "offset": "0x13360"
        },
        "fwRefContainer<net::h2::HttpRequestData>::~fwRefContainer<net::h2::HttpRequestData>": {
            "offset": "0x13360"
        },
        "fwRefCountable::AddRef": {
            "offset": "0x29F80"
        },
        "fwRefCountable::Release": {
            "offset": "0x29F90"
        },
        "fwRefCountable::~fwRefCountable": {
            "offset": "0x29F70"
        },
        "get_error_code_from_lib_error_code": {
            "offset": "0x2B1A0"
        },
        "get_token_to_eol": {
            "offset": "0x2A760"
        },
        "hd_context_free": {
            "offset": "0x34ED0"
        },
        "hd_context_init": {
            "offset": "0x34F60"
        },
        "hd_context_shrink_table_size": {
            "offset": "0x34FF0"
        },
        "hd_inflate_commit_indname": {
            "offset": "0x35100"
        },
        "hd_inflate_commit_newname": {
            "offset": "0x35230"
        },
        "hd_inflate_read": {
            "offset": "0x352F0"
        },
        "hd_inflate_read_huff": {
            "offset": "0x35350"
        },
        "http_request_on_header": {
            "offset": "0x3A4B0"
        },
        "http_response_on_header": {
            "offset": "0x3A9C0"
        },
        "inflate_header_block": {
            "offset": "0x2B230"
        },
        "insert": {
            "offset": "0x371E0"
        },
        "launch::IsSDKGuest": {
            "offset": "0x278C0"
        },
        "lookup_token": {
            "offset": "0x353E0"
        },
        "map_resize": {
            "offset": "0x372C0"
        },
        "memieq": {
            "offset": "0x3ABD0"
        },
        "net::Http1Response::BeforeWriteHead": {
            "offset": "0xFD20"
        },
        "net::Http1Response::CloseSocket": {
            "offset": "0x10EA0"
        },
        "net::Http1Response::End": {
            "offset": "0x10890"
        },
        "net::Http1Response::Http1Response": {
            "offset": "0xF310"
        },
        "net::Http1Response::StartConnectionTimeout": {
            "offset": "0xF460"
        },
        "net::Http1Response::WriteHead": {
            "offset": "0xF470"
        },
        "net::Http1Response::WriteOut": {
            "offset": "0x10640"
        },
        "net::Http1Response::WriteOutInternal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>": {
            "offset": "0x15270"
        },
        "net::Http1Response::WriteOutInternal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x15050"
        },
        "net::Http2Response::Cancel": {
            "offset": "0x197C0"
        },
        "net::Http2Response::CloseSocket": {
            "offset": "0x19730"
        },
        "net::Http2Response::End": {
            "offset": "0x19530"
        },
        "net::Http2Response::Http2Response": {
            "offset": "0x18710"
        },
        "net::Http2Response::StartConnectionTimeout": {
            "offset": "0x188E0"
        },
        "net::Http2Response::WriteHead": {
            "offset": "0x188F0"
        },
        "net::Http2Response::WriteOut": {
            "offset": "0x192C0"
        },
        "net::Http2Response::WriteOutInternal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &&>": {
            "offset": "0x1D4A0"
        },
        "net::Http2Response::WriteOutInternal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>": {
            "offset": "0x1D0C0"
        },
        "net::Http2ServerImpl::Http2ServerImpl": {
            "offset": "0xF2F0"
        },
        "net::Http2ServerImpl::OnConnection": {
            "offset": "0x19BD0"
        },
        "net::Http2ServerImpl::~Http2ServerImpl": {
            "offset": "0xF110"
        },
        "net::HttpRequest::GetHeader": {
            "offset": "0xE8F0"
        },
        "net::HttpRequest::SetDataHandler": {
            "offset": "0x20B00"
        },
        "net::HttpRequest::~HttpRequest": {
            "offset": "0x20EB0"
        },
        "net::HttpResponse::BeforeWriteHead": {
            "offset": "0x3A40"
        },
        "net::HttpResponse::End": {
            "offset": "0x21B50"
        },
        "net::HttpResponse::GetHeader": {
            "offset": "0xEAA0"
        },
        "net::HttpResponse::GetStatusCode": {
            "offset": "0xEF80"
        },
        "net::HttpResponse::GetStatusMessage": {
            "offset": "0x21BE0"
        },
        "net::HttpResponse::HasEnded": {
            "offset": "0xEFB0"
        },
        "net::HttpResponse::HasSentHeaders": {
            "offset": "0xEFA0"
        },
        "net::HttpResponse::HttpResponse": {
            "offset": "0x21090"
        },
        "net::HttpResponse::RemoveHeader": {
            "offset": "0x21450"
        },
        "net::HttpResponse::SetHeader": {
            "offset": "0xEB40"
        },
        "net::HttpResponse::SetStatusCode": {
            "offset": "0xEF90"
        },
        "net::HttpResponse::Write": {
            "offset": "0x217E0"
        },
        "net::HttpResponse::WriteHead": {
            "offset": "0x21500"
        },
        "net::HttpResponse::WriteOut": {
            "offset": "0x21870"
        },
        "net::HttpResponse::~HttpResponse": {
            "offset": "0xEFC0"
        },
        "net::HttpServer::AttachToServer": {
            "offset": "0x20DD0"
        },
        "net::HttpServer::HttpServer": {
            "offset": "0xF0F0"
        },
        "net::HttpServer::RegisterHandler": {
            "offset": "0x20D40"
        },
        "net::HttpServer::~HttpServer": {
            "offset": "0xF110"
        },
        "net::HttpServerImpl::HttpServerImpl": {
            "offset": "0x11060"
        },
        "net::HttpServerImpl::OnConnection": {
            "offset": "0x110D0"
        },
        "net::HttpServerImpl::~HttpServerImpl": {
            "offset": "0x11080"
        },
        "net::`dynamic initializer for 'httpStatuses''": {
            "offset": "0x1200"
        },
        "nghttp2_buf_free": {
            "offset": "0x37940"
        },
        "nghttp2_buf_init": {
            "offset": "0x37970"
        },
        "nghttp2_buf_reset": {
            "offset": "0x37990"
        },
        "nghttp2_buf_wrap_init": {
            "offset": "0x379A0"
        },
        "nghttp2_bufs_add": {
            "offset": "0x379D0"
        },
        "nghttp2_bufs_addb": {
            "offset": "0x37AB0"
        },
        "nghttp2_bufs_free": {
            "offset": "0x37B00"
        },
        "nghttp2_bufs_init3": {
            "offset": "0x37BA0"
        },
        "nghttp2_bufs_len": {
            "offset": "0x37C50"
        },
        "nghttp2_bufs_next_present": {
            "offset": "0x37C80"
        },
        "nghttp2_bufs_realloc": {
            "offset": "0x37CA0"
        },
        "nghttp2_bufs_reset": {
            "offset": "0x37D80"
        },
        "nghttp2_check_authority": {
            "offset": "0x3A230"
        },
        "nghttp2_check_header_name": {
            "offset": "0x3A260"
        },
        "nghttp2_check_header_value": {
            "offset": "0x3A2A0"
        },
        "nghttp2_check_header_value_rfc9113": {
            "offset": "0x3A2D0"
        },
        "nghttp2_check_method": {
            "offset": "0x3A320"
        },
        "nghttp2_check_path": {
            "offset": "0x3A350"
        },
        "nghttp2_cpymem": {
            "offset": "0x3A380"
        },
        "nghttp2_data_provider_wrap_v1": {
            "offset": "0x38F70"
        },
        "nghttp2_downcase": {
            "offset": "0x3A3C0"
        },
        "nghttp2_extpri_from_uint8": {
            "offset": "0x3B310"
        },
        "nghttp2_extpri_to_uint8": {
            "offset": "0x3B330"
        },
        "nghttp2_frame_add_pad": {
            "offset": "0x37FA0"
        },
        "nghttp2_frame_altsvc_free": {
            "offset": "0x38050"
        },
        "nghttp2_frame_data_free": {
            "offset": "0x3A40"
        },
        "nghttp2_frame_data_init": {
            "offset": "0x38070"
        },
        "nghttp2_frame_extension_free": {
            "offset": "0x3A40"
        },
        "nghttp2_frame_goaway_free": {
            "offset": "0x38090"
        },
        "nghttp2_frame_goaway_init": {
            "offset": "0x380A0"
        },
        "nghttp2_frame_headers_free": {
            "offset": "0x380E0"
        },
        "nghttp2_frame_headers_init": {
            "offset": "0x380F0"
        },
        "nghttp2_frame_iv_copy": {
            "offset": "0x38140"
        },
        "nghttp2_frame_origin_free": {
            "offset": "0x381B0"
        },
        "nghttp2_frame_pack_altsvc": {
            "offset": "0x381D0"
        },
        "nghttp2_frame_pack_frame_hd": {
            "offset": "0x38280"
        },
        "nghttp2_frame_pack_goaway": {
            "offset": "0x382C0"
        },
        "nghttp2_frame_pack_headers": {
            "offset": "0x38370"
        },
        "nghttp2_frame_pack_origin": {
            "offset": "0x38440"
        },
        "nghttp2_frame_pack_ping": {
            "offset": "0x38520"
        },
        "nghttp2_frame_pack_priority": {
            "offset": "0x38590"
        },
        "nghttp2_frame_pack_priority_update": {
            "offset": "0x38610"
        },
        "nghttp2_frame_pack_push_promise": {
            "offset": "0x386B0"
        },
        "nghttp2_frame_pack_rst_stream": {
            "offset": "0x38770"
        },
        "nghttp2_frame_pack_settings": {
            "offset": "0x387E0"
        },
        "nghttp2_frame_pack_window_update": {
            "offset": "0x38770"
        },
        "nghttp2_frame_ping_free": {
            "offset": "0x3A40"
        },
        "nghttp2_frame_ping_init": {
            "offset": "0x388B0"
        },
        "nghttp2_frame_priority_free": {
            "offset": "0x3A40"
        },
        "nghttp2_frame_priority_len": {
            "offset": "0x388E0"
        },
        "nghttp2_frame_priority_update_free": {
            "offset": "0x381B0"
        },
        "nghttp2_frame_push_promise_free": {
            "offset": "0x38090"
        },
        "nghttp2_frame_rst_stream_free": {
            "offset": "0x3A40"
        },
        "nghttp2_frame_rst_stream_init": {
            "offset": "0x388F0"
        },
        "nghttp2_frame_settings_free": {
            "offset": "0x38090"
        },
        "nghttp2_frame_settings_init": {
            "offset": "0x38910"
        },
        "nghttp2_frame_trail_padlen": {
            "offset": "0x38940"
        },
        "nghttp2_frame_unpack_altsvc_payload": {
            "offset": "0x38960"
        },
        "nghttp2_frame_unpack_frame_hd": {
            "offset": "0x38980"
        },
        "nghttp2_frame_unpack_goaway_payload": {
            "offset": "0x389D0"
        },
        "nghttp2_frame_unpack_headers_payload": {
            "offset": "0x38A30"
        },
        "nghttp2_frame_unpack_origin_payload": {
            "offset": "0x38AB0"
        },
        "nghttp2_frame_unpack_ping_payload": {
            "offset": "0x38BF0"
        },
        "nghttp2_frame_unpack_priority_payload": {
            "offset": "0x38C00"
        },
        "nghttp2_frame_unpack_priority_update_payload": {
            "offset": "0x38C50"
        },
        "nghttp2_frame_unpack_push_promise_payload": {
            "offset": "0x38CB0"
        },
        "nghttp2_frame_unpack_rst_stream_payload": {
            "offset": "0x38CE0"
        },
        "nghttp2_frame_unpack_settings_entry": {
            "offset": "0x38D00"
        },
        "nghttp2_frame_unpack_settings_payload": {
            "offset": "0x38D40"
        },
        "nghttp2_frame_unpack_window_update_payload": {
            "offset": "0x38D50"
        },
        "nghttp2_frame_window_update_free": {
            "offset": "0x3A40"
        },
        "nghttp2_frame_window_update_init": {
            "offset": "0x38D70"
        },
        "nghttp2_get_uint16": {
            "offset": "0x3A3F0"
        },
        "nghttp2_get_uint32": {
            "offset": "0x3A410"
        },
        "nghttp2_hd_deflate_bound": {
            "offset": "0x36060"
        },
        "nghttp2_hd_deflate_change_table_size": {
            "offset": "0x361A0"
        },
        "nghttp2_hd_deflate_free": {
            "offset": "0x361F0"
        },
        "nghttp2_hd_deflate_hd_bufs": {
            "offset": "0x36200"
        },
        "nghttp2_hd_deflate_init2": {
            "offset": "0x362D0"
        },
        "nghttp2_hd_huff_decode": {
            "offset": "0x3B4E0"
        },
        "nghttp2_hd_huff_decode_context_init": {
            "offset": "0x3B5C0"
        },
        "nghttp2_hd_huff_decode_failure_state": {
            "offset": "0x3B5D0"
        },
        "nghttp2_hd_huff_encode": {
            "offset": "0x3B5E0"
        },
        "nghttp2_hd_huff_encode_count": {
            "offset": "0x3B750"
        },
        "nghttp2_hd_inflate_change_table_size": {
            "offset": "0x36340"
        },
        "nghttp2_hd_inflate_end_headers": {
            "offset": "0x36420"
        },
        "nghttp2_hd_inflate_free": {
            "offset": "0x36470"
        },
        "nghttp2_hd_inflate_hd_nv": {
            "offset": "0x364D0"
        },
        "nghttp2_hd_inflate_init": {
            "offset": "0x36EF0"
        },
        "nghttp2_http_on_data_chunk": {
            "offset": "0x3AC50"
        },
        "nghttp2_http_on_header": {
            "offset": "0x3AC90"
        },
        "nghttp2_http_on_remote_end_stream": {
            "offset": "0x3AF80"
        },
        "nghttp2_http_on_request_headers": {
            "offset": "0x3AFB0"
        },
        "nghttp2_http_on_response_headers": {
            "offset": "0x3B050"
        },
        "nghttp2_http_on_trailer_headers": {
            "offset": "0x3B0E0"
        },
        "nghttp2_http_parse_priority": {
            "offset": "0x3B0F0"
        },
        "nghttp2_http_record_request_method": {
            "offset": "0x3B1A0"
        },
        "nghttp2_iv_check": {
            "offset": "0x38D90"
        },
        "nghttp2_map_each": {
            "offset": "0x37420"
        },
        "nghttp2_map_each_free": {
            "offset": "0x37490"
        },
        "nghttp2_map_find": {
            "offset": "0x37500"
        },
        "nghttp2_map_free": {
            "offset": "0x375B0"
        },
        "nghttp2_map_init": {
            "offset": "0x375D0"
        },
        "nghttp2_map_insert": {
            "offset": "0x375F0"
        },
        "nghttp2_map_remove": {
            "offset": "0x37690"
        },
        "nghttp2_map_size": {
            "offset": "0x377E0"
        },
        "nghttp2_mem_calloc": {
            "offset": "0x37160"
        },
        "nghttp2_mem_default": {
            "offset": "0x37180"
        },
        "nghttp2_mem_free": {
            "offset": "0x37190"
        },
        "nghttp2_mem_free2": {
            "offset": "0x371A0"
        },
        "nghttp2_mem_malloc": {
            "offset": "0x371B0"
        },
        "nghttp2_mem_realloc": {
            "offset": "0x371C0"
        },
        "nghttp2_nv_array_copy": {
            "offset": "0x38DF0"
        },
        "nghttp2_nv_array_del": {
            "offset": "0x38F60"
        },
        "nghttp2_outbound_item_free": {
            "offset": "0x38F90"
        },
        "nghttp2_outbound_item_init": {
            "offset": "0x39040"
        },
        "nghttp2_outbound_queue_pop": {
            "offset": "0x39070"
        },
        "nghttp2_outbound_queue_push": {
            "offset": "0x390A0"
        },
        "nghttp2_pq_empty": {
            "offset": "0x39200"
        },
        "nghttp2_pq_free": {
            "offset": "0x39210"
        },
        "nghttp2_pq_init": {
            "offset": "0x39240"
        },
        "nghttp2_pq_push": {
            "offset": "0x39260"
        },
        "nghttp2_pq_remove": {
            "offset": "0x39300"
        },
        "nghttp2_pq_size": {
            "offset": "0x377E0"
        },
        "nghttp2_pq_top": {
            "offset": "0x393B0"
        },
        "nghttp2_priority_spec_default_init": {
            "offset": "0x34570"
        },
        "nghttp2_priority_spec_init": {
            "offset": "0x34590"
        },
        "nghttp2_priority_spec_normalize_weight": {
            "offset": "0x345A0"
        },
        "nghttp2_put_uint16be": {
            "offset": "0x3A440"
        },
        "nghttp2_put_uint32be": {
            "offset": "0x3A460"
        },
        "nghttp2_ratelim_drain": {
            "offset": "0x3A190"
        },
        "nghttp2_ratelim_init": {
            "offset": "0x3A1B0"
        },
        "nghttp2_ratelim_update": {
            "offset": "0x3A1D0"
        },
        "nghttp2_rcbuf_decref": {
            "offset": "0x3B360"
        },
        "nghttp2_rcbuf_incref": {
            "offset": "0x3B390"
        },
        "nghttp2_rcbuf_new": {
            "offset": "0x3B3A0"
        },
        "nghttp2_rcbuf_new2": {
            "offset": "0x3B430"
        },
        "nghttp2_session_add_goaway": {
            "offset": "0x2B6D0"
        },
        "nghttp2_session_add_item": {
            "offset": "0x2B820"
        },
        "nghttp2_session_add_rst_stream": {
            "offset": "0x2BA00"
        },
        "nghttp2_session_add_settings": {
            "offset": "0x2BB60"
        },
        "nghttp2_session_add_window_update": {
            "offset": "0x2BE40"
        },
        "nghttp2_session_adjust_idle_stream": {
            "offset": "0x2BEF0"
        },
        "nghttp2_session_callbacks_del": {
            "offset": "0x344B0"
        },
        "nghttp2_session_callbacks_new": {
            "offset": "0x344C0"
        },
        "nghttp2_session_callbacks_set_on_begin_headers_callback": {
            "offset": "0x34500"
        },
        "nghttp2_session_callbacks_set_on_data_chunk_recv_callback": {
            "offset": "0x34510"
        },
        "nghttp2_session_callbacks_set_on_frame_recv_callback": {
            "offset": "0x34520"
        },
        "nghttp2_session_callbacks_set_on_header_callback": {
            "offset": "0x34530"
        },
        "nghttp2_session_callbacks_set_on_stream_close_callback": {
            "offset": "0x34540"
        },
        "nghttp2_session_callbacks_set_send_callback": {
            "offset": "0x34550"
        },
        "nghttp2_session_callbacks_set_send_data_callback": {
            "offset": "0x34560"
        },
        "nghttp2_session_close_stream": {
            "offset": "0x2C030"
        },
        "nghttp2_session_consume": {
            "offset": "0x2C1D0"
        },
        "nghttp2_session_del": {
            "offset": "0x2C2B0"
        },
        "nghttp2_session_destroy_stream": {
            "offset": "0x2C470"
        },
        "nghttp2_session_get_stream": {
            "offset": "0x2C510"
        },
        "nghttp2_session_get_stream_user_data": {
            "offset": "0x2C550"
        },
        "nghttp2_session_mem_recv": {
            "offset": "0x2C590"
        },
        "nghttp2_session_mem_recv2": {
            "offset": "0x2C5A0"
        },
        "nghttp2_session_mem_send_internal": {
            "offset": "0x2E350"
        },
        "nghttp2_session_on_goaway_received": {
            "offset": "0x2E960"
        },
        "nghttp2_session_on_headers_received": {
            "offset": "0x2EAE0"
        },
        "nghttp2_session_on_ping_received": {
            "offset": "0x2EC30"
        },
        "nghttp2_session_on_priority_received": {
            "offset": "0x2EDD0"
        },
        "nghttp2_session_on_priority_update_received": {
            "offset": "0x2EFD0"
        },
        "nghttp2_session_on_push_promise_received": {
            "offset": "0x2F330"
        },
        "nghttp2_session_on_push_response_headers_received": {
            "offset": "0x2F6B0"
        },
        "nghttp2_session_on_request_headers_received": {
            "offset": "0x2F960"
        },
        "nghttp2_session_on_response_headers_received": {
            "offset": "0x2FD40"
        },
        "nghttp2_session_on_rst_stream_received": {
            "offset": "0x2FE70"
        },
        "nghttp2_session_on_settings_received": {
            "offset": "0x30080"
        },
        "nghttp2_session_open_stream": {
            "offset": "0x309B0"
        },
        "nghttp2_session_pack_data": {
            "offset": "0x30DB0"
        },
        "nghttp2_session_predicate_data_send": {
            "offset": "0x310A0"
        },
        "nghttp2_session_reprioritize_stream": {
            "offset": "0x31170"
        },
        "nghttp2_session_resume_data": {
            "offset": "0x312B0"
        },
        "nghttp2_session_send": {
            "offset": "0x31350"
        },
        "nghttp2_session_server_new": {
            "offset": "0x31430"
        },
        "nghttp2_session_set_stream_user_data": {
            "offset": "0x31480"
        },
        "nghttp2_session_update_recv_connection_window_size": {
            "offset": "0x31540"
        },
        "nghttp2_session_update_recv_stream_window_size": {
            "offset": "0x31620"
        },
        "nghttp2_should_send_window_update": {
            "offset": "0x3A490"
        },
        "nghttp2_stream_attach_item": {
            "offset": "0x393D0"
        },
        "nghttp2_stream_change_weight": {
            "offset": "0x39410"
        },
        "nghttp2_stream_check_deferred_by_flow_control": {
            "offset": "0x39510"
        },
        "nghttp2_stream_check_deferred_item": {
            "offset": "0x39530"
        },
        "nghttp2_stream_defer_item": {
            "offset": "0x39550"
        },
        "nghttp2_stream_dep_add": {
            "offset": "0x39590"
        },
        "nghttp2_stream_dep_add_subtree": {
            "offset": "0x395C0"
        },
        "nghttp2_stream_dep_find_ancestor": {
            "offset": "0x396A0"
        },
        "nghttp2_stream_dep_insert": {
            "offset": "0x396C0"
        },
        "nghttp2_stream_dep_insert_subtree": {
            "offset": "0x397E0"
        },
        "nghttp2_stream_dep_remove": {
            "offset": "0x39920"
        },
        "nghttp2_stream_dep_remove_subtree": {
            "offset": "0x39B70"
        },
        "nghttp2_stream_detach_item": {
            "offset": "0x39BF0"
        },
        "nghttp2_stream_free": {
            "offset": "0x39C40"
        },
        "nghttp2_stream_in_dep_tree": {
            "offset": "0x39C50"
        },
        "nghttp2_stream_init": {
            "offset": "0x39C80"
        },
        "nghttp2_stream_next_outbound_item": {
            "offset": "0x39D90"
        },
        "nghttp2_stream_promise_fulfilled": {
            "offset": "0x39E00"
        },
        "nghttp2_stream_reschedule": {
            "offset": "0x39E20"
        },
        "nghttp2_stream_resume_deferred_item": {
            "offset": "0x39EC0"
        },
        "nghttp2_stream_shutdown": {
            "offset": "0x39EE0"
        },
        "nghttp2_stream_update_local_initial_window_size": {
            "offset": "0x39EF0"
        },
        "nghttp2_stream_update_remote_initial_window_size": {
            "offset": "0x39F30"
        },
        "nghttp2_submit_data_shared": {
            "offset": "0x34150"
        },
        "nghttp2_submit_response": {
            "offset": "0x34220"
        },
        "nghttp2_submit_settings": {
            "offset": "0x342C0"
        },
        "nghttp2_time_now_sec": {
            "offset": "0x3B340"
        },
        "parse_headers": {
            "offset": "0x2A920"
        },
        "parse_http_version": {
            "offset": "0x2AAE0"
        },
        "parse_request": {
            "offset": "0x2AB40"
        },
        "parse_uint": {
            "offset": "0x3B290"
        },
        "parser_bare_item": {
            "offset": "0x3B850"
        },
        "parser_key": {
            "offset": "0x3BD80"
        },
        "parser_next_key_or_item": {
            "offset": "0x3BEE0"
        },
        "parser_number": {
            "offset": "0x3BF60"
        },
        "parser_skip_inner_list": {
            "offset": "0x3C170"
        },
        "parser_skip_params": {
            "offset": "0x3C280"
        },
        "phr_decode_chunked": {
            "offset": "0x2ACF0"
        },
        "phr_parse_request": {
            "offset": "0x2AF20"
        },
        "qwords": {
            "qword_0x0": {
                "address": "0x7FFA9A270000",
                "current_value": "0x300905A4D",
                "resolved_name": "_Black",
                "rva": "0x0",
                "type": "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::TLSServerStream> > >::_Redbl"
            },
            "qword_0x3DDA0": {
                "address": "0x7FFA9A2ADDA0",
                "current_value": "0xCCCCCCCCCCCCE0FF",
                "resolved_name": "_guard_dispatch_icall_nop",
                "rva": "0x3DDA0"
            },
            "qword_0x3DDC0": {
                "address": "0x7FFA9A2ADDC0",
                "current_value": "0xCCCC000037AA25FF",
                "resolved_name": "_guard_xfg_dispatch_icall_nop",
                "rva": "0x3DDC0"
            },
            "qword_0x41560": {
                "address": "0x7FFA9A2B1560",
                "current_value": "0x7FFA9A273A40",
                "resolved_name": "__guard_check_icall_fptr",
                "rva": "0x41560"
            },
            "qword_0x41568": {
                "address": "0x7FFA9A2B1568",
                "current_value": "0x7FFA9A273A40",
                "resolved_name": "__guard_xfg_check_icall_fptr",
                "rva": "0x41568"
            },
            "qword_0x41570": {
                "address": "0x7FFA9A2B1570",
                "current_value": "0x7FFA9A2ADDA0",
                "resolved_name": "__guard_dispatch_icall_fptr",
                "rva": "0x41570"
            },
            "qword_0x41578": {
                "address": "0x7FFA9A2B1578",
                "current_value": "0x7FFA9A2ADDC0",
                "resolved_name": "__guard_xfg_dispatch_icall_fptr",
                "rva": "0x41578"
            },
            "qword_0x41580": {
                "address": "0x7FFA9A2B1580",
                "current_value": "0x7FFA9A2ADDC0",
                "resolved_name": "__guard_xfg_table_dispatch_icall_fptr",
                "rva": "0x41580"
            },
            "qword_0x41588": {
                "address": "0x7FFA9A2B1588",
                "current_value": "0x0",
                "resolved_name": "__castguard_check_failure_os_handled_fptr",
                "rva": "0x41588"
            },
            "qword_0x41590": {
                "address": "0x7FFA9A2B1590",
                "current_value": "0x7FFA9A2ADCE0",
                "resolved_name": "__guard_memcpy_fptr",
                "rva": "0x41590"
            },
            "qword_0x41598": {
                "address": "0x7FFA9A2B1598",
                "current_value": "0x0",
                "resolved_name": "__xc_a",
                "rva": "0x41598",
                "type": ""
            },
            "qword_0x415A0": {
                "address": "0x7FFA9A2B15A0",
                "current_value": "0x7FFA9A271914",
                "resolved_name": "std::_Fac_tidy_reg$initializer$",
                "rva": "0x415A0"
            },
            "qword_0x415A8": {
                "address": "0x7FFA9A2B15A8",
                "current_value": "0x7FFA9A2718D0",
                "resolved_name": "initIoBuf$initializer$",
                "rva": "0x415A8"
            },
            "qword_0x415B0": {
                "address": "0x7FFA9A2B15B0",
                "current_value": "0x7FFA9A271000",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x415B0"
            },
            "qword_0x415B8": {
                "address": "0x7FFA9A2B15B8",
                "current_value": "0x7FFA9A271030",
                "resolved_name": "xbr::kGameBuildUniquifiers$initializer$",
                "rva": "0x415B8"
            },
            "qword_0x415C0": {
                "address": "0x7FFA9A2B15C0",
                "current_value": "0x7FFA9A2711E0",
                "resolved_name": "_init_instance_0$initializer$",
                "rva": "0x415C0"
            },
            "qword_0x415C8": {
                "address": "0x7FFA9A2B15C8",
                "current_value": "0x7FFA9A271200",
                "resolved_name": "net::httpStatuses$initializer$",
                "rva": "0x415C8"
            },
            "qword_0x415D0": {
                "address": "0x7FFA9A2B15D0",
                "current_value": "0x0",
                "resolved_name": "__xc_z",
                "rva": "0x415D0",
                "type": ""
            },
            "qword_0x415D8": {
                "address": "0x7FFA9A2B15D8",
                "current_value": "0x0",
                "resolved_name": "__xd_a",
                "rva": "0x415D8"
            },
            "qword_0x415E0": {
                "address": "0x7FFA9A2B15E0",
                "current_value": "0x7FFA9A2711B0",
                "resolved_name": "g_thisError$initializer$",
                "rva": "0x415E0"
            },
            "qword_0x415E8": {
                "address": "0x7FFA9A2B15E8",
                "current_value": "0x0",
                "resolved_name": "__xd_z",
                "rva": "0x415E8"
            },
            "qword_0x415F0": {
                "address": "0x7FFA9A2B15F0",
                "current_value": "0x0",
                "resolved_name": "__xi_a",
                "rva": "0x415F0",
                "type": ""
            },
            "qword_0x415F8": {
                "address": "0x7FFA9A2B15F8",
                "current_value": "0x7FFA9A2AC850",
                "resolved_name": "__scrt_initialize_tss_var",
                "rva": "0x415F8"
            },
            "qword_0x41600": {
                "address": "0x7FFA9A2B1600",
                "current_value": "0x0",
                "resolved_name": "__xi_z",
                "rva": "0x41600",
                "type": ""
            },
            "qword_0x41608": {
                "address": "0x7FFA9A2B1608",
                "current_value": "0x0",
                "resolved_name": "__xl_a",
                "rva": "0x41608"
            },
            "qword_0x41610": {
                "address": "0x7FFA9A2B1610",
                "current_value": "0x7FFA9A2AC7A4",
                "resolved_name": "__xl_c",
                "rva": "0x41610"
            },
            "qword_0x41618": {
                "address": "0x7FFA9A2B1618",
                "current_value": "0x7FFA9A2ACED8",
                "resolved_name": "__xl_d",
                "rva": "0x41618"
            },
            "qword_0x41620": {
                "address": "0x7FFA9A2B1620",
                "current_value": "0x0",
                "resolved_name": "__xl_z",
                "rva": "0x41620"
            },
            "qword_0x41628": {
                "address": "0x7FFA9A2B1628",
                "current_value": "0x0",
                "resolved_name": "__xp_a",
                "rva": "0x41628",
                "type": ""
            },
            "qword_0x41630": {
                "address": "0x7FFA9A2B1630",
                "current_value": "0x0",
                "resolved_name": "__xp_z",
                "rva": "0x41630",
                "type": ""
            },
            "qword_0x41638": {
                "address": "0x7FFA9A2B1638",
                "current_value": "0x0",
                "resolved_name": "__xt_a",
                "rva": "0x41638",
                "type": ""
            },
            "qword_0x41640": {
                "address": "0x7FFA9A2B1640",
                "current_value": "0x0",
                "resolved_name": "__xt_z",
                "rva": "0x41640",
                "type": ""
            },
            "qword_0x41780": {
                "address": "0x7FFA9A2B1780",
                "current_value": "0x7FFA9A27D610",
                "resolved_name": "std::exception::`vftable'",
                "rva": "0x41780",
                "type": ""
            },
            "qword_0x41798": {
                "address": "0x7FFA9A2B1798",
                "current_value": "0x7FFA9A27D610",
                "resolved_name": "std::bad_alloc::`vftable'",
                "rva": "0x41798",
                "type": ""
            },
            "qword_0x417B0": {
                "address": "0x7FFA9A2B17B0",
                "current_value": "0x7FFA9A27D610",
                "resolved_name": "std::bad_array_new_length::`vftable'",
                "rva": "0x417B0",
                "type": ""
            },
            "qword_0x417C8": {
                "address": "0x7FFA9A2B17C8",
                "current_value": "0x7FFA9A27D610",
                "resolved_name": "std::runtime_error::`vftable'",
                "rva": "0x417C8",
                "type": ""
            },
            "qword_0x417E0": {
                "address": "0x7FFA9A2B17E0",
                "current_value": "0x7FFA9A27D610",
                "resolved_name": "std::bad_cast::`vftable'",
                "rva": "0x417E0",
                "type": ""
            },
            "qword_0x417F8": {
                "address": "0x7FFA9A2B17F8",
                "current_value": "0x7FFA9A295840",
                "resolved_name": "std::numpunct<char>::`vftable'",
                "rva": "0x417F8",
                "type": ""
            },
            "qword_0x41840": {
                "address": "0x7FFA9A2B1840",
                "current_value": "0x7FFA9A27D610",
                "resolved_name": "fmt::v8::format_error::`vftable'",
                "rva": "0x41840",
                "type": ""
            },
            "qword_0x41878": {
                "address": "0x7FFA9A2B1878",
                "current_value": "0x7FFA9A27D830",
                "resolved_name": "fmt::v8::basic_memory_buffer<char,500,std::allocator<char> >::`vftable'",
                "rva": "0x41878",
                "type": ""
            },
            "qword_0x41BF8": {
                "address": "0x7FFA9A2B1BF8",
                "current_value": "0x7FFA9A296090",
                "resolved_name": "fmt::v8::basic_memory_buffer<unsigned int,32,std::allocator<unsigned int> >::`vftable'",
                "rva": "0x41BF8",
                "type": ""
            },
            "qword_0x426C8": {
                "address": "0x7FFA9A2B26C8",
                "current_value": "0x7FFA9A2991C0",
                "resolved_name": "utf8::exception::`vftable'",
                "rva": "0x426C8",
                "type": ""
            },
            "qword_0x426E0": {
                "address": "0x7FFA9A2B26E0",
                "current_value": "0x7FFA9A299210",
                "resolved_name": "utf8::invalid_code_point::`vftable'",
                "rva": "0x426E0",
                "type": ""
            },
            "qword_0x42710": {
                "address": "0x7FFA9A2B2710",
                "current_value": "0x7FFA9A299210",
                "resolved_name": "utf8::invalid_utf8::`vftable'",
                "rva": "0x42710",
                "type": ""
            },
            "qword_0x42738": {
                "address": "0x7FFA9A2B2738",
                "current_value": "0x7FFA9A2991C0",
                "resolved_name": "utf8::not_enough_room::`vftable'",
                "rva": "0x42738",
                "type": ""
            },
            "qword_0x427D8": {
                "address": "0x7FFA9A2B27D8",
                "current_value": "0x7FFA9A283E40",
                "resolved_name": "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'",
                "rva": "0x427D8",
                "type": ""
            },
            "qword_0x42858": {
                "address": "0x7FFA9A2B2858",
                "current_value": "0x7FFA9A288280",
                "resolved_name": "std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'",
                "rva": "0x42858",
                "type": ""
            },
            "qword_0x428C0": {
                "address": "0x7FFA9A2B28C0",
                "current_value": "0x7FFA9A27E6F0",
                "resolved_name": "fwRefCountable::`vftable'",
                "rva": "0x428C0",
                "type": ""
            },
            "qword_0x42A30": {
                "address": "0x7FFA9A2B2A30",
                "current_value": "0x0",
                "resolved_name": "static_in",
                "rva": "0x42A30",
                "type": ""
            },
            "qword_0x43490": {
                "address": "0x7FFA9A2B3490",
                "current_value": "0x0",
                "resolved_name": "static_table",
                "rva": "0x43490",
                "type": ""
            },
            "qword_0x45680": {
                "address": "0x7FFA9A2B5680",
                "current_value": "0x706050403020100",
                "resolved_name": "DOWNCASE_TBL",
                "rva": "0x45680",
                "type": ""
            },
            "qword_0x45780": {
                "address": "0x7FFA9A2B5780",
                "current_value": "0x0",
                "resolved_name": "VALID_HD_NAME_CHARS",
                "rva": "0x45780",
                "type": ""
            },
            "qword_0x45B80": {
                "address": "0x7FFA9A2B5B80",
                "current_value": "0x0",
                "resolved_name": "VALID_HD_VALUE_CHARS",
                "rva": "0x45B80",
                "type": ""
            },
            "qword_0x463B0": {
                "address": "0x7FFA9A2B63B0",
                "current_value": "0xFFC000000000000D",
                "resolved_name": "huff_sym_table",
                "rva": "0x463B0",
                "type": ""
            },
            "qword_0x46BC0": {
                "address": "0x7FFA9A2B6BC0",
                "current_value": "0x500000004",
                "resolved_name": "huff_decode_table",
                "rva": "0x46BC0",
                "type": ""
            },
            "qword_0x4AC10": {
                "address": "0x7FFA9A2BAC10",
                "current_value": "0x7FFA9A2AC7A4",
                "resolved_name": "__dyn_tls_init_callback",
                "rva": "0x4AC10"
            },
            "qword_0x4ACD0": {
                "address": "0x7FFA9A2BACD0",
                "current_value": "0x7FFA9A2ACEA4",
                "resolved_name": "type_info::`vftable'",
                "rva": "0x4ACD0",
                "type": ""
            },
            "qword_0x4ACD8": {
                "address": "0x7FFA9A2BACD8",
                "current_value": "0x7FFA9A2ACED8",
                "resolved_name": "__dyn_tls_dtor_callback",
                "rva": "0x4ACD8"
            },
            "qword_0x4ACE0": {
                "address": "0x7FFA9A2BACE0",
                "current_value": "0x0",
                "resolved_name": "_pRawDllMain",
                "rva": "0x4ACE0"
            },
            "qword_0x4ACE8": {
                "address": "0x7FFA9A2BACE8",
                "current_value": "0x7FFA9A2CE4B0",
                "resolved_name": "GS_ExceptionPointers",
                "rva": "0x4ACE8",
                "type": "_EXCEPTION_POINTERS"
            },
            "qword_0x4AF10": {
                "address": "0x7FFA9A2BAF10",
                "current_value": "0x3330323031303030",
                "resolved_name": "fmt::v8::detail::basic_data<void>::digits",
                "rva": "0x4AF10",
                "type": ""
            },
            "qword_0x4AFF0": {
                "address": "0x7FFA9A2BAFF0",
                "current_value": "0x3736353433323130",
                "resolved_name": "fmt::v8::detail::basic_data<void>::hex_digits",
                "rva": "0x4AFF0",
                "type": ""
            },
            "qword_0x4B120": {
                "address": "0x7FFA9A2BB120",
                "current_value": "0x1001F00",
                "resolved_name": "fmt::v8::detail::basic_data<void>::right_padding_shifts",
                "rva": "0x4B120",
                "type": ""
            },
            "qword_0x4B128": {
                "address": "0x7FFA9A2BB128",
                "current_value": "0x1001F1F",
                "resolved_name": "fmt::v8::detail::basic_data<void>::left_padding_shifts",
                "rva": "0x4B128",
                "type": ""
            },
            "qword_0x4B130": {
                "address": "0x7FFA9A2BB130",
                "current_value": "0x736C6166202B2D00",
                "resolved_name": "fmt::v8::detail::basic_data<void>::signs",
                "rva": "0x4B130",
                "type": ""
            },
            "qword_0x4B148": {
                "address": "0x7FFA9A2BB148",
                "current_value": "0x0",
                "resolved_name": "fmt::v8::detail::basic_data<void>::prefixes",
                "rva": "0x4B148",
                "type": ""
            },
            "qword_0x4B340": {
                "address": "0x7FFA9A2BB340",
                "current_value": "0x0",
                "resolved_name": "rapidjson::GenericStringRef<char>::emptyString",
                "rva": "0x4B340",
                "type": ""
            },
            "qword_0x4B970": {
                "address": "0x7FFA9A2BB970",
                "current_value": "0x7FFA9A27E6F0",
                "resolved_name": "ComponentInstance::`vftable'",
                "rva": "0x4B970",
                "type": ""
            },
            "qword_0x4BD18": {
                "address": "0x7FFA9A2BBD18",
                "current_value": "0x7FFA9A286FB0",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>::`vftable'",
                "rva": "0x4BD18",
                "type": ""
            },
            "qword_0x4BD50": {
                "address": "0x7FFA9A2BBD50",
                "current_value": "0x7FFA9A287090",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_4754e20f32c011c851bec0c2c0f389ea>,void,std::vector<unsigned char,std::allocator<unsigned char> > const &>::`vftable'",
                "rva": "0x4BD50",
                "type": ""
            },
            "qword_0x4BD88": {
                "address": "0x7FFA9A2BBD88",
                "current_value": "0x7FFA9A286840",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_50486ce660c6b89862070fd3ecc361c3>,void>::`vftable'",
                "rva": "0x4BD88",
                "type": ""
            },
            "qword_0x4BDC0": {
                "address": "0x7FFA9A2BBDC0",
                "current_value": "0x7FFA9A285960",
                "resolved_name": "std::_Ref_count_obj2<net::HttpState>::`vftable'",
                "rva": "0x4BDC0",
                "type": ""
            },
            "qword_0x4BDE8": {
                "address": "0x7FFA9A2BBDE8",
                "current_value": "0x7FFA9A2859A0",
                "resolved_name": "std::_Ref_count_obj2<`net::HttpServerImpl::OnConnection'::`2'::HttpConnectionData>::`vftable'",
                "rva": "0x4BDE8",
                "type": ""
            },
            "qword_0x4BE38": {
                "address": "0x7FFA9A2BBE38",
                "current_value": "0x7FFA9A27F220",
                "resolved_name": "net::HttpServerImpl::`vftable'",
                "rva": "0x4BE38",
                "type": ""
            },
            "qword_0x4BE78": {
                "address": "0x7FFA9A2BBE78",
                "current_value": "0x7FFA9A280EF0",
                "resolved_name": "net::Http1Response::`vftable'",
                "rva": "0x4BE78",
                "type": ""
            },
            "qword_0x4BEE8": {
                "address": "0x7FFA9A2BBEE8",
                "current_value": "0x7FFA9A27F160",
                "resolved_name": "net::Http2ServerImpl::`vftable'",
                "rva": "0x4BEE8",
                "type": ""
            },
            "qword_0x4BF20": {
                "address": "0x7FFA9A2BBF20",
                "current_value": "0x7FFA9A27F160",
                "resolved_name": "net::HttpServer::`vftable'",
                "rva": "0x4BF20",
                "type": ""
            },
            "qword_0x4BF70": {
                "address": "0x7FFA9A2BBF70",
                "current_value": "0x7FFA9A27D610",
                "resolved_name": "std::bad_function_call::`vftable'",
                "rva": "0x4BF70",
                "type": ""
            },
            "qword_0x4BFB0": {
                "address": "0x7FFA9A2BBFB0",
                "current_value": "0x7FFA9A28E630",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_42bc3a9fedd14d5d8711b36b64594d8d>,void>::`vftable'",
                "rva": "0x4BFB0",
                "type": ""
            },
            "qword_0x4BFE8": {
                "address": "0x7FFA9A2BBFE8",
                "current_value": "0x7FFA9A28E700",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_2216da669bbbb01c39e021a6eb471ef3>,void,std::vector<unsigned char,std::allocator<unsigned char> > const &>::`vftable'",
                "rva": "0x4BFE8",
                "type": ""
            },
            "qword_0x4C020": {
                "address": "0x7FFA9A2BC020",
                "current_value": "0x7FFA9A28DD40",
                "resolved_name": "std::_Ref_count_obj2<net::h2::HttpConnectionData>::`vftable'",
                "rva": "0x4C020",
                "type": ""
            },
            "qword_0x4C048": {
                "address": "0x7FFA9A2BC048",
                "current_value": "0x7FFA9A28DD10",
                "resolved_name": "std::_Ref_count_obj2<nghttp2_session_wrap>::`vftable'",
                "rva": "0x4C048",
                "type": ""
            },
            "qword_0x4C070": {
                "address": "0x7FFA9A2BC070",
                "current_value": "0x7FFA9A28BD40",
                "resolved_name": "net::h2::HttpRequestData::`vftable'",
                "rva": "0x4C070",
                "type": ""
            },
            "qword_0x4C090": {
                "address": "0x7FFA9A2BC090",
                "current_value": "0x7FFA9A2899B0",
                "resolved_name": "net::Http2Response::`vftable'",
                "rva": "0x4C090",
                "type": ""
            },
            "qword_0x4C448": {
                "address": "0x7FFA9A2BC448",
                "current_value": "0x7FFA9A291E40",
                "resolved_name": "std::_Func_impl_no_alloc<<lambda_e1b6649d28fba198c45b3f2f66e655be>,void,fwRefContainer<net::TcpServerStream> >::`vftable'",
                "rva": "0x4C448",
                "type": ""
            },
            "qword_0x4C480": {
                "address": "0x7FFA9A2BC480",
                "current_value": "0x7FFA9A291CC0",
                "resolved_name": "std::_Ref_count_obj2<std::function<void __cdecl(std::vector<unsigned char,std::allocator<unsigned char> > const &)> >::`vftable'",
                "rva": "0x4C480",
                "type": ""
            },
            "qword_0x4C4A8": {
                "address": "0x7FFA9A2BC4A8",
                "current_value": "0x7FFA9A290C80",
                "resolved_name": "net::HttpResponse::`vftable'",
                "rva": "0x4C4A8",
                "type": ""
            },
            "qword_0x4C518": {
                "address": "0x7FFA9A2BC518",
                "current_value": "0x7FFA9A290E70",
                "resolved_name": "net::HttpRequest::`vftable'",
                "rva": "0x4C518",
                "type": ""
            },
            "qword_0x4DCA0": {
                "address": "0x7FFA9A2BDCA0",
                "current_value": "0x140",
                "resolved_name": "_load_config_used",
                "rva": "0x4DCA0",
                "type": "_RS5_IMAGE_LOAD_CONFIG_DIRECTORY64"
            },
            "qword_0x4DE80": {
                "address": "0x7FFA9A2BDE80",
                "current_value": "0x7FFA9A2BFDA0",
                "resolved_name": "_tls_used",
                "rva": "0x4DE80",
                "type": "_IMAGE_TLS_DIRECTORY64"
            },
            "qword_0x4F834": {
                "address": "0x7FFA9A2BF834",
                "current_value": "0x8002800200000018",
                "resolved_name": "__volatile_metadata",
                "rva": "0x4F834"
            },
            "qword_0x4FD80": {
                "address": "0x7FFA9A2BFD80",
                "current_value": "0x0",
                "resolved_name": "__rtc_iaa",
                "rva": "0x4FD80",
                "type": ""
            },
            "qword_0x4FD88": {
                "address": "0x7FFA9A2BFD88",
                "current_value": "0x0",
                "resolved_name": "__rtc_izz",
                "rva": "0x4FD88",
                "type": ""
            },
            "qword_0x4FD90": {
                "address": "0x7FFA9A2BFD90",
                "current_value": "0x0",
                "resolved_name": "__rtc_taa",
                "rva": "0x4FD90",
                "type": ""
            },
            "qword_0x4FD98": {
                "address": "0x7FFA9A2BFD98",
                "current_value": "0x0",
                "resolved_name": "__rtc_tzz",
                "rva": "0x4FD98",
                "type": ""
            },
            "qword_0x4FDA0": {
                "address": "0x7FFA9A2BFDA0",
                "current_value": "0x0",
                "resolved_name": "_tls_start",
                "rva": "0x4FDA0"
            },
            "qword_0x4FFD8": {
                "address": "0x7FFA9A2BFFD8",
                "current_value": "0x0",
                "resolved_name": "_tls_end",
                "rva": "0x4FFD8"
            },
            "qword_0x56260": {
                "address": "0x7FFA9A2C6260",
                "current_value": "0x1040900000001",
                "resolved_name": "$xdatasym",
                "rva": "0x56260"
            },
            "qword_0x563D0": {
                "address": "0x7FFA9A2C63D0",
                "current_value": "0x120400010401",
                "resolved_name": "$xdatasym",
                "rva": "0x563D0"
            },
            "qword_0x56408": {
                "address": "0x7FFA9A2C6408",
                "current_value": "0x1",
                "resolved_name": "$xdatasym",
                "rva": "0x56408"
            },
            "qword_0x56410": {
                "address": "0x7FFA9A2C6410",
                "current_value": "0x1",
                "resolved_name": "$xdatasym",
                "rva": "0x56410"
            },
            "qword_0x5A000": {
                "address": "0x7FFA9A2CA000",
                "current_value": "0x7FFA9A2920F0",
                "resolved_name": "fmt::v8::instantiate_format_float",
                "rva": "0x5A000"
            },
            "qword_0x5A010": {
                "address": "0x7FFA9A2CA010",
                "current_value": "0x0",
                "resolved_name": "HostSharedData<CfxState>::m_fakeData",
                "rva": "0x5A010",
                "type": "CfxState"
            },
            "qword_0x5D070": {
                "address": "0x7FFA9A2CD070",
                "current_value": "0x7FFA9A2CE3F8",
                "resolved_name": "eastl::gpDefaultAllocator",
                "rva": "0x5D070"
            },
            "qword_0x5D078": {
                "address": "0x7FFA9A2CD078",
                "current_value": "0x7FFA9A2B28E0",
                "resolved_name": "token_char_map",
                "rva": "0x5D078"
            },
            "qword_0x5D080": {
                "address": "0x7FFA9A2CD080",
                "current_value": "0x1",
                "resolved_name": "nghttp2_enable_strict_preface",
                "rva": "0x5D080"
            },
            "qword_0x5D088": {
                "address": "0x7FFA9A2CD088",
                "current_value": "0x0",
                "resolved_name": "mem_default",
                "rva": "0x5D088",
                "type": "nghttp2_mem"
            },
            "qword_0x5D0B0": {
                "address": "0x7FFA9A2CD0B0",
                "current_value": "0x0",
                "resolved_name": "VALID_METHOD_CHARS",
                "rva": "0x5D0B0",
                "type": ""
            },
            "qword_0x5D1B0": {
                "address": "0x7FFA9A2CD1B0",
                "current_value": "0x0",
                "resolved_name": "VALID_PATH_CHARS",
                "rva": "0x5D1B0",
                "type": ""
            },
            "qword_0x5D2B0": {
                "address": "0x7FFA9A2CD2B0",
                "current_value": "0x0",
                "resolved_name": "VALID_AUTHORITY_CHARS",
                "rva": "0x5D2B0",
                "type": ""
            },
            "qword_0x5D3B0": {
                "address": "0x7FFA9A2CD3B0",
                "current_value": "0xFFFFFFFF80000006",
                "resolved_name": "_Init_global_epoch",
                "rva": "0x5D3B0"
            },
            "qword_0x5D3B4": {
                "address": "0x7FFA9A2CD3B4",
                "current_value": "0xC1D06BF5FFFFFFFF",
                "resolved_name": "__scrt_native_dllmain_reason",
                "rva": "0x5D3B4"
            },
            "qword_0x5D3B8": {
                "address": "0x7FFA9A2CD3B8",
                "current_value": "0xFFFFC7FCC1D06BF5",
                "resolved_name": "__security_cookie_complement",
                "rva": "0x5D3B8"
            },
            "qword_0x5D3C0": {
                "address": "0x7FFA9A2CD3C0",
                "current_value": "0x38033E2F940A",
                "resolved_name": "__security_cookie",
                "rva": "0x5D3C0"
            },
            "qword_0x5D3C8": {
                "address": "0x7FFA9A2CD3C8",
                "current_value": "0x9875",
                "resolved_name": "_fltused",
                "rva": "0x5D3C8"
            },
            "qword_0x5D3D0": {
                "address": "0x7FFA9A2CD3D0",
                "current_value": "0x2E00000005",
                "resolved_name": "__isa_available",
                "rva": "0x5D3D0"
            },
            "qword_0x5D3D4": {
                "address": "0x7FFA9A2CD3D4",
                "current_value": "0x80000000002E",
                "resolved_name": "__isa_enabled",
                "rva": "0x5D3D4"
            },
            "qword_0x5D3D8": {
                "address": "0x7FFA9A2CD3D8",
                "current_value": "0x8000",
                "resolved_name": "__memset_fast_string_threshold",
                "rva": "0x5D3D8"
            },
            "qword_0x5D3E0": {
                "address": "0x7FFA9A2CD3E0",
                "current_value": "0xFFFFFFFFFFFFFFFF",
                "resolved_name": "__memset_nt_threshold",
                "rva": "0x5D3E0"
            },
            "qword_0x5D3F0": {
                "address": "0x7FFA9A2CD3F0",
                "current_value": "0x1",
                "resolved_name": "__scrt_ucrt_dll_is_in_use",
                "rva": "0x5D3F0"
            },
            "qword_0x5E340": {
                "address": "0x7FFA9A2CE340",
                "current_value": "0x0",
                "resolved_name": "std::_Facetptr<std::numpunct<char> >::_Psave",
                "rva": "0x5E340"
            },
            "qword_0x5E3B8": {
                "address": "0x7FFA9A2CE3B8",
                "current_value": "0x0",
                "resolved_name": "g_initFunctions",
                "rva": "0x5E3B8"
            },
            "qword_0x5E3E0": {
                "address": "0x7FFA9A2CE3E0",
                "current_value": "0x0",
                "resolved_name": "initIoBuf",
                "rva": "0x5E3E0",
                "type": "InitIoBuf"
            },
            "qword_0x5E3E8": {
                "address": "0x7FFA9A2CE3E8",
                "current_value": "0x0",
                "resolved_name": "g_hookFunctions",
                "rva": "0x5E3E8"
            },
            "qword_0x5E3F0": {
                "address": "0x7FFA9A2CE3F0",
                "current_value": "0x0",
                "resolved_name": "g_runtimeHookFunctions",
                "rva": "0x5E3F0"
            },
            "qword_0x5E3F8": {
                "address": "0x7FFA9A2CE3F8",
                "current_value": "0x0",
                "resolved_name": "eastl::gDefaultAllocator",
                "rva": "0x5E3F8",
                "type": "eastl::allocator"
            },
            "qword_0x5E400": {
                "address": "0x7FFA9A2CE400",
                "current_value": "0x1FE8A89DA90",
                "resolved_name": "std::_Fac_head",
                "rva": "0x5E400"
            },
            "qword_0x5E408": {
                "address": "0x7FFA9A2CE408",
                "current_value": "0x0",
                "resolved_name": "std::_Fac_tidy_reg",
                "rva": "0x5E408",
                "type": "std::_Fac_tidy_reg_t"
            },
            "qword_0x5E410": {
                "address": "0x7FFA9A2CE410",
                "current_value": "0x0",
                "resolved_name": "g_tss_cv",
                "rva": "0x5E410",
                "type": "_RTL_CONDITION_VARIABLE"
            },
            "qword_0x5E418": {
                "address": "0x7FFA9A2CE418",
                "current_value": "0x0",
                "resolved_name": "g_tss_event",
                "rva": "0x5E418"
            },
            "qword_0x5E420": {
                "address": "0x7FFA9A2CE420",
                "current_value": "0xFFFFFFFFFFFFFFFF",
                "resolved_name": "g_tss_mutex",
                "rva": "0x5E420",
                "type": "_RTL_CRITICAL_SECTION"
            },
            "qword_0x5E448": {
                "address": "0x7FFA9A2CE448",
                "current_value": "0x7FFB01768340",
                "resolved_name": "g_sleep_condition_variable_cs",
                "rva": "0x5E448"
            },
            "qword_0x5E450": {
                "address": "0x7FFA9A2CE450",
                "current_value": "0x7FFB04486FD0",
                "resolved_name": "g_wake_all_condition_variable",
                "rva": "0x5E450"
            },
            "qword_0x5E458": {
                "address": "0x7FFA9A2CE458",
                "current_value": "0x2",
                "resolved_name": "__scrt_current_native_startup_state",
                "rva": "0x5E458",
                "type": "__scrt_native_startup_state"
            },
            "qword_0x5E460": {
                "address": "0x7FFA9A2CE460",
                "current_value": "0x0",
                "resolved_name": "__scrt_native_startup_lock",
                "rva": "0x5E460"
            },
            "qword_0x5E468": {
                "address": "0x7FFA9A2CE468",
                "current_value": "0x101",
                "resolved_name": "is_initialized_as_dll",
                "rva": "0x5E468"
            },
            "qword_0x5E469": {
                "address": "0x7FFA9A2CE469",
                "current_value": "0x8800000000000001",
                "resolved_name": "module_local_atexit_table_initialized",
                "rva": "0x5E469"
            },
            "qword_0x5E470": {
                "address": "0x7FFA9A2CE470",
                "current_value": "0x1CF271438AB88",
                "resolved_name": "module_local_atexit_table",
                "rva": "0x5E470",
                "type": "_onexit_table_t"
            },
            "qword_0x5E488": {
                "address": "0x7FFA9A2CE488",
                "current_value": "0x32207349FB88",
                "resolved_name": "module_local_at_quick_exit_table",
                "rva": "0x5E488",
                "type": "_onexit_table_t"
            },
            "qword_0x5E4A0": {
                "address": "0x7FFA9A2CE4A0",
                "current_value": "0x1",
                "resolved_name": "__proc_attached",
                "rva": "0x5E4A0"
            },
            "qword_0x5E4B0": {
                "address": "0x7FFA9A2CE4B0",
                "current_value": "0x0",
                "resolved_name": "GS_ExceptionRecord",
                "rva": "0x5E4B0",
                "type": "_EXCEPTION_RECORD"
            },
            "qword_0x5E550": {
                "address": "0x7FFA9A2CE550",
                "current_value": "0x0",
                "resolved_name": "GS_ContextRecord",
                "rva": "0x5E550",
                "type": "_CONTEXT"
            },
            "qword_0x5EA20": {
                "address": "0x7FFA9A2CEA20",
                "current_value": "0x200000029",
                "resolved_name": "_tls_index",
                "rva": "0x5EA20"
            },
            "qword_0x5EA24": {
                "address": "0x7FFA9A2CEA24",
                "current_value": "0x2",
                "resolved_name": "__favor",
                "rva": "0x5EA24"
            },
            "qword_0x5EA28": {
                "address": "0x7FFA9A2CEA28",
                "current_value": "0x0",
                "resolved_name": "__scrt_debugger_hook_flag",
                "rva": "0x5EA28"
            },
            "qword_0x5EA30": {
                "address": "0x7FFA9A2CEA30",
                "current_value": "0x0",
                "resolved_name": "__type_info_root_node",
                "rva": "0x5EA30",
                "type": "__type_info_node"
            },
            "qword_0x5EA58": {
                "address": "0x7FFA9A2CEA58",
                "current_value": "0x5",
                "resolved_name": "Instance<ICoreGameInit>::ms_id",
                "rva": "0x5EA58"
            },
            "qword_0x5EA60": {
                "address": "0x7FFA9A2CEA60",
                "current_value": "0x0",
                "resolved_name": "__@@_PchSym_@00@UtoUyfrowhUxucRurevnRAUOyfrowRxzxsvUyfrowUurevUlyqUivovzhvUmvgRsggkRhvieviUhgwrmxOlyq@4B2008FD98C1DD4",
                "rva": "0x5EA60"
            },
            "qword_0x5EA68": {
                "address": "0x7FFA9A2CEA68",
                "current_value": "0x1FE8A89D5D0",
                "resolved_name": "std::_Facetptr<std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave",
                "rva": "0x5EA68"
            },
            "qword_0x5EA80": {
                "address": "0x7FFA9A2CEA80",
                "current_value": "0x0",
                "resolved_name": "_init_instance_0",
                "rva": "0x5EA80",
                "type": "ComponentRegistration"
            },
            "qword_0x5EA81": {
                "address": "0x7FFA9A2CEA81",
                "current_value": "0xC000000000000000",
                "resolved_name": "_init_instance_0",
                "rva": "0x5EA81",
                "type": "ComponentRegistration"
            },
            "qword_0x5EA88": {
                "address": "0x7FFA9A2CEA88",
                "current_value": "0x1FD07967EC0",
                "resolved_name": "xbr::kGameBuildUniquifiers",
                "rva": "0x5EA88",
                "type": "std::map<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >"
            },
            "qword_0x5EA98": {
                "address": "0x7FFA9A2CEA98",
                "current_value": "0x1FD066D3A50",
                "resolved_name": "net::httpStatuses",
                "rva": "0x5EA98",
                "type": "std::map<int const ,std::basic_string_view<char,std::char_traits<char> > const ,std::less<int const >,std::allocator<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const > > >"
            }
        },
        "rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::~GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>": {
            "offset": "0x3810"
        },
        "rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::~GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>": {
            "offset": "0x37B0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::Accept<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0> >": {
            "offset": "0x3BC0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::AddMember": {
            "offset": "0x38B0"
        },
        "rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >::~GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> >": {
            "offset": "0x3A40"
        },
        "rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>::Malloc": {
            "offset": "0x3A50"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Double": {
            "offset": "0x52F0"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::String": {
            "offset": "0x5130"
        },
        "rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::~Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>": {
            "offset": "0x37E0"
        },
        "rapidjson::internal::DigitGen": {
            "offset": "0x21E0"
        },
        "rapidjson::internal::Grisu2": {
            "offset": "0x2560"
        },
        "rapidjson::internal::Prettify": {
            "offset": "0x27D0"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Push<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level>": {
            "offset": "0x6660"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::Reserve<char>": {
            "offset": "0x3B10"
        },
        "rapidjson::internal::Stack<rapidjson::CrtAllocator>::~Stack<rapidjson::CrtAllocator>": {
            "offset": "0x37B0"
        },
        "rapidjson::internal::WriteExponent": {
            "offset": "0x2740"
        },
        "rapidjson::internal::u32toa": {
            "offset": "0x1920"
        },
        "rapidjson::internal::u64toa": {
            "offset": "0x1B90"
        },
        "search_hd_table": {
            "offset": "0x36FA0"
        },
        "session_after_frame_sent1": {
            "offset": "0x316D0"
        },
        "session_after_frame_sent2": {
            "offset": "0x31B30"
        },
        "session_after_header_block_received": {
            "offset": "0x31CA0"
        },
        "session_call_error_callback": {
            "offset": "0x31ED0"
        },
        "session_call_on_begin_headers": {
            "offset": "0x32010"
        },
        "session_call_select_padding": {
            "offset": "0x32050"
        },
        "session_close_stream_on_goaway": {
            "offset": "0x320E0"
        },
        "session_defer_stream_item": {
            "offset": "0x321A0"
        },
        "session_detach_stream_item": {
            "offset": "0x32210"
        },
        "session_detect_idle_stream": {
            "offset": "0x32270"
        },
        "session_handle_invalid_connection": {
            "offset": "0x322C0"
        },
        "session_handle_invalid_stream2": {
            "offset": "0x32390"
        },
        "session_headers_add_pad": {
            "offset": "0x32410"
        },
        "session_inbound_frame_reset": {
            "offset": "0x324F0"
        },
        "session_is_closing": {
            "offset": "0x326E0"
        },
        "session_new": {
            "offset": "0x327D0"
        },
        "session_ob_data_push": {
            "offset": "0x32DB0"
        },
        "session_on_data_received_fail_fast": {
            "offset": "0x32E40"
        },
        "session_on_stream_window_update_received": {
            "offset": "0x32FE0"
        },
        "session_prep_frame": {
            "offset": "0x332D0"
        },
        "session_process_altsvc_frame": {
            "offset": "0x33A90"
        },
        "session_process_headers_frame": {
            "offset": "0x33BA0"
        },
        "session_resume_deferred_stream_item": {
            "offset": "0x33C90"
        },
        "session_sched_get_next_outbound_item": {
            "offset": "0x33CE0"
        },
        "session_update_connection_consumed_size": {
            "offset": "0x33D30"
        },
        "session_update_consumed_size": {
            "offset": "0x33D70"
        },
        "session_update_stream_consumed_size": {
            "offset": "0x33E40"
        },
        "session_update_stream_priority": {
            "offset": "0x33E90"
        },
        "sf_parser_dict": {
            "offset": "0x3C370"
        },
        "sf_parser_init": {
            "offset": "0x3C4D0"
        },
        "sf_parser_param": {
            "offset": "0x3C500"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Flist_node<fwRefContainer<net::HttpHandler>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Flist_node<fwRefContainer<net::HttpHandler>,void *> > >": {
            "offset": "0x21CA0"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<fwRefContainer<net::HttpResponse>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<fwRefContainer<net::HttpResponse>,void *> > >": {
            "offset": "0x1E740"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<fwRefContainer<net::h2::HttpRequestData>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<fwRefContainer<net::h2::HttpRequestData>,void *> > >": {
            "offset": "0x1E740"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const >,void *> > >": {
            "offset": "0x21D80"
        },
        "std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x5460"
        },
        "std::_Default_allocator_traits<std::allocator<ZeroCopyByteBuffer::Element> >::destroy<ZeroCopyByteBuffer::Element>": {
            "offset": "0x1D960"
        },
        "std::_Destroy_range<std::allocator<eastl::fixed_string<char,64,1,eastl::allocator> > >": {
            "offset": "0x158A0"
        },
        "std::_Facet_Register": {
            "offset": "0x3C728"
        },
        "std::_Func_class<void>::~_Func_class<void>": {
            "offset": "0xE8C0"
        },
        "std::_Func_impl_no_alloc<<lambda_42bc3a9fedd14d5d8711b36b64594d8d>,void>::_Copy": {
            "offset": "0x1E630"
        },
        "std::_Func_impl_no_alloc<<lambda_42bc3a9fedd14d5d8711b36b64594d8d>,void>::_Delete_this": {
            "offset": "0x1E550"
        },
        "std::_Func_impl_no_alloc<<lambda_42bc3a9fedd14d5d8711b36b64594d8d>,void>::_Do_call": {
            "offset": "0x1E5E0"
        },
        "std::_Func_impl_no_alloc<<lambda_42bc3a9fedd14d5d8711b36b64594d8d>,void>::_Get": {
            "offset": "0x167B0"
        },
        "std::_Func_impl_no_alloc<<lambda_42bc3a9fedd14d5d8711b36b64594d8d>,void>::_Move": {
            "offset": "0x1E5F0"
        },
        "std::_Func_impl_no_alloc<<lambda_42bc3a9fedd14d5d8711b36b64594d8d>,void>::_Target_type": {
            "offset": "0x1E5D0"
        },
        "std::_Func_impl_no_alloc<<lambda_50486ce660c6b89862070fd3ecc361c3>,void>::_Copy": {
            "offset": "0x16840"
        },
        "std::_Func_impl_no_alloc<<lambda_50486ce660c6b89862070fd3ecc361c3>,void>::_Delete_this": {
            "offset": "0x16770"
        },
        "std::_Func_impl_no_alloc<<lambda_50486ce660c6b89862070fd3ecc361c3>,void>::_Do_call": {
            "offset": "0x167D0"
        },
        "std::_Func_impl_no_alloc<<lambda_50486ce660c6b89862070fd3ecc361c3>,void>::_Get": {
            "offset": "0x167B0"
        },
        "std::_Func_impl_no_alloc<<lambda_50486ce660c6b89862070fd3ecc361c3>,void>::_Move": {
            "offset": "0x167E0"
        },
        "std::_Func_impl_no_alloc<<lambda_50486ce660c6b89862070fd3ecc361c3>,void>::_Target_type": {
            "offset": "0x167C0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1b6649d28fba198c45b3f2f66e655be>,void,fwRefContainer<net::TcpServerStream> >::_Copy": {
            "offset": "0x21E40"
        },
        "std::_Func_impl_no_alloc<<lambda_e1b6649d28fba198c45b3f2f66e655be>,void,fwRefContainer<net::TcpServerStream> >::_Delete_this": {
            "offset": "0x21DA0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1b6649d28fba198c45b3f2f66e655be>,void,fwRefContainer<net::TcpServerStream> >::_Do_call": {
            "offset": "0x21DC0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1b6649d28fba198c45b3f2f66e655be>,void,fwRefContainer<net::TcpServerStream> >::_Get": {
            "offset": "0x167B0"
        },
        "std::_Func_impl_no_alloc<<lambda_e1b6649d28fba198c45b3f2f66e655be>,void,fwRefContainer<net::TcpServerStream> >::_Move": {
            "offset": "0x21E40"
        },
        "std::_Func_impl_no_alloc<<lambda_e1b6649d28fba198c45b3f2f66e655be>,void,fwRefContainer<net::TcpServerStream> >::_Target_type": {
            "offset": "0x21DB0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>::_Copy": {
            "offset": "0x16FB0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>::_Delete_this": {
            "offset": "0x16F10"
        },
        "std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>::_Do_call": {
            "offset": "0x16FA0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>::_Get": {
            "offset": "0x167B0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>::_Move": {
            "offset": "0xE6E0"
        },
        "std::_Func_impl_no_alloc<<lambda_f6322b4b1e0fbe8cc7220a1863be9360>,void>::_Target_type": {
            "offset": "0x16F90"
        },
        "std::_Insert_string<char,std::char_traits<char>,unsigned __int64>": {
            "offset": "0x16180"
        },
        "std::_Maklocstr<char>": {
            "offset": "0xE640"
        },
        "std::_Ref_count_base::_Get_deleter": {
            "offset": "0xE6E0"
        },
        "std::_Ref_count_obj2<`net::HttpServerImpl::OnConnection'::`2'::HttpConnectionData>::_Delete_this": {
            "offset": "0x15940"
        },
        "std::_Ref_count_obj2<`net::HttpServerImpl::OnConnection'::`2'::HttpConnectionData>::_Destroy": {
            "offset": "0x159A0"
        },
        "std::_Ref_count_obj2<net::HttpState>::_Delete_this": {
            "offset": "0x15940"
        },
        "std::_Ref_count_obj2<net::HttpState>::_Destroy": {
            "offset": "0x15960"
        },
        "std::_Ref_count_obj2<net::h2::HttpConnectionData>::_Delete_this": {
            "offset": "0x15940"
        },
        "std::_Ref_count_obj2<net::h2::HttpConnectionData>::_Destroy": {
            "offset": "0x1DD40"
        },
        "std::_Ref_count_obj2<nghttp2_session_wrap>::_Delete_this": {
            "offset": "0x15940"
        },
        "std::_Ref_count_obj2<nghttp2_session_wrap>::_Destroy": {
            "offset": "0x1DD10"
        },
        "std::_Throw_bad_array_new_length": {
            "offset": "0xE480"
        },
        "std::_Throw_bad_cast": {
            "offset": "0x18300"
        },
        "std::_Throw_tree_length_error": {
            "offset": "0xD7B0"
        },
        "std::_Tidy_guard<std::numpunct<char> >::~_Tidy_guard<std::numpunct<char> >": {
            "offset": "0x256E0"
        },
        "std::_Tree<std::_Tmap_traits<int const ,std::basic_string_view<char,std::char_traits<char> > const ,std::less<int const >,std::allocator<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const > >,0> >::_Find_hint<int>": {
            "offset": "0x21E60"
        },
        "std::_Tree<std::_Tmap_traits<int const ,std::basic_string_view<char,std::char_traits<char> > const ,std::less<int const >,std::allocator<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const > >,0> >::~_Tree<std::_Tmap_traits<int const ,std::basic_string_view<char,std::char_traits<char> > const ,std::less<int const >,std::allocator<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const > >,0> >": {
            "offset": "0x21C40"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::_Find_hint<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >": {
            "offset": "0x6350"
        },
        "std::_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string_view<char,std::char_traits<char> >,int>,xbr::GameBuildUniquifier,std::less<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> >,std::allocator<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> >,0> >": {
            "offset": "0x33C0"
        },
        "std::_Tree<std::_Tset_traits<fwRefContainer<net::HttpResponse>,std::less<fwRefContainer<net::HttpResponse> >,std::allocator<fwRefContainer<net::HttpResponse> >,0> >::_Copy_nodes<0>": {
            "offset": "0x1E240"
        },
        "std::_Tree<std::_Tset_traits<fwRefContainer<net::HttpResponse>,std::less<fwRefContainer<net::HttpResponse> >,std::allocator<fwRefContainer<net::HttpResponse> >,0> >::_Erase": {
            "offset": "0x1C000"
        },
        "std::_Tree<std::_Tset_traits<fwRefContainer<net::HttpResponse>,std::less<fwRefContainer<net::HttpResponse> >,std::allocator<fwRefContainer<net::HttpResponse> >,0> >::_Getal": {
            "offset": "0x1BFF0"
        },
        "std::_Tree<std::_Tset_traits<fwRefContainer<net::h2::HttpRequestData>,std::less<fwRefContainer<net::h2::HttpRequestData> >,std::allocator<fwRefContainer<net::h2::HttpRequestData> >,0> >::_Erase": {
            "offset": "0x1C000"
        },
        "std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const >,void *> > >": {
            "offset": "0x21D80"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<fwRefContainer<net::HttpResponse>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<fwRefContainer<net::HttpResponse>,void *> > >": {
            "offset": "0x1E740"
        },
        "std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<fwRefContainer<net::h2::HttpRequestData>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<fwRefContainer<net::h2::HttpRequestData>,void *> > >": {
            "offset": "0x1E740"
        },
        "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::HttpResponse> > >::_Erase_tree<std::allocator<std::_Tree_node<fwRefContainer<net::HttpResponse>,void *> > >": {
            "offset": "0x1D8C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::HttpResponse> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<fwRefContainer<net::HttpResponse>,void *> > >": {
            "offset": "0x1D8C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::HttpResponse> > >::_Extract": {
            "offset": "0x1C240"
        },
        "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::HttpResponse> > >::_Insert_node": {
            "offset": "0x4E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::h2::HttpRequestData> > >::_Erase_tree<std::allocator<std::_Tree_node<fwRefContainer<net::h2::HttpRequestData>,void *> > >": {
            "offset": "0x1D8C0"
        },
        "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::h2::HttpRequestData> > >::_Extract": {
            "offset": "0x1C240"
        },
        "std::_Tree_val<std::_Tree_simple_types<fwRefContainer<net::h2::HttpRequestData> > >::_Insert_node": {
            "offset": "0x4E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const >,void *> > >": {
            "offset": "0x21D20"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<int const ,std::basic_string_view<char,std::char_traits<char> > const > > >::_Insert_node": {
            "offset": "0x4E30"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier>,void *> > >": {
            "offset": "0x4DD0"
        },
        "std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string_view<char,std::char_traits<char> >,int> const ,xbr::GameBuildUniquifier> > >::_Insert_node": {
            "offset": "0x4E30"
        },
        "std::_Uninitialized_backout_al<std::allocator<eastl::fixed_string<char,64,1,eastl::allocator> > >::~_Uninitialized_backout_al<std::allocator<eastl::fixed_string<char,64,1,eastl::allocator> > >": {
            "offset": "0x15930"
        },
        "std::_Xlen_string": {
            "offset": "0xE350"
        },
        "std::allocator<char>::deallocate": {
            "offset": "0xE310"
        },
        "std::allocator<eastl::fixed_string<char,64,1,eastl::allocator> >::deallocate": {
            "offset": "0x14240"
        },
        "std::allocator<unsigned char>::deallocate": {
            "offset": "0xE310"
        },
        "std::allocator<wchar_t>::allocate": {
            "offset": "0xDD50"
        },
        "std::bad_alloc::bad_alloc": {
            "offset": "0x3DAD4"
        },
        "std::bad_alloc::~bad_alloc": {
            "offset": "0xD5F0"
        },
        "std::bad_array_new_length::bad_array_new_length": {
            "offset": "0xE370"
        },
        "std::bad_array_new_length::~bad_array_new_length": {
            "offset": "0xD5F0"
        },
        "std::bad_cast::bad_cast": {
            "offset": "0x18290"
        },
        "std::bad_cast::~bad_cast": {
            "offset": "0xD5F0"
        },
        "std::bad_function_call::bad_function_call": {
            "offset": "0x185A0"
        },
        "std::bad_function_call::what": {
            "offset": "0x18590"
        },
        "std::bad_function_call::~bad_function_call": {
            "offset": "0xD5F0"
        },
        "std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base": {
            "offset": "0x15CE0"
        },
        "std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry": {
            "offset": "0x15A50"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>": {
            "offset": "0xE4A0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>": {
            "offset": "0x27CA0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >": {
            "offset": "0x27E10"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign": {
            "offset": "0xD920"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0xD4D0"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>": {
            "offset": "0x18340"
        },
        "std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0xB170"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>": {
            "offset": "0xDAF0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_1dfe18491bcca09701d8ccb01d0b0af4>,wchar_t const *,unsigned __int64>": {
            "offset": "0xDDC0"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0xDC20"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::push_back": {
            "offset": "0x29C30"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve": {
            "offset": "0x29D90"
        },
        "std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >": {
            "offset": "0xDF90"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow": {
            "offset": "0x139A0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail": {
            "offset": "0x13940"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff": {
            "offset": "0x13760"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos": {
            "offset": "0x13660"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow": {
            "offset": "0x138D0"
        },
        "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >": {
            "offset": "0x13BB0"
        },
        "std::deque<ZeroCopyByteBuffer::Element,std::allocator<ZeroCopyByteBuffer::Element> >::_Growmap": {
            "offset": "0x1DE00"
        },
        "std::deque<ZeroCopyByteBuffer::Element,std::allocator<ZeroCopyByteBuffer::Element> >::_Xlen": {
            "offset": "0x15D10"
        },
        "std::deque<ZeroCopyByteBuffer::Element,std::allocator<ZeroCopyByteBuffer::Element> >::emplace_back<std::unique_ptr<char [0],std::default_delete<char [0]> >,unsigned __int64 &,fu2::abi_400::detail::function<fu2::abi_400::detail::config<1,0,fu2::capacity_default>,fu2::abi_400::detail::property<1,0,void __cdecl(bool)> > >": {
            "offset": "0x185C0"
        },
        "std::deque<ZeroCopyByteBuffer::Element,std::allocator<ZeroCopyByteBuffer::Element> >::~deque<ZeroCopyByteBuffer::Element,std::allocator<ZeroCopyByteBuffer::Element> >": {
            "offset": "0x1BE60"
        },
        "std::deque<unsigned char,std::allocator<unsigned char> >::_Growmap": {
            "offset": "0x15AA0"
        },
        "std::deque<unsigned char,std::allocator<unsigned char> >::_Xlen": {
            "offset": "0x15D10"
        },
        "std::deque<unsigned char,std::allocator<unsigned char> >::erase": {
            "offset": "0x133A0"
        },
        "std::deque<unsigned char,std::allocator<unsigned char> >::~deque<unsigned char,std::allocator<unsigned char> >": {
            "offset": "0x13580"
        },
        "std::exception::exception": {
            "offset": "0xE440"
        },
        "std::exception::what": {
            "offset": "0xE420"
        },
        "std::forward_list<fwRefContainer<net::HttpHandler>,std::allocator<fwRefContainer<net::HttpHandler> > >::~forward_list<fwRefContainer<net::HttpHandler>,std::allocator<fwRefContainer<net::HttpHandler> > >": {
            "offset": "0x13CC0"
        },
        "std::function<void __cdecl(fwRefContainer<net::TcpServerStream>)>::~function<void __cdecl(fwRefContainer<net::TcpServerStream>)>": {
            "offset": "0xE8C0"
        },
        "std::function<void __cdecl(void)>::function<void __cdecl(void)>": {
            "offset": "0x16A60"
        },
        "std::function<void __cdecl(void)>::swap": {
            "offset": "0x14100"
        },
        "std::function<void __cdecl(void)>::~function<void __cdecl(void)>": {
            "offset": "0xE8C0"
        },
        "std::locale::~locale": {
            "offset": "0x18540"
        },
        "std::make_shared<net::HttpState>": {
            "offset": "0x155F0"
        },
        "std::numpunct<char>::do_decimal_point": {
            "offset": "0x25E10"
        },
        "std::numpunct<char>::do_falsename": {
            "offset": "0x25E20"
        },
        "std::numpunct<char>::do_grouping": {
            "offset": "0x25E60"
        },
        "std::numpunct<char>::do_thousands_sep": {
            "offset": "0x25EA0"
        },
        "std::numpunct<char>::do_truename": {
            "offset": "0x25EB0"
        },
        "std::numpunct<char>::numpunct<char>": {
            "offset": "0x25530"
        },
        "std::runtime_error::runtime_error": {
            "offset": "0xD6A0"
        },
        "std::set<fwRefContainer<net::HttpResponse>,std::less<fwRefContainer<net::HttpResponse> >,std::allocator<fwRefContainer<net::HttpResponse> > >::~set<fwRefContainer<net::HttpResponse>,std::less<fwRefContainer<net::HttpResponse> >,std::allocator<fwRefContainer<net::HttpResponse> > >": {
            "offset": "0x1BE30"
        },
        "std::set<fwRefContainer<net::h2::HttpRequestData>,std::less<fwRefContainer<net::h2::HttpRequestData> >,std::allocator<fwRefContainer<net::h2::HttpRequestData> > >::~set<fwRefContainer<net::h2::HttpRequestData>,std::less<fwRefContainer<net::h2::HttpRequestData> >,std::allocator<fwRefContainer<net::h2::HttpRequestData> > >": {
            "offset": "0x1BE30"
        },
        "std::shared_lock<std::shared_mutex>::~shared_lock<std::shared_mutex>": {
            "offset": "0x13E30"
        },
        "std::shared_ptr<`net::HttpServerImpl::OnConnection'::`2'::HttpConnectionData>::~shared_ptr<`net::HttpServerImpl::OnConnection'::`2'::HttpConnectionData>": {
            "offset": "0x13310"
        },
        "std::shared_ptr<net::HttpState>::~shared_ptr<net::HttpState>": {
            "offset": "0x13C70"
        },
        "std::shared_ptr<net::h2::HttpConnectionData>::~shared_ptr<net::h2::HttpConnectionData>": {
            "offset": "0x13C70"
        },
        "std::shared_ptr<nghttp2_session_wrap>::~shared_ptr<nghttp2_session_wrap>": {
            "offset": "0x13C70"
        },
        "std::shared_ptr<std::function<void __cdecl(void)> >::~shared_ptr<std::function<void __cdecl(void)> >": {
            "offset": "0x13C70"
        },
        "std::to_string": {
            "offset": "0x18480"
        },
        "std::unique_lock<std::mutex>::~unique_lock<std::mutex>": {
            "offset": "0x18570"
        },
        "std::unique_lock<std::shared_mutex>::~unique_lock<std::shared_mutex>": {
            "offset": "0x13DC0"
        },
        "std::unique_ptr<char [0],std::default_delete<char [0]> >::~unique_ptr<char [0],std::default_delete<char [0]> >": {
            "offset": "0x13650"
        },
        "std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >": {
            "offset": "0x18320"
        },
        "std::use_facet<std::numpunct<char> >": {
            "offset": "0x25200"
        },
        "stream_less": {
            "offset": "0x39F70"
        },
        "stream_obq_move": {
            "offset": "0x39FB0"
        },
        "stream_obq_remove": {
            "offset": "0x3A060"
        },
        "stream_update_dep_on_attach_item": {
            "offset": "0x3A100"
        },
        "submit_headers_shared_nva": {
            "offset": "0x342D0"
        },
        "update_local_initial_window_size_func": {
            "offset": "0x33F60"
        },
        "update_remote_initial_window_size_func": {
            "offset": "0x34050"
        },
        "utf8::exception::exception": {
            "offset": "0x29010"
        },
        "utf8::internal::append<std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,char>": {
            "offset": "0x280B0"
        },
        "utf8::internal::validate_next<std::_String_view_iterator<std::char_traits<char> > >": {
            "offset": "0x289E0"
        },
        "utf8::invalid_code_point::invalid_code_point": {
            "offset": "0x290A0"
        },
        "utf8::invalid_code_point::what": {
            "offset": "0x29F40"
        },
        "utf8::invalid_code_point::~invalid_code_point": {
            "offset": "0x29190"
        },
        "utf8::invalid_utf8::invalid_utf8": {
            "offset": "0x29110"
        },
        "utf8::invalid_utf8::what": {
            "offset": "0x29F50"
        },
        "utf8::invalid_utf8::~invalid_utf8": {
            "offset": "0x29190"
        },
        "utf8::not_enough_room::not_enough_room": {
            "offset": "0x29170"
        },
        "utf8::not_enough_room::what": {
            "offset": "0x29F60"
        },
        "utf8::not_enough_room::~not_enough_room": {
            "offset": "0x29190"
        },
        "va_impl<char,fmt::v8::basic_format_args<fmt::v8::basic_printf_context<fmt::v8::appender,char> > >": {
            "offset": "0x287C0"
        },
        "vsnprintf": {
            "offset": "0x340E0"
        },
        "vva": {
            "offset": "0x29F20"
        },
        "xbr::`dynamic initializer for 'kGameBuildUniquifiers''": {
            "offset": "0x1030"
        }
    }
}